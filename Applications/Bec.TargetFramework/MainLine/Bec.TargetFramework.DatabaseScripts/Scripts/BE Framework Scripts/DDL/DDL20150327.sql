--
-- PostgreSQL database dump
--

-- Dumped from database version 9.4.0
-- Dumped by pg_dump version 9.4.0
-- Started on 2015-03-27 13:18:40

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = sts, pg_catalog;

ALTER TABLE ONLY sts."StsTransaction" DROP CONSTRAINT "fk_StsTransaction_Organisation";
ALTER TABLE ONLY sts."StsTransactionPropertyDetail" DROP CONSTRAINT "fk_StsTransactionPropertyDetail_StsTransaction";
ALTER TABLE ONLY sts."StsTransactionPropertyDetail" DROP CONSTRAINT "fk_StsTransactionPropertyDetail_PropertyDetail";
ALTER TABLE ONLY sts."StsTransactionProcessLog" DROP CONSTRAINT "fk_StsTransactionProcessLog_StsTransaction";
ALTER TABLE ONLY sts."StsTransactionProcessLog" DROP CONSTRAINT "fk_StsTransactionProcessLog_StatusTypeValue";
ALTER TABLE ONLY sts."StsTransactionProcessLog" DROP CONSTRAINT "fk_StsTransactionProcessLog_StatusType";
ALTER TABLE ONLY sts."StsTransactionComponent" DROP CONSTRAINT "fk_StsTransactionComponent_StsTransaction";
ALTER TABLE ONLY sts."StsTransactionComponent" DROP CONSTRAINT "fk_StsTransactionComponent_Artefact";
ALTER TABLE ONLY sts."StsSourceOfFunds" DROP CONSTRAINT "fk_StsSourceOfFunds_StsActorStructure";
ALTER TABLE ONLY sts."StsSourceOfFundsStsDocument" DROP CONSTRAINT "fk_StsSourceOfFundsStsDocument_StsSourceOfFunds";
ALTER TABLE ONLY sts."StsSourceOfFundsStsDocument" DROP CONSTRAINT "fk_StsSourceOfFundsStsDocument_StsDocument";
ALTER TABLE ONLY sts."StsSearch" DROP CONSTRAINT "fk_StsSearch_UserAccountOrganisation";
ALTER TABLE ONLY sts."StsSearchRelation" DROP CONSTRAINT "fk_StsSearchRelation_StsSearch2";
ALTER TABLE ONLY sts."StsSearchRelation" DROP CONSTRAINT "fk_StsSearchRelation_StsSearch";
ALTER TABLE ONLY sts."StsSearchRelation" DROP CONSTRAINT "fk_StsSearchRelation_StatusTypeValue";
ALTER TABLE ONLY sts."StsSearchRelation" DROP CONSTRAINT "fk_StsSearchRelation_StatusType";
ALTER TABLE ONLY sts."StsSearchPropertyDetail" DROP CONSTRAINT "fk_StsSearchProperty_StsSearch";
ALTER TABLE ONLY sts."StsSearchPropertyDetail" DROP CONSTRAINT "fk_StsSearchProperty_StsProperty";
ALTER TABLE ONLY sts."StsSearchProcessLog" DROP CONSTRAINT "fk_StsSearchProcessLog_StsSearch";
ALTER TABLE ONLY sts."StsSearchProcessLog" DROP CONSTRAINT "fk_StsSearchProcessLog_StatusTypeValue";
ALTER TABLE ONLY sts."StsSearchProcessLog" DROP CONSTRAINT "fk_StsSearchProcessLog_StatusType";
ALTER TABLE ONLY sts."StsActor" DROP CONSTRAINT "fk_StsSearchPrimaryActor_UserAccountOrganisation";
ALTER TABLE ONLY sts."StsActor" DROP CONSTRAINT "fk_StsSearchPrimaryActor_Invite";
ALTER TABLE ONLY sts."StsActor" DROP CONSTRAINT "fk_StsSearchOrganisationActor_Organisation";
ALTER TABLE ONLY sts."StsActor" DROP CONSTRAINT "fk_StsSearchOrganisationActor_Actor";
ALTER TABLE ONLY sts."StsSearchDetail" DROP CONSTRAINT "fk_StsSearchDetail_StsSearch";
ALTER TABLE ONLY sts."StsSourceOfFunds" DROP CONSTRAINT "fk_StsSearchActorDetailDeposit_StsActorPurchase";
ALTER TABLE ONLY sts."PropertyDetail" DROP CONSTRAINT "fk_StsProperty_Address";
ALTER TABLE ONLY sts."StsActorPurchase" DROP CONSTRAINT "fk_StsMortgageShare_StsActor";
ALTER TABLE ONLY sts."StsInviteProcessLog" DROP CONSTRAINT "fk_StsInviteProcessLog_StsInvite";
ALTER TABLE ONLY sts."StsInviteProcessLog" DROP CONSTRAINT "fk_StsInviteProcessLog_StatusTypeValue";
ALTER TABLE ONLY sts."StsInviteProcessLog" DROP CONSTRAINT "fk_StsInviteProcessLog_StatusType";
ALTER TABLE ONLY sts."StsDocument" DROP CONSTRAINT "fk_StsDocument_Attachment";
ALTER TABLE ONLY sts."StsDocumentProcessLog" DROP CONSTRAINT "fk_StsDocumentProcessLog_UserAccountOrganisation";
ALTER TABLE ONLY sts."StsDocumentProcessLog" DROP CONSTRAINT "fk_StsDocumentProcessLog_StsDocument";
ALTER TABLE ONLY sts."StsDocumentProcessLog" DROP CONSTRAINT "fk_StsDocumentProcessLog_StatusTypeValue";
ALTER TABLE ONLY sts."StsDocumentProcessLog" DROP CONSTRAINT "fk_StsDocumentProcessLog_StatusType";
ALTER TABLE ONLY sts."StsDocumentProcessLog" DROP CONSTRAINT "fk_StsDocumentProcessLog_Contact";
ALTER TABLE ONLY sts."StsAuthority" DROP CONSTRAINT "fk_StsAuthority_StsActorStructure";
ALTER TABLE ONLY sts."StsAuthority" DROP CONSTRAINT "fk_StsAuthority_StsActorAuthority";
ALTER TABLE ONLY sts."StsAuthorityStsDocument" DROP CONSTRAINT "fk_StsAuthorityStsDocument_StsDocument";
ALTER TABLE ONLY sts."StsAuthorityStsDocument" DROP CONSTRAINT "fk_StsAuthorityStsDocument_StsAuthority";
ALTER TABLE ONLY sts."StsActor" DROP CONSTRAINT "fk_StsActor_UserAccountOrganisation";
ALTER TABLE ONLY sts."StsActor" DROP CONSTRAINT "fk_StsActor_Contact";
ALTER TABLE ONLY sts."StsActorStsTransaction" DROP CONSTRAINT "fk_StsActorStsTransaction_StsTransaction";
ALTER TABLE ONLY sts."StsActorStsTransaction" DROP CONSTRAINT "fk_StsActorStsTransaction_StsActorStructure";
ALTER TABLE ONLY sts."StsActorStsTransaction" DROP CONSTRAINT "fk_StsActorStsTransaction_StsActor";
ALTER TABLE ONLY sts."StsActorStsTransaction" DROP CONSTRAINT "fk_StsActorStsTransaction_StatusTypeValue";
ALTER TABLE ONLY sts."StsActorStsTransaction" DROP CONSTRAINT "fk_StsActorStsTransaction_StatusType";
ALTER TABLE ONLY sts."StsActorStsSearch" DROP CONSTRAINT "fk_StsActorStsSearch_StsSearch";
ALTER TABLE ONLY sts."StsActorStsSearch" DROP CONSTRAINT "fk_StsActorStsSearch_StsActorStructure";
ALTER TABLE ONLY sts."StsActorStsSearch" DROP CONSTRAINT "fk_StsActorStsSearch_StsActor";
ALTER TABLE ONLY sts."StsActorStsSearch" DROP CONSTRAINT "fk_StsActorStsSearch_StatusTypeValue";
ALTER TABLE ONLY sts."StsActorStsSearch" DROP CONSTRAINT "fk_StsActorStsSearch_StatusType";
ALTER TABLE ONLY sts."StsActorStructure" DROP CONSTRAINT "fk_StsActorStructure_StsActorP";
ALTER TABLE ONLY sts."StsActorStructure" DROP CONSTRAINT "fk_StsActorStructure_StsActor";
ALTER TABLE ONLY sts."StsActorStructure" DROP CONSTRAINT "fk_StsActorStructure_Account";
ALTER TABLE ONLY sts."StsActorPurchase" DROP CONSTRAINT "fk_StsActorPurchase_StsActorStructure22";
ALTER TABLE ONLY sts."StsActorPurchase" DROP CONSTRAINT "fk_StsActorPurchase_StsActorStructure";
ALTER TABLE ONLY sts."StsActorProcessLog" DROP CONSTRAINT "fk_StsActorProcessLog_StsActor";
ALTER TABLE ONLY sts."StsActorProcessLog" DROP CONSTRAINT "fk_StsActorProcessLog_StatusTypeValue";
ALTER TABLE ONLY sts."StsActorProcessLog" DROP CONSTRAINT "fk_StsActorProcessLog_StatusType";
ALTER TABLE ONLY sts."StsActorAuthority" DROP CONSTRAINT "fk_StsActorAuthority_StsActor";
ALTER TABLE ONLY sts."LRTitle" DROP CONSTRAINT "fk_LRTitle_StsSearchProperty";
ALTER TABLE ONLY sts."LRTitle" DROP CONSTRAINT "fk_LRTitle_StsProperty";
ALTER TABLE ONLY sts."LRTitle" DROP CONSTRAINT "fk_LRTitle_ProductPurchaseProductTask";
ALTER TABLE ONLY sts."LRTitle" DROP CONSTRAINT "fk_LRTitle_Address";
ALTER TABLE ONLY sts."LRRegisterExtract" DROP CONSTRAINT "fk_LRRegisterExtract_ProductPurchaseProductTask";
ALTER TABLE ONLY sts."LRRegisterExtract" DROP CONSTRAINT "fk_LRRegisterExtract_LRTitle";
ALTER TABLE ONLY sts."LRDocument" DROP CONSTRAINT "fk_LRDocument_ProductPurchaseProductTask";
ALTER TABLE ONLY sts."LRDocument" DROP CONSTRAINT "fk_LRDocument_LRTitle";
ALTER TABLE ONLY sts."LRDocument" DROP CONSTRAINT "fk_LRDocument_Attachment";
ALTER TABLE ONLY sts."StsAccountDocument" DROP CONSTRAINT "fk_AccountDocument_StsDocument";
ALTER TABLE ONLY sts."StsAccountDocument" DROP CONSTRAINT "fk_AccountDocument_Account";
SET search_path = public, pg_catalog;

ALTER TABLE ONLY public."PasswordResetSecrets" DROP CONSTRAINT questionfk;
ALTER TABLE ONLY public."ProductSpecificationAttribute" DROP CONSTRAINT productspecificationattribute_fk;
ALTER TABLE ONLY public."WorkflowDecisionParameter" DROP CONSTRAINT "fk_Workfommand_WorkflowCommand";
ALTER TABLE ONLY public."WorkflowDecisionParameterTemplate" DROP CONSTRAINT "fk_Workfommand_WorkflowCommand";
ALTER TABLE ONLY public."Workflow" DROP CONSTRAINT "fk_Workflow_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowTransistion" DROP CONSTRAINT "fk_WorkflowTransistion_Workflow";
ALTER TABLE ONLY public."WorkflowTransistionWorkflowDecision" DROP CONSTRAINT "fk_WorkflowTransistionWorkflowDecision_WorkflowTransistion";
ALTER TABLE ONLY public."WorkflowTransistionWorkflowDecision" DROP CONSTRAINT "fk_WorkflowTransistionWorkflowDecision_WorkflowDecision";
ALTER TABLE ONLY public."WorkflowTransistionWorkflowDecision" DROP CONSTRAINT "fk_WorkflowTransistionWorkflowDecision_Workflow";
ALTER TABLE ONLY public."WorkflowTransistionWorkflowAction" DROP CONSTRAINT "fk_WorkflowTransistionWorkflowAction_WorkflowTransistion";
ALTER TABLE ONLY public."WorkflowTransistionWorkflowAction" DROP CONSTRAINT "fk_WorkflowTransistionWorkflowAction_WorkflowAction";
ALTER TABLE ONLY public."WorkflowTransistionWorkflowAction" DROP CONSTRAINT "fk_WorkflowTransistionWorkflowAction_Workflow";
ALTER TABLE ONLY public."WorkflowTransistionWorkflowActionTemplate" DROP CONSTRAINT "fk_WorkflowTransistionWorkflowActionTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowTransistionStartCondition" DROP CONSTRAINT "fk_WorkflowTransistionStartCondition_WorkflowTransistion";
ALTER TABLE ONLY public."WorkflowTransistionStartCondition" DROP CONSTRAINT "fk_WorkflowTransistionStartCondition_WorkflowCondition";
ALTER TABLE ONLY public."WorkflowTransistionStartCondition" DROP CONSTRAINT "fk_WorkflowTransistionStartCondition_Workflow";
ALTER TABLE ONLY public."WorkflowTransistionStartConditionTemplate" DROP CONSTRAINT "fk_WorkflowTransistionStartConditionTete";
ALTER TABLE ONLY public."WorkflowTransistionStartConditionTemplate" DROP CONSTRAINT "fk_WorkflowTransistionStartConditionTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowTransistionStartConditionTemplate" DROP CONSTRAINT "fk_WorkflowTransistionStartConditionTeate";
ALTER TABLE ONLY public."WorkflowTransistionParameter" DROP CONSTRAINT "fk_WorkflowTransistionParameter_WorkflowTransistion";
ALTER TABLE ONLY public."WorkflowTransistionParameter" DROP CONSTRAINT "fk_WorkflowTransistionParameter_WorkflowParameter";
ALTER TABLE ONLY public."WorkflowTransistionParameter" DROP CONSTRAINT "fk_WorkflowTransistionParameter_Workflow";
ALTER TABLE ONLY public."WorkflowTransistionParameterTemplate" DROP CONSTRAINT "fk_WorkflowTransistionParameterTempplate";
ALTER TABLE ONLY public."WorkflowTransistionParameterTemplate" DROP CONSTRAINT "fk_WorkflowTransistionParameterTemplate_ate";
ALTER TABLE ONLY public."WorkflowTransistionParameterTemplate" DROP CONSTRAINT "fk_WorkflowTransistionParameterTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowTransistionHierarchy" DROP CONSTRAINT "fk_WorkflowTransistionHierarchy_WorkflowTransistion";
ALTER TABLE ONLY public."WorkflowTransistionHierarchy" DROP CONSTRAINT "fk_WorkflowTransistionHierarchy_Workflow";
ALTER TABLE ONLY public."WorkflowTransistionHierarchyTemplate" DROP CONSTRAINT "fk_WorkflowTransistionHierarchyTte";
ALTER TABLE ONLY public."WorkflowTransistionHierarchyTemplate" DROP CONSTRAINT "fk_WorkflowTransistionHierarchyTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowTransistionHierarchyTemplate" DROP CONSTRAINT "fk_WorkflowTransistionHierarchyTemplamplate11";
ALTER TABLE ONLY public."WorkflowTransistionHierarchy" DROP CONSTRAINT "fk_WorkflowTransistionHierarchyTemp";
ALTER TABLE ONLY public."WorkflowTransistionCompleteCondition" DROP CONSTRAINT "fk_WorkflowTransistionCompleteCondition_WorkflowTransistion";
ALTER TABLE ONLY public."WorkflowTransistionCompleteCondition" DROP CONSTRAINT "fk_WorkflowTransistionCompleteCondition_WorkflowCondition";
ALTER TABLE ONLY public."WorkflowTransistionCompleteCondition" DROP CONSTRAINT "fk_WorkflowTransistionCompleteCondition_Workflow";
ALTER TABLE ONLY public."WorkflowTransistionCompleteConditionTemplate" DROP CONSTRAINT "fk_WorkflowTransistionCompleteConditionTeplate";
ALTER TABLE ONLY public."WorkflowTransistionCompleteConditionTemplate" DROP CONSTRAINT "fk_WorkflowTransistionCompleteConditionTemplate_WorkflowTemplat";
ALTER TABLE ONLY public."WorkflowTransistionCompleteConditionTemplate" DROP CONSTRAINT "fk_WorkflowTransistionCompleteConditionTempate";
ALTER TABLE ONLY public."WorkflowStatusType" DROP CONSTRAINT "fk_WorkflowStatusType_Workflow";
ALTER TABLE ONLY public."WorkflowStatusType" DROP CONSTRAINT "fk_WorkflowStatusType_StatusType";
ALTER TABLE ONLY public."WorkflowStatusTypeTemplate" DROP CONSTRAINT "fk_WorkflowStatusTypeTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowStatusTypeTemplate" DROP CONSTRAINT "fk_WorkflowStatusTypeTemplate_StatusTypeTemplate";
ALTER TABLE ONLY public."WorkflowRole" DROP CONSTRAINT "fk_WorkflowRole_Workflow";
ALTER TABLE ONLY public."WorkflowRoleTemplate" DROP CONSTRAINT "fk_WorkflowRoleTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowClaim" DROP CONSTRAINT "fk_WorkflowRoleClaim_WorkflowRole";
ALTER TABLE ONLY public."WorkflowClaim" DROP CONSTRAINT "fk_WorkflowRoleClaim_StateItem";
ALTER TABLE ONLY public."WorkflowClaim" DROP CONSTRAINT "fk_WorkflowRoleClaim_State";
ALTER TABLE ONLY public."WorkflowClaim" DROP CONSTRAINT "fk_WorkflowRoleClaim_Resource";
ALTER TABLE ONLY public."WorkflowClaim" DROP CONSTRAINT "fk_WorkflowRoleClaim_Operation";
ALTER TABLE ONLY public."WorkflowClaimTemplate" DROP CONSTRAINT "fk_WorkflowRoleClaimTemplate_WorkflowRoleTemplate";
ALTER TABLE ONLY public."WorkflowClaimTemplate" DROP CONSTRAINT "fk_WorkflowRoleClaimTemplate_StateItem";
ALTER TABLE ONLY public."WorkflowClaimTemplate" DROP CONSTRAINT "fk_WorkflowRoleClaimTemplate_State";
ALTER TABLE ONLY public."WorkflowClaimTemplate" DROP CONSTRAINT "fk_WorkflowRoleClaimTemplate_Resource";
ALTER TABLE ONLY public."WorkflowClaimTemplate" DROP CONSTRAINT "fk_WorkflowRoleClaimTemplate_Operation";
ALTER TABLE ONLY public."WorkflowParameter" DROP CONSTRAINT "fk_WorkflowParameter_Workflow";
ALTER TABLE ONLY public."WorkflowParameterTemplate" DROP CONSTRAINT "fk_WorkflowParameterTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowObjectType" DROP CONSTRAINT "fk_WorkflowObjectType_Workflow";
ALTER TABLE ONLY public."WorkflowObjectTypeTemplate" DROP CONSTRAINT "fk_WorkflowObjectTypeTemplate_WorkflowTemplate1";
ALTER TABLE ONLY public."WorkflowNotificationConstruct" DROP CONSTRAINT "fk_WorkflowNotificationConstruct_Workflow";
ALTER TABLE ONLY public."WorkflowNotificationConstruct" DROP CONSTRAINT "fk_WorkflowNotificationConstruct_NotificationConstruct";
ALTER TABLE ONLY public."WorkflowNotificationConstructTemplate" DROP CONSTRAINT "fk_WorkflowNotificationConstructTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowNotificationConstructTemplate" DROP CONSTRAINT "fk_WorkflowNotificationConstructTemplate_NotificationConstructT";
ALTER TABLE ONLY public."WorkflowMainStartCondition" DROP CONSTRAINT "fk_WorkflowMainStartCondition_WorkflowCondition";
ALTER TABLE ONLY public."WorkflowMainStartCondition" DROP CONSTRAINT "fk_WorkflowMainStartCondition_Workflow";
ALTER TABLE ONLY public."WorkflowMainStartConditionTemplate" DROP CONSTRAINT "fk_WorkflowMainStartConditionTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowMainStartConditionTemplate" DROP CONSTRAINT "fk_WorkflowMainStartConditionTemplate_WorkflowConditionTemplate";
ALTER TABLE ONLY public."WorkflowMainPreCommand" DROP CONSTRAINT "fk_WorkflowMainPreCommand_WorkflowCommand";
ALTER TABLE ONLY public."WorkflowMainPreCommand" DROP CONSTRAINT "fk_WorkflowMainPreCommand_Workflow";
ALTER TABLE ONLY public."WorkflowMainPreCommandTemplate" DROP CONSTRAINT "fk_WorkflowMainPreCommandTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowMainPreCommandTemplate" DROP CONSTRAINT "fk_WorkflowMainPreCommandTemplate_WorkflowCommandTemplate";
ALTER TABLE ONLY public."WorkflowMainPostCommand" DROP CONSTRAINT "fk_WorkflowMainPostCommand_WorkflowCommand";
ALTER TABLE ONLY public."WorkflowMainPostCommand" DROP CONSTRAINT "fk_WorkflowMainPostCommand_Workflow";
ALTER TABLE ONLY public."WorkflowMainPostCommandTemplate" DROP CONSTRAINT "fk_WorkflowMainPostCommandTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowMainPostCommandTemplate" DROP CONSTRAINT "fk_WorkflowMainPostCommandTemplate_WorkflowCommandTemplate";
ALTER TABLE ONLY public."WorkflowMainParameter" DROP CONSTRAINT "fk_WorkflowMainParameter_WorkflowParameter";
ALTER TABLE ONLY public."WorkflowMainParameter" DROP CONSTRAINT "fk_WorkflowMainParameter_Workflow";
ALTER TABLE ONLY public."WorkflowMainParameterTemplate" DROP CONSTRAINT "fk_WorkflowMainParameterTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowMainParameterTemplate" DROP CONSTRAINT "fk_WorkflowMainParameterTemplate_WorkflowParameterTemplate";
ALTER TABLE ONLY public."WorkflowMainExecuteCommand" DROP CONSTRAINT "fk_WorkflowMainExecuteCommand_WorkflowCommand";
ALTER TABLE ONLY public."WorkflowMainExecuteCommand" DROP CONSTRAINT "fk_WorkflowMainExecuteCommand_Workflow";
ALTER TABLE ONLY public."WorkflowMainExecuteCommandTemplate" DROP CONSTRAINT "fk_WorkflowMainExecuteCommandTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowMainExecuteCommandTemplate" DROP CONSTRAINT "fk_WorkflowMainExecuteCommandTemplate_WorkflowCommandTemplate";
ALTER TABLE ONLY public."WorkflowMainCompleteCondition" DROP CONSTRAINT "fk_WorkflowMainCompleteCondition_WorkflowCondition";
ALTER TABLE ONLY public."WorkflowMainCompleteCondition" DROP CONSTRAINT "fk_WorkflowMainCompleteCondition_Workflow";
ALTER TABLE ONLY public."WorkflowMainCompleteConditionTemplate" DROP CONSTRAINT "fk_WorkflowMainCompleteConditionTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowMainCompleteConditionTemplate" DROP CONSTRAINT "fk_WorkflowMainCompleteConditionTem";
ALTER TABLE ONLY public."WorkflowInstance" DROP CONSTRAINT "fk_WorkflowInstance_Workflow";
ALTER TABLE ONLY public."WorkflowInstanceSession" DROP CONSTRAINT "fk_WorkflowInstanceSession_WorkflowInstance";
ALTER TABLE ONLY public."WorkflowInstanceRestriction" DROP CONSTRAINT "fk_WorkflowInstanceRestriction_WorkflowInstance";
ALTER TABLE ONLY public."WorkflowInstanceRestriction" DROP CONSTRAINT "fk_WorkflowInstanceRestriction_UserAccountOrganisation";
ALTER TABLE ONLY public."WorkflowInstanceExecution" DROP CONSTRAINT "fk_WorkflowInstanceExecution_WorkflowInstanceSession";
ALTER TABLE ONLY public."WorkflowInstanceExecutionTrace" DROP CONSTRAINT "fk_WorkflowInstanceExecutionTrace_WorkflowInstanceExecution";
ALTER TABLE ONLY public."WorkflowInstanceExecutionStatusEvent" DROP CONSTRAINT "fk_WorkflowInstanceExecutionStatusEvent_WorkflowExecutionStatus";
ALTER TABLE ONLY public."WorkflowActionPostCommand" DROP CONSTRAINT "fk_WorkflowInstanceExecutionStatusEve";
ALTER TABLE ONLY public."WorkflowInstanceExecutionStatusEvent" DROP CONSTRAINT "fk_WorkflowInstanceExecutionSta";
ALTER TABLE ONLY public."WorkflowInstanceExecutionDataItem" DROP CONSTRAINT "fk_WorkflowInstanceExecutionDataItem_Workfl";
ALTER TABLE ONLY public."WorkflowHierarchy" DROP CONSTRAINT "fk_WorkflowHierarchy_WorkflowTransistion";
ALTER TABLE ONLY public."WorkflowHierarchy" DROP CONSTRAINT "fk_WorkflowHierarchy_Workflow";
ALTER TABLE ONLY public."WorkflowDecisionSuccess" DROP CONSTRAINT "fk_WorkflowDecisioorkflowDecision";
ALTER TABLE ONLY public."WorkflowDecision" DROP CONSTRAINT "fk_WorkflowDecision_WorkflowObjectType";
ALTER TABLE ONLY public."WorkflowDecision" DROP CONSTRAINT "fk_WorkflowDecision_Workflow";
ALTER TABLE ONLY public."WorkflowDecisionTemplate" DROP CONSTRAINT "fk_WorkflowDecisionTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowDecisionTemplate" DROP CONSTRAINT "fk_WorkflowDecisionTemplate_WorkflowObjectTypeTemplate";
ALTER TABLE ONLY public."WorkflowDecisionSuccessTemplate" DROP CONSTRAINT "fk_WorkflowDecisionSuccessTemp";
ALTER TABLE ONLY public."WorkflowDecisionSuccess" DROP CONSTRAINT "fk_WorkflowDecisionSuccessAction_WorkflowDecision";
ALTER TABLE ONLY public."WorkflowDecisionSuccess" DROP CONSTRAINT "fk_WorkflowDecisionSuccessAction_WorkflowAction";
ALTER TABLE ONLY public."WorkflowDecisionSuccessTemplate" DROP CONSTRAINT "fk_WorkflowDecisionSuccessActionTemplate_WorkflowActionTemplate";
ALTER TABLE ONLY public."WorkflowDecisionParameter" DROP CONSTRAINT "fk_WorkflowDecisionParameter_WorkflowParameter";
ALTER TABLE ONLY public."WorkflowDecisionParameterTemplate" DROP CONSTRAINT "fk_WorkflowDecisionParameterTemplate_WorkflowParameterTemplate";
ALTER TABLE ONLY public."WorkflowDecisionFailureTemplate" DROP CONSTRAINT "fk_WorkflowDecisionFrkflowDecisionTemplate";
ALTER TABLE ONLY public."WorkflowDecisionFailure" DROP CONSTRAINT "fk_WorkflowDecisionFailureAction_WorkflowDecision";
ALTER TABLE ONLY public."WorkflowDecisionFailure" DROP CONSTRAINT "fk_WorkflowDecisionFailureAction_WorkflowAction";
ALTER TABLE ONLY public."WorkflowDecisionFailureTemplate" DROP CONSTRAINT "fk_WorkflowDecisionFailureActionTemplate_WorkflowActionTemplate";
ALTER TABLE ONLY public."WorkflowDecisionFailure" DROP CONSTRAINT "fk_WorkflowDecisionFailukflowDecision";
ALTER TABLE ONLY public."WorkflowDecisionExecuteCommandTemplate" DROP CONSTRAINT "fk_WorkflowDecisionExecuteCommandTemplate_WorkflowDecisionTempl";
ALTER TABLE ONLY public."WorkflowDecisionExecuteCommand" DROP CONSTRAINT "fk_WorkflowDecisionExecuteCate_WorkflowDecisionTemplate";
ALTER TABLE ONLY public."WorkflowDecisionErrorTemplate" DROP CONSTRAINT "fk_WorkflowDecisionErrorTDecisionTemplate";
ALTER TABLE ONLY public."WorkflowDecisionError" DROP CONSTRAINT "fk_WorkflowDecisionErrorAction_WorkflowDecision";
ALTER TABLE ONLY public."WorkflowDecisionError" DROP CONSTRAINT "fk_WorkflowDecisionErrorAction_WorkflowAction";
ALTER TABLE ONLY public."WorkflowDecisionErrorTemplate" DROP CONSTRAINT "fk_WorkflowDecisionErrorActionTemplate_WorkflowDecisionTemplate";
ALTER TABLE ONLY public."WorkflowDecisionErrorTemplate" DROP CONSTRAINT "fk_WorkflowDecisionErrorActionTemplate_WorkflowActionTemplate";
ALTER TABLE ONLY public."WorkflowDecisionError" DROP CONSTRAINT "fk_WorkflowDecisionEflowDecision";
ALTER TABLE ONLY public."WorkflowCondition" DROP CONSTRAINT "fk_WorkflowCondition_Workflow";
ALTER TABLE ONLY public."WorkflowConditionTemplate" DROP CONSTRAINT "fk_WorkflowConditionTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowConditionTemplate" DROP CONSTRAINT "fk_WorkflowConditionTemplate_WorkflowObjectTypeTemplate";
ALTER TABLE ONLY public."WorkflowConditionParameterTemplate" DROP CONSTRAINT "fk_WorkflowConditionParameter_WorkflowParameterTemplate";
ALTER TABLE ONLY public."WorkflowConditionParameter" DROP CONSTRAINT "fk_WorkflowConditionParameter_WorkflowParameter";
ALTER TABLE ONLY public."WorkflowConditionParameterTemplate" DROP CONSTRAINT "fk_WorkflowConditionParameter_WorkflowConditionTemplate";
ALTER TABLE ONLY public."WorkflowConditionParameter" DROP CONSTRAINT "fk_WorkflowConditionParameter_WorkflowCondition";
ALTER TABLE ONLY public."WorkflowConditionParameter" DROP CONSTRAINT "fk_WorkflowConditionParameter_Workflow";
ALTER TABLE ONLY public."WorkflowConditionParameterTemplate" DROP CONSTRAINT "fk_WorkflowConditionParameterTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowCommand" DROP CONSTRAINT "fk_WorkflowCommand_WorkflowObjectType";
ALTER TABLE ONLY public."WorkflowCommand" DROP CONSTRAINT "fk_WorkflowCommand_Workflow";
ALTER TABLE ONLY public."WorkflowCommandTemplate" DROP CONSTRAINT "fk_WorkflowCommandTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowCommandTemplate" DROP CONSTRAINT "fk_WorkflowCommandTemplate_WorkflowObjectTypeTemplate";
ALTER TABLE ONLY public."WorkflowCommandParameter" DROP CONSTRAINT "fk_WorkflowCommandParameter_WorkflowParameter";
ALTER TABLE ONLY public."WorkflowCommandParameter" DROP CONSTRAINT "fk_WorkflowCommandParameter_WorkflowCommand";
ALTER TABLE ONLY public."WorkflowCommandParameter" DROP CONSTRAINT "fk_WorkflowCommandParameter_Workflow";
ALTER TABLE ONLY public."WorkflowCommandParameterTemplate" DROP CONSTRAINT "fk_WorkflowCommandParameterTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowCommandParameterTemplate" DROP CONSTRAINT "fk_WorkflowCommandParameterTemplate_WorkflowParameterTemplate";
ALTER TABLE ONLY public."WorkflowCommandParameterTemplate" DROP CONSTRAINT "fk_WorkflowCommandParameterTemplate_WorkflowCommandTemplate";
ALTER TABLE ONLY public."WorkflowCommandCondition" DROP CONSTRAINT "fk_WorkflowCommandCondition_WorkflowCondition";
ALTER TABLE ONLY public."WorkflowCommandCondition" DROP CONSTRAINT "fk_WorkflowCommandCondition_WorkflowCommand";
ALTER TABLE ONLY public."WorkflowCommandCondition" DROP CONSTRAINT "fk_WorkflowCommandCondition_Workflow";
ALTER TABLE ONLY public."WorkflowCommandConditionTemplate" DROP CONSTRAINT "fk_WorkflowCommandConditionTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowCommandConditionTemplate" DROP CONSTRAINT "fk_WorkflowCommandConditionTemplate_WorkflowConditionTemplate";
ALTER TABLE ONLY public."WorkflowCommandConditionTemplate" DROP CONSTRAINT "fk_WorkflowCommandConditionTemplate_WorkflowCommandTemplate";
ALTER TABLE ONLY public."WorkflowClaim" DROP CONSTRAINT "fk_WorkflowClaim_Workflow";
ALTER TABLE ONLY public."WorkflowClaim" DROP CONSTRAINT "fk_WorkflowClaim_Role";
ALTER TABLE ONLY public."WorkflowClaimTemplate" DROP CONSTRAINT "fk_WorkflowClaimTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowClaimTemplate" DROP CONSTRAINT "fk_WorkflowClaimTemplate_Role";
ALTER TABLE ONLY public."WorkflowAction" DROP CONSTRAINT "fk_WorkflowAction_WorkflowObjectType";
ALTER TABLE ONLY public."WorkflowAction" DROP CONSTRAINT "fk_WorkflowAction_Workflow";
ALTER TABLE ONLY public."WorkflowActionValidationTemplate" DROP CONSTRAINT "fk_WorkflowActionValidationTemplate_WorkflowActionTemplate";
ALTER TABLE ONLY public."WorkflowActionTemplate" DROP CONSTRAINT "fk_WorkflowActionTemplate_WorkflowObjectTypeTemplate";
ALTER TABLE ONLY public."WorkflowActionExecutionTemplate" DROP CONSTRAINT "fk_WorkflowActionStateExecutionTemplate_WorkflowActionTemplate";
ALTER TABLE ONLY public."WorkflowActionStartCondition" DROP CONSTRAINT "fk_WorkflowActionStartCondition_WorkflowCondition";
ALTER TABLE ONLY public."WorkflowActionStartCondition" DROP CONSTRAINT "fk_WorkflowActionStartCondition_WorkflowAction";
ALTER TABLE ONLY public."WorkflowActionStartConditionTemplate" DROP CONSTRAINT "fk_WorkflowActionStartConditionTemplate_WorkflowActionTemplate";
ALTER TABLE ONLY public."WorkflowActionStartConditionTemplate" DROP CONSTRAINT "fk_WorkflowActionStartConditionTememplate";
ALTER TABLE ONLY public."WorkflowActionProductPlaceholder" DROP CONSTRAINT "fk_WorkflowActionProductPlaceholder_WorkflowActionTemplate";
ALTER TABLE ONLY public."WorkflowActionPreCommand" DROP CONSTRAINT "fk_WorkflowActionPreCommand_WorkflowCommand";
ALTER TABLE ONLY public."WorkflowActionPreCommand" DROP CONSTRAINT "fk_WorkflowActionPreCommand_WorkflowAction";
ALTER TABLE ONLY public."WorkflowActionPreCommandTemplate" DROP CONSTRAINT "fk_WorkflowActionPreCommandTemplate_WorkflowCommandTemplate";
ALTER TABLE ONLY public."WorkflowActionPreCommandTemplate" DROP CONSTRAINT "fk_WorkflowActionPreCommandTemplate_WorkflowActionTemplate";
ALTER TABLE ONLY public."WorkflowActionPostCommand" DROP CONSTRAINT "fk_WorkflowActionPostCommand_WorkflowAction";
ALTER TABLE ONLY public."WorkflowActionPostCommandTemplate" DROP CONSTRAINT "fk_WorkflowActionPostCommandTemplate_WorkflowCommandTemplate";
ALTER TABLE ONLY public."WorkflowActionPostCommandTemplate" DROP CONSTRAINT "fk_WorkflowActionPostCommandTemplate_WorkflowActionTemplate";
ALTER TABLE ONLY public."WorkflowActionParameterTemplate" DROP CONSTRAINT "fk_WorkflowActionParamter_WorkflowParameterTemplate";
ALTER TABLE ONLY public."WorkflowActionParameterTemplate" DROP CONSTRAINT "fk_WorkflowActionParamter_WorkflowActionTemplate";
ALTER TABLE ONLY public."WorkflowActionParameter" DROP CONSTRAINT "fk_WorkflowActionParameter_WorkflowParameter";
ALTER TABLE ONLY public."WorkflowActionParameter" DROP CONSTRAINT "fk_WorkflowActionParameter_WorkflowAction";
ALTER TABLE ONLY public."WorkflowActionParameterNotificationConstruct" DROP CONSTRAINT "fk_WorkflowActionParameterNotificationConstruct_NotificationCon";
ALTER TABLE ONLY public."WorkflowActionParameterNotificationConstructTemplate" DROP CONSTRAINT "fk_WorkflowActionParameterNotificationConstructTemplate_Notific";
ALTER TABLE ONLY public."WorkflowActionNotificationTemplate" DROP CONSTRAINT "fk_WorkflowActionNotificationTemplate_WorkflowActionTemplate";
ALTER TABLE ONLY public."WorkflowActionExecuteCommand" DROP CONSTRAINT "fk_WorkflowActionExecuteCommand_WorkflowCommand";
ALTER TABLE ONLY public."WorkflowActionExecuteCommand" DROP CONSTRAINT "fk_WorkflowActionExecuteCommand_WorkflowAction";
ALTER TABLE ONLY public."WorkflowActionExecuteCommandTemplate" DROP CONSTRAINT "fk_WorkflowActionExecuteCommandTemplate_WorkflowCommandTemplate";
ALTER TABLE ONLY public."WorkflowActionExecuteCommandTemplate" DROP CONSTRAINT "fk_WorkflowActionExecuteCommandTemplate_WorkflowActionTemplate";
ALTER TABLE ONLY public."WorkflowActionCompleteCondition" DROP CONSTRAINT "fk_WorkflowActionCompleteCondition_WorkflowCondition";
ALTER TABLE ONLY public."WorkflowActionCompleteCondition" DROP CONSTRAINT "fk_WorkflowActionCompleteCondition_WorkflowAction";
ALTER TABLE ONLY public."WorkflowActionCompleteConditionTemplate" DROP CONSTRAINT "fk_WorkflowActionCompleteConditionTemate";
ALTER TABLE ONLY public."WorkflowActionCompleteConditionTemplate" DROP CONSTRAINT "fk_WorkflowActionCompleteConditionTe";
ALTER TABLE ONLY public."WorflowParameterTemplate" DROP CONSTRAINT "fk_WorflowParameterTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."ShoppingCartItemProductSpecification" DROP CONSTRAINT "fk_UserShoppingroductSpecificationAttribute";
ALTER TABLE ONLY public."ShoppingCartItem" DROP CONSTRAINT "fk_UserShoppingCartItem_UserShoppingCart";
ALTER TABLE ONLY public."ShoppingCartItem" DROP CONSTRAINT "fk_UserShoppingCartItem_Product";
ALTER TABLE ONLY public."ShoppingCartItemProductSpecification" DROP CONSTRAINT "fk_UserShoppingCartItemProductSpecification_UserShoppingCartIte";
ALTER TABLE ONLY public."ShoppingCartItemProductAttribute" DROP CONSTRAINT "fk_UserShoppingCartItemProductAttribute_UserShoppingCartItem";
ALTER TABLE ONLY public."ShoppingCartItemProductAttribute" DROP CONSTRAINT "fk_UserShoppingCartItemProductAttribute_ProductVariantAttribute";
ALTER TABLE ONLY public."ShoppingCartItemProductSpecification" DROP CONSTRAINT "fk_UserShoppingCartIteductSpecificationAttributeOption";
ALTER TABLE ONLY public."UserAccountOrganisation" DROP CONSTRAINT "fk_UserAccunts";
ALTER TABLE ONLY public."UserAccountArchive" DROP CONSTRAINT "fk_UserAccounts_ID";
ALTER TABLE ONLY public."UserAccountOrganisation" DROP CONSTRAINT "fk_UserAccountOrganisation_UserType";
ALTER TABLE ONLY public."UserAccountOrganisation" DROP CONSTRAINT "fk_UserAccountOrganisation_Contact";
ALTER TABLE ONLY public."UserAccountOrganisation" DROP CONSTRAINT "fk_UserAccountOrganisationUnit_OrganisationUnit";
ALTER TABLE ONLY public."UserAccountOrganisation" DROP CONSTRAINT "fk_UserAccountOrganisationUnit_Organisation";
ALTER TABLE ONLY public."UserAccountOrganisationTeam" DROP CONSTRAINT "fk_UserAccountOrganisationTeam_UserAccountOrganisationUnit";
ALTER TABLE ONLY public."UserAccountOrganisationTeam" DROP CONSTRAINT "fk_UserAccountOrganisationTeam_OrganisationTeam";
ALTER TABLE ONLY public."UserAccountOrganisationStatus" DROP CONSTRAINT "fk_UserAccountOrganisationStatus_UserAccountOrganisation";
ALTER TABLE ONLY public."UserAccountOrganisationStatus" DROP CONSTRAINT "fk_UserAccountOrganisationStatus_StatusTypeValue";
ALTER TABLE ONLY public."UserAccountOrganisationStatus" DROP CONSTRAINT "fk_UserAccountOrganisationStatus_StatusType";
ALTER TABLE ONLY public."UserAccountOrganisationSecondaryUserType" DROP CONSTRAINT "fk_UserAccountOrganisationSecondaryUserType_UserType";
ALTER TABLE ONLY public."UserAccountOrganisationRole" DROP CONSTRAINT "fk_UserAccountOrganisationRole_UserAccountOrganisationUnit";
ALTER TABLE ONLY public."UserAccountOrganisationRole" DROP CONSTRAINT "fk_UserAccountOrganisationRole_OrganisationRole";
ALTER TABLE ONLY public."ProductPurchase" DROP CONSTRAINT "fk_UserAccountOrganisationProductPurchase_InvoiceLineItem";
ALTER TABLE ONLY public."UserAccountOrganisationGroup" DROP CONSTRAINT "fk_UserAccountOrganisationGroup_UserAccountOrganisationUnit";
ALTER TABLE ONLY public."UserAccountLoginSessionData" DROP CONSTRAINT "fk_UserAccountLoginSessionData_UserAccountLoginSession";
ALTER TABLE ONLY public."UserAccountLedgerAccount" DROP CONSTRAINT "fk_UserAccountLedgerAccount_UserAccounts";
ALTER TABLE ONLY public."UserAccountLedgerAccount" DROP CONSTRAINT "fk_UserAccountLedgerAccount_LedgerAccount";
ALTER TABLE ONLY public."TransactionOrder" DROP CONSTRAINT "fk_TransactionOrder_Invoice";
ALTER TABLE ONLY public."TransactionOrder" DROP CONSTRAINT "fk_TransactionOrder_GlobalPaymentMethod";
ALTER TABLE ONLY public."TransactionOrderProcessLog" DROP CONSTRAINT "fk_TransactionOrderProcessLog_TransactionOrderPayment";
ALTER TABLE ONLY public."TransactionOrderProcessLog" DROP CONSTRAINT "fk_TransactionOrderProcessLog_TransactionOrder";
ALTER TABLE ONLY public."TransactionOrderProcessLog" DROP CONSTRAINT "fk_TransactionOrderProcessLog_StatusTypeValue";
ALTER TABLE ONLY public."TransactionOrderProcessLog" DROP CONSTRAINT "fk_TransactionOrderProcessLog_StatusType";
ALTER TABLE ONLY public."TransactionOrderPaymentError" DROP CONSTRAINT "fk_TransactionOrderPaymentError_TransactionOrderPayment";
ALTER TABLE ONLY public."TransactionOrderItem" DROP CONSTRAINT "fk_TransactionOrderItem_InvoiceLineItem";
ALTER TABLE ONLY public."StatusType" DROP CONSTRAINT "fk_StatusType_StatusTypeTemplate";
ALTER TABLE ONLY public."StatusTypeValueTemplate" DROP CONSTRAINT "fk_StatusTypeValueTemplateID_StatusTypeTemplate";
ALTER TABLE ONLY public."StatusTypeValue" DROP CONSTRAINT "fk_StatusTypeValueID_StatusType";
ALTER TABLE ONLY public."StatusTypeStructure" DROP CONSTRAINT "fk_StatusTypeStructure_StatusTypeValueID";
ALTER TABLE ONLY public."StatusTypeStructure" DROP CONSTRAINT "fk_StatusTypeStructure_StatusType";
ALTER TABLE ONLY public."StatusTypeStructureTemplate" DROP CONSTRAINT "fk_StatusTypeStructureTemplate_StatusTypeValueTemplateID";
ALTER TABLE ONLY public."StatusTypeStructureTemplate" DROP CONSTRAINT "fk_StatusTypeStructureTemplate_StatusTypeTemplate";
ALTER TABLE ONLY public."StatusTypeStructureTransition" DROP CONSTRAINT "fk_StatusTypeStructureMapping_StatusTypeStructureTempla";
ALTER TABLE ONLY public."StatusTypeStructureTransitionTemplate" DROP CONSTRAINT "fk_StatusTypeStructureMappingTemplate_StatusTypeStructureTempla";
ALTER TABLE ONLY public."StatusTypeStructureTransitionTemplate" DROP CONSTRAINT "fk_StatusTypeStructureMappeStructureTemplate";
ALTER TABLE ONLY public."StatusTypeStructureTransition" DROP CONSTRAINT "fk_StatusTypeStructureMappeStructure";
ALTER TABLE ONLY public."StatusTypeRole" DROP CONSTRAINT "fk_StatusTypeRole_StatusType";
ALTER TABLE ONLY public."StatusTypeRoleTemplate" DROP CONSTRAINT "fk_StatusTypeRoleTemplate_StatusTypeTemplate";
ALTER TABLE ONLY public."StatusTypeClaim" DROP CONSTRAINT "fk_StatusTypeClaim_StatusTypeRole";
ALTER TABLE ONLY public."StatusTypeClaim" DROP CONSTRAINT "fk_StatusTypeClaim_StatusType";
ALTER TABLE ONLY public."StatusTypeClaim" DROP CONSTRAINT "fk_StatusTypeClaim_StateItem";
ALTER TABLE ONLY public."StatusTypeClaim" DROP CONSTRAINT "fk_StatusTypeClaim_State";
ALTER TABLE ONLY public."StatusTypeClaim" DROP CONSTRAINT "fk_StatusTypeClaim_Resource";
ALTER TABLE ONLY public."StatusTypeClaim" DROP CONSTRAINT "fk_StatusTypeClaim_Operation";
ALTER TABLE ONLY public."StatusTypeClaimTemplate" DROP CONSTRAINT "fk_StatusTypeClaimTemplate_StatusTypeTemplate";
ALTER TABLE ONLY public."StatusTypeClaimTemplate" DROP CONSTRAINT "fk_StatusTypeClaimTemplate_StatusTypeRoleTemplate";
ALTER TABLE ONLY public."StatusTypeClaimTemplate" DROP CONSTRAINT "fk_StatusTypeClaimTemplate_StateItem";
ALTER TABLE ONLY public."StatusTypeClaimTemplate" DROP CONSTRAINT "fk_StatusTypeClaimTemplate_State";
ALTER TABLE ONLY public."StatusTypeClaimTemplate" DROP CONSTRAINT "fk_StatusTypeClaimTemplate_Role";
ALTER TABLE ONLY public."StatusTypeClaimTemplate" DROP CONSTRAINT "fk_StatusTypeClaimTemplate_Resource";
ALTER TABLE ONLY public."StatusTypeClaimTemplate" DROP CONSTRAINT "fk_StatusTypeClaimTemplate_Operation";
ALTER TABLE ONLY public."SpecificationAttributeRelationship" DROP CONSTRAINT "fk_SpecificationAttributeRelationship_SpecificationAttribute";
ALTER TABLE ONLY public."SpecificationAttributeRelationshipTemplate" DROP CONSTRAINT "fk_SpecificationAttributeRelationshipTempTemplate";
ALTER TABLE ONLY public."ShoppingCart" DROP CONSTRAINT "fk_ShoppingCart_UserAccountOrganisation";
ALTER TABLE ONLY public."ShoppingCart" DROP CONSTRAINT "fk_ShoppingCart_Organisation";
ALTER TABLE ONLY public."ShoppingCart" DROP CONSTRAINT "fk_ShoppingCart_GlobalPaymentMethod";
ALTER TABLE ONLY public."ShoppingCartBlueprintProduct" DROP CONSTRAINT "fk_ShoppingCartProductProduct_ShoppingCartProductTempla";
ALTER TABLE ONLY public."ShoppingCartBlueprintProduct" DROP CONSTRAINT "fk_ShoppingCartProductProduct_Product";
ALTER TABLE ONLY public."ShoppingCartBlueprintProductTemplate" DROP CONSTRAINT "fk_ShoppingCartProductProductTemplate_ShoppingCartProductTempla";
ALTER TABLE ONLY public."ShoppingCartBlueprintProductTemplate" DROP CONSTRAINT "fk_ShoppingCartProductProductTemplate_ProductTemplate";
ALTER TABLE ONLY public."ShoppingCartItem" DROP CONSTRAINT "fk_ShoppingCartItem_InvoiceLineItem";
ALTER TABLE ONLY public."ShoppingCartItem" DROP CONSTRAINT "fk_ShoppingCartItem_Account";
ALTER TABLE ONLY public."ShoppingCartDeduction" DROP CONSTRAINT "fk_ShoppingCartDeduction_ShoppingCart";
ALTER TABLE ONLY public."ShoppingCartDeduction" DROP CONSTRAINT "fk_ShoppingCartDeduction_CountryDeduction";
ALTER TABLE ONLY public."ServiceInterfaceProcessLog" DROP CONSTRAINT "fk_ServiceInterfaceProcessLog_StatusTypeValue";
ALTER TABLE ONLY public."ServiceInterfaceProcessLog" DROP CONSTRAINT "fk_ServiceInterfaceProcessLog_StatusType";
ALTER TABLE ONLY public."ServiceInterfaceProcessLog" DROP CONSTRAINT "fk_ServiceInterfaceProcessLog_ServiceDefinition";
ALTER TABLE ONLY public."ServiceInterfaceProcessLog" DROP CONSTRAINT "fk_ServiceInterfaceProcessLog_ProductPurchaseProductTask";
ALTER TABLE ONLY public."ServiceDefinition" DROP CONSTRAINT "fk_ServiceDefinition_ServiceInterface";
ALTER TABLE ONLY public."ServiceDefinitionDetail" DROP CONSTRAINT "fk_ServiceDefinitionDetail_ServiceDefinition";
ALTER TABLE ONLY public."OrganisationRole" DROP CONSTRAINT "fk_Role_Organisation";
ALTER TABLE ONLY public."RoleClaim" DROP CONSTRAINT "fk_RoleTemplateClaim_StateItem";
ALTER TABLE ONLY public."RoleClaim" DROP CONSTRAINT "fk_RoleTemplateClaim_State";
ALTER TABLE ONLY public."RoleClaim" DROP CONSTRAINT "fk_RoleTemplateClaim_RoleTemplate";
ALTER TABLE ONLY public."RoleClaim" DROP CONSTRAINT "fk_RoleTemplateClaim_Resource";
ALTER TABLE ONLY public."RoleClaim" DROP CONSTRAINT "fk_RoleTemplateClaim_Operation";
ALTER TABLE ONLY public."ResourceOperation" DROP CONSTRAINT "fk_ResourceOperation_Resource";
ALTER TABLE ONLY public."ResourceOperation" DROP CONSTRAINT "fk_ResourceOperation_Operation";
ALTER TABLE ONLY public."RepositoryStructure" DROP CONSTRAINT "fk_RepositoryStructure_Repository";
ALTER TABLE ONLY public."RepositoryStructureGroup" DROP CONSTRAINT "fk_RepositoryStructureRole_RepositoryStructure";
ALTER TABLE ONLY public."RepositoryStructureGroup" DROP CONSTRAINT "fk_RepositoryStructureRole_OrganisationGroup";
ALTER TABLE ONLY public."RepositoryStructureRole" DROP CONSTRAINT "fk_RepositoryStructureGroup_RepositoryStructure";
ALTER TABLE ONLY public."RepositoryStructureRole" DROP CONSTRAINT "fk_RepositoryStructureGroup_OrganisationRole";
ALTER TABLE ONLY public."RepositoryStructure" DROP CONSTRAINT "fk_RepositoryMap_Repository";
ALTER TABLE ONLY public."Product" DROP CONSTRAINT "fk_Product_ProductTemplate";
ALTER TABLE ONLY public."ProductVariantAttributeValue" DROP CONSTRAINT "fk_ProductVariantAttributeValue_ProductProductAttribute";
ALTER TABLE ONLY public."SpecificationAttributeRelationshipTemplate" DROP CONSTRAINT "fk_ProductVariantAttributeValueTemplate_ProductTemplateParent";
ALTER TABLE ONLY public."ProductVariantAttributeValueTemplate" DROP CONSTRAINT "fk_ProductVariantAttributeValueTemplate_ProductProductAttribute";
ALTER TABLE ONLY public."ProductVariantAttributeCombination" DROP CONSTRAINT "fk_ProductVariantAttributeCombination_Product";
ALTER TABLE ONLY public."ProductVariantAttributeCombinationTemplate" DROP CONSTRAINT "fk_ProductVariantAttributeCombinationTemplate_ProductTemplate";
ALTER TABLE ONLY public."ProductTag" DROP CONSTRAINT "fk_ProductTag_Product";
ALTER TABLE ONLY public."ProductTagTemplate" DROP CONSTRAINT "fk_ProductTagTemplate_ProductTemplate";
ALTER TABLE ONLY public."ProductBusTask" DROP CONSTRAINT "fk_ProductTFProductTask_Product";
ALTER TABLE ONLY public."ProductBusTaskTemplate" DROP CONSTRAINT "fk_ProductTFProductTaskTemplate_ProductTemplate";
ALTER TABLE ONLY public."ProductSpecificationBlueprint" DROP CONSTRAINT "fk_ProductSpecificationBlueprint_tion";
ALTER TABLE ONLY public."ProductSpecificationBlueprint" DROP CONSTRAINT "fk_ProductSpecificationBlueprint_ProductSpecificationAttribute";
ALTER TABLE ONLY public."ProductSpecificationBlueprint" DROP CONSTRAINT "fk_ProductSpecificationBlueprint_Product";
ALTER TABLE ONLY public."ProductSpecificationBlueprintTemplate" DROP CONSTRAINT "fk_ProductSpecificationBlueprintTemplate_ProductS";
ALTER TABLE ONLY public."ProductSpecificationBlueprintTemplate" DROP CONSTRAINT "fk_ProductSpecificationBlueprintTemplate_Prod";
ALTER TABLE ONLY public."ProductSpecificationAttributeOption" DROP CONSTRAINT "fk_ProductSpecificationAttritributeOption";
ALTER TABLE ONLY public."ProductSpecificationAttribute" DROP CONSTRAINT "fk_ProductSpecificationAttribute_SpecificationAttribute";
ALTER TABLE ONLY public."SpecificationAttribute" DROP CONSTRAINT "fk_ProductSpecificationAttribute_Producte";
ALTER TABLE ONLY public."ProductSpecificationAttributeTemplate" DROP CONSTRAINT "fk_ProductSpecificationAttributeTempte";
ALTER TABLE ONLY public."ProductSpecificationAttributeTemplate" DROP CONSTRAINT "fk_ProductSpecificationAttributeTemplate_ProductTemplate";
ALTER TABLE ONLY public."ProductSpecificationAttributeOptionTemplate" DROP CONSTRAINT "fk_ProductSpecificationAttributeOptionTemplate_Specificamplate1";
ALTER TABLE ONLY public."ProductSpecificationAttributeOptionTemplate" DROP CONSTRAINT "fk_ProductSpecificationAttributeOptionTemplate_Proplate1";
ALTER TABLE ONLY public."SpecificationAttributeOptionTemplate" DROP CONSTRAINT "fk_ProductSpecificationAttributeOptionTemplate_ProductSate";
ALTER TABLE ONLY public."ProductSpecificationAttributeOption" DROP CONSTRAINT "fk_ProductSpecificationAttributeOe";
ALTER TABLE ONLY public."SpecificiationAttributeOption" DROP CONSTRAINT "fk_ProductSpecficiationAttribute";
ALTER TABLE ONLY public."ProductRole" DROP CONSTRAINT "fk_ProductRole_Product";
ALTER TABLE ONLY public."ProductRoleTemplate" DROP CONSTRAINT "fk_ProductRoleTemplate_ProductTemplate";
ALTER TABLE ONLY public."SpecificationAttributeRelationship" DROP CONSTRAINT "fk_ProductRelationship_Product111";
ALTER TABLE ONLY public."ProductRelationship" DROP CONSTRAINT "fk_ProductRelationship_Product1";
ALTER TABLE ONLY public."ProductRelationship" DROP CONSTRAINT "fk_ProductRelationship_Product";
ALTER TABLE ONLY public."ProductRelationshipTemplate" DROP CONSTRAINT "fk_ProductRelationshipTemplate_ProductTemplate1";
ALTER TABLE ONLY public."ProductRelationshipTemplate" DROP CONSTRAINT "fk_ProductRelationshipTemplate_ProductTemplate";
ALTER TABLE ONLY public."ProductRelationshipBlueprint" DROP CONSTRAINT "fk_ProductRelationshipBlueprint_ProductRelationship";
ALTER TABLE ONLY public."ProductRelationshipBlueprintTemplate" DROP CONSTRAINT "fk_ProductRelationshipBlueprintTe";
ALTER TABLE ONLY public."ProductPurchaseReference" DROP CONSTRAINT "fk_ProductPurchaseReference_InvoiceLineItem";
ALTER TABLE ONLY public."ProductPurchaseBusTaskProcessLog" DROP CONSTRAINT "fk_ProductPurchaseProductTask_StatusTypeValue";
ALTER TABLE ONLY public."ProductPurchaseBusTaskProcessLog" DROP CONSTRAINT "fk_ProductPurchaseProductTask_StatusType";
ALTER TABLE ONLY public."ProductPurchaseBusTaskProcessLog" DROP CONSTRAINT "fk_ProductPurchaseProductTask_ProductPurchase";
ALTER TABLE ONLY public."ProductPurchaseProcessLog" DROP CONSTRAINT "fk_ProductPurchaseProcessLog_StatusTypeValue";
ALTER TABLE ONLY public."ProductPurchaseProcessLog" DROP CONSTRAINT "fk_ProductPurchaseProcessLog_StatusType";
ALTER TABLE ONLY public."ProductPurchaseProcessLog" DROP CONSTRAINT "fk_ProductPurchaseProcessLog_ProductPurchase";
ALTER TABLE ONLY public."ProductPurchaseBusTaskProcessLog" DROP CONSTRAINT "fk_ProductPurchaseBusTask_ProductBusTask";
ALTER TABLE ONLY public."ProductPurchaseBusTaskProcessDetail" DROP CONSTRAINT "fk_ProductPurchaseBusTaskProcessDetail_ProductPurchaseBusTaskPr";
ALTER TABLE ONLY public."ProductProductAttributeTemplate" DROP CONSTRAINT "fk_ProductProductAttribute_ProductAttributeTemplate";
ALTER TABLE ONLY public."ProductProductAttribute" DROP CONSTRAINT "fk_ProductProductAttribute_ProductAttribute";
ALTER TABLE ONLY public."ProductProductAttribute" DROP CONSTRAINT "fk_ProductProductAttribute_Product";
ALTER TABLE ONLY public."ProductProductAttributeTemplate" DROP CONSTRAINT "fk_ProductProductAttributeTemplate_ProductTemplate";
ALTER TABLE ONLY public."ProductPlan" DROP CONSTRAINT "fk_ProductPlan_Product";
ALTER TABLE ONLY public."ProductPlan" DROP CONSTRAINT "fk_ProductPlan_Plan";
ALTER TABLE ONLY public."ProductPlanTemplate" DROP CONSTRAINT "fk_ProductPlanTemplate_ProductTemplate";
ALTER TABLE ONLY public."ProductPlanTemplate" DROP CONSTRAINT "fk_ProductPlanTemplate_PlanTemplate";
ALTER TABLE ONLY public."ProductFamilyProductPackage" DROP CONSTRAINT "fk_ProductFamilyProductPackage_ProductFamily";
ALTER TABLE ONLY public."ProductFamilyProductPackage" DROP CONSTRAINT "fk_ProductFamilyProductPackage_Product";
ALTER TABLE ONLY public."ProductFamilyProductPackage" DROP CONSTRAINT "fk_ProductFamilyProductPackage_PackageProduct";
ALTER TABLE ONLY public."ProductFamilyProductPackageTemplate" DROP CONSTRAINT "fk_ProductFamilyProductPackageTemplate_ProductTemplate";
ALTER TABLE ONLY public."ProductFamilyProductPackageTemplate" DROP CONSTRAINT "fk_ProductFamilyProductPackageTemplate_ProductFamilyTemplate";
ALTER TABLE ONLY public."ProductFamilyProductPackageTemplate" DROP CONSTRAINT "fk_ProductFamilyProductPackageTemplate_PackageProductTemplate";
ALTER TABLE ONLY public."ProductDiscount" DROP CONSTRAINT "fk_ProductDiscount_Product";
ALTER TABLE ONLY public."ProductDiscount" DROP CONSTRAINT "fk_ProductDiscount_Discount";
ALTER TABLE ONLY public."ProductDiscountTemplate" DROP CONSTRAINT "fk_ProductDiscountTemplate_ProductTemplate";
ALTER TABLE ONLY public."ProductDiscountTemplate" DROP CONSTRAINT "fk_ProductDiscountTemplate_DiscountTemplate";
ALTER TABLE ONLY public."ProductDetail" DROP CONSTRAINT "fk_ProductDetail_Product";
ALTER TABLE ONLY public."ProductDetailTemplate" DROP CONSTRAINT "fk_ProductDetailTemplate_ProductTemplate";
ALTER TABLE ONLY public."ProductDeductionTemplate" DROP CONSTRAINT "fk_ProductDeduction_ProductTemplate";
ALTER TABLE ONLY public."ProductDeduction" DROP CONSTRAINT "fk_ProductDeduction_Product";
ALTER TABLE ONLY public."ProductDeduction" DROP CONSTRAINT "fk_ProductDeduction_Deduction";
ALTER TABLE ONLY public."ProductDeductionTemplate" DROP CONSTRAINT "fk_ProductDeductionTemplate_DeductionTemplate";
ALTER TABLE ONLY public."ProductComponentTier" DROP CONSTRAINT "fk_ProductComponentTier_Product";
ALTER TABLE ONLY public."ProductComponentTier" DROP CONSTRAINT "fk_ProductComponentTier_ComponentTier";
ALTER TABLE ONLY public."ProductComponentTierTemplate" DROP CONSTRAINT "fk_ProductComponentTierTemplate_ProductTemplate";
ALTER TABLE ONLY public."ProductComponentTierTemplate" DROP CONSTRAINT "fk_ProductComponentTierTemplate_ComponentTierTemplate";
ALTER TABLE ONLY public."ProductClaim" DROP CONSTRAINT "fk_ProductClaim_StateItem";
ALTER TABLE ONLY public."ProductClaim" DROP CONSTRAINT "fk_ProductClaim_State";
ALTER TABLE ONLY public."ProductClaim" DROP CONSTRAINT "fk_ProductClaim_Role";
ALTER TABLE ONLY public."ProductClaim" DROP CONSTRAINT "fk_ProductClaim_Resource";
ALTER TABLE ONLY public."ProductClaim" DROP CONSTRAINT "fk_ProductClaim_ProductRole";
ALTER TABLE ONLY public."ProductClaim" DROP CONSTRAINT "fk_ProductClaim_Product";
ALTER TABLE ONLY public."ProductClaim" DROP CONSTRAINT "fk_ProductClaim_Operation";
ALTER TABLE ONLY public."ProductClaimTemplate" DROP CONSTRAINT "fk_ProductClaimTemplate_StateItem";
ALTER TABLE ONLY public."ProductClaimTemplate" DROP CONSTRAINT "fk_ProductClaimTemplate_State";
ALTER TABLE ONLY public."ProductClaimTemplate" DROP CONSTRAINT "fk_ProductClaimTemplate_Role";
ALTER TABLE ONLY public."ProductClaimTemplate" DROP CONSTRAINT "fk_ProductClaimTemplate_Resource";
ALTER TABLE ONLY public."ProductClaimTemplate" DROP CONSTRAINT "fk_ProductClaimTemplate_ProductTemplate";
ALTER TABLE ONLY public."ProductClaimTemplate" DROP CONSTRAINT "fk_ProductClaimTemplate_ProductRoleTemplate";
ALTER TABLE ONLY public."ProductClaimTemplate" DROP CONSTRAINT "fk_ProductClaimTemplate_Operation";
ALTER TABLE ONLY public."ProductBusTask" DROP CONSTRAINT "fk_ProductBusTask_BusTask";
ALTER TABLE ONLY public."ProductBusTaskTemplate" DROP CONSTRAINT "fk_ProductBusTaskTemplate_BusTask";
ALTER TABLE ONLY public."Plan" DROP CONSTRAINT "fk_Plan_PlanTemplate";
ALTER TABLE ONLY public."Plan" DROP CONSTRAINT "fk_Plan_PlanGroup";
ALTER TABLE ONLY public."Plan" DROP CONSTRAINT "fk_Plan_CountryCode";
ALTER TABLE ONLY public."PlanTransaction" DROP CONSTRAINT "fk_PlanTransaction_PlanProduct";
ALTER TABLE ONLY public."PlanTransaction" DROP CONSTRAINT "fk_PlanTransaction_Plan";
ALTER TABLE ONLY public."PlanTransactionTemplate" DROP CONSTRAINT "fk_PlanTransactionTemplate_PlanTemplate";
ALTER TABLE ONLY public."PlanTransactionTemplate" DROP CONSTRAINT "fk_PlanTransactionTemplate_PlanProductTemplate";
ALTER TABLE ONLY public."PlanTransactionComponentTier" DROP CONSTRAINT "fk_PlanTransactionComponentTier_PlanTransaction";
ALTER TABLE ONLY public."PlanTransactionComponentTier" DROP CONSTRAINT "fk_PlanTransactionComponentTier_ComponentTier";
ALTER TABLE ONLY public."PlanTransactionComponentTierTemplate" DROP CONSTRAINT "fk_PlanTransactionComponentTierTemplate_PlanTransactionTemplate";
ALTER TABLE ONLY public."PlanTransactionComponentTierTemplate" DROP CONSTRAINT "fk_PlanTransactionComponentTierTemplate_ComponentTierTemplate";
ALTER TABLE ONLY public."PlanTemplate" DROP CONSTRAINT "fk_PlanTemplate_PlanGroup";
ALTER TABLE ONLY public."PlanTemplate" DROP CONSTRAINT "fk_PlanTemplate_CountryCode";
ALTER TABLE ONLY public."PlanSubscription" DROP CONSTRAINT "fk_PlanSubscription_Plan";
ALTER TABLE ONLY public."PlanSubscription" DROP CONSTRAINT "fk_PlanSubscription_Organisation";
ALTER TABLE ONLY public."PlanSubscription" DROP CONSTRAINT "fk_PlanSubscription_CountryCode";
ALTER TABLE ONLY public."PlanSubscriptionProcessLog" DROP CONSTRAINT "fk_PlanSubscriptionProcessLog_StatusTypeValue";
ALTER TABLE ONLY public."PlanSubscriptionProcessLog" DROP CONSTRAINT "fk_PlanSubscriptionProcessLog_StatusType";
ALTER TABLE ONLY public."PlanSubscriptionProcessLog" DROP CONSTRAINT "fk_PlanSubscriptionProcessLog_PlanSubscription";
ALTER TABLE ONLY public."PlanSubscriptionPeriod" DROP CONSTRAINT "fk_PlanSubscriptionPeriod_PlanSubscriptionBillingPeriod";
ALTER TABLE ONLY public."PlanSubscriptionPeriod" DROP CONSTRAINT "fk_PlanSubscriptionPeriod_PlanSubscription";
ALTER TABLE ONLY public."PlanSubscriptionPaymentPlan" DROP CONSTRAINT "fk_PlanSubscriptionPaymentPlan_PlanSubscription";
ALTER TABLE ONLY public."PlanSubscriptionPaymentPlan" DROP CONSTRAINT "fk_PlanSubscriptionPaymentPlan_GlobalPaymentMethod";
ALTER TABLE ONLY public."PlanSubscriptionPaymentPlan" DROP CONSTRAINT "fk_PlanSubscriptionPaymentPlan_Billing";
ALTER TABLE ONLY public."PlanSubscriptionBillingProcessLog" DROP CONSTRAINT "fk_PlanSubscriptionBillingPeriod_StatusTypeValue";
ALTER TABLE ONLY public."PlanSubscriptionBillingProcessLog" DROP CONSTRAINT "fk_PlanSubscriptionBillingPeriod_StatusType";
ALTER TABLE ONLY public."PlanSubscriptionBillingProcessLog" DROP CONSTRAINT "fk_PlanSubscriptionBillingPeriod_PlanSubscription";
ALTER TABLE ONLY public."PlanProduct" DROP CONSTRAINT "fk_PlanProduct_Product";
ALTER TABLE ONLY public."PlanProduct" DROP CONSTRAINT "fk_PlanProduct_Plan";
ALTER TABLE ONLY public."PlanProductTemplate" DROP CONSTRAINT "fk_PlanProductTemplate_ProductTemplate";
ALTER TABLE ONLY public."PlanProductTemplate" DROP CONSTRAINT "fk_PlanProductTemplate_PlanTemplate";
ALTER TABLE ONLY public."PlanGlobalPaymentMethodTemplate" DROP CONSTRAINT "fk_PlanGlobalPaymentTemplate_PlanTemplate";
ALTER TABLE ONLY public."PlanGlobalPaymentMethodTemplate" DROP CONSTRAINT "fk_PlanGlobalPaymentTemplate_GlobalPaymentMethod";
ALTER TABLE ONLY public."PlanGlobalPaymentMethod" DROP CONSTRAINT "fk_PlanGlobalPaymentMethod_Plan";
ALTER TABLE ONLY public."PlanGlobalPaymentMethod" DROP CONSTRAINT "fk_PlanGlobalPaymentMethod_GlobalPaymentMethod";
ALTER TABLE ONLY public."PlanGlobalPaymentMethod" DROP CONSTRAINT "fk_PlanGlobalPaymentMethod_Billing";
ALTER TABLE ONLY public."PlanGlobalPaymentMethodTemplate" DROP CONSTRAINT "fk_PlanGlobalPaymentMethodTemplate_BillingTemplate";
ALTER TABLE ONLY public."PlanDiscount" DROP CONSTRAINT "fk_PlanDiscount_Plan";
ALTER TABLE ONLY public."PlanDiscount" DROP CONSTRAINT "fk_PlanDiscount_Discount";
ALTER TABLE ONLY public."PlanDiscountTemplate" DROP CONSTRAINT "fk_PlanDiscountTemplate_PlanTemplate";
ALTER TABLE ONLY public."PlanDiscountTemplate" DROP CONSTRAINT "fk_PlanDiscountTemplate_DiscountTemplate";
ALTER TABLE ONLY public."PlanBilling" DROP CONSTRAINT "fk_PlanBilling_Plan";
ALTER TABLE ONLY public."PlanBilling" DROP CONSTRAINT "fk_PlanBilling_Billing";
ALTER TABLE ONLY public."PlanBillingTemplate" DROP CONSTRAINT "fk_PlanBillingTemplate_PlanTemplate";
ALTER TABLE ONLY public."PlanBillingTemplate" DROP CONSTRAINT "fk_PlanBillingTemplate_BillingTemplate";
ALTER TABLE ONLY public."Package" DROP CONSTRAINT "fk_Package_Product";
ALTER TABLE ONLY public."Package" DROP CONSTRAINT "fk_Package_PackageTemplate";
ALTER TABLE ONLY public."PackageTemplate" DROP CONSTRAINT "fk_PackageTemplate_ProductTemplate";
ALTER TABLE ONLY public."PackageProduct" DROP CONSTRAINT "fk_PackageProduct_Product";
ALTER TABLE ONLY public."PackageProduct" DROP CONSTRAINT "fk_PackageProduct_Package";
ALTER TABLE ONLY public."PackageProductTemplate" DROP CONSTRAINT "fk_PackageProductTemplate_ProductTemplate";
ALTER TABLE ONLY public."PackageProductTemplate" DROP CONSTRAINT "fk_PackageProductTemplate_PackageTemplate";
ALTER TABLE ONLY public."PackageProductSpecificationBlueprint" DROP CONSTRAINT "fk_PackageProductSpecificationute";
ALTER TABLE ONLY public."PackageProductSpecificationBlueprint" DROP CONSTRAINT "fk_PackageProductSpecificationBlueprint_Pn";
ALTER TABLE ONLY public."PackageProductSpecificationBlueprint" DROP CONSTRAINT "fk_PackageProductSpecificationBlueprint_PackageProduct";
ALTER TABLE ONLY public."PackageProductSpecificationBlueprintTemplate" DROP CONSTRAINT "fk_PackageProductSpecificationBlueprintTemplate_Productlate";
ALTER TABLE ONLY public."PackageProductSpecificationBlueprintTemplate" DROP CONSTRAINT "fk_PackageProductSpecificationBlueprintTemplate_Prodlate";
ALTER TABLE ONLY public."PackageProductSpecificationBlueprintTemplate" DROP CONSTRAINT "fk_PackageProductSpecificationBlueprintTemplate_PackageProductT";
ALTER TABLE ONLY public."PackageProductRelationship" DROP CONSTRAINT "fk_PackageProductRelationship_ProductChild";
ALTER TABLE ONLY public."PackageProductRelationship" DROP CONSTRAINT "fk_PackageProductRelationship_Product";
ALTER TABLE ONLY public."PackageProductRelationship" DROP CONSTRAINT "fk_PackageProductRelationship_PackageProduct";
ALTER TABLE ONLY public."PackageProductRelationshipTemplate" DROP CONSTRAINT "fk_PackageProductRelationshipTemplate_ProductTemplate22";
ALTER TABLE ONLY public."PackageProductRelationshipTemplate" DROP CONSTRAINT "fk_PackageProductRelationshipTemplate_ProductTemplate1";
ALTER TABLE ONLY public."PackageProductRelationshipTemplate" DROP CONSTRAINT "fk_PackageProductRelationshipTemplate_PackageProductTemplate";
ALTER TABLE ONLY public."PackageProductRelationshipBlueprintTemplate" DROP CONSTRAINT "fk_PackageProductRelationshipBlueprintTemplate_PackageProductRe";
ALTER TABLE ONLY public."PackageProductRelationshipBlueprint" DROP CONSTRAINT "fk_PackageProductRelationionship";
ALTER TABLE ONLY public."Organisation" DROP CONSTRAINT "fk_Organisation_OrganisationType";
ALTER TABLE ONLY public."Organisation" DROP CONSTRAINT "fk_Organisation_DefaultOrganisation";
ALTER TABLE ONLY public."Organisation" DROP CONSTRAINT "fk_Organisation_Contact";
ALTER TABLE ONLY public."OrganisationWorkflow" DROP CONSTRAINT "fk_OrganisationWorkflow_Workflow";
ALTER TABLE ONLY public."OrganisationWorkflow" DROP CONSTRAINT "fk_OrganisationWorkflow_Organisation";
ALTER TABLE ONLY public."OrganisationUserType" DROP CONSTRAINT "fk_OrganisationUserType_UserType";
ALTER TABLE ONLY public."OrganisationUserType" DROP CONSTRAINT "fk_OrganisationUserType_Organisation";
ALTER TABLE ONLY public."OrganisationUnitOrganisationRole" DROP CONSTRAINT "fk_OrganisationUnitOrganisationRole_OrganisationUnit";
ALTER TABLE ONLY public."OrganisationUnitOrganisationRole" DROP CONSTRAINT "fk_OrganisationUnitOrganisationRole_OrganisationRole";
ALTER TABLE ONLY public."OrganisationUnitOrganisationGroup" DROP CONSTRAINT "fk_OrganisationUnitOrganisationGroup_OrganisationUnit";
ALTER TABLE ONLY public."OrganisationUnitOrganisationGroup" DROP CONSTRAINT "fk_OrganisationUnitOrganisationGroup_OrganisationGroup";
ALTER TABLE ONLY public."OrganisationTradingName" DROP CONSTRAINT "fk_OrganisationTradingName_Organisation";
ALTER TABLE ONLY public."OrganisationTeam" DROP CONSTRAINT "fk_OrganisationTeam_Organisation";
ALTER TABLE ONLY public."OrganisationTeamSetting" DROP CONSTRAINT "fk_OrganisationTeamSetting_OrganisationTeam";
ALTER TABLE ONLY public."TaxRate" DROP CONSTRAINT "fk_OrganisationTaxRate_TaxRateTemplate";
ALTER TABLE ONLY public."OrganisationStatus" DROP CONSTRAINT "fk_OrganisationStatus_StatusTypeValue";
ALTER TABLE ONLY public."OrganisationStatus" DROP CONSTRAINT "fk_OrganisationStatus_StatusType";
ALTER TABLE ONLY public."OrganisationStatus" DROP CONSTRAINT "fk_OrganisationStatus_Organisation";
ALTER TABLE ONLY public."OrganisationStatusType" DROP CONSTRAINT "fk_OrganisationStatusType_StatusType";
ALTER TABLE ONLY public."OrganisationStatusType" DROP CONSTRAINT "fk_OrganisationStatusType_Organisation";
ALTER TABLE ONLY public."OrganisationShoppingCartBlueprint" DROP CONSTRAINT "fk_OrganisationShoppingCartBlueprint_ShoppingCartBlueprint";
ALTER TABLE ONLY public."OrganisationShoppingCartBlueprint" DROP CONSTRAINT "fk_OrganisationShoppingCartBlueprint_Organisation";
ALTER TABLE ONLY public."OrganisationSetting" DROP CONSTRAINT "fk_OrganisationSetting_Organisation";
ALTER TABLE ONLY public."OrganisationRoleClaim" DROP CONSTRAINT "fk_OrganisationRoleClaim_StateItem";
ALTER TABLE ONLY public."OrganisationRoleClaim" DROP CONSTRAINT "fk_OrganisationRoleClaim_State";
ALTER TABLE ONLY public."OrganisationRoleClaim" DROP CONSTRAINT "fk_OrganisationRoleClaim_Resource";
ALTER TABLE ONLY public."OrganisationRoleClaim" DROP CONSTRAINT "fk_OrganisationRoleClaim_OrganisationRole";
ALTER TABLE ONLY public."OrganisationRoleClaim" DROP CONSTRAINT "fk_OrganisationRoleClaim_Organisation";
ALTER TABLE ONLY public."OrganisationRoleClaim" DROP CONSTRAINT "fk_OrganisationRoleClaim_Operation";
ALTER TABLE ONLY public."OrganisationProductPurchase" DROP CONSTRAINT "fk_OrganisationProductPurchase_Product";
ALTER TABLE ONLY public."OrganisationProductPurchase" DROP CONSTRAINT "fk_OrganisationProductPurchase_Organisation";
ALTER TABLE ONLY public."OrganisationProductPurchase" DROP CONSTRAINT "fk_OrganisationProductPurchase_InvoiceLineItem";
ALTER TABLE ONLY public."OrganisationPlanSubscription" DROP CONSTRAINT "fk_OrganisationPlanSubscription_PlanSubscription";
ALTER TABLE ONLY public."OrganisationPlanSubscription" DROP CONSTRAINT "fk_OrganisationPlanSubscription_Organisation";
ALTER TABLE ONLY public."OrganisationPaymentMethod" DROP CONSTRAINT "fk_OrganisationPaymentMethod_StatusTypeValue";
ALTER TABLE ONLY public."OrganisationPaymentMethod" DROP CONSTRAINT "fk_OrganisationPaymentMethod_StatusType";
ALTER TABLE ONLY public."OrganisationPaymentMethod" DROP CONSTRAINT "fk_OrganisationOfflinePaymentMethod_OrganisationDirectDebitMand";
ALTER TABLE ONLY public."OrganisationInsuranceDetails" DROP CONSTRAINT "fk_OrganisationInsuranceDetails_Organisation";
ALTER TABLE ONLY public."OrganisationGroupRole" DROP CONSTRAINT "fk_OrganisationGroupOrganisationRole_OrganisationRole";
ALTER TABLE ONLY public."OrganisationGroupRole" DROP CONSTRAINT "fk_OrganisationGroupOrganisationRole_OrganisationGroup";
ALTER TABLE ONLY public."OrganisationFinancialDetail" DROP CONSTRAINT "fk_OrganisationFinancialDetail_StatusTypeValue";
ALTER TABLE ONLY public."OrganisationFinancialDetail" DROP CONSTRAINT "fk_OrganisationFinancialDetail_StatusType";
ALTER TABLE ONLY public."OrganisationPaymentMethod" DROP CONSTRAINT "fk_OrganisationFinancialDetail_OrganisationBankAccount";
ALTER TABLE ONLY public."OrganisationPaymentMethod" DROP CONSTRAINT "fk_OrganisationFinancialDetail_Organisation";
ALTER TABLE ONLY public."OrganisationPaymentMethod" DROP CONSTRAINT "fk_OrganisationFinancialDetail_GlobalPaymentMethod";
ALTER TABLE ONLY public."OrganisationDiscount" DROP CONSTRAINT "fk_OrganisationDiscount_Organisation";
ALTER TABLE ONLY public."OrganisationDiscount" DROP CONSTRAINT "fk_OrganisationDiscount_Discount";
ALTER TABLE ONLY public."OrganisationDirectDebitMandate" DROP CONSTRAINT "fk_OrganisationDirectDebitMandate_Organisation";
ALTER TABLE ONLY public."OrganisationDirectDebitMandate" DROP CONSTRAINT "fk_OrganisationDirectDebitMandate_Notification";
ALTER TABLE ONLY public."OrganisationDirectDebitMandate" DROP CONSTRAINT "fk_OrganisationDirectDebitMandate_DirectDebitMandate";
ALTER TABLE ONLY public."OrganisationDirectDebitMandateProcessLog" DROP CONSTRAINT "fk_OrganisationDirectDebitMandateSignoff_StatusTypeValue";
ALTER TABLE ONLY public."OrganisationDirectDebitMandateProcessLog" DROP CONSTRAINT "fk_OrganisationDirectDebitMandateSignoff_StatusType";
ALTER TABLE ONLY public."OrganisationDirectDebitMandateProcessLog" DROP CONSTRAINT "fk_OrganisationDirectDebitMandateSignoff_OrganisationDirectDebi";
ALTER TABLE ONLY public."OrganisationDirectDebitMandateProcessLog" DROP CONSTRAINT "fk_OrganisationDirectDebitMandateSignoff_NotificationRecipient";
ALTER TABLE ONLY public."OrganisationDetail" DROP CONSTRAINT "fk_OrganisationDetail_Organisation_1";
ALTER TABLE ONLY public."OrganisationDetail" DROP CONSTRAINT "fk_OrganisationDetail_OrganisationDefaultLogo";
ALTER TABLE ONLY public."OrganisationBankAccount" DROP CONSTRAINT "fk_OrganisationBankAccount_Organisation";
ALTER TABLE ONLY public."OrganisationArtefact" DROP CONSTRAINT "fk_OrganisationArtefact_Organisation";
ALTER TABLE ONLY public."OrganisationArtefact" DROP CONSTRAINT "fk_OrganisationArtefact_Artefact";
ALTER TABLE ONLY public."OrganisationAccountingPeriod" DROP CONSTRAINT "fk_OrganisationAccountingPeriod_GlobalAccountingPeriod";
ALTER TABLE ONLY public."TransactionOrderItem" DROP CONSTRAINT "fk_OrderItem_Order";
ALTER TABLE ONLY public."Notification" DROP CONSTRAINT "fk_Notification_NotificationConstruct";
ALTER TABLE ONLY public."NotificationRecipient" DROP CONSTRAINT "fk_NotificationRecipient_UserAccountOrganisation";
ALTER TABLE ONLY public."NotificationRecipient" DROP CONSTRAINT "fk_NotificationRecipient_Notification";
ALTER TABLE ONLY public."NotificationRecipientLog" DROP CONSTRAINT "fk_NotificationRecipientLog_NotificationRecipient";
ALTER TABLE ONLY public."NotificationConstruct" DROP CONSTRAINT "fk_NotificationConstruct_NotificationConstructTemplate";
ALTER TABLE ONLY public."NotificationConstructTemplate" DROP CONSTRAINT "fk_NotificationConstructTemplate_Organisation";
ALTER TABLE ONLY public."NotificationConstructTarget" DROP CONSTRAINT "fk_NotificationConstructTarget_UserType";
ALTER TABLE ONLY public."NotificationConstructTarget" DROP CONSTRAINT "fk_NotificationConstructTarget_OrganisationType";
ALTER TABLE ONLY public."NotificationConstructTarget" DROP CONSTRAINT "fk_NotificationConstructTarget_NotificationConstruct";
ALTER TABLE ONLY public."NotificationConstructTargetTemplate" DROP CONSTRAINT "fk_NotificationConstructTargetTemplate_UserType";
ALTER TABLE ONLY public."NotificationConstructTargetTemplate" DROP CONSTRAINT "fk_NotificationConstructTargetTemplate_OrganisationType";
ALTER TABLE ONLY public."NotificationConstructTargetTemplate" DROP CONSTRAINT "fk_NotificationConstructTargetTemplate_NotificationConstructTem";
ALTER TABLE ONLY public."NotificationConstructRole" DROP CONSTRAINT "fk_NotificationConstructRole_NotificationConstruct";
ALTER TABLE ONLY public."NotificationConstructRoleTemplate" DROP CONSTRAINT "fk_NotificationConstructRoleTemplate_NotificationConstructTempl";
ALTER TABLE ONLY public."NotificationConstructClaim" DROP CONSTRAINT "fk_NotificationConstructRoleClaim_StateItem";
ALTER TABLE ONLY public."NotificationConstructClaim" DROP CONSTRAINT "fk_NotificationConstructRoleClaim_State";
ALTER TABLE ONLY public."NotificationConstructClaim" DROP CONSTRAINT "fk_NotificationConstructRoleClaim_Resource";
ALTER TABLE ONLY public."NotificationConstructClaim" DROP CONSTRAINT "fk_NotificationConstructRoleClaim_Operation";
ALTER TABLE ONLY public."NotificationConstructClaim" DROP CONSTRAINT "fk_NotificationConstructRoleClaim_NotificationConstructRole";
ALTER TABLE ONLY public."NotificationConstructClaimTemplate" DROP CONSTRAINT "fk_NotificationConstructRoleClaimTemplate_StateItem";
ALTER TABLE ONLY public."NotificationConstructClaimTemplate" DROP CONSTRAINT "fk_NotificationConstructRoleClaimTemplate_State";
ALTER TABLE ONLY public."NotificationConstructClaimTemplate" DROP CONSTRAINT "fk_NotificationConstructRoleClaimTemplate_Resource";
ALTER TABLE ONLY public."NotificationConstructClaimTemplate" DROP CONSTRAINT "fk_NotificationConstructRoleClaimTemplate_Operation";
ALTER TABLE ONLY public."NotificationConstructParameter" DROP CONSTRAINT "fk_NotificationConstructParameter_NotificationConstruct";
ALTER TABLE ONLY public."NotificationConstructParameterTemplate" DROP CONSTRAINT "fk_NotificationConstructParameterTemplate_NotificationConstruct";
ALTER TABLE ONLY public."NotificationConstructGroupNotificationConstruct" DROP CONSTRAINT "fk_NotificationConstructGroupNotificationConstruct_Notification";
ALTER TABLE ONLY public."NotificationConstructGroupNotificationConstructTemplate" DROP CONSTRAINT "fk_NotificationConstructGroupNotificationConstructTemplate_Noti";
ALTER TABLE ONLY public."NotificationConstructData" DROP CONSTRAINT "fk_NotificationConstructData_NotificationConstruct";
ALTER TABLE ONLY public."NotificationConstructDataTemplate" DROP CONSTRAINT "fk_NotificationConstructDataTemplate_NotificationConstructTempl";
ALTER TABLE ONLY public."NotificationConstructClaim" DROP CONSTRAINT "fk_NotificationConstructClaim_Role";
ALTER TABLE ONLY public."NotificationConstructClaim" DROP CONSTRAINT "fk_NotificationConstructClaim_NotificationConstruct";
ALTER TABLE ONLY public."NotificationConstructClaimTemplate" DROP CONSTRAINT "fk_NotificationConstructClaimTemplate_NotificationConstructTemp";
ALTER TABLE ONLY public."NotificationConstructClaimTemplate" DROP CONSTRAINT "fk_NotificationConstificaoleTemplate";
ALTER TABLE ONLY public."ModuleWorkflow" DROP CONSTRAINT "fk_ModuleWorkflow_Workflow";
ALTER TABLE ONLY public."ModuleWorkflow" DROP CONSTRAINT "fk_ModuleWorkflow_Module";
ALTER TABLE ONLY public."ModuleWorkflowTemplate" DROP CONSTRAINT "fk_ModuleWorkflowTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."ModuleWorkflowTemplate" DROP CONSTRAINT "fk_ModuleWorkflowTemplate_ModuleTemplate";
ALTER TABLE ONLY public."ModuleWorkflowTargetTemplate" DROP CONSTRAINT "fk_ModuleWorkflowTarget_ModuleWorkflowTemplate";
ALTER TABLE ONLY public."ModuleWorkflowTarget" DROP CONSTRAINT "fk_ModuleWorkflowTarget_ModuleWorkflow";
ALTER TABLE ONLY public."ModuleSubscription" DROP CONSTRAINT "fk_ModuleSubscription_PlanSubscription";
ALTER TABLE ONLY public."ModuleSubscription" DROP CONSTRAINT "fk_ModuleSubscription_Module";
ALTER TABLE ONLY public."ModuleSubscriptionTemplate" DROP CONSTRAINT "fk_ModuleSubscriptionTemplate_ModuleTemplate";
ALTER TABLE ONLY public."ModuleStatusType" DROP CONSTRAINT "fk_ModuleStatusType_StatusType";
ALTER TABLE ONLY public."ModuleStatusType" DROP CONSTRAINT "fk_ModuleStatusType_Module";
ALTER TABLE ONLY public."ModuleStatusTypeTemplate" DROP CONSTRAINT "fk_ModuleStatusTypeTemplate_StatusTypeTemplate";
ALTER TABLE ONLY public."ModuleStatusTypeTemplate" DROP CONSTRAINT "fk_ModuleStatusTypeTemplate_ModuleTemplate";
ALTER TABLE ONLY public."ModuleSetting" DROP CONSTRAINT "fk_ModuleSetting_Module";
ALTER TABLE ONLY public."ModuleSettingTemplate" DROP CONSTRAINT "fk_ModuleSettingTemplate_ModuleTemplate";
ALTER TABLE ONLY public."ModuleRoleTemplate" DROP CONSTRAINT "fk_ModuleRoleTemplate_ModuleTemplate";
ALTER TABLE ONLY public."ModuleClaim" DROP CONSTRAINT "fk_ModuleRoleClaim_StateItem";
ALTER TABLE ONLY public."ModuleClaim" DROP CONSTRAINT "fk_ModuleRoleClaim_State";
ALTER TABLE ONLY public."ModuleClaim" DROP CONSTRAINT "fk_ModuleRoleClaim_Resource";
ALTER TABLE ONLY public."ModuleClaim" DROP CONSTRAINT "fk_ModuleRoleClaim_Operation";
ALTER TABLE ONLY public."ModuleClaim" DROP CONSTRAINT "fk_ModuleRoleClaim_Module";
ALTER TABLE ONLY public."ModuleClaimTemplate" DROP CONSTRAINT "fk_ModuleRoleClaimTemplate_StateItem";
ALTER TABLE ONLY public."ModuleClaimTemplate" DROP CONSTRAINT "fk_ModuleRoleClaimTemplate_State";
ALTER TABLE ONLY public."ModuleClaimTemplate" DROP CONSTRAINT "fk_ModuleRoleClaimTemplate_Resource";
ALTER TABLE ONLY public."ModuleClaimTemplate" DROP CONSTRAINT "fk_ModuleRoleClaimTemplate_Operation";
ALTER TABLE ONLY public."ModuleClaimTemplate" DROP CONSTRAINT "fk_ModuleRoleClaimTemplate_ModuleTemplate";
ALTER TABLE ONLY public."ModuleProduct" DROP CONSTRAINT "fk_ModuleProduct_Product";
ALTER TABLE ONLY public."ModuleProduct" DROP CONSTRAINT "fk_ModuleProduct_Module";
ALTER TABLE ONLY public."ModuleProductTemplate" DROP CONSTRAINT "fk_ModuleProductTemplate_ProductTemplate";
ALTER TABLE ONLY public."ModuleProductTemplate" DROP CONSTRAINT "fk_ModuleProductTemplate_ModuleTemplate";
ALTER TABLE ONLY public."ModulePlugin" DROP CONSTRAINT "fk_ModulePlugin_Module";
ALTER TABLE ONLY public."ModulePluginTemplate" DROP CONSTRAINT "fk_ModulePluginTemplate_PluginTemplate";
ALTER TABLE ONLY public."ModulePluginTemplate" DROP CONSTRAINT "fk_ModulePluginTemplate_ModuleTemplate";
ALTER TABLE ONLY public."ModuleNotificationConstruct" DROP CONSTRAINT "fk_ModuleNotificationConstruct_NotificationConstruct";
ALTER TABLE ONLY public."ModuleNotificationConstruct" DROP CONSTRAINT "fk_ModuleNotificationConstruct_Module";
ALTER TABLE ONLY public."ModuleNotificationConstructTemplate" DROP CONSTRAINT "fk_ModuleNotificationConstructTemplate_NotificationConstructTem";
ALTER TABLE ONLY public."ModuleNotificationConstructTemplate" DROP CONSTRAINT "fk_ModuleNotificationConstructTemplate_ModuleTemplate";
ALTER TABLE ONLY public."ModuleDependency" DROP CONSTRAINT "fk_ModuleDependency_Module";
ALTER TABLE ONLY public."ModuleDependencyTemplate" DROP CONSTRAINT "fk_ModuleDependencyTemplate_ModuleTemplate";
ALTER TABLE ONLY public."ModuleClaim" DROP CONSTRAINT "fk_ModuleClaim_Role";
ALTER TABLE ONLY public."ModuleClaim" DROP CONSTRAINT "fk_ModuleClaim_ModuleRole";
ALTER TABLE ONLY public."NotificationConstructClaimTemplate" DROP CONSTRAINT "fk_ModuleClaim_ModuleRole";
ALTER TABLE ONLY public."ModuleClaimTemplate" DROP CONSTRAINT "fk_ModuleClaimTemplate_Role";
ALTER TABLE ONLY public."ModuleClaimTemplate" DROP CONSTRAINT "fk_ModuleClaimTemplate_ModuleRoleTemplate";
ALTER TABLE ONLY public."ModuleArtefact" DROP CONSTRAINT "fk_ModuleArtefact_Module";
ALTER TABLE ONLY public."ModuleArtefact" DROP CONSTRAINT "fk_ModuleArtefact_Artefact";
ALTER TABLE ONLY public."ModuleArtefactTemplate" DROP CONSTRAINT "fk_ModuleArtefactTemplate_ModuleTemplate";
ALTER TABLE ONLY public."ModuleArtefactTemplate" DROP CONSTRAINT "fk_ModuleArtefactTemplate_ArtefactTemplate";
ALTER TABLE ONLY public."ModuleDependency" DROP CONSTRAINT "fk_Module333Dependency_Module";
ALTER TABLE ONLY public."OrganisationLedgerAccount" DROP CONSTRAINT "fk_LedgerAccount_Organisation";
ALTER TABLE ONLY public."LedgerAccountTransaction" DROP CONSTRAINT "fk_LedgerAccountTransaction_TransactionOrder";
ALTER TABLE ONLY public."LedgerAccountTransaction" DROP CONSTRAINT "fk_LedgerAccountTransaction_LedgerAccount";
ALTER TABLE ONLY public."LedgerAccountBalance" DROP CONSTRAINT "fk_LedgerAccountBalance_LedgerAccount";
ALTER TABLE ONLY public."Invoice" DROP CONSTRAINT "fk_Invoice_UserAccountOrganisation";
ALTER TABLE ONLY public."Invoice" DROP CONSTRAINT "fk_Invoice_ShoppingCart";
ALTER TABLE ONLY public."Invoice" DROP CONSTRAINT "fk_Invoice_OrganisationAccountingPeriod";
ALTER TABLE ONLY public."Invoice" DROP CONSTRAINT "fk_Invoice_Organisation";
ALTER TABLE ONLY public."Invoice" DROP CONSTRAINT "fk_Invoice_CountryCode";
ALTER TABLE ONLY public."InvoiceProcessLog" DROP CONSTRAINT "fk_InvoiceProcessLog_StatusTypeValue";
ALTER TABLE ONLY public."InvoiceProcessLog" DROP CONSTRAINT "fk_InvoiceProcessLog_StatusType";
ALTER TABLE ONLY public."InvoiceProcessLog" DROP CONSTRAINT "fk_InvoiceLog_Notification";
ALTER TABLE ONLY public."InvoiceProcessLog" DROP CONSTRAINT "fk_InvoiceLog_Invoice";
ALTER TABLE ONLY public."InvoiceLineItem" DROP CONSTRAINT "fk_InvoiceLineItem_Product";
ALTER TABLE ONLY public."InvoiceLineItem" DROP CONSTRAINT "fk_InvoiceLineItem_PlanSubscriptionPeriod";
ALTER TABLE ONLY public."InvoiceLineItem" DROP CONSTRAINT "fk_InvoiceLineItem_Invoice";
ALTER TABLE ONLY public."InvoiceLineItem" DROP CONSTRAINT "fk_InvoiceLineItem_CountryCode";
ALTER TABLE ONLY public."InvoiceLineItem" DROP CONSTRAINT "fk_InvoiceLineItem_Account";
ALTER TABLE ONLY public."InterfacePanel" DROP CONSTRAINT "fk_InterfacePanel_InterfacePanelTemplate";
ALTER TABLE ONLY public."InterfacePanel" DROP CONSTRAINT "fk_InterfacePanel_InterfacePanel";
ALTER TABLE ONLY public."InterfacePanelTemplate" DROP CONSTRAINT "fk_InterfacePanelTemplate_InterfacePanelTemplate";
ALTER TABLE ONLY public."InterfacePanelSetting" DROP CONSTRAINT "fk_InterfacePanelSetting_InterfacePanel";
ALTER TABLE ONLY public."InterfacePanelSettingTemplate" DROP CONSTRAINT "fk_InterfacePanelSettingTemplate_InterfacePanelTemplate";
ALTER TABLE ONLY public."InterfacePanelRole" DROP CONSTRAINT "fk_InterfacePanelRole_InterfacePanel";
ALTER TABLE ONLY public."InterfacePanelRoleTemplate" DROP CONSTRAINT "fk_InterfacePanelRoleTemplate_InterfacePanelTemplate";
ALTER TABLE ONLY public."InterfacePanelClaim" DROP CONSTRAINT "fk_InterfacePanelRoleClaim_StateItem";
ALTER TABLE ONLY public."InterfacePanelClaim" DROP CONSTRAINT "fk_InterfacePanelRoleClaim_State";
ALTER TABLE ONLY public."InterfacePanelClaim" DROP CONSTRAINT "fk_InterfacePanelRoleClaim_Resource";
ALTER TABLE ONLY public."InterfacePanelClaim" DROP CONSTRAINT "fk_InterfacePanelRoleClaim_Operation";
ALTER TABLE ONLY public."InterfacePanelClaim" DROP CONSTRAINT "fk_InterfacePanelRoleClaim_InterfacePanel";
ALTER TABLE ONLY public."InterfacePanelClaimTemplate" DROP CONSTRAINT "fk_InterfacePanelRoleClaimTemplate_StateItem";
ALTER TABLE ONLY public."InterfacePanelClaimTemplate" DROP CONSTRAINT "fk_InterfacePanelRoleClaimTemplate_State";
ALTER TABLE ONLY public."InterfacePanelClaimTemplate" DROP CONSTRAINT "fk_InterfacePanelRoleClaimTemplate_Resource";
ALTER TABLE ONLY public."InterfacePanelClaimTemplate" DROP CONSTRAINT "fk_InterfacePanelRoleClaimTemplate_Operation";
ALTER TABLE ONLY public."InterfacePanelClaimTemplate" DROP CONSTRAINT "fk_InterfacePanelRoleClaimTemplate_InterfacePanelTemplate";
ALTER TABLE ONLY public."InterfacePanelOrganisationType" DROP CONSTRAINT "fk_InterfacePanelOrganisationType_OrganisationType";
ALTER TABLE ONLY public."InterfacePanelOrganisationType" DROP CONSTRAINT "fk_InterfacePanelOrganisationType_InterfacePanel";
ALTER TABLE ONLY public."InterfacePanelOrganisationTypeTemplate" DROP CONSTRAINT "fk_InterfacePanelOrganisationTypeTemplate_OrganisationType";
ALTER TABLE ONLY public."InterfacePanelOrganisationTypeTemplate" DROP CONSTRAINT "fk_InterfacePanelOrganisationTypeTemplate_InterfacePanelTemplat";
ALTER TABLE ONLY public."InterfacePanelOrganisationTypeUserType" DROP CONSTRAINT "fk_InterfacePanelOrgaUserTypeonType_InterfacePanelTemplat";
ALTER TABLE ONLY public."InterfacePanelOrganisationTypeUserTypeTemplate" DROP CONSTRAINT "fk_InterfacePanelOrgaUserTypeonTypeTemplate_InterfacePanelTempl";
ALTER TABLE ONLY public."InterfacePanelOrganisationTypeUserType" DROP CONSTRAINT "fk_InterfacePanelOrUserType_OrganisationType";
ALTER TABLE ONLY public."InterfacePanelOrganisationTypeUserTypeTemplate" DROP CONSTRAINT "fk_InterfacePanelOrUserTypeTemplate_OrganisationType";
ALTER TABLE ONLY public."InterfacePanelFieldDetail" DROP CONSTRAINT "fk_InterfacePanelFieldDetailSetting_InterfacePanelTempl";
ALTER TABLE ONLY public."InterfacePanelFieldDetail" DROP CONSTRAINT "fk_InterfacePanelFieldDetailSetting_FieldDetail";
ALTER TABLE ONLY public."InterfacePanelFieldDetailTemplate" DROP CONSTRAINT "fk_InterfacePanelFieldDetailSettingTemplate_InterfacePanelTempl";
ALTER TABLE ONLY public."InterfacePanelFieldDetailTemplate" DROP CONSTRAINT "fk_InterfacePanelFieldDetailSettingTemplate_FieldDetailTemplate";
ALTER TABLE ONLY public."InterfacePanelFieldDetailOrganisationType" DROP CONSTRAINT "fk_InterfacePanelFieldDetailOrganaisationType_Organisat";
ALTER TABLE ONLY public."InterfacePanelFieldDetailOrganisationType" DROP CONSTRAINT "fk_InterfacePanelFieldDetailOrganaisationType_Interface";
ALTER TABLE ONLY public."InterfacePanelFieldDetailOrganisationType" DROP CONSTRAINT "fk_InterfacePanelFieldDetailOrganaisationType_FieldDeta";
ALTER TABLE ONLY public."InterfacePanelFieldDetailOrganisationTypeTemplate" DROP CONSTRAINT "fk_InterfacePanelFieldDetailOrganaisationTypeTemplate_Organisat";
ALTER TABLE ONLY public."InterfacePanelFieldDetailOrganisationTypeTemplate" DROP CONSTRAINT "fk_InterfacePanelFieldDetailOrganaisationTypeTemplate_Interface";
ALTER TABLE ONLY public."InterfacePanelFieldDetailOrganisationTypeTemplate" DROP CONSTRAINT "fk_InterfacePanelFieldDetailOrganaisationTypeTemplate_FieldDeta";
ALTER TABLE ONLY public."InterfacePanelFDOrganisationTypeUserType" DROP CONSTRAINT "fk_InterfacePanelFieldDetailOrganai123123ate_Organisat";
ALTER TABLE ONLY public."InterfacePanelFDOrganisationTypeUserTypeTemplate" DROP CONSTRAINT "fk_InterfacePanelFieldDetailOrganai123123ate_Organisat";
ALTER TABLE ONLY public."InterfacePanelFDOrganisationTypeUserType" DROP CONSTRAINT "fk_InterfacePanelFieldDetailOr31sationType_Interface";
ALTER TABLE ONLY public."InterfacePanelFDOrganisationTypeUserTypeTemplate" DROP CONSTRAINT "fk_InterfacePanelFieldDetailOr31sationTypeTemplate_Interface";
ALTER TABLE ONLY public."InterfacePanelFDOrganisationTypeUserType" DROP CONSTRAINT "fk_InterfacePanelFieldDetail312naisationType_Organisat";
ALTER TABLE ONLY public."InterfacePanelFDOrganisationTypeUserTypeTemplate" DROP CONSTRAINT "fk_InterfacePanelFieldDetail312naisationTypeTemplate_Organisat";
ALTER TABLE ONLY public."InterfacePanelFDOrganisationTypeUserType" DROP CONSTRAINT "fk_InterfacePanelFieldDetail132ganaisationType_FieldDeta";
ALTER TABLE ONLY public."InterfacePanelFDOrganisationTypeUserTypeTemplate" DROP CONSTRAINT "fk_InterfacePanelFieldDetail132ganaisationTypeTemplate_FieldDet";
ALTER TABLE ONLY public."InterfacePanelClaim" DROP CONSTRAINT "fk_InterfacePanelClaim_InterfacePanelRole";
ALTER TABLE ONLY public."InterfacePanelClaimTemplate" DROP CONSTRAINT "fk_InterfacePanelClaimTemplate_InterfacePanelRoleTemplate";
ALTER TABLE ONLY public."InterfacePanelClaimTemplate" DROP CONSTRAINT "fk_InterfacePanelClaimTemplate1_Role";
ALTER TABLE ONLY public."InterfacePanelClaim" DROP CONSTRAINT "fk_InterfacePanelClaim1_Role";
ALTER TABLE ONLY public."InterfacePanelOrganisationTypeUserType" DROP CONSTRAINT "fk_InterfacePaUserTypeUserTypeype_OrganisationType";
ALTER TABLE ONLY public."InterfacePanelOrganisationTypeUserTypeTemplate" DROP CONSTRAINT "fk_InterfacePaUserTypeUserTypeypeTemplate_OrganisationType";
ALTER TABLE ONLY public."OrganisationGroup" DROP CONSTRAINT "fk_Group_Organisation";
ALTER TABLE ONLY public."GlobalPaymentMethod" DROP CONSTRAINT "fk_GlobalPaymentMethod_DirectDebitMandate";
ALTER TABLE ONLY public."FieldDetail" DROP CONSTRAINT "fk_FieldDetail_FieldDetailTemplate";
ALTER TABLE ONLY public."Discount" DROP CONSTRAINT "fk_Discount_UserType";
ALTER TABLE ONLY public."Discount" DROP CONSTRAINT "fk_Discount_OrganisationType";
ALTER TABLE ONLY public."Discount" DROP CONSTRAINT "fk_Discount_Organisation";
ALTER TABLE ONLY public."DiscountTemplate" DROP CONSTRAINT "fk_DiscountTemplate_UserType";
ALTER TABLE ONLY public."DiscountTemplate" DROP CONSTRAINT "fk_DiscountTemplate_OrganisationType";
ALTER TABLE ONLY public."DiscountRelatedProduct" DROP CONSTRAINT "fk_DiscountRelatedProduct_Product";
ALTER TABLE ONLY public."DiscountRelatedProduct" DROP CONSTRAINT "fk_DiscountRelatedProduct_Discount";
ALTER TABLE ONLY public."DiscountRelatedProductTemplate" DROP CONSTRAINT "fk_DiscountRelatedProductTemplate_ProductTemplate";
ALTER TABLE ONLY public."DiscountRelatedProductTemplate" DROP CONSTRAINT "fk_DiscountRelatedProductTemplate_DiscountTemplate";
ALTER TABLE ONLY public."DiscountComponentTier" DROP CONSTRAINT "fk_DiscountComponentTier_Discount";
ALTER TABLE ONLY public."DiscountComponentTier" DROP CONSTRAINT "fk_DiscountComponentTier_ComponentTier";
ALTER TABLE ONLY public."DiscountComponentTierTemplate" DROP CONSTRAINT "fk_DiscountComponentTierTemplate_DiscountTemplate";
ALTER TABLE ONLY public."DiscountComponentTierTemplate" DROP CONSTRAINT "fk_DiscountComponentTierTemplate_ComponentTierTemplate";
ALTER TABLE ONLY public."DirectDebitMandate" DROP CONSTRAINT "fk_DirectDebitMandate_DirectDebitMandateTemplate";
ALTER TABLE ONLY public."DefaultOrganisationNotificationConstructTemplate" DROP CONSTRAINT "fk_DefaultOrgationNotificationConstruct_DefaultOrganisationT";
ALTER TABLE ONLY public."DefaultOrganisation" DROP CONSTRAINT "fk_DefaultOrganisation_OrganisationType";
ALTER TABLE ONLY public."DefaultOrganisation" DROP CONSTRAINT "fk_DefaultOrganisation_DefaultOrganisationTemplate";
ALTER TABLE ONLY public."DefaultOrganisationWorkflowTemplate" DROP CONSTRAINT "fk_DefaultOrganisationWorkflows_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationWorkflowTemplate" DROP CONSTRAINT "fk_DefaultOrganisationWorkflow_WorkflowT";
ALTER TABLE ONLY public."DefaultOrganisationWorkflow" DROP CONSTRAINT "fk_DefaultOrganisationWorkflow_Workflow";
ALTER TABLE ONLY public."DefaultOrganisationWorkflow" DROP CONSTRAINT "fk_DefaultOrganisationWorkflow_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationUserType" DROP CONSTRAINT "fk_DefaultOrganisationUserType_UserType";
ALTER TABLE ONLY public."DefaultOrganisationUserType" DROP CONSTRAINT "fk_DefaultOrganisationUserType_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationUserTypeTemplate" DROP CONSTRAINT "fk_DefaultOrganisationUserTypeTemplate_UserType";
ALTER TABLE ONLY public."DefaultOrganisationUserTypeTemplate" DROP CONSTRAINT "fk_DefaultOrganisationUserTypeTemplate_DefaultOrganisationTempl";
ALTER TABLE ONLY public."DefaultOrganisationUserTarget" DROP CONSTRAINT "fk_DefaultOrganisationUserTarget_UserType";
ALTER TABLE ONLY public."DefaultOrganisationUserTarget" DROP CONSTRAINT "fk_DefaultOrganisationUserTarget_DefaultOrganisationStatusType";
ALTER TABLE ONLY public."DefaultOrganisationUserTarget" DROP CONSTRAINT "fk_DefaultOrganisationUserTarget_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationUserTargetTemplate" DROP CONSTRAINT "fk_DefaultOrganisationUserTargetTemplate_UserType";
ALTER TABLE ONLY public."DefaultOrganisationUserTargetTemplate" DROP CONSTRAINT "fk_DefaultOrganisationUserTargetTemplate_DefaultOrganisationTem";
ALTER TABLE ONLY public."DefaultOrganisationUserTargetTemplate" DROP CONSTRAINT "fk_DefaultOrganisationUserTargetTemplate_DefaultOrganisationSta";
ALTER TABLE ONLY public."DefaultOrganisationTemplate" DROP CONSTRAINT "fk_DefaultOrganisationTemplate_OrganisationType";
ALTER TABLE ONLY public."DefaultOrganisationTarget" DROP CONSTRAINT "fk_DefaultOrganisationTarget_OrganisationType";
ALTER TABLE ONLY public."DefaultOrganisationTarget" DROP CONSTRAINT "fk_DefaultOrganisationTarget_DefaultOrganisationStatusType";
ALTER TABLE ONLY public."DefaultOrganisationTarget" DROP CONSTRAINT "fk_DefaultOrganisationTarget_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationTargetTemplate" DROP CONSTRAINT "fk_DefaultOrganisationTargetTemplate_OrganisationType";
ALTER TABLE ONLY public."DefaultOrganisationTargetTemplate" DROP CONSTRAINT "fk_DefaultOrganisationTargetTemplate_DefaultOrganisationTemplat";
ALTER TABLE ONLY public."DefaultOrganisationTargetTemplate" DROP CONSTRAINT "fk_DefaultOrganisationTargetTemplate_DefaultOrganisationStatusT";
ALTER TABLE ONLY public."DefaultOrganisationStatusType" DROP CONSTRAINT "fk_DefaultOrganisationStatusType_StatusTypeValue";
ALTER TABLE ONLY public."DefaultOrganisationStatusTypeTemplate" DROP CONSTRAINT "fk_DefaultOrganisationStatusType_StatusTypeT";
ALTER TABLE ONLY public."DefaultOrganisationStatusType" DROP CONSTRAINT "fk_DefaultOrganisationStatusType_StatusType";
ALTER TABLE ONLY public."DefaultOrganisationStatusType" DROP CONSTRAINT "fk_DefaultOrganisationStatusType_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationStatusTypeTemplate" DROP CONSTRAINT "fk_DefaultOrganisationStatusTypeTemplate_StatusTypeValueTemplat";
ALTER TABLE ONLY public."DefaultOrganisationStatusTypeTemplate" DROP CONSTRAINT "fk_DefaultOrganisationStatusTypeTemplate_DefaultOrganisationTem";
ALTER TABLE ONLY public."DefaultOrganisationShoppingCartBlueprint" DROP CONSTRAINT "fk_DefaultOrganisationShoppingCartProduct_ShoppingCartP";
ALTER TABLE ONLY public."DefaultOrganisationShoppingCartBlueprint" DROP CONSTRAINT "fk_DefaultOrganisationShoppingCartProduct_DefaultOrgani";
ALTER TABLE ONLY public."DefaultOrganisationShoppingCartBlueprintTemplate" DROP CONSTRAINT "fk_DefaultOrganisationShoppingCartProductTemplate_ShoppingCartP";
ALTER TABLE ONLY public."DefaultOrganisationShoppingCartBlueprintTemplate" DROP CONSTRAINT "fk_DefaultOrganisationShoppingCartProductTemplate_DefaultOrgani";
ALTER TABLE ONLY public."DefaultOrganisationRoleTemplate" DROP CONSTRAINT "fk_DefaultOrganisationRole_RoleT";
ALTER TABLE ONLY public."DefaultOrganisationRole" DROP CONSTRAINT "fk_DefaultOrganisationRole_Role";
ALTER TABLE ONLY public."DefaultOrganisationRoleTemplate" DROP CONSTRAINT "fk_DefaultOrganisationRole_DefaultOrganisationT";
ALTER TABLE ONLY public."DefaultOrganisationRole" DROP CONSTRAINT "fk_DefaultOrganisationRole_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationRoleTarget" DROP CONSTRAINT "fk_DefaultOrganisationRoleTarget_DefaultOrganisationUserTarget";
ALTER TABLE ONLY public."DefaultOrganisationRoleTargetTemplate" DROP CONSTRAINT "fk_DefaultOrganisationRoleTarget_DefaultOrganisationT";
ALTER TABLE ONLY public."DefaultOrganisationRoleTarget" DROP CONSTRAINT "fk_DefaultOrganisationRoleTarget_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationRoleTargetTemplate" DROP CONSTRAINT "fk_DefaultOrganisationRoleTargetTemplate_DefaultOrganisationUse";
ALTER TABLE ONLY public."DefaultOrganisationRoleClaimTemplate" DROP CONSTRAINT "fk_DefaultOrganisationRoleClaim_StateT";
ALTER TABLE ONLY public."DefaultOrganisationRoleClaimTemplate" DROP CONSTRAINT "fk_DefaultOrganisationRoleClaim_StateItemT";
ALTER TABLE ONLY public."DefaultOrganisationRoleClaim" DROP CONSTRAINT "fk_DefaultOrganisationRoleClaim_StateItem";
ALTER TABLE ONLY public."DefaultOrganisationRoleClaim" DROP CONSTRAINT "fk_DefaultOrganisationRoleClaim_State";
ALTER TABLE ONLY public."DefaultOrganisationRoleClaimTemplate" DROP CONSTRAINT "fk_DefaultOrganisationRoleClaim_ResourceT";
ALTER TABLE ONLY public."DefaultOrganisationRoleClaim" DROP CONSTRAINT "fk_DefaultOrganisationRoleClaim_Resource";
ALTER TABLE ONLY public."DefaultOrganisationRoleClaimTemplate" DROP CONSTRAINT "fk_DefaultOrganisationRoleClaim_OperationT";
ALTER TABLE ONLY public."DefaultOrganisationRoleClaim" DROP CONSTRAINT "fk_DefaultOrganisationRoleClaim_Operation";
ALTER TABLE ONLY public."DefaultOrganisationRoleClaimTemplate" DROP CONSTRAINT "fk_DefaultOrganisationRoleClaim_DefaultOrganisationRoleT";
ALTER TABLE ONLY public."DefaultOrganisationRoleClaim" DROP CONSTRAINT "fk_DefaultOrganisationRoleClaim_DefaultOrganisationRole";
ALTER TABLE ONLY public."DefaultOrganisationProduct" DROP CONSTRAINT "fk_DefaultOrganisationProduct_Product";
ALTER TABLE ONLY public."DefaultOrganisationProduct" DROP CONSTRAINT "fk_DefaultOrganisationProduct_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationProductTemplate" DROP CONSTRAINT "fk_DefaultOrganisationProductTemplate_ProductTemplate";
ALTER TABLE ONLY public."DefaultOrganisationProductTemplate" DROP CONSTRAINT "fk_DefaultOrganisationProductTemplate_DefaultOrganisationTempla";
ALTER TABLE ONLY public."DefaultOrganisationPaymentMethod" DROP CONSTRAINT "fk_DefaultOrganisationPaymentMethod_GlobalPaymentMethod";
ALTER TABLE ONLY public."DefaultOrganisationPaymentMethod" DROP CONSTRAINT "fk_DefaultOrganisationPaymentMethod_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationPaymentMethodTemplate" DROP CONSTRAINT "fk_DefaultOrganisationPaymentMethodTemplate_GlobalPaymentMethod";
ALTER TABLE ONLY public."DefaultOrganisationPaymentMethodTemplate" DROP CONSTRAINT "fk_DefaultOrganisationPaymentMethodTemplate_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationNotificationConstruct" DROP CONSTRAINT "fk_DefaultOrganisationNotificationConstruct_NotificationConstru";
ALTER TABLE ONLY public."DefaultOrganisationNotificationConstruct" DROP CONSTRAINT "fk_DefaultOrganisationNotificationConstruct_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationNotificationConstructTemplate" DROP CONSTRAINT "fk_DefaultOrganisationNotificationConstructTemplate_Notificatio";
ALTER TABLE ONLY public."DefaultOrganisationModuleTemplate" DROP CONSTRAINT "fk_DefaultOrganisationModule_ModuleT";
ALTER TABLE ONLY public."DefaultOrganisationModule" DROP CONSTRAINT "fk_DefaultOrganisationModule_Module";
ALTER TABLE ONLY public."DefaultOrganisationModule" DROP CONSTRAINT "fk_DefaultOrganisationModule_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationModuleTemplate" DROP CONSTRAINT "fk_DefaultOrganisationModule_DefaulanisationT";
ALTER TABLE ONLY public."DefaultOrganisationLedger" DROP CONSTRAINT "fk_DefaultOrganisationLedger_DefaultOrganisationTemplat";
ALTER TABLE ONLY public."DefaultOrganisationLedgerTemplate" DROP CONSTRAINT "fk_DefaultOrganisationLedgerTemplate_DefaultOrganisationTemplat";
ALTER TABLE ONLY public."DefaultOrganisationGroupTemplate" DROP CONSTRAINT "fk_DefaultOrganisationGroup_GroupT";
ALTER TABLE ONLY public."DefaultOrganisationGroup" DROP CONSTRAINT "fk_DefaultOrganisationGroup_Group";
ALTER TABLE ONLY public."DefaultOrganisationGroupTemplate" DROP CONSTRAINT "fk_DefaultOrganisationGroup_DefaultOrganisationT";
ALTER TABLE ONLY public."DefaultOrganisationGroup" DROP CONSTRAINT "fk_DefaultOrganisationGroup_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationGroupTarget" DROP CONSTRAINT "fk_DefaultOrganisationGroupTarget_DefaultOrganisationUserTarget";
ALTER TABLE ONLY public."DefaultOrganisationGroupTarget" DROP CONSTRAINT "fk_DefaultOrganisationGroupTarget_DefaultOrganisationGroup";
ALTER TABLE ONLY public."DefaultOrganisationGroupTargetTemplate" DROP CONSTRAINT "fk_DefaultOrganisationGroupTargetTemplate_DefaultOrganisationUs";
ALTER TABLE ONLY public."DefaultOrganisationGroupTargetTemplate" DROP CONSTRAINT "fk_DefaultOrganisationGroupTargetTemplate_DefaultOrganisationGr";
ALTER TABLE ONLY public."DefaultOrganisationBucketTemplate" DROP CONSTRAINT "fk_DefaultOrganisationBucket_DefaultOrganisationT";
ALTER TABLE ONLY public."DefaultOrganisationBucket" DROP CONSTRAINT "fk_DefaultOrganisationBucket_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationBucketTemplate" DROP CONSTRAINT "fk_DefaultOrganisationBucket_BucketTemplateT";
ALTER TABLE ONLY public."DefaultOrganisationBucket" DROP CONSTRAINT "fk_DefaultOrganisationBucket_BucketTemplate";
ALTER TABLE ONLY public."DefaultOrganisationBranchTemplate" DROP CONSTRAINT "fk_DefaultOrganisationBranch_DefaultOrganisationT";
ALTER TABLE ONLY public."DefaultOrganisationBranch" DROP CONSTRAINT "fk_DefaultOrganisationBranch_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationArtefactTemplate" DROP CONSTRAINT "fk_DefaultOrganisationArtefact_DefaultOrganisationT";
ALTER TABLE ONLY public."DefaultOrganisationArtefact" DROP CONSTRAINT "fk_DefaultOrganisationArtefact_DefaultOrganisation";
ALTER TABLE ONLY public."DefaultOrganisationArtefactTemplate" DROP CONSTRAINT "fk_DefaultOrganisationArtefact_ArtefactT";
ALTER TABLE ONLY public."DefaultOrganisationArtefact" DROP CONSTRAINT "fk_DefaultOrganisationArtefact_Artefact";
ALTER TABLE ONLY public."Deduction" DROP CONSTRAINT "fk_Deduction_UserType";
ALTER TABLE ONLY public."Deduction" DROP CONSTRAINT "fk_Deduction_OrganisationType";
ALTER TABLE ONLY public."Deduction" DROP CONSTRAINT "fk_Deduction_DeductionTemplate";
ALTER TABLE ONLY public."DeductionTemplate" DROP CONSTRAINT "fk_DeductionTemplate_UserType";
ALTER TABLE ONLY public."DeductionTemplate" DROP CONSTRAINT "fk_DeductionTemplate_OrganisationType";
ALTER TABLE ONLY public."DeductionProduct" DROP CONSTRAINT "fk_DeductionProduct_Product";
ALTER TABLE ONLY public."DeductionProduct" DROP CONSTRAINT "fk_DeductionProduct_Deduction";
ALTER TABLE ONLY public."DeductionProductTemplate" DROP CONSTRAINT "fk_DeductionProductTemplate_ProductTemplate";
ALTER TABLE ONLY public."DeductionProductTemplate" DROP CONSTRAINT "fk_DeductionProductTemplate_DeductionTemplate";
ALTER TABLE ONLY public."DeductionComponentTier" DROP CONSTRAINT "fk_DeductionComponentTier_Deduction";
ALTER TABLE ONLY public."DeductionComponentTier" DROP CONSTRAINT "fk_DeductionComponentTier_ComponentTier";
ALTER TABLE ONLY public."DeductionComponentTierTemplate" DROP CONSTRAINT "fk_DeductionComponentTierTemplate_DeductionTemplate";
ALTER TABLE ONLY public."DeductionComponentTierTemplate" DROP CONSTRAINT "fk_DeductionComponentTierTemplate_ComponentTierTemplate";
ALTER TABLE ONLY public."CountryDeduction" DROP CONSTRAINT "fk_CountryDeduction_Deduction";
ALTER TABLE ONLY public."CountryDeduction" DROP CONSTRAINT "fk_CountryDeduction_CountryCode";
ALTER TABLE ONLY public."CountryDeductionTemplate" DROP CONSTRAINT "fk_CountryDeductionTemplate_DeductionTemplate";
ALTER TABLE ONLY public."CountryDeductionTemplate" DROP CONSTRAINT "fk_CountryDeductionTemplate_CountryCode";
ALTER TABLE ONLY public."CountryCode" DROP CONSTRAINT "fk_CountryCode_CurrencyCode";
ALTER TABLE ONLY public."ContactPhone" DROP CONSTRAINT "fk_ContactPhone_CountryCode";
ALTER TABLE ONLY public."ContactPhone" DROP CONSTRAINT "fk_ContactPhone_Contact";
ALTER TABLE ONLY public."ContactRegulator" DROP CONSTRAINT "fk_ContactOrganisationRegulator_Contact";
ALTER TABLE ONLY public."ContactName" DROP CONSTRAINT "fk_ContactName_Contact";
ALTER TABLE ONLY public."ComponentTier" DROP CONSTRAINT "fk_ComponentTier_UserType";
ALTER TABLE ONLY public."ComponentTierTemplate" DROP CONSTRAINT "fk_ComponentTier_UserType";
ALTER TABLE ONLY public."ComponentTier" DROP CONSTRAINT "fk_ComponentTier_OrganisationType";
ALTER TABLE ONLY public."ComponentTierTemplate" DROP CONSTRAINT "fk_ComponentTier_OrganisationType";
ALTER TABLE ONLY public."UserAccountArchive" DROP CONSTRAINT "fk_ClassificationType_ClassificationTypeID";
ALTER TABLE ONLY public."UserAccountArchive" DROP CONSTRAINT "fk_ClassificationTypeCategory_ClassificationTypeCategoryID";
ALTER TABLE ONLY public."ResourceOperationTarget" DROP CONSTRAINT "fk_ClaimTarget_UserType";
ALTER TABLE ONLY public."ResourceOperationTarget" DROP CONSTRAINT "fk_ClaimTarget_Resource";
ALTER TABLE ONLY public."ResourceOperationTarget" DROP CONSTRAINT "fk_ClaimTarget_OrganisationType";
ALTER TABLE ONLY public."ResourceOperationTarget" DROP CONSTRAINT "fk_ClaimTarget_Operation";
ALTER TABLE ONLY public."BusTask" DROP CONSTRAINT "fk_BusTask_BusTaskHandler";
ALTER TABLE ONLY public."BusTaskSchedule" DROP CONSTRAINT "fk_BusTaskSchedule_BusTask";
ALTER TABLE ONLY public."BusTaskScheduleProcessLog" DROP CONSTRAINT "fk_BusTaskScheduleProcessLog_StatusTypeValue";
ALTER TABLE ONLY public."BusTaskScheduleProcessLog" DROP CONSTRAINT "fk_BusTaskScheduleProcessLog_StatusType";
ALTER TABLE ONLY public."BusTaskScheduleProcessLog" DROP CONSTRAINT "fk_BusTaskProcessLog_BusTaskSchedule";
ALTER TABLE ONLY public."BusMessageProcessLog" DROP CONSTRAINT "fk_BusMessageStatus_BusMessage";
ALTER TABLE ONLY public."BusMessageProcessLog" DROP CONSTRAINT "fk_BusMessageProcessLog_StatusTypeValue";
ALTER TABLE ONLY public."BusMessageProcessLog" DROP CONSTRAINT "fk_BusMessageProcessLog_StatusType";
ALTER TABLE ONLY public."BusMessageContent" DROP CONSTRAINT "fk_BusMessageContent_BusMessage";
ALTER TABLE ONLY public."Billing" DROP CONSTRAINT "fk_Billing_BillingTemplate";
ALTER TABLE ONLY public."Attachment" DROP CONSTRAINT "fk_Attachment_AttachmentDetail";
ALTER TABLE ONLY public."AttachmentDetailRole" DROP CONSTRAINT "fk_AttachmentRole_AttachmentDetail";
ALTER TABLE ONLY public."AttachmentDetail" DROP CONSTRAINT "fk_AttachmentDetail_RepositoryStructure";
ALTER TABLE ONLY public."AttachmentDetail" DROP CONSTRAINT "fk_AttachmentDetail_Organisation";
ALTER TABLE ONLY public."AttachmentDetailGroup" DROP CONSTRAINT "fk_AttachmentDetailGroup_OrganisationGroup";
ALTER TABLE ONLY public."AttachmentDetailGroup" DROP CONSTRAINT "fk_AttachmentDetailGroup_AttachmentDetail";
ALTER TABLE ONLY public."AttachmentDetailRole" DROP CONSTRAINT "fk_AttachmenDetailRole_OrganisationRole";
ALTER TABLE ONLY public."ArtefactDependencyTemplate" DROP CONSTRAINT "fk_Artefactlate_ArtefactTemplate";
ALTER TABLE ONLY public."ArtefactDependency" DROP CONSTRAINT "fk_Artefactlate_Artefact";
ALTER TABLE ONLY public."Artefact" DROP CONSTRAINT "fk_Artefact_ArtefactTemplate";
ALTER TABLE ONLY public."ArtefactWorkflow" DROP CONSTRAINT "fk_ArtefactWorkflow_Workflow";
ALTER TABLE ONLY public."ArtefactWorkflow" DROP CONSTRAINT "fk_ArtefactWorkflow_Artefact";
ALTER TABLE ONLY public."ArtefactWorkflowTemplate" DROP CONSTRAINT "fk_ArtefactWorkflowTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."ArtefactWorkflowTemplate" DROP CONSTRAINT "fk_ArtefactWorkflowTemplate_ArtefactTemplate";
ALTER TABLE ONLY public."ArtefactSubscription" DROP CONSTRAINT "fk_ArtefactSubscription_PlanSubscription";
ALTER TABLE ONLY public."ArtefactSubscription" DROP CONSTRAINT "fk_ArtefactSubscription_Artefact";
ALTER TABLE ONLY public."ArtefactSubscriptionTemplate" DROP CONSTRAINT "fk_ArtefactSubscriptionTemplate_ArtefactTemplate";
ALTER TABLE ONLY public."ArtefactStatusType" DROP CONSTRAINT "fk_ArtefactStatusType_StatusType";
ALTER TABLE ONLY public."ArtefactStatusType" DROP CONSTRAINT "fk_ArtefactStatusType_Artefact";
ALTER TABLE ONLY public."ArtefactStatusTypeTemplate" DROP CONSTRAINT "fk_ArtefactStatusTypeTemplate_StatusTypeTemplate";
ALTER TABLE ONLY public."ArtefactStatusTypeTemplate" DROP CONSTRAINT "fk_ArtefactStatusTypeTemplate_ArtefactTemplate";
ALTER TABLE ONLY public."ArtefactRole" DROP CONSTRAINT "fk_ArtefactRole_Artefact";
ALTER TABLE ONLY public."ArtefactRoleTemplate" DROP CONSTRAINT "fk_ArtefactRoleTemplate_ArtefactTemplate";
ALTER TABLE ONLY public."ArtefactProduct" DROP CONSTRAINT "fk_ArtefactProduct_Product";
ALTER TABLE ONLY public."ArtefactProduct" DROP CONSTRAINT "fk_ArtefactProduct_Artefact";
ALTER TABLE ONLY public."ArtefactProductTemplate" DROP CONSTRAINT "fk_ArtefactProductTemplate_ProductTemplate";
ALTER TABLE ONLY public."ArtefactProductTemplate" DROP CONSTRAINT "fk_ArtefactProductTemplate_ArtefactTemplate";
ALTER TABLE ONLY public."ArtefactNotificationConstruct" DROP CONSTRAINT "fk_ArtefactNotification_Artefact";
ALTER TABLE ONLY public."ArtefactNotificationConstructTemplate" DROP CONSTRAINT "fk_ArtefactNotificationTemplate_ArtefactTemplate";
ALTER TABLE ONLY public."ArtefactNotificationConstruct" DROP CONSTRAINT "fk_ArtefactNotificationConstruct_NotificationConstruct";
ALTER TABLE ONLY public."ArtefactNotificationConstructTemplate" DROP CONSTRAINT "fk_ArtefactNotificationConstructTemplate_NotificationConstructT";
ALTER TABLE ONLY public."ArtefactDependencyStatusTypeTemplate" DROP CONSTRAINT "fk_ArtefactDepentefactStatusTypeTemplate";
ALTER TABLE ONLY public."ArtefactDependency" DROP CONSTRAINT "fk_ArtefactDependency_ArtefactDependencyTemplate";
ALTER TABLE ONLY public."ArtefactDependency" DROP CONSTRAINT "fk_ArtefactDependency_Artefact";
ALTER TABLE ONLY public."ArtefactDependencyTemplate" DROP CONSTRAINT "fk_ArtefactDependencyTemplate_ArtefactTemplate";
ALTER TABLE ONLY public."ArtefactDependencyStatusType" DROP CONSTRAINT "fk_ArtefactDependencyStatusType_StatusTypeValue";
ALTER TABLE ONLY public."ArtefactDependencyStatusType" DROP CONSTRAINT "fk_ArtefactDependencyStatusType_ArtefactStatusType";
ALTER TABLE ONLY public."ArtefactDependencyStatusType" DROP CONSTRAINT "fk_ArtefactDependencyStatusType_ArtefactDependency";
ALTER TABLE ONLY public."ArtefactDependencyStatusTypeTemplate" DROP CONSTRAINT "fk_ArtefactDependencyStatusTypeTemplate_StatusTypeValueTemplate";
ALTER TABLE ONLY public."ArtefactDependencyStatusTypeTemplate" DROP CONSTRAINT "fk_ArtefactDepenactDependencyTemplate";
ALTER TABLE ONLY public."ArtefactClaim" DROP CONSTRAINT "fk_ArtefactClaim_StateItem";
ALTER TABLE ONLY public."ArtefactClaim" DROP CONSTRAINT "fk_ArtefactClaim_State";
ALTER TABLE ONLY public."ArtefactClaim" DROP CONSTRAINT "fk_ArtefactClaim_Role";
ALTER TABLE ONLY public."ArtefactClaim" DROP CONSTRAINT "fk_ArtefactClaim_Resource";
ALTER TABLE ONLY public."ArtefactClaim" DROP CONSTRAINT "fk_ArtefactClaim_Operation";
ALTER TABLE ONLY public."ArtefactClaim" DROP CONSTRAINT "fk_ArtefactClaim_ArtefactRole";
ALTER TABLE ONLY public."ArtefactClaim" DROP CONSTRAINT "fk_ArtefactClaim_Artefact";
ALTER TABLE ONLY public."ArtefactClaimTemplate" DROP CONSTRAINT "fk_ArtefactClaimTemplate_StateItem";
ALTER TABLE ONLY public."ArtefactClaimTemplate" DROP CONSTRAINT "fk_ArtefactClaimTemplate_State";
ALTER TABLE ONLY public."ArtefactClaimTemplate" DROP CONSTRAINT "fk_ArtefactClaimTemplate_Role";
ALTER TABLE ONLY public."ArtefactClaimTemplate" DROP CONSTRAINT "fk_ArtefactClaimTemplate_Resource";
ALTER TABLE ONLY public."ArtefactClaimTemplate" DROP CONSTRAINT "fk_ArtefactClaimTemplate_Operation";
ALTER TABLE ONLY public."ArtefactClaimTemplate" DROP CONSTRAINT "fk_ArtefactClaimTemplate_ArtefactTemplate";
ALTER TABLE ONLY public."ArtefactClaimTemplate" DROP CONSTRAINT "fk_ArtefactClaimTemplate_ArtefactRoleTemplate";
ALTER TABLE ONLY public."ApplicationStageWorkflow" DROP CONSTRAINT "fk_ApplicationStageWorkflow_Workflow";
ALTER TABLE ONLY public."ApplicationStageWorkflow" DROP CONSTRAINT "fk_ApplicationStageWorkflow_ApplicationStage";
ALTER TABLE ONLY public."Address" DROP CONSTRAINT "fk_Address_CountryCode";
ALTER TABLE ONLY public."AddressChronology" DROP CONSTRAINT "fk_AddressChronology_Address";
ALTER TABLE ONLY public."ActorClaimRoleMapping" DROP CONSTRAINT "fk_ActorClaim_StateItem";
ALTER TABLE ONLY public."ActorClaimRoleMapping" DROP CONSTRAINT "fk_ActorClaim_State";
ALTER TABLE ONLY public."ActorClaimRoleMapping" DROP CONSTRAINT "fk_ActorClaim_Role";
ALTER TABLE ONLY public."ActorClaimRoleMapping" DROP CONSTRAINT "fk_ActorClaim_Resource";
ALTER TABLE ONLY public."ActorClaimRoleMapping" DROP CONSTRAINT "fk_ActorClaim_Operation";
ALTER TABLE ONLY public."ActorClaimRoleMapping" DROP CONSTRAINT "fk_ActorClaim_Actor";
ALTER TABLE ONLY public."OrganisationAccountingPeriod" DROP CONSTRAINT "fk_AccountingPeriod_Organisation";
ALTER TABLE ONLY public."Account" DROP CONSTRAINT "fk_Account_OrganisationContact";
ALTER TABLE ONLY public."Account" DROP CONSTRAINT "fk_Account_Organisation";
ALTER TABLE ONLY public."Account" DROP CONSTRAINT "fk_Account_Contact";
ALTER TABLE ONLY public."WorkflowTreeStructure" DROP CONSTRAINT "WorkflowTreeStructure_fk";
ALTER TABLE ONLY public."WorkflowTreeStructureTemplate" DROP CONSTRAINT "WorkflowTreeStructureTemplate_fk";
ALTER TABLE ONLY public."WorkflowTreeStructureAction" DROP CONSTRAINT "WorkflowTreeStructureAction_fk1";
ALTER TABLE ONLY public."WorkflowTreeStructureAction" DROP CONSTRAINT "WorkflowTreeStructureAction_fk";
ALTER TABLE ONLY public."WorkflowTreeStructureActionTemplate" DROP CONSTRAINT "WorkflowTreeStructureActionTemplate_fk1";
ALTER TABLE ONLY public."WorkflowTreeStructureActionTemplate" DROP CONSTRAINT "WorkflowTreeStructureActionTemplate_fk";
ALTER TABLE ONLY public."WorkflowActionParameterNotificationConstruct" DROP CONSTRAINT "WorkflowActionParameterNotificationConstruct_fk";
ALTER TABLE ONLY public."WorkflowActionParameterNotificationConstructTemplate" DROP CONSTRAINT "WorkflowActionParameterNotificationConstructTemplate_fk";
ALTER TABLE ONLY public."TFEvent" DROP CONSTRAINT "TFEvent_fk";
ALTER TABLE ONLY public."TFEventTFEventMessageSubscriber" DROP CONSTRAINT "TFEventTFEventMessageSubscriber_fk1";
ALTER TABLE ONLY public."TFEventTFEventMessageSubscriber" DROP CONSTRAINT "TFEventTFEventMessageSubscriber_fk";
ALTER TABLE ONLY public."OrganisationFinancialDetail" DROP CONSTRAINT "OrganisationFinancialDetail_fk";
ALTER TABLE ONLY public."NotificationConstructGroup" DROP CONSTRAINT "NotificationConstructGroup_fk";
ALTER TABLE ONLY public."NotificationConstructGroupNotificationConstruct" DROP CONSTRAINT "NotificationConstructGroupNotificationConstruct_fk3";
ALTER TABLE ONLY public."NotificationConstructGroupNotificationConstruct" DROP CONSTRAINT "NotificationConstructGroupNotificationConstruct_fk2";
ALTER TABLE ONLY public."NotificationConstructGroupNotificationConstruct" DROP CONSTRAINT "NotificationConstructGroupNotificationConstruct_fk";
ALTER TABLE ONLY public."NotificationConstructGroupNotificationConstructTemplate" DROP CONSTRAINT "NotificationConstructGroupNotificationConstructTemplate_fk4";
ALTER TABLE ONLY public."NotificationConstructGroupNotificationConstructTemplate" DROP CONSTRAINT "NotificationConstructGroupNotificationConstructTemplate_fk3";
ALTER TABLE ONLY public."NotificationConstructGroupNotificationConstructTemplate" DROP CONSTRAINT "NotificationConstructGroupNotificationConstructTemplate_fk2";
ALTER TABLE ONLY public."NotificationConstructGroupNotificationConstructTemplate" DROP CONSTRAINT "NotificationConstructGroupNotificationConstructTemplate_fk";
ALTER TABLE ONLY public."InterfacePanelValidation" DROP CONSTRAINT "InterfacePanelValidation_fk";
ALTER TABLE ONLY public."InterfacePanelValidationOrganisationType" DROP CONSTRAINT "InterfacePanelValidationOrganisationType_fk";
ALTER TABLE ONLY public."InterfacePanelValidationOrganisationTypeUserType" DROP CONSTRAINT "InterfacePanelValidationOrganisationTypeUserType_fk";
ALTER TABLE ONLY public."InterfacePanelValidationOrganisationTypeUserTypeTemplate" DROP CONSTRAINT "InterfacePanelValidationOrganisationTypeUserTypeTemplate_fk";
ALTER TABLE ONLY public."InterfacePanelValidationOrganisationTypeTemplate" DROP CONSTRAINT "InterfacePanelValidationOrganisationTypeTemplate_fk";
ALTER TABLE ONLY public."InterfacePanelFieldDetailValidation" DROP CONSTRAINT "InterfacePanelFieldDetailValidation_fk";
ALTER TABLE ONLY public."InterfacePanelFieldDetailValidationTemplate" DROP CONSTRAINT "InterfacePanelFieldDetailValidationTemplate_fk";
ALTER TABLE ONLY public."InterfacePanelFieldDetailValidationOrganisationType" DROP CONSTRAINT "InterfacePanelFieldDetailValidationOrganisationType_fk";
ALTER TABLE ONLY public."InterfacePanelFieldDetailValidationOrganisationTypeTemplate" DROP CONSTRAINT "InterfacePanelFieldDetailValidationOrganisationTypeTemplate_fk";
ALTER TABLE ONLY public."InterfacePanelFDValidationOrganisationTypeUserType" DROP CONSTRAINT "InterfacePanelFDValidationOrganisationTypeUserType_fk";
ALTER TABLE ONLY public."InterfacePanelFDValidationOrgTypeUserTypeTemplate" DROP CONSTRAINT "InterfacePanelFDValidationOrgTypeUserTypeTemplate_fk";
ALTER TABLE ONLY public."UserClaims" DROP CONSTRAINT "FK_dboUserClaims_dboUserAccounts_UserAccount_ID";
ALTER TABLE ONLY public."UserCertificates" DROP CONSTRAINT "FK_dboUserCertificates_dboUserAccounts_UserAccount_ID";
ALTER TABLE ONLY public."UserAccountOrganisationGroup" DROP CONSTRAINT "FK_dboUserAccountOrganisationGroup_dboOrganisupID";
ALTER TABLE ONLY public."UserAccountDetail" DROP CONSTRAINT "FK_dboUserAccountDetail_dboUserAccounts_UserID";
ALTER TABLE ONLY public."TwoFactorAuthTokens" DROP CONSTRAINT "FK_dboTwoFactorAuthTokens_dboUserAccounts_UserAccount_ID";
ALTER TABLE ONLY public."PasswordResetSecrets" DROP CONSTRAINT "FK_dboPasswordResetSecrets_dboUserAccounts_UserAccount_ID";
ALTER TABLE ONLY public."LinkedAccounts" DROP CONSTRAINT "FK_dboLinkedAccounts_dboUserAccounts_UserAccount_ID";
ALTER TABLE ONLY public."LinkedAccountClaims" DROP CONSTRAINT "FK_dboLinkedAccountCeAccountID";
ALTER TABLE ONLY public."WorkflowTransistionWorkflowActionTemplate" DROP CONSTRAINT "FK_WorkflowTransistionWorkflowDecisionTplate";
ALTER TABLE ONLY public."WorkflowTransistionWorkflowActionTemplate" DROP CONSTRAINT "FK_WorkflowTransistionWorkflowDecisionTemplate_WorkflowTrmplate";
ALTER TABLE ONLY public."WorkflowTransistionWorkflowDecisionTemplate" DROP CONSTRAINT "FK_WorkflowTransistionWorkflowActionTemplate_Wormplate";
ALTER TABLE ONLY public."WorkflowTransistionWorkflowDecisionTemplate" DROP CONSTRAINT "FK_WorkflowTransistionWorkflowActionTe";
ALTER TABLE ONLY public."WorkflowTransistionTemplate" DROP CONSTRAINT "FK_WorkflowTransistionTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowHierarchyTemplate" DROP CONSTRAINT "FK_WorkflowHierarchyTemplate_WorkflowTransistionTemplate";
ALTER TABLE ONLY public."WorkflowHierarchyTemplate" DROP CONSTRAINT "FK_WorkflowHierarchyTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."WorkflowDecisionSuccessTemplate" DROP CONSTRAINT "FK_WorkflowDecisionSuccessActionTplate";
ALTER TABLE ONLY public."WorkflowDecisionFailureTemplate" DROP CONSTRAINT "FK_WorkflowDecisionFailureActionTemplate";
ALTER TABLE ONLY public."WorkflowActionTemplate" DROP CONSTRAINT "FK_WorkflowActionTemplate_WorkflowTemplate";
ALTER TABLE ONLY public."StateItem" DROP CONSTRAINT "FK_StateItem_State";
ALTER TABLE ONLY public."Plugin" DROP CONSTRAINT "FK_Plugin_PluginTemplate";
ALTER TABLE ONLY public."OrganisationUnitStructure" DROP CONSTRAINT "FK_OrganisationUnit";
ALTER TABLE ONLY public."OrganisationStructure" DROP CONSTRAINT "FK_OrganisationStructure";
ALTER TABLE ONLY public."Module" DROP CONSTRAINT "FK_Module_ModuleTemplate";
ALTER TABLE ONLY public."GroupRole" DROP CONSTRAINT "FK_GroupTemplateRole_RoleTemplate";
ALTER TABLE ONLY public."GroupRole" DROP CONSTRAINT "FK_GroupTemplateRole_GroupTemplate";
ALTER TABLE ONLY public."DefaultOrganisationGroupRoleTemplate" DROP CONSTRAINT "FK_DefaultonGroupDefault_DefaultOrganisationRoleT";
ALTER TABLE ONLY public."DefaultOrganisationGroupRole" DROP CONSTRAINT "FK_DefaultonGroupDefault_DefaultOrganisationRole";
ALTER TABLE ONLY public."DefaultOrganisationGroupRoleTemplate" DROP CONSTRAINT "FK_DefaultOrganisationGroupDefaul_DefaultOrganisationGroupT";
ALTER TABLE ONLY public."DefaultOrganisationGroupRole" DROP CONSTRAINT "FK_DefaultOrganisationGroupDefaul_DefaultOrganisationGroup";
ALTER TABLE ONLY public."ClassificationType" DROP CONSTRAINT "FK_ClassificationType_ClassificationTypeCategory2";
ALTER TABLE ONLY public."ClassificationType" DROP CONSTRAINT "FK_ClassificationType_ClassificationTypeCategory";
ALTER TABLE ONLY public."OrganisationUnitStructure" DROP CONSTRAINT "FK UnitMap";
ALTER TABLE ONLY public."OrganisationUnit" DROP CONSTRAINT "FK OrganisationUnit";
ALTER TABLE ONLY public."DefaultOrganisationUserTargetTemplate" DROP CONSTRAINT "DefaultOrganisationUserTargetTemplate_fk";
SET search_path = legal, pg_catalog;

ALTER TABLE ONLY legal."LegalOrganisationDetails" DROP CONSTRAINT "fk_LegalOrganisationDetails_Organisation";
SET search_path = hangfire, pg_catalog;

ALTER TABLE ONLY hangfire.state DROP CONSTRAINT state_jobid_fkey;
ALTER TABLE ONLY hangfire.jobparameter DROP CONSTRAINT jobparameter_jobid_fkey;
SET search_path = public, pg_catalog;

DROP TRIGGER """public_ProductDetail_audit""" ON public."ProductDetail";
DROP TRIGGER """public_Plan_audit""" ON public."Plan";
DROP INDEX public.timeoutentity_sagaididx;
DROP INDEX public.timeoutentity_endpointidx;
DROP INDEX public.subscription_typenameidx;
DROP INDEX public."fk_WorkflowTransistion_Workflow";
DROP INDEX public."fk_WorkflowTransistionStartCondititionTemplate";
DROP INDEX public."fk_WorkflowTransistionParametemplate";
DROP INDEX public."fk_WorkflowTransistionHierarmplate11";
DROP INDEX public."fk_WorkflowTransistionHierarcplate";
DROP INDEX public."fk_WorkflowTransistionHierarchy_WorkflowTransistion";
DROP INDEX public."fk_WorkflowTransistionHierarchy_Workflow";
DROP INDEX public."fk_WorkflowTransistionHierarchyTemplate_WorkflowTemplate";
DROP INDEX public."fk_WorkflowTransistionCompleteConditioate";
DROP INDEX public."fk_WorkflowObjectType_Workflow";
DROP INDEX public."fk_WorkflowMainStartCondition_WorkflowCondition";
DROP INDEX public."fk_WorkflowMainStartCondition_Workflow";
DROP INDEX public."fk_WorkflowMainStartConditionTemplate_WorkflowConditionTemplate";
DROP INDEX public."fk_WorkflowMainPreCommand_WorkflowCommand";
DROP INDEX public."fk_WorkflowMainPreCommand_Workflow";
DROP INDEX public."fk_WorkflowMainPreCommandTemplate_WorkflowCommandTemplate";
DROP INDEX public."fk_WorkflowMainPostCommand_WorkflowCommand";
DROP INDEX public."fk_WorkflowMainPostCommand_Workflow";
DROP INDEX public."fk_WorkflowMainPostCommandTemplate_WorkflowCommandTemplate";
DROP INDEX public."fk_WorkflowMainParameter_WorkflowParameter";
DROP INDEX public."fk_WorkflowMainParameter_Workflow";
DROP INDEX public."fk_WorkflowMainParameterTemplate_WorkflowParameterTemplate";
DROP INDEX public."fk_WorkflowMainExecuteCommand_WorkflowCommand";
DROP INDEX public."fk_WorkflowMainExecuteCommand_Workflow";
DROP INDEX public."fk_WorkflowMainExecuteCommandTemplate_WorkflowCommandTemplate";
DROP INDEX public."fk_WorkflowMainCompleteCondition_WorkflowCondition";
DROP INDEX public."fk_WorkflowMainCompleteCondition_Workflow";
DROP INDEX public."fk_WorkflowMainCompleteConditio";
DROP INDEX public."fk_WorkflowInstance_Workflow";
DROP INDEX public."fk_WorkflowInstanceExecutionDataIte";
DROP INDEX public."fk_WorkflowHierarchy_WorkflowTransistion";
DROP INDEX public."fk_WorkflowHierarchy_Workflow";
DROP INDEX public."fk_WorkflowDecision_WorkflowObjectType";
DROP INDEX public."fk_WorkflowDecision_Workflow";
DROP INDEX public."fk_WorkflowDecisionTemplate_WorkflowObjectTypeTemplate";
DROP INDEX public."fk_WorkflowDecisionParameterTemplate_WorkflowParameterTemplate";
DROP INDEX public."fk_WorkflowDecisionExecuteComdTemplate";
DROP INDEX public."fk_WorkflowCondition_WorkflowObjectType";
DROP INDEX public."fk_WorkflowCondition_Workflow";
DROP INDEX public."fk_WorkflowConditionTemplate_WorkflowObjectTypeTemplate";
DROP INDEX public."fk_WorkflowCommand_WorkflowObjectType";
DROP INDEX public."fk_WorkflowCommand_Workflow";
DROP INDEX public."fk_WorkflowCommandTemplate_WorkflowTemplate";
DROP INDEX public."fk_WorkflowCommandTemplate_WorkflowObjectTypeTemplate";
DROP INDEX public."fk_WorkflowCommandParameterTemplate_WorkflowParameterTemplate";
DROP INDEX public."fk_WorkflowCommandConditionTemplate_WorkflowCommandTemplate";
DROP INDEX public."fk_WorkflowActionTemplate_WorkflowObjectTypeTemplate";
DROP INDEX public."fk_WorkflowActionStartConditimplate";
DROP INDEX public."fk_WorkflowActionPreCommandTemplate_WorkflowCommandTemplate";
DROP INDEX public."fk_WorkflowActionPostCommandTemplate_WorkflowActionTemplate";
DROP INDEX public."fk_WorkflowActionExecuteCommand_WorkflowCommand";
DROP INDEX public."fk_WorkflowActionExecuteCommand_WorkflowAction";
DROP INDEX public."fk_WorkflowActionExecuteCommandTemplate_WorkflowCommandTemplate";
DROP INDEX public."fk_WorkflowActionCompleteConplate";
DROP INDEX public."fk_RoleTemplateClaim_StateItem";
DROP INDEX public."fk_RoleTemplateClaim_State";
DROP INDEX public."fk_RoleTemplateClaim_RoleTemplate";
DROP INDEX public."fk_RoleTemplateClaim_Resource";
DROP INDEX public."fk_RoleTemplateClaim_Operation";
DROP INDEX public."fk_RepositoryStructure_Repository";
DROP INDEX public."fk_OrganisationUnitOrganisationRole_OrganisationRole";
DROP INDEX public."fk_OrganisationUnitOrganisationGroup_OrganisationGroup";
DROP INDEX public."fk_OrganisationRoleClaim_OrganisationRole";
DROP INDEX public."fk_OrganisationGroupOrganisationRole_OrganisationRole";
DROP INDEX public."fk_OrganisationDetail_Organisation_1";
DROP INDEX public."fk_Attachment_AttachmentDetail";
DROP INDEX public."fk_AttachmentDetail_RepositoryMap";
DROP INDEX public."fk_AttachmentDetail_Organisation";
DROP INDEX public."fk_AttachmentDetailGroup_OrganisationGroup";
DROP INDEX public."fk_AttachmentDetailGroup_OrganisationExternalGroup";
DROP INDEX public."fk_AttachmentDetailGroup_AttachmentDetail";
DROP INDEX public."fk_Address_ClassificationType";
DROP INDEX public."fk_Account_Contact";
DROP INDEX public."fk_Account_Account";
DROP INDEX public.companyhouse_phrase_idx;
DROP INDEX public."WorkflowTreeStructure_WorkflowTreeStructureID_key";
DROP INDEX public."WorkflowTransistionWorkflowActionTemplatemplate";
DROP INDEX public."WorkflowTransistionHierarchy_fk_WorkflowTransistionHierarchye1";
DROP INDEX public."WorkflowInstance_parentid_idx";
DROP INDEX public."WorkflowInstanceSession_si_so_idx";
DROP INDEX public."WorkflowInstanceExecution_idx";
DROP INDEX public."WorkflowInstanceExecutionStatusEvent_eo_idx";
DROP INDEX public."WorkflowConditionParameterTemplate_fk_WorkflowConditiomplate";
DROP INDEX public."WorkflowAction_idx";
DROP INDEX public."WorkflowAction_WorkflowActionID_key";
DROP INDEX public."WorkflowActionTemplate_WorkflowActionTemplateID_key";
DROP INDEX public."WorkflowActionParameterTemplate_fk_WorkflowActiomplate";
DROP INDEX public."WorkflowActionParameterNotificationConstructTemplate_WorkflowAc";
DROP INDEX public."UserClaims_IX_UserAccount_ID";
DROP INDEX public."UserCertificates_IX_UserAccount_ID";
DROP INDEX public."UserAccountDetail_IX_UserID";
DROP INDEX public."TwoFactorAuthTokens_IX_UserAccount_ID";
DROP INDEX public."RepositoryStructure_fk_RepositoryMap_Repository";
DROP INDEX public."RepositoryStructureRole_fk_ure";
DROP INDEX public."RepositoryStructureRole_fk_anisationRole";
DROP INDEX public."RepositoryStructureGroup_fk_Repository";
DROP INDEX public."RepositoryStructureGroup_fk_RepStructure";
DROP INDEX public."RepositoryStructureGroup_fk_Rep";
DROP INDEX public."PasswordResetSecrets_IX_UserAccount_ID";
DROP INDEX public."OrganisationUnit_FK OrganisationUnit";
DROP INDEX public."OrganisationUnitStructure_FK_OrganisationUnit";
DROP INDEX public."OrganisationUnitStructure_FK UnitMap";
DROP INDEX public."OrganisationStructure_FK_OrganisationStructure";
DROP INDEX public."OrganisationGroup_fk_Group_Organisation";
DROP INDEX public."OrganisationGroup_fk_Group_GroupTemplate";
DROP INDEX public."OrganisationGroup_fk_Group_ClassificationType2";
DROP INDEX public."OrganisationGroup_fk_Group_ClassificationType";
DROP INDEX public."LinkedAccounts_IX_UserAccount_ID";
DROP INDEX public."LinkedAccountClaims_IX_LinkedAccount_unt_ProviderAccountID";
DROP INDEX public."InterfacePanelValidationOrganisationTypeUserTypeTemplate_idx";
DROP INDEX public."FK_WorkflowTransistionTemplate_WorkflowTemplate";
DROP INDEX public."FK_WorkflowHierarchyTemplate_WorkflowTransistionTemplate";
DROP INDEX public."FK_WorkflowHierarchyTemplate_WorkflowTemplate";
DROP INDEX public."FK_StateItem_State";
DROP INDEX public."FK_ClassificationType_ClassificationTypeCategory2";
DROP INDEX public."FK_ClassificationType_ClassificationTypeCategory";
DROP INDEX public."AttachmentDetailRole_fk_AttachmentRole_AttachmentDetail";
DROP INDEX public."AttachmentDetailRole_fk_AttachmenDetailRole_OrganisationRole";
DROP INDEX public."AttachmentDetailRoganisrnalRole";
SET search_path = hangfire, pg_catalog;

DROP INDEX hangfire.ix_hangfire_state_jobid;
DROP INDEX hangfire.ix_hangfire_jobqueue_queueandfetchedat;
DROP INDEX hangfire.ix_hangfire_jobparameter_jobidandname;
DROP INDEX hangfire.ix_hangfire_job_statename;
DROP INDEX hangfire.ix_hangfire_counter_key;
SET search_path = audit, pg_catalog;

DROP INDEX audit.logged_actions_relid_idx;
DROP INDEX audit.logged_actions_action_tstamp_tx_stm_idx;
DROP INDEX audit.logged_actions_action_idx;
SET search_path = sts, pg_catalog;

ALTER TABLE ONLY sts."StsTransactionPropertyDetail" DROP CONSTRAINT "pkStsTransactionPropertyDetail";
ALTER TABLE ONLY sts."StsTransactionProcessLog" DROP CONSTRAINT "pkStsTransactionProcessLog";
ALTER TABLE ONLY sts."StsTransactionComponent" DROP CONSTRAINT "pkStsTransactionComponent";
ALTER TABLE ONLY sts."StsTransaction" DROP CONSTRAINT "pkStsTransaction";
ALTER TABLE ONLY sts."StsSourceOfFundsStsDocument" DROP CONSTRAINT "pkStsSourceOfFundsStsDocument";
ALTER TABLE ONLY sts."StsSourceOfFunds" DROP CONSTRAINT "pkStsSourceOfFunds";
ALTER TABLE ONLY sts."StsSearchRelation" DROP CONSTRAINT "pkStsSearchRelation";
ALTER TABLE ONLY sts."StsSearchPropertyDetail" DROP CONSTRAINT "pkStsSearchProperty";
ALTER TABLE ONLY sts."StsSearchProcessLog" DROP CONSTRAINT "pkStsSearchProcessLog";
ALTER TABLE ONLY sts."StsSearchDetail" DROP CONSTRAINT "pkStsSearchDetail";
ALTER TABLE ONLY sts."StsSearch" DROP CONSTRAINT "pkStsSearch";
ALTER TABLE ONLY sts."PropertyDetail" DROP CONSTRAINT "pkStsProperty";
ALTER TABLE ONLY sts."StsInviteProcessLog" DROP CONSTRAINT "pkStsInviteProcessLog";
ALTER TABLE ONLY sts."StsInvite" DROP CONSTRAINT "pkStsInvite";
ALTER TABLE ONLY sts."StsDocumentProcessLog" DROP CONSTRAINT "pkStsDocumentProcessLog";
ALTER TABLE ONLY sts."StsDocument" DROP CONSTRAINT "pkStsDocument";
ALTER TABLE ONLY sts."StsAuthorityStsDocument" DROP CONSTRAINT "pkStsAuthorityStsDocument";
ALTER TABLE ONLY sts."StsAuthority" DROP CONSTRAINT "pkStsAuthority";
ALTER TABLE ONLY sts."StsActorStsTransaction" DROP CONSTRAINT "pkStsActorStsTransaction";
ALTER TABLE ONLY sts."StsActorStsSearch" DROP CONSTRAINT "pkStsActorStsSearch";
ALTER TABLE ONLY sts."StsActorStructure" DROP CONSTRAINT "pkStsActorStructure";
ALTER TABLE ONLY sts."StsActorPurchase" DROP CONSTRAINT "pkStsActorPurchase";
ALTER TABLE ONLY sts."StsActorProcessLog" DROP CONSTRAINT "pkStsActorProcessLog";
ALTER TABLE ONLY sts."StsActorAuthority" DROP CONSTRAINT "pkStsActorAuthority";
ALTER TABLE ONLY sts."StsActor" DROP CONSTRAINT "pkStsActor";
ALTER TABLE ONLY sts."StsAccountDocument" DROP CONSTRAINT "pkStsAccountDocument";
ALTER TABLE ONLY sts."LRTitle" DROP CONSTRAINT "pkLRTitle";
ALTER TABLE ONLY sts."LRRegisterExtract" DROP CONSTRAINT "pkLRRegisterExtract";
ALTER TABLE ONLY sts."LRDocument" DROP CONSTRAINT "pkLRDocument";
SET search_path = public, pg_catalog;

ALTER TABLE ONLY public.timeoutentity DROP CONSTRAINT timeoutentity_pkey;
ALTER TABLE ONLY public.subscription DROP CONSTRAINT subscription_pkey;
ALTER TABLE ONLY public."WorkflowStatusTypeTemplate" DROP CONSTRAINT "pkWorkflowStatusTypeTemplate";
ALTER TABLE ONLY public."WorkflowStatusType" DROP CONSTRAINT "pkWorkflowStatusType";
ALTER TABLE ONLY public."WorkflowRoleTemplate" DROP CONSTRAINT "pkWorkflowRoleTemplate";
ALTER TABLE ONLY public."WorkflowClaim" DROP CONSTRAINT "pkWorkflowRoleClaim";
ALTER TABLE ONLY public."WorkflowRole" DROP CONSTRAINT "pkWorkflowRole";
ALTER TABLE ONLY public."WorkflowNotificationConstructTemplate" DROP CONSTRAINT "pkWorkflowNotificationConstructTemplate";
ALTER TABLE ONLY public."WorkflowNotificationConstruct" DROP CONSTRAINT "pkWorkflowNotificationConstruct";
ALTER TABLE ONLY public."WorkflowInstanceRestriction" DROP CONSTRAINT "pkWorkflowInstanceRestriction";
ALTER TABLE ONLY public."WorkflowInstanceExecutionTrace" DROP CONSTRAINT "pkWorkflowInstanceExecutionTrace";
ALTER TABLE ONLY public."WorkflowDecisionSuccessTemplate" DROP CONSTRAINT "pkWorkflowDecisionSuccessTemplate";
ALTER TABLE ONLY public."WorkflowDecisionSuccess" DROP CONSTRAINT "pkWorkflowDecisionSuccess";
ALTER TABLE ONLY public."WorkflowDecisionFailureTemplate" DROP CONSTRAINT "pkWorkflowDecisionFailureTemplate";
ALTER TABLE ONLY public."WorkflowDecisionFailure" DROP CONSTRAINT "pkWorkflowDecisionFailure";
ALTER TABLE ONLY public."WorkflowDecisionErrorTemplate" DROP CONSTRAINT "pkWorkflowDecisionErrorTemplate";
ALTER TABLE ONLY public."WorkflowDecisionError" DROP CONSTRAINT "pkWorkflowDecisionError";
ALTER TABLE ONLY public."WorkflowClaimTemplate" DROP CONSTRAINT "pkWorkflowClaimTemplate";
ALTER TABLE ONLY public."WorkflowActionParameterNotificationConstructTemplate" DROP CONSTRAINT "pkWorkflowActionParameterNotificationConstructTemplate";
ALTER TABLE ONLY public."WorkflowActionParameterNotificationConstruct" DROP CONSTRAINT "pkWorkflowActionParameterNotificationConstruct";
ALTER TABLE ONLY public."UserType" DROP CONSTRAINT "pkUserType";
ALTER TABLE ONLY public."ShoppingCart" DROP CONSTRAINT "pkUserShoppingCart";
ALTER TABLE ONLY public."UserAccountOrganisationTeam" DROP CONSTRAINT "pkUserAccountOrganisationTeam";
ALTER TABLE ONLY public."UserAccountOrganisationStatus" DROP CONSTRAINT "pkUserAccountOrganisationStatus";
ALTER TABLE ONLY public."UserAccountOrganisationSecondaryUserType" DROP CONSTRAINT "pkUserAccountOrganisationSecondaryUserType";
ALTER TABLE ONLY public."UserAccountOrganisationRole" DROP CONSTRAINT "pkUserAccountOrganisationRole";
ALTER TABLE ONLY public."UserAccountOrganisationGroup" DROP CONSTRAINT "pkUserAccountOrganisationGroup";
ALTER TABLE ONLY public."UserAccountLoginSessionData" DROP CONSTRAINT "pkUserAccountLoginSessionData";
ALTER TABLE ONLY public."UserAccountLedgerAccount" DROP CONSTRAINT "pkUserAccountLedgerAccount";
ALTER TABLE ONLY public."TransactionOrderProcessLog" DROP CONSTRAINT "pkTransactionOrderProcessLog";
ALTER TABLE ONLY public."TransactionOrderPaymentError" DROP CONSTRAINT "pkTransactionOrderPaymentError";
ALTER TABLE ONLY public."TransactionOrderPayment" DROP CONSTRAINT "pkTransactionOrderPayment";
ALTER TABLE ONLY public."StatusTypeValueTemplate" DROP CONSTRAINT "pkStatusTypeValueTemplate";
ALTER TABLE ONLY public."StatusTypeTemplate" DROP CONSTRAINT "pkStatusTypeTemplate";
ALTER TABLE ONLY public."StatusTypeStructureTransitionTemplate" DROP CONSTRAINT "pkStatusTypeStructureTransitionTemplate";
ALTER TABLE ONLY public."StatusTypeStructureTransition" DROP CONSTRAINT "pkStatusTypeStructureTransition";
ALTER TABLE ONLY public."StatusTypeStructureTemplate" DROP CONSTRAINT "pkStatusTypeStructureTemplate";
ALTER TABLE ONLY public."StatusTypeRoleTemplate" DROP CONSTRAINT "pkStatusTypeRoleTemplate";
ALTER TABLE ONLY public."StatusTypeRole" DROP CONSTRAINT "pkStatusTypeRole";
ALTER TABLE ONLY public."StatusTypeClaimTemplate" DROP CONSTRAINT "pkStatusTypeClaimTemplate";
ALTER TABLE ONLY public."StatusTypeClaim" DROP CONSTRAINT "pkStatusTypeClaim";
ALTER TABLE ONLY public."StatusType" DROP CONSTRAINT "pkStatusType";
ALTER TABLE ONLY public."ShoppingCartItemProductSpecification" DROP CONSTRAINT "pkShoppingCartItemProductSpecification";
ALTER TABLE ONLY public."ShoppingCartItemProductAttribute" DROP CONSTRAINT "pkShoppingCartItemProductAttribute";
ALTER TABLE ONLY public."ShoppingCartDeduction" DROP CONSTRAINT "pkShoppingCartDeduction";
ALTER TABLE ONLY public."ShoppingCartBlueprintTemplate" DROP CONSTRAINT "pkShoppingCartBlueprintTemplate";
ALTER TABLE ONLY public."ShoppingCartBlueprintProductTemplate" DROP CONSTRAINT "pkShoppingCartBlueprintProductTemplate";
ALTER TABLE ONLY public."ShoppingCartBlueprintProduct" DROP CONSTRAINT "pkShoppingCartBlueprintProduct";
ALTER TABLE ONLY public."ShoppingCartBlueprint" DROP CONSTRAINT "pkShoppingCartBlueprint";
ALTER TABLE ONLY public."ServiceInterfaceProcessLog" DROP CONSTRAINT "pkServiceInterfaceProcessLog";
ALTER TABLE ONLY public."ServiceInterface" DROP CONSTRAINT "pkServiceInterface";
ALTER TABLE ONLY public."ServiceDefinitionDetail" DROP CONSTRAINT "pkServiceDefinitionDetail";
ALTER TABLE ONLY public."ServiceDefinition" DROP CONSTRAINT "pkServiceDefinition";
ALTER TABLE ONLY public."Role" DROP CONSTRAINT "pkRole";
ALTER TABLE ONLY public."ProductTemplate" DROP CONSTRAINT "pkProductTemplate";
ALTER TABLE ONLY public."ProductRoleTemplate" DROP CONSTRAINT "pkProductRoleTemplate";
ALTER TABLE ONLY public."ProductRole" DROP CONSTRAINT "pkProductRole";
ALTER TABLE ONLY public."ProductPurchaseReference" DROP CONSTRAINT "pkProductPurchaseReference";
ALTER TABLE ONLY public."ProductPurchaseProcessLog" DROP CONSTRAINT "pkProductPurchaseProcessLog";
ALTER TABLE ONLY public."ProductPurchaseBusTaskProcessLog" DROP CONSTRAINT "pkProductPurchaseBusTaskProcessLog";
ALTER TABLE ONLY public."ProductPurchaseBusTaskProcessDetail" DROP CONSTRAINT "pkProductPurchaseBusTaskProcessDetail";
ALTER TABLE ONLY public."ProductPurchase" DROP CONSTRAINT "pkProductPurchase";
ALTER TABLE ONLY public."ProductPlanTemplate" DROP CONSTRAINT "pkProductPlanTemplate";
ALTER TABLE ONLY public."ProductPlan" DROP CONSTRAINT "pkProductPlan";
ALTER TABLE ONLY public."ProductDiscountTemplate" DROP CONSTRAINT "pkProductDiscountTemplate";
ALTER TABLE ONLY public."ProductDiscount" DROP CONSTRAINT "pkProductDiscount";
ALTER TABLE ONLY public."ProductDeductionTemplate" DROP CONSTRAINT "pkProductDeductionTemplate";
ALTER TABLE ONLY public."ProductDeduction" DROP CONSTRAINT "pkProductDeduction";
ALTER TABLE ONLY public."ProductComponentTierTemplate" DROP CONSTRAINT "pkProductComponentTierTemplate";
ALTER TABLE ONLY public."ProductComponentTier" DROP CONSTRAINT "pkProductComponentTier";
ALTER TABLE ONLY public."ProductClaimTemplate" DROP CONSTRAINT "pkProductClaimTemplate";
ALTER TABLE ONLY public."ProductClaim" DROP CONSTRAINT "pkProductClaim";
ALTER TABLE ONLY public."ProductBusTaskTemplate" DROP CONSTRAINT "pkProductBusTaskTemplate";
ALTER TABLE ONLY public."ProductBusTask" DROP CONSTRAINT "pkProductBusTask";
ALTER TABLE ONLY public."Product" DROP CONSTRAINT "pkProduct";
ALTER TABLE ONLY public."PlanTransactionTemplate" DROP CONSTRAINT "pkPlanTransactionTemplate";
ALTER TABLE ONLY public."PlanTransactionComponentTierTemplate" DROP CONSTRAINT "pkPlanTransactionComponentTierTemplate";
ALTER TABLE ONLY public."PlanTransactionComponentTier" DROP CONSTRAINT "pkPlanTransactionComponentTier";
ALTER TABLE ONLY public."PlanTransaction" DROP CONSTRAINT "pkPlanTransaction";
ALTER TABLE ONLY public."PlanTemplate" DROP CONSTRAINT "pkPlanTemplate";
ALTER TABLE ONLY public."PlanSubscriptionProcessLog" DROP CONSTRAINT "pkPlanSubscriptionProcessLog";
ALTER TABLE ONLY public."PlanSubscriptionPeriod" DROP CONSTRAINT "pkPlanSubscriptionPeriod";
ALTER TABLE ONLY public."PlanSubscriptionPaymentPlan" DROP CONSTRAINT "pkPlanSubscriptionPaymentPlan";
ALTER TABLE ONLY public."PlanSubscriptionBillingProcessLog" DROP CONSTRAINT "pkPlanSubscriptionBillingPeriod";
ALTER TABLE ONLY public."PlanSubscription" DROP CONSTRAINT "pkPlanSubscription";
ALTER TABLE ONLY public."PlanProductTemplate" DROP CONSTRAINT "pkPlanProductTemplate";
ALTER TABLE ONLY public."PlanProduct" DROP CONSTRAINT "pkPlanProduct";
ALTER TABLE ONLY public."PlanGroup" DROP CONSTRAINT "pkPlanGroup";
ALTER TABLE ONLY public."PlanGlobalPaymentMethodTemplate" DROP CONSTRAINT "pkPlanGlobalPaymentMethodTemplate";
ALTER TABLE ONLY public."PlanGlobalPaymentMethod" DROP CONSTRAINT "pkPlanGlobalPaymentMethod";
ALTER TABLE ONLY public."PlanDiscountTemplate" DROP CONSTRAINT "pkPlanDiscountTemplate";
ALTER TABLE ONLY public."PlanDiscount" DROP CONSTRAINT "pkPlanDiscount";
ALTER TABLE ONLY public."PlanBillingTemplate" DROP CONSTRAINT "pkPlanBillingTemplate";
ALTER TABLE ONLY public."PlanBilling" DROP CONSTRAINT "pkPlanBilling";
ALTER TABLE ONLY public."Plan" DROP CONSTRAINT "pkPlan";
ALTER TABLE ONLY public."PackageTemplate" DROP CONSTRAINT "pkPackageTemplate";
ALTER TABLE ONLY public."PackageProductTemplate" DROP CONSTRAINT "pkPackageProductTemplate";
ALTER TABLE ONLY public."PackageProduct" DROP CONSTRAINT "pkPackageProduct";
ALTER TABLE ONLY public."Package" DROP CONSTRAINT "pkPackage";
ALTER TABLE ONLY public."OrganisationUserType" DROP CONSTRAINT "pkOrganisationUserType";
ALTER TABLE ONLY public."OrganisationType" DROP CONSTRAINT "pkOrganisationType";
ALTER TABLE ONLY public."OrganisationTradingName" DROP CONSTRAINT "pkOrganisationTradingName";
ALTER TABLE ONLY public."OrganisationTeamSettingTemplate" DROP CONSTRAINT "pkOrganisationTeamSettingTemplate";
ALTER TABLE ONLY public."OrganisationTeamSetting" DROP CONSTRAINT "pkOrganisationTeamSetting";
ALTER TABLE ONLY public."OrganisationStatusType" DROP CONSTRAINT "pkOrganisationStatusType";
ALTER TABLE ONLY public."OrganisationStatus" DROP CONSTRAINT "pkOrganisationStatus";
ALTER TABLE ONLY public."OrganisationSettingTemplate" DROP CONSTRAINT "pkOrganisationSettingTemplate";
ALTER TABLE ONLY public."OrganisationSetting" DROP CONSTRAINT "pkOrganisationSetting";
ALTER TABLE ONLY public."OrganisationProductPurchase" DROP CONSTRAINT "pkOrganisationProductPurchase";
ALTER TABLE ONLY public."OrganisationPlanSubscription" DROP CONSTRAINT "pkOrganisationPlanSubscription";
ALTER TABLE ONLY public."OrganisationPaymentMethod" DROP CONSTRAINT "pkOrganisationOfflinePaymentMethod";
ALTER TABLE ONLY public."OrganisationFinancialDetail" DROP CONSTRAINT "pkOrganisationFinancialDetail";
ALTER TABLE ONLY public."OrganisationDiscount" DROP CONSTRAINT "pkOrganisationDiscount";
ALTER TABLE ONLY public."OrganisationDirectDebitMandateProcessLog" DROP CONSTRAINT "pkOrganisationDirectDebitMandateSignoff";
ALTER TABLE ONLY public."OrganisationDirectDebitMandate" DROP CONSTRAINT "pkOrganisationDirectDebitMandate";
ALTER TABLE ONLY public."OrganisationBankAccount" DROP CONSTRAINT "pkOrganisationBankAccount";
ALTER TABLE ONLY public."OrganisationArtefact" DROP CONSTRAINT "pkOrganisationArtefact";
ALTER TABLE ONLY public."OrganisationAccountingPeriod" DROP CONSTRAINT "pkOrganisationAccountingPeriod";
ALTER TABLE ONLY public."NotificationRecipient" DROP CONSTRAINT "pkNotificationRecipient";
ALTER TABLE ONLY public."NotificationConstructTemplate" DROP CONSTRAINT "pkNotificationConstructTemplate";
ALTER TABLE ONLY public."NotificationConstructTargetTemplate" DROP CONSTRAINT "pkNotificationConstructTargetTemplate";
ALTER TABLE ONLY public."NotificationConstructTarget" DROP CONSTRAINT "pkNotificationConstructTarget";
ALTER TABLE ONLY public."NotificationConstructRoleTemplate" DROP CONSTRAINT "pkNotificationConstructRoleTemplate";
ALTER TABLE ONLY public."NotificationConstructRole" DROP CONSTRAINT "pkNotificationConstructRole";
ALTER TABLE ONLY public."NotificationConstructParameterTemplate" DROP CONSTRAINT "pkNotificationConstructParameterTemplate";
ALTER TABLE ONLY public."NotificationConstructParameter" DROP CONSTRAINT "pkNotificationConstructParameter";
ALTER TABLE ONLY public."NotificationConstructDataTemplate" DROP CONSTRAINT "pkNotificationConstructDataTemplate";
ALTER TABLE ONLY public."NotificationConstructData" DROP CONSTRAINT "pkNotificationConstructData";
ALTER TABLE ONLY public."NotificationConstructClaimTemplate" DROP CONSTRAINT "pkNotificationConstructClaimTemplate";
ALTER TABLE ONLY public."NotificationConstructClaim" DROP CONSTRAINT "pkNotificationConstructClaim";
ALTER TABLE ONLY public."Notification" DROP CONSTRAINT "pkNotification";
ALTER TABLE ONLY public."ModuleStatusTypeTemplate" DROP CONSTRAINT "pkModuleStatusTypeTemplate";
ALTER TABLE ONLY public."ModuleStatusType" DROP CONSTRAINT "pkModuleStatusType";
ALTER TABLE ONLY public."ModuleProductTemplate" DROP CONSTRAINT "pkModuleProductTemplate";
ALTER TABLE ONLY public."ModuleProduct" DROP CONSTRAINT "pkModuleProduct";
ALTER TABLE ONLY public."ModuleNotificationConstructTemplate" DROP CONSTRAINT "pkModuleNotificationConstructTemplate";
ALTER TABLE ONLY public."ModuleNotificationConstruct" DROP CONSTRAINT "pkModuleNotificationConstruct";
ALTER TABLE ONLY public."ModuleDependencyTemplate" DROP CONSTRAINT "pkModuleDependencyTemplate";
ALTER TABLE ONLY public."ModuleDependency" DROP CONSTRAINT "pkModuleDependency";
ALTER TABLE ONLY public."ModuleArtefactTemplate" DROP CONSTRAINT "pkModuleArtefactTemplate";
ALTER TABLE ONLY public."ModuleArtefact" DROP CONSTRAINT "pkModuleArtefact";
ALTER TABLE ONLY public."LedgerAccountTransaction" DROP CONSTRAINT "pkLedgerAccountTransaction";
ALTER TABLE ONLY public."LedgerAccountBalance" DROP CONSTRAINT "pkLedgerAccountBalance";
ALTER TABLE ONLY public."OrganisationLedgerAccount" DROP CONSTRAINT "pkLedgerAccount";
ALTER TABLE ONLY public."InvoiceProcessLog" DROP CONSTRAINT "pkInvoiceProcessLog";
ALTER TABLE ONLY public."InvoiceLineItem" DROP CONSTRAINT "pkInvoiceLineItem";
ALTER TABLE ONLY public."Invoice" DROP CONSTRAINT "pkInvoice";
ALTER TABLE ONLY public."InterfacePanelTemplate" DROP CONSTRAINT "pkInterfacePanelTemplate";
ALTER TABLE ONLY public."InterfacePanelSettingTemplate" DROP CONSTRAINT "pkInterfacePanelSettingTemplate";
ALTER TABLE ONLY public."InterfacePanelSetting" DROP CONSTRAINT "pkInterfacePanelSetting";
ALTER TABLE ONLY public."InterfacePanelOrganisationTypeTemplate" DROP CONSTRAINT "pkInterfacePanelOrganisationTypeTemplate";
ALTER TABLE ONLY public."InterfacePanelOrganisationType" DROP CONSTRAINT "pkInterfacePanelOrganisationType";
ALTER TABLE ONLY public."InterfacePanelOrganisationTypeUserTypeTemplate" DROP CONSTRAINT "pkInterfacePanelOrganUserTypeypeTemplate";
ALTER TABLE ONLY public."InterfacePanelOrganisationTypeUserType" DROP CONSTRAINT "pkInterfacePanelOrganUserTypeype";
ALTER TABLE ONLY public."InterfacePanelFieldDetailTemplate" DROP CONSTRAINT "pkInterfacePanelFieldDetailTemplate";
ALTER TABLE ONLY public."InterfacePanelFieldDetailOrganisationTypeTemplate" DROP CONSTRAINT "pkInterfacePanelFieldDetailOrganaisationTypeTemplate";
ALTER TABLE ONLY public."InterfacePanelFieldDetailOrganisationType" DROP CONSTRAINT "pkInterfacePanelFieldDetailOrganaisationType";
ALTER TABLE ONLY public."InterfacePanelFDOrganisationTypeUserTypeTemplate" DROP CONSTRAINT "pkInterfacePanelFieldDetailOrg123aisationTypeTemplate";
ALTER TABLE ONLY public."InterfacePanelFDOrganisationTypeUserType" DROP CONSTRAINT "pkInterfacePanelFieldDetailOrg123aisationType";
ALTER TABLE ONLY public."InterfacePanelFieldDetail" DROP CONSTRAINT "pkInterfacePanelFieldDetail";
ALTER TABLE ONLY public."InterfacePanel" DROP CONSTRAINT "pkInterfacePanel";
ALTER TABLE ONLY public."Group" DROP CONSTRAINT "pkGroup";
ALTER TABLE ONLY public."GlobalPaymentMethod" DROP CONSTRAINT "pkGlobalPaymentMethod";
ALTER TABLE ONLY public."GlobalDirectDebitCollectionPeriod" DROP CONSTRAINT "pkGlobalDirectDebitCollectionPeriod";
ALTER TABLE ONLY public."GlobalAccountingPeriod" DROP CONSTRAINT "pkGlobalAccountingPeriod";
ALTER TABLE ONLY public."FieldDetailTemplate" DROP CONSTRAINT "pkFieldDetailTemplate";
ALTER TABLE ONLY public."FieldDetail" DROP CONSTRAINT "pkFieldDetail";
ALTER TABLE ONLY public."DiscountTemplate" DROP CONSTRAINT "pkDiscountTemplate";
ALTER TABLE ONLY public."DiscountRelatedProductTemplate" DROP CONSTRAINT "pkDiscountRelatedProductTemplate";
ALTER TABLE ONLY public."DiscountRelatedProduct" DROP CONSTRAINT "pkDiscountRelatedProduct";
ALTER TABLE ONLY public."DiscountComponentTierTemplate" DROP CONSTRAINT "pkDiscountComponentTierTemplate";
ALTER TABLE ONLY public."DiscountComponentTier" DROP CONSTRAINT "pkDiscountComponentTier";
ALTER TABLE ONLY public."Discount" DROP CONSTRAINT "pkDiscount";
ALTER TABLE ONLY public."DirectDebitSchedule" DROP CONSTRAINT "pkDirectDebitSchedule";
ALTER TABLE ONLY public."DirectDebitMandateTemplate" DROP CONSTRAINT "pkDirectDebitMandateTemplate";
ALTER TABLE ONLY public."DirectDebitMandate" DROP CONSTRAINT "pkDirectDebitMandate";
ALTER TABLE ONLY public."DefaultOrganisationNotificationConstructTemplate" DROP CONSTRAINT "pkDefaultOrgantionNotificationConstructT";
ALTER TABLE ONLY public."DefaultOrganisationWorkflowTemplate" DROP CONSTRAINT "pkDefaultOrganisationWorkflowT";
ALTER TABLE ONLY public."DefaultOrganisationWorkflow" DROP CONSTRAINT "pkDefaultOrganisationWorkflow";
ALTER TABLE ONLY public."DefaultOrganisationUserTypeTemplate" DROP CONSTRAINT "pkDefaultOrganisationUserTypeTemplate";
ALTER TABLE ONLY public."DefaultOrganisationUserType" DROP CONSTRAINT "pkDefaultOrganisationUserType";
ALTER TABLE ONLY public."DefaultOrganisationUserTargetTemplate" DROP CONSTRAINT "pkDefaultOrganisationUserTargetTemplate";
ALTER TABLE ONLY public."DefaultOrganisationUserTarget" DROP CONSTRAINT "pkDefaultOrganisationUserTarget";
ALTER TABLE ONLY public."DefaultOrganisationTemplate" DROP CONSTRAINT "pkDefaultOrganisationTemplate";
ALTER TABLE ONLY public."DefaultOrganisationStatusTypeTemplate" DROP CONSTRAINT "pkDefaultOrganisationStatusTypeTemplate";
ALTER TABLE ONLY public."DefaultOrganisationStatusType" DROP CONSTRAINT "pkDefaultOrganisationStatusType";
ALTER TABLE ONLY public."DefaultOrganisationShoppingCartBlueprintTemplate" DROP CONSTRAINT "pkDefaultOrganisationShoppingCartBlueprintTemplate";
ALTER TABLE ONLY public."DefaultOrganisationShoppingCartBlueprint" DROP CONSTRAINT "pkDefaultOrganisationShoppingCartBlueprint";
ALTER TABLE ONLY public."DefaultOrganisationRoleTargetTemplate" DROP CONSTRAINT "pkDefaultOrganisationRoleTargetTemplate";
ALTER TABLE ONLY public."DefaultOrganisationRoleTarget" DROP CONSTRAINT "pkDefaultOrganisationRoleTarget";
ALTER TABLE ONLY public."DefaultOrganisationProductTemplate" DROP CONSTRAINT "pkDefaultOrganisationProductTemplate";
ALTER TABLE ONLY public."DefaultOrganisationProduct" DROP CONSTRAINT "pkDefaultOrganisationProduct";
ALTER TABLE ONLY public."DefaultOrganisationPaymentMethodTemplate" DROP CONSTRAINT "pkDefaultOrganisationPaymentMethodTemplate";
ALTER TABLE ONLY public."DefaultOrganisationPaymentMethod" DROP CONSTRAINT "pkDefaultOrganisationPaymentMethod";
ALTER TABLE ONLY public."DefaultOrganisationNotificationConstruct" DROP CONSTRAINT "pkDefaultOrganisationNotificationConstruct";
ALTER TABLE ONLY public."DefaultOrganisationModuleTemplate" DROP CONSTRAINT "pkDefaultOrganisationModuleT";
ALTER TABLE ONLY public."DefaultOrganisationModule" DROP CONSTRAINT "pkDefaultOrganisationModule";
ALTER TABLE ONLY public."DefaultOrganisationLedgerTemplate" DROP CONSTRAINT "pkDefaultOrganisationLedgerTemplate";
ALTER TABLE ONLY public."DefaultOrganisationLedger" DROP CONSTRAINT "pkDefaultOrganisationLedger";
ALTER TABLE ONLY public."DefaultOrganisationGroupTargetTemplate" DROP CONSTRAINT "pkDefaultOrganisationGroupTargetTemplate";
ALTER TABLE ONLY public."DefaultOrganisationGroupTarget" DROP CONSTRAINT "pkDefaultOrganisationGroupTarget";
ALTER TABLE ONLY public."DefaultOrganisationBucketTemplate" DROP CONSTRAINT "pkDefaultOrganisationBucketT";
ALTER TABLE ONLY public."DefaultOrganisationBucket" DROP CONSTRAINT "pkDefaultOrganisationBucket";
ALTER TABLE ONLY public."DefaultOrganisationArtefactTemplate" DROP CONSTRAINT "pkDefaultOrganisationArtefactT";
ALTER TABLE ONLY public."DefaultOrganisationArtefact" DROP CONSTRAINT "pkDefaultOrganisationArtefact";
ALTER TABLE ONLY public."DefaultOrganisation" DROP CONSTRAINT "pkDefaultOrganisation";
ALTER TABLE ONLY public."DeductionTemplate" DROP CONSTRAINT "pkDeductionTemplate";
ALTER TABLE ONLY public."DeductionProductTemplate" DROP CONSTRAINT "pkDeductionProductTemplate";
ALTER TABLE ONLY public."DeductionProduct" DROP CONSTRAINT "pkDeductionProduct";
ALTER TABLE ONLY public."DeductionComponentTierTemplate" DROP CONSTRAINT "pkDeductionComponentTierTemplate";
ALTER TABLE ONLY public."DeductionComponentTier" DROP CONSTRAINT "pkDeductionComponentTier";
ALTER TABLE ONLY public."Deduction" DROP CONSTRAINT "pkDeduction";
ALTER TABLE ONLY public."CurrencyCode" DROP CONSTRAINT "pkCurrencyCode";
ALTER TABLE ONLY public."CountryDeductionTemplate" DROP CONSTRAINT "pkCountryDeductionTemplate";
ALTER TABLE ONLY public."CountryDeduction" DROP CONSTRAINT "pkCountryDeduction";
ALTER TABLE ONLY public."ContactRegulator" DROP CONSTRAINT "pkContactRegulator";
ALTER TABLE ONLY public."ContactPhone" DROP CONSTRAINT "pkContactPhone";
ALTER TABLE ONLY public."ContactName" DROP CONSTRAINT "pkContactName";
ALTER TABLE ONLY public."ComponentTierTemplate" DROP CONSTRAINT "pkComponentTierTemplate";
ALTER TABLE ONLY public."ComponentTier" DROP CONSTRAINT "pkComponentTier";
ALTER TABLE ONLY public."BusTaskScheduleProcessLog" DROP CONSTRAINT "pkBusTaskScheduleProcessLog";
ALTER TABLE ONLY public."BusTaskSchedule" DROP CONSTRAINT "pkBusTaskSchedule";
ALTER TABLE ONLY public."BusTaskHandler" DROP CONSTRAINT "pkBusTaskHandler";
ALTER TABLE ONLY public."BusTask" DROP CONSTRAINT "pkBusTask";
ALTER TABLE ONLY public."BusMessageProcessLog" DROP CONSTRAINT "pkBusMessageProcessLog";
ALTER TABLE ONLY public."BucketTemplate" DROP CONSTRAINT "pkBucketTemplate";
ALTER TABLE ONLY public."Bucket" DROP CONSTRAINT "pkBucket";
ALTER TABLE ONLY public."BillingTemplate" DROP CONSTRAINT "pkBillingTemplate";
ALTER TABLE ONLY public."Billing" DROP CONSTRAINT "pkBilling";
ALTER TABLE ONLY public."ArtefactWorkflowTemplate" DROP CONSTRAINT "pkArtefactWorkflowTemplate";
ALTER TABLE ONLY public."ArtefactWorkflow" DROP CONSTRAINT "pkArtefactWorkflow";
ALTER TABLE ONLY public."ArtefactTemplate" DROP CONSTRAINT "pkArtefactTemplate";
ALTER TABLE ONLY public."ArtefactSubscriptionTemplate" DROP CONSTRAINT "pkArtefactSubscriptionTemplate";
ALTER TABLE ONLY public."ArtefactSubscription" DROP CONSTRAINT "pkArtefactSubscription";
ALTER TABLE ONLY public."ArtefactStatusTypeTemplate" DROP CONSTRAINT "pkArtefactStatusTypeTemplate";
ALTER TABLE ONLY public."ArtefactStatusType" DROP CONSTRAINT "pkArtefactStatusType";
ALTER TABLE ONLY public."ArtefactRoleTemplate" DROP CONSTRAINT "pkArtefactRoleTemplate";
ALTER TABLE ONLY public."ArtefactRole" DROP CONSTRAINT "pkArtefactRole";
ALTER TABLE ONLY public."ArtefactProductTemplate" DROP CONSTRAINT "pkArtefactProductTemplate";
ALTER TABLE ONLY public."ArtefactProduct" DROP CONSTRAINT "pkArtefactProduct";
ALTER TABLE ONLY public."ArtefactNotificationConstructTemplate" DROP CONSTRAINT "pkArtefactNotificationConstructTemplate";
ALTER TABLE ONLY public."ArtefactNotificationConstruct" DROP CONSTRAINT "pkArtefactNotificationConstruct";
ALTER TABLE ONLY public."ArtefactDependencyTemplate" DROP CONSTRAINT "pkArtefactDependencyTemplate";
ALTER TABLE ONLY public."ArtefactDependencyStatusTypeTemplate" DROP CONSTRAINT "pkArtefactDependencyStatusTypeTemplate";
ALTER TABLE ONLY public."ArtefactDependencyStatusType" DROP CONSTRAINT "pkArtefactDependencyStatusType";
ALTER TABLE ONLY public."ArtefactDependency" DROP CONSTRAINT "pkArtefactDependency";
ALTER TABLE ONLY public."ArtefactClaimTemplate" DROP CONSTRAINT "pkArtefactClaimTemplate";
ALTER TABLE ONLY public."ArtefactClaim" DROP CONSTRAINT "pkArtefactClaim";
ALTER TABLE ONLY public."Artefact" DROP CONSTRAINT "pkArtefact";
ALTER TABLE ONLY public."ActorClaimRoleMapping" DROP CONSTRAINT "pkActorClaimRoleMapping";
ALTER TABLE ONLY public."Actor" DROP CONSTRAINT "pkActor";
ALTER TABLE ONLY public."CountryCode" DROP CONSTRAINT countrycode_pkey;
ALTER TABLE ONLY public.containsagadata DROP CONSTRAINT containsagadata_pkey;
ALTER TABLE ONLY public."Workflow" DROP CONSTRAINT "Workflow_pkey";
ALTER TABLE ONLY public."WorkflowTreeStructure" DROP CONSTRAINT "WorkflowTreeStructure_pkey";
ALTER TABLE ONLY public."WorkflowTreeStructureAction" DROP CONSTRAINT "WorkflowTreeStructureAction_pkey";
ALTER TABLE ONLY public."WorkflowTreeStructureActionTemplate" DROP CONSTRAINT "WorkflowTreeStructureActionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowTransistion" DROP CONSTRAINT "WorkflowTransistion_pkey";
ALTER TABLE ONLY public."WorkflowTransistionWorkflowDecision" DROP CONSTRAINT "WorkflowTransistionWorkflowDecision_pkey";
ALTER TABLE ONLY public."WorkflowTransistionWorkflowDecisionTemplate" DROP CONSTRAINT "WorkflowTransistionWorkflowDecisionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowTransistionWorkflowAction" DROP CONSTRAINT "WorkflowTransistionWorkflowAction_pkey";
ALTER TABLE ONLY public."WorkflowTransistionWorkflowActionTemplate" DROP CONSTRAINT "WorkflowTransistionWorkflowActionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowTransistionTemplate" DROP CONSTRAINT "WorkflowTransistionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowTransistionStartCondition" DROP CONSTRAINT "WorkflowTransistionStartCondition_pkey";
ALTER TABLE ONLY public."WorkflowTransistionStartConditionTemplate" DROP CONSTRAINT "WorkflowTransistionStartConditionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowTransistionParameter" DROP CONSTRAINT "WorkflowTransistionParameter_pkey";
ALTER TABLE ONLY public."WorkflowTransistionParameterTemplate" DROP CONSTRAINT "WorkflowTransistionParameterTemplate_pkey";
ALTER TABLE ONLY public."WorkflowTransistionHierarchy" DROP CONSTRAINT "WorkflowTransistionHierarchy_pkey";
ALTER TABLE ONLY public."WorkflowTransistionHierarchyTemplate" DROP CONSTRAINT "WorkflowTransistionHierarchyTemplate_pkey";
ALTER TABLE ONLY public."WorkflowTransistionCompleteCondition" DROP CONSTRAINT "WorkflowTransistionCompleteCondition_pkey";
ALTER TABLE ONLY public."WorkflowTransistionCompleteConditionTemplate" DROP CONSTRAINT "WorkflowTransistionCompleteConditionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowTemplate" DROP CONSTRAINT "WorkflowTemplate_pkey";
ALTER TABLE ONLY public."WorkflowParameter" DROP CONSTRAINT "WorkflowParameter_pkey";
ALTER TABLE ONLY public."WorkflowParameterTemplate" DROP CONSTRAINT "WorkflowParameterTemplate_pkey";
ALTER TABLE ONLY public."WorkflowObjectType" DROP CONSTRAINT "WorkflowObjectType_pkey";
ALTER TABLE ONLY public."WorkflowObjectTypeTemplate" DROP CONSTRAINT "WorkflowObjectTypeTemplate_pkey";
ALTER TABLE ONLY public."WorkflowMainStartCondition" DROP CONSTRAINT "WorkflowMainStartCondition_pkey";
ALTER TABLE ONLY public."WorkflowMainStartConditionTemplate" DROP CONSTRAINT "WorkflowMainStartConditionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowMainPreCommand" DROP CONSTRAINT "WorkflowMainPreCommand_pkey";
ALTER TABLE ONLY public."WorkflowMainPreCommandTemplate" DROP CONSTRAINT "WorkflowMainPreCommandTemplate_pkey";
ALTER TABLE ONLY public."WorkflowMainPostCommand" DROP CONSTRAINT "WorkflowMainPostCommand_pkey";
ALTER TABLE ONLY public."WorkflowMainPostCommandTemplate" DROP CONSTRAINT "WorkflowMainPostCommandTemplate_pkey";
ALTER TABLE ONLY public."WorkflowMainParameter" DROP CONSTRAINT "WorkflowMainParameter_pkey";
ALTER TABLE ONLY public."WorkflowMainParameterTemplate" DROP CONSTRAINT "WorkflowMainParameterTemplate_pkey";
ALTER TABLE ONLY public."WorkflowMainExecuteCommand" DROP CONSTRAINT "WorkflowMainExecuteCommand_pkey";
ALTER TABLE ONLY public."WorkflowMainExecuteCommandTemplate" DROP CONSTRAINT "WorkflowMainExecuteCommandTemplate_pkey";
ALTER TABLE ONLY public."WorkflowMainCompleteCondition" DROP CONSTRAINT "WorkflowMainCompleteCondition_pkey";
ALTER TABLE ONLY public."WorkflowMainCompleteConditionTemplate" DROP CONSTRAINT "WorkflowMainCompleteConditionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowInstance" DROP CONSTRAINT "WorkflowInstance_pkey";
ALTER TABLE ONLY public."WorkflowInstanceSession" DROP CONSTRAINT "WorkflowInstanceSession_pkey";
ALTER TABLE ONLY public."WorkflowInstanceExecution" DROP CONSTRAINT "WorkflowInstanceExecution_pkey";
ALTER TABLE ONLY public."WorkflowInstanceExecutionStatusEvent" DROP CONSTRAINT "WorkflowInstanceExecutionStatusEvent_pkey";
ALTER TABLE ONLY public."WorkflowInstanceExecutionDataItem" DROP CONSTRAINT "WorkflowInstanceExecutionDataItem_pkey";
ALTER TABLE ONLY public."WorkflowHierarchy" DROP CONSTRAINT "WorkflowHierarchy_pkey";
ALTER TABLE ONLY public."WorkflowHierarchyTemplate" DROP CONSTRAINT "WorkflowHierarchyTemplate_pkey";
ALTER TABLE ONLY public."WorkflowExecution" DROP CONSTRAINT "WorkflowExecution_pkey";
ALTER TABLE ONLY public."WorkflowExecutionTemplate" DROP CONSTRAINT "WorkflowExecutionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowExecutionStatus" DROP CONSTRAINT "WorkflowExecutionStatus_pkey";
ALTER TABLE ONLY public."WorkflowDecision" DROP CONSTRAINT "WorkflowDecision_pkey";
ALTER TABLE ONLY public."WorkflowDecisionTemplate" DROP CONSTRAINT "WorkflowDecisionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowDecisionSuccess" DROP CONSTRAINT "WorkflowDecisionSuccess_WorkflowDecisionSuccessID_key";
ALTER TABLE ONLY public."WorkflowDecisionSuccessTemplate" DROP CONSTRAINT "WorkflowDecisionSuccessTempla_WorkflowDecisionSuccessTempla_key";
ALTER TABLE ONLY public."WorkflowDecisionParameter" DROP CONSTRAINT "WorkflowDecisionParameter_pkey";
ALTER TABLE ONLY public."WorkflowDecisionParameterTemplate" DROP CONSTRAINT "WorkflowDecisionParameterTemplate_pkey";
ALTER TABLE ONLY public."WorkflowDecisionFailure" DROP CONSTRAINT "WorkflowDecisionFailure_WorkflowDecisionFailureID_key";
ALTER TABLE ONLY public."WorkflowDecisionExecuteCommand" DROP CONSTRAINT "WorkflowDecisionExecuteCommand_pkey";
ALTER TABLE ONLY public."WorkflowDecisionExecuteCommandTemplate" DROP CONSTRAINT "WorkflowDecisionExecuteCommandTemplate_pkey";
ALTER TABLE ONLY public."WorkflowDecisionError" DROP CONSTRAINT "WorkflowDecisionError_WorkflowDecisionErrorID_key";
ALTER TABLE ONLY public."WorkflowDecisionErrorTemplate" DROP CONSTRAINT "WorkflowDecisionErrorTemplate_WorkflowDecisionErrorTemplate_key";
ALTER TABLE ONLY public."WorkflowCondition" DROP CONSTRAINT "WorkflowCondition_pkey";
ALTER TABLE ONLY public."WorkflowConditionTemplate" DROP CONSTRAINT "WorkflowConditionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowConditionParameter" DROP CONSTRAINT "WorkflowConditionParameter_pkey";
ALTER TABLE ONLY public."WorkflowConditionParameterTemplate" DROP CONSTRAINT "WorkflowConditionParameterTemplate_pkey";
ALTER TABLE ONLY public."WorkflowCommand" DROP CONSTRAINT "WorkflowCommand_pkey";
ALTER TABLE ONLY public."WorkflowCommandTemplate" DROP CONSTRAINT "WorkflowCommandTemplate_pkey";
ALTER TABLE ONLY public."WorkflowCommandParameter" DROP CONSTRAINT "WorkflowCommandParameter_pkey";
ALTER TABLE ONLY public."WorkflowCommandParameterTemplate" DROP CONSTRAINT "WorkflowCommandParameterTemplate_pkey";
ALTER TABLE ONLY public."WorkflowCommandCondition" DROP CONSTRAINT "WorkflowCommandCondition_pkey";
ALTER TABLE ONLY public."WorkflowCommandConditionTemplate" DROP CONSTRAINT "WorkflowCommandConditionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowAction" DROP CONSTRAINT "WorkflowAction_pkey";
ALTER TABLE ONLY public."WorkflowActionValidationTemplate" DROP CONSTRAINT "WorkflowActionValidationTemplate_pkey";
ALTER TABLE ONLY public."WorkflowActionTemplate" DROP CONSTRAINT "WorkflowActionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowActionStartCondition" DROP CONSTRAINT "WorkflowActionStartCondition_pkey";
ALTER TABLE ONLY public."WorkflowActionStartConditionTemplate" DROP CONSTRAINT "WorkflowActionStartConditionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowActionProductPlaceholder" DROP CONSTRAINT "WorkflowActionProductPlaceholder_pkey";
ALTER TABLE ONLY public."WorkflowActionPreCommand" DROP CONSTRAINT "WorkflowActionPreCommand_pkey";
ALTER TABLE ONLY public."WorkflowActionPreCommandTemplate" DROP CONSTRAINT "WorkflowActionPreCommandTemplate_pkey";
ALTER TABLE ONLY public."WorkflowActionPostCommand" DROP CONSTRAINT "WorkflowActionPostCommand_pkey";
ALTER TABLE ONLY public."WorkflowActionPostCommandTemplate" DROP CONSTRAINT "WorkflowActionPostCommandTemplate_pkey";
ALTER TABLE ONLY public."WorkflowActionParameter" DROP CONSTRAINT "WorkflowActionParameter_pkey";
ALTER TABLE ONLY public."WorkflowActionParameterTemplate" DROP CONSTRAINT "WorkflowActionParameterTemplate_pkey";
ALTER TABLE ONLY public."WorkflowActionNotificationTemplate" DROP CONSTRAINT "WorkflowActionNotificationTemplate_pkey";
ALTER TABLE ONLY public."WorkflowActionExecutionTemplate" DROP CONSTRAINT "WorkflowActionExecutionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowActionExecuteCommand" DROP CONSTRAINT "WorkflowActionExecuteCommand_pkey";
ALTER TABLE ONLY public."WorkflowActionExecuteCommandTemplate" DROP CONSTRAINT "WorkflowActionExecuteCommandTemplate_pkey";
ALTER TABLE ONLY public."WorkflowActionCompleteCondition" DROP CONSTRAINT "WorkflowActionCompleteCondition_pkey";
ALTER TABLE ONLY public."WorkflowActionCompleteConditionTemplate" DROP CONSTRAINT "WorkflowActionCompleteConditionTemplate_pkey";
ALTER TABLE ONLY public."WorkflowTreeStructureTemplate" DROP CONSTRAINT "Workflow TemplateTreeStructure_pkey";
ALTER TABLE ONLY public."WorkflowTreeStructureTemplate" DROP CONSTRAINT "Workflow TemplateTreeStructur_WorkflowTemplateTreeStructure_key";
ALTER TABLE ONLY public."WorflowParameterTemplate" DROP CONSTRAINT "WorflowParameterTemplate_pkey";
ALTER TABLE ONLY public."ShoppingCartItem" DROP CONSTRAINT "UserShoppingCartItem_pkey";
ALTER TABLE ONLY public."UserClaims" DROP CONSTRAINT "UserClaims_pkey";
ALTER TABLE ONLY public."UserCertificates" DROP CONSTRAINT "UserCertificates_pkey";
ALTER TABLE ONLY public."UserAccounts" DROP CONSTRAINT "UserAccounts_pkey";
ALTER TABLE ONLY public."UserAccountOrganisation" DROP CONSTRAINT "UserAccountOrganisationUnit_pkey";
ALTER TABLE ONLY public."UserAccountOrganisationStructure" DROP CONSTRAINT "UserAccountOrganisationStructure_pkey";
ALTER TABLE ONLY public."UserAccountLoginSession" DROP CONSTRAINT "UserAccountLoginSession_pkey";
ALTER TABLE ONLY public."UserAccountDetail" DROP CONSTRAINT "UserAccountDetail_pkey";
ALTER TABLE ONLY public."UserAccountAudit" DROP CONSTRAINT "UserAccountAudit_pkey";
ALTER TABLE ONLY public."UserAccountArchive" DROP CONSTRAINT "UserAccountArchive_pkey";
ALTER TABLE ONLY public."UserAccountArchive" DROP CONSTRAINT "UserAccountArchive_UserAccountArchiveID_key";
ALTER TABLE ONLY public."TwoFactorAuthTokens" DROP CONSTRAINT "TwoFactorAuthTokens_pkey";
ALTER TABLE ONLY public."TransactionOrder" DROP CONSTRAINT "TransactionOrder_pkey";
ALTER TABLE ONLY public."TransactionOrderItem" DROP CONSTRAINT "TransactionOrderItem_pkey";
ALTER TABLE ONLY public."TransactionLevelComponent" DROP CONSTRAINT "TransactionLevelComponent_pkey";
ALTER TABLE ONLY public."TransactionLevelComponentTemplate" DROP CONSTRAINT "TransactionLevelComponentTemplate_pkey";
ALTER TABLE ONLY public."Tenant" DROP CONSTRAINT "Tenant_pkey";
ALTER TABLE ONLY public."TaxRate" DROP CONSTRAINT "TaxRate_pkey";
ALTER TABLE ONLY public."TaxRateTemplate" DROP CONSTRAINT "TaxRateTemplate_pkey";
ALTER TABLE ONLY public."TFEventType" DROP CONSTRAINT "TFEventType_pkey1";
ALTER TABLE ONLY public."TFEvent" DROP CONSTRAINT "TFEventType_pkey";
ALTER TABLE ONLY public."TFEventTFEventMessageSubscriber" DROP CONSTRAINT "TFEventTFEventMessageSubscriber_pkey";
ALTER TABLE ONLY public."TFEventMessageSubscriber" DROP CONSTRAINT "TFEventMessageSubscriber_pkey";
ALTER TABLE ONLY public."Structure" DROP CONSTRAINT "Structure_pkey";
ALTER TABLE ONLY public."StatusTypeValue" DROP CONSTRAINT "StatusTypeValue_pkey";
ALTER TABLE ONLY public."StatusTypeStructure" DROP CONSTRAINT "StatusTypeStructure_pkey";
ALTER TABLE ONLY public."State" DROP CONSTRAINT "State_pkey";
ALTER TABLE ONLY public."StateItem" DROP CONSTRAINT "StateItem_pkey";
ALTER TABLE ONLY public."SpecificiationAttributeOption" DROP CONSTRAINT "SpecificiationAttributeOption_pkey";
ALTER TABLE ONLY public."SpecificationAttribute" DROP CONSTRAINT "SpecificationAttribute_pkey";
ALTER TABLE ONLY public."SpecificationAttributeTemplate" DROP CONSTRAINT "SpecificationAttributeTemplate_pkey";
ALTER TABLE ONLY public."SpecificationAttributeRelationship" DROP CONSTRAINT "SpecificationAttributeRelationship_pkey";
ALTER TABLE ONLY public."SpecificationAttributeRelationshipTemplate" DROP CONSTRAINT "SpecificationAttributeRelationshipTemplate_pkey";
ALTER TABLE ONLY public."SpecificationAttributeOptionTemplate" DROP CONSTRAINT "SpecificationAttributeOptionTemplate_pkey";
ALTER TABLE ONLY public."Setting" DROP CONSTRAINT "Setting_pkey";
ALTER TABLE ONLY public."ServiceProvider" DROP CONSTRAINT "ServiceProvider_pkey";
ALTER TABLE ONLY public."RoleClaim" DROP CONSTRAINT "RoleTemplateClaim_pkey";
ALTER TABLE ONLY public."Resource" DROP CONSTRAINT "Resource_pkey";
ALTER TABLE ONLY public."Repository" DROP CONSTRAINT "Repository_pkey";
ALTER TABLE ONLY public."RepositoryStructure" DROP CONSTRAINT "RepositoryStructure_pkey";
ALTER TABLE ONLY public."RepositoryStructureRole" DROP CONSTRAINT "RepositoryStructureRole_pkey";
ALTER TABLE ONLY public."RepositoryStructureGroup" DROP CONSTRAINT "RepositoryStructureGroup_pkey";
ALTER TABLE ONLY public."RelationshipRole" DROP CONSTRAINT "RelationshipRoleTemplate_pkey";
ALTER TABLE ONLY public."ProductVariantAttributeValue" DROP CONSTRAINT "ProductVariantAttributeValue_pkey";
ALTER TABLE ONLY public."ProductVariantAttributeValueTemplate" DROP CONSTRAINT "ProductVariantAttributeValueTemplate_pkey";
ALTER TABLE ONLY public."ProductVariantAttributeCombination" DROP CONSTRAINT "ProductVariantAttributeCombination_pkey";
ALTER TABLE ONLY public."ProductVariantAttributeCombinationTemplate" DROP CONSTRAINT "ProductVariantAttributeCombinationTemplate_pkey";
ALTER TABLE ONLY public."ProductTag" DROP CONSTRAINT "ProductTag_pkey";
ALTER TABLE ONLY public."ProductTagTemplate" DROP CONSTRAINT "ProductTagTemplate_pkey";
ALTER TABLE ONLY public."ProductSpecificationBlueprint" DROP CONSTRAINT "ProductSpecificationBlueprint_pkey";
ALTER TABLE ONLY public."ProductSpecificationBlueprintTemplate" DROP CONSTRAINT "ProductSpecificationBlueprintTemplate_pkey";
ALTER TABLE ONLY public."ProductSpecificationAttribute" DROP CONSTRAINT "ProductSpecificationAttribute_pkey";
ALTER TABLE ONLY public."ProductSpecificationAttributeTemplate" DROP CONSTRAINT "ProductSpecificationAttributeTemplate_pkey";
ALTER TABLE ONLY public."ProductSpecificationAttributeOption" DROP CONSTRAINT "ProductSpecificationAttributeOption_pkey";
ALTER TABLE ONLY public."ProductSpecificationAttributeOptionTemplate" DROP CONSTRAINT "ProductSpecificationAttributeOptionTemplate_pkey";
ALTER TABLE ONLY public."ProductRelationship" DROP CONSTRAINT "ProductRelationship_pkey";
ALTER TABLE ONLY public."ProductRelationshipTemplate" DROP CONSTRAINT "ProductRelationshipTemplate_pkey";
ALTER TABLE ONLY public."ProductRelationshipBlueprint" DROP CONSTRAINT "ProductRelationshipBlueprint_pkey";
ALTER TABLE ONLY public."ProductRelationshipBlueprintTemplate" DROP CONSTRAINT "ProductRelationshipBlueprintTemplate_pkey";
ALTER TABLE ONLY public."ProductProductAttribute" DROP CONSTRAINT "ProductProductAttribute_pkey";
ALTER TABLE ONLY public."ProductProductAttributeTemplate" DROP CONSTRAINT "ProductProductAttributeTemplate_pkey";
ALTER TABLE ONLY public."ProductFamily" DROP CONSTRAINT "ProductFamily_pkey";
ALTER TABLE ONLY public."ProductFamilyTemplate" DROP CONSTRAINT "ProductFamilyTemplate_pkey";
ALTER TABLE ONLY public."ProductFamilyProductPackage" DROP CONSTRAINT "ProductFamilyProductPackage_pkey";
ALTER TABLE ONLY public."ProductFamilyProductPackageTemplate" DROP CONSTRAINT "ProductFamilyProductPackageTemplate_pkey";
ALTER TABLE ONLY public."ProductDetail" DROP CONSTRAINT "ProductDetail_pkey";
ALTER TABLE ONLY public."ProductDetailTemplate" DROP CONSTRAINT "ProductDetailTemplate_pkey";
ALTER TABLE ONLY public."ProductAttribute" DROP CONSTRAINT "ProductAttribute_pkey";
ALTER TABLE ONLY public."ProductAttributeTemplate" DROP CONSTRAINT "ProductAttributeTemplate_pkey";
ALTER TABLE ONLY public."Plugin" DROP CONSTRAINT "Plugin_pkey";
ALTER TABLE ONLY public."PluginTemplate" DROP CONSTRAINT "PluginTemplate_pkey";
ALTER TABLE ONLY public."PasswordResetSecrets" DROP CONSTRAINT "PasswordResetSecrets_pkey";
ALTER TABLE ONLY public."PackageProductSpecificationBlueprint" DROP CONSTRAINT "PackageProductSpecificationBlueprint_pkey";
ALTER TABLE ONLY public."PackageProductSpecificationBlueprintTemplate" DROP CONSTRAINT "PackageProductSpecificationBlueprintTemplate_pkey";
ALTER TABLE ONLY public."PackageProductRelationship" DROP CONSTRAINT "PackageProductRelationship_pkey";
ALTER TABLE ONLY public."PackageProductRelationshipTemplate" DROP CONSTRAINT "PackageProductRelationshipTemplate_pkey";
ALTER TABLE ONLY public."PackageProductRelationshipBlueprint" DROP CONSTRAINT "PackageProductRelationshipBlueprint_pkey";
ALTER TABLE ONLY public."PackageProductRelationshipBlueprintTemplate" DROP CONSTRAINT "PackageProductRelationshipBlueprintTemplate_pkey";
ALTER TABLE ONLY public."Organisation" DROP CONSTRAINT "Organisation_pkey";
ALTER TABLE ONLY public."OrganisationWorkflow" DROP CONSTRAINT "OrganisationWorkflow_pkey";
ALTER TABLE ONLY public."OrganisationUnit" DROP CONSTRAINT "OrganisationUnit_pkey";
ALTER TABLE ONLY public."OrganisationUnitStructure" DROP CONSTRAINT "OrganisationUnitStructure_pkey";
ALTER TABLE ONLY public."OrganisationUnitOrganisationRole" DROP CONSTRAINT "OrganisationUnitOrganisationRole_pkey";
ALTER TABLE ONLY public."OrganisationUnitOrganisationGroup" DROP CONSTRAINT "OrganisationUnitOrganisationGroup_pkey";
ALTER TABLE ONLY public."OrganisationTeam" DROP CONSTRAINT "OrganisationTeam_pkey";
ALTER TABLE ONLY public."OrganisationStructure" DROP CONSTRAINT "OrganisationStructure_pkey";
ALTER TABLE ONLY public."OrganisationRole" DROP CONSTRAINT "OrganisationRole_pkey";
ALTER TABLE ONLY public."OrganisationRoleClaim" DROP CONSTRAINT "OrganisationRoleClaim_pkey";
ALTER TABLE ONLY public."OrganisationGroup" DROP CONSTRAINT "OrganisationGroup_pkey";
ALTER TABLE ONLY public."OrganisationGroupRole" DROP CONSTRAINT "OrganisationGroupOrganisationRole_pkey";
ALTER TABLE ONLY public."OrganisationDetail" DROP CONSTRAINT "OrganisationDetail_pkey";
ALTER TABLE ONLY public."OrganisationAccountingPeriod" DROP CONSTRAINT "OrganisationAccountingPeriod_OrganisationAccountingPeriodID_key";
ALTER TABLE ONLY public."Operation" DROP CONSTRAINT "Operation_pkey";
ALTER TABLE ONLY public."NotificationRecipientLog" DROP CONSTRAINT "NotificationRecipientLog_pkey";
ALTER TABLE ONLY public."NotificationConstruct" DROP CONSTRAINT "NotificationConstruct_idx";
ALTER TABLE ONLY public."NotificationConstructGroup" DROP CONSTRAINT "NotificationConstructGroup_idx";
ALTER TABLE ONLY public."NotificationConstructGroupTemplate" DROP CONSTRAINT "NotificationConstructGroupTemplate_idx";
ALTER TABLE ONLY public."NotificationConstructGroupNotificationConstruct" DROP CONSTRAINT "NotificationConstructGroupNotificationConstruct_idx";
ALTER TABLE ONLY public."NotificationConstructGroupNotificationConstructTemplate" DROP CONSTRAINT "NotificationConstructGroupNotificationConstructTemplate_idx";
ALTER TABLE ONLY public."Module" DROP CONSTRAINT "Module_pkey";
ALTER TABLE ONLY public."ModuleWorkflow" DROP CONSTRAINT "ModuleWorkflow_pkey";
ALTER TABLE ONLY public."ModuleWorkflowTemplate" DROP CONSTRAINT "ModuleWorkflowTemplate_pkey";
ALTER TABLE ONLY public."ModuleWorkflowTarget" DROP CONSTRAINT "ModuleWorkflowTarget_pkey";
ALTER TABLE ONLY public."ModuleWorkflowTargetTemplate" DROP CONSTRAINT "ModuleWorkflowTargetTemplate_pkey";
ALTER TABLE ONLY public."ModuleTemplate" DROP CONSTRAINT "ModuleTemplate_pkey";
ALTER TABLE ONLY public."ModuleSubscription" DROP CONSTRAINT "ModuleSubscription_pkey";
ALTER TABLE ONLY public."ModuleSubscriptionTemplate" DROP CONSTRAINT "ModuleSubscriptionTemplate_pkey";
ALTER TABLE ONLY public."ModuleSetting" DROP CONSTRAINT "ModuleSetting_pkey";
ALTER TABLE ONLY public."ModuleSettingTemplate" DROP CONSTRAINT "ModuleSettingTemplate_pkey";
ALTER TABLE ONLY public."ModuleRole" DROP CONSTRAINT "ModuleRole_pkey";
ALTER TABLE ONLY public."ModuleRoleTemplate" DROP CONSTRAINT "ModuleRoleTemplate_pkey";
ALTER TABLE ONLY public."ModuleClaim" DROP CONSTRAINT "ModuleRoleClaim_pkey";
ALTER TABLE ONLY public."ModuleClaimTemplate" DROP CONSTRAINT "ModuleRoleClaimTemplate_pkey";
ALTER TABLE ONLY public."ModulePlugin" DROP CONSTRAINT "ModulePlugin_pkey";
ALTER TABLE ONLY public."ModulePluginTemplate" DROP CONSTRAINT "ModulePluginTemplate_pkey";
ALTER TABLE ONLY public."LinkedAccounts" DROP CONSTRAINT "LinkedAccounts_pkey";
ALTER TABLE ONLY public."LinkedAccountClaims" DROP CONSTRAINT "LinkedAccountClaims_pkey";
ALTER TABLE ONLY public."InterfacePanelValidation" DROP CONSTRAINT "InterfacePanelValidation_idx";
ALTER TABLE ONLY public."InterfacePanelValidationTemplate" DROP CONSTRAINT "InterfacePanelValidationTemplate_idx";
ALTER TABLE ONLY public."InterfacePanelValidationOrganisationType" DROP CONSTRAINT "InterfacePanelValidationOrganisationType_idx";
ALTER TABLE ONLY public."InterfacePanelValidationOrganisationTypeUserType" DROP CONSTRAINT "InterfacePanelValidationOrganisationTypeUserType_idx";
ALTER TABLE ONLY public."InterfacePanelValidationOrganisationTypeTemplate" DROP CONSTRAINT "InterfacePanelValidationOrganisationTypeTemplate_idx";
ALTER TABLE ONLY public."InterfacePanelRole" DROP CONSTRAINT "InterfacePanelRole_pkey";
ALTER TABLE ONLY public."InterfacePanelRoleTemplate" DROP CONSTRAINT "InterfacePanelRoleTemplate_pkey";
ALTER TABLE ONLY public."InterfacePanelClaim" DROP CONSTRAINT "InterfacePanelRoleClaim_pkey";
ALTER TABLE ONLY public."InterfacePanelClaimTemplate" DROP CONSTRAINT "InterfacePanelRoleClaimTemplate_pkey";
ALTER TABLE ONLY public."InterfacePanelFieldDetailValidation" DROP CONSTRAINT "InterfacePanelFieldDetailValidation_idx";
ALTER TABLE ONLY public."InterfacePanelFieldDetailValidationTemplate" DROP CONSTRAINT "InterfacePanelFieldDetailValidationTemplate_idx";
ALTER TABLE ONLY public."InterfacePanelFieldDetailValidationOrganisationType" DROP CONSTRAINT "InterfacePanelFieldDetailValidationOrganisationType_idx";
ALTER TABLE ONLY public."InterfacePanelFieldDetailValidationOrganisationTypeTemplate" DROP CONSTRAINT "InterfacePanelFieldDetailValidationOrganisationTypeTemplate_idx";
ALTER TABLE ONLY public."InterfacePanelFDValidationOrganisationTypeUserType" DROP CONSTRAINT "InterfacePanelFDValidationOrganisationTypeUserType_idx";
ALTER TABLE ONLY public."InterfacePanelFDValidationOrgTypeUserTypeTemplate" DROP CONSTRAINT "InterfacePanelFDValidationOrgTypeUserTypeTemplate_idx";
ALTER TABLE ONLY public."GroupRole" DROP CONSTRAINT "GroupTemplateRole_pkey";
ALTER TABLE ONLY public."ErrorCode" DROP CONSTRAINT "ErrorCode_pkey";
ALTER TABLE ONLY public."DefaultOrganisationTargetTemplate" DROP CONSTRAINT "DefaultOrganisationTarget_pkeyT";
ALTER TABLE ONLY public."DefaultOrganisationTarget" DROP CONSTRAINT "DefaultOrganisationTarget_pkey";
ALTER TABLE ONLY public."DefaultOrganisationRoleTemplate" DROP CONSTRAINT "DefaultOrganisationRole_pkeyT";
ALTER TABLE ONLY public."DefaultOrganisationRole" DROP CONSTRAINT "DefaultOrganisationRole_pkey";
ALTER TABLE ONLY public."DefaultOrganisationRoleClaimTemplate" DROP CONSTRAINT "DefaultOrganisationRoleClaim_pkeyT";
ALTER TABLE ONLY public."DefaultOrganisationRoleClaim" DROP CONSTRAINT "DefaultOrganisationRoleClaim_pkey";
ALTER TABLE ONLY public."DefaultOrganisationGroupTemplate" DROP CONSTRAINT "DefaultOrganisationGroup_pkeyT";
ALTER TABLE ONLY public."DefaultOrganisationGroup" DROP CONSTRAINT "DefaultOrganisationGroup_pkey";
ALTER TABLE ONLY public."DefaultOrganisationGroupRoleTemplate" DROP CONSTRAINT "DefaultOrganisationGroupDefaultOrganisationRole_pkeyT";
ALTER TABLE ONLY public."DefaultOrganisationGroupRole" DROP CONSTRAINT "DefaultOrganisationGroupDefaultOrganisationRole_pkey";
ALTER TABLE ONLY public."DefaultOrganisationBranchTemplate" DROP CONSTRAINT "DefaultOrganisationBranch_pkeyT";
ALTER TABLE ONLY public."DefaultOrganisationBranch" DROP CONSTRAINT "DefaultOrganisationBranch_pkey";
ALTER TABLE ONLY public."CurrencyRate" DROP CONSTRAINT "CurrencyRate_pkey";
ALTER TABLE ONLY public."Contact" DROP CONSTRAINT "Contact_pkey";
ALTER TABLE ONLY public."CompanyHouse" DROP CONSTRAINT "CompanyHouse_pkey";
ALTER TABLE ONLY public."ClassificationType" DROP CONSTRAINT "ClassificationType_pkey";
ALTER TABLE ONLY public."ClassificationTypeCategory" DROP CONSTRAINT "ClassificationTypeCategory_pkey";
ALTER TABLE ONLY public."BusMessage" DROP CONSTRAINT "BusMessage_pkey";
ALTER TABLE ONLY public."BusMessageContent" DROP CONSTRAINT "BusMessageContent_pkey";
ALTER TABLE ONLY public."BankSortCode" DROP CONSTRAINT "BankSortCode_pkey";
ALTER TABLE ONLY public."Attachment" DROP CONSTRAINT "Attachment_pkey";
ALTER TABLE ONLY public."AttachmentDetail" DROP CONSTRAINT "AttachmentDetail_pkey";
ALTER TABLE ONLY public."AttachmentDetailRole" DROP CONSTRAINT "AttachmentDetailRole_pkey";
ALTER TABLE ONLY public."AttachmentDetailGroup" DROP CONSTRAINT "AttachmentDetailGroup_pkey";
ALTER TABLE ONLY public."ApplicationStage" DROP CONSTRAINT "ApplicationStage_pkey";
ALTER TABLE ONLY public."ApplicationStageWorkflow" DROP CONSTRAINT "ApplicationStageWorkflow_pkey";
ALTER TABLE ONLY public."Address" DROP CONSTRAINT "Address_pkey";
ALTER TABLE ONLY public."AddressChronology" DROP CONSTRAINT "AddressChronology_pkey";
ALTER TABLE ONLY public."Account" DROP CONSTRAINT "Account_pkey";
SET search_path = legal, pg_catalog;

ALTER TABLE ONLY legal."LegalOrganisationDetails" DROP CONSTRAINT "pkLegalOrganisationDetails";
SET search_path = hangfire, pg_catalog;

ALTER TABLE ONLY hangfire.state DROP CONSTRAINT state_pkey;
ALTER TABLE ONLY hangfire.set DROP CONSTRAINT set_pkey;
ALTER TABLE ONLY hangfire.set DROP CONSTRAINT set_key_value_key;
ALTER TABLE ONLY hangfire.server DROP CONSTRAINT server_pkey;
ALTER TABLE ONLY hangfire.schema DROP CONSTRAINT schema_pkey;
ALTER TABLE ONLY hangfire.lock DROP CONSTRAINT lock_resource_key;
ALTER TABLE ONLY hangfire.list DROP CONSTRAINT list_pkey;
ALTER TABLE ONLY hangfire.jobqueue DROP CONSTRAINT jobqueue_pkey;
ALTER TABLE ONLY hangfire.jobparameter DROP CONSTRAINT jobparameter_pkey;
ALTER TABLE ONLY hangfire.job DROP CONSTRAINT job_pkey;
ALTER TABLE ONLY hangfire.hash DROP CONSTRAINT hash_pkey;
ALTER TABLE ONLY hangfire.hash DROP CONSTRAINT hash_key_field_key;
ALTER TABLE ONLY hangfire.counter DROP CONSTRAINT counter_pkey;
SET search_path = audit, pg_catalog;

ALTER TABLE ONLY audit.logged_actions DROP CONSTRAINT logged_actions_pkey;
SET search_path = public, pg_catalog;

ALTER TABLE public."WorkflowInstanceExecutionStatusEvent" ALTER COLUMN "WorkflowInstanceExecutionStatusEventID" DROP DEFAULT;
ALTER TABLE public."WorkflowInstanceExecutionDataItem" ALTER COLUMN "WorkflowInstanceExecutionDataItemID" DROP DEFAULT;
ALTER TABLE public."WorkflowInstanceExecution" ALTER COLUMN "WorkflowInstanceExecutionID" DROP DEFAULT;
ALTER TABLE public."WorkflowExecutionStatus" ALTER COLUMN "WorkflowExecutionStatusID" DROP DEFAULT;
ALTER TABLE public."UserAccountArchive" ALTER COLUMN "UserAccountArchiveCategoryID" DROP DEFAULT;
ALTER TABLE public."UserAccountArchive" ALTER COLUMN "UserAccountArchiveTypeID" DROP DEFAULT;
ALTER TABLE public."Structure" ALTER COLUMN "StructureID" DROP DEFAULT;
ALTER TABLE public."Setting" ALTER COLUMN "Id" DROP DEFAULT;
ALTER TABLE public."RoleClaim" ALTER COLUMN "RoleClaimID" DROP DEFAULT;
ALTER TABLE public."RepositoryStructureRole" ALTER COLUMN "RepositoryStructureRoleID" DROP DEFAULT;
ALTER TABLE public."RepositoryStructureGroup" ALTER COLUMN "RepositoryStructureGroupID" DROP DEFAULT;
ALTER TABLE public."OrganisationUnitStructure" ALTER COLUMN "OrganisationUnitStructureID" DROP DEFAULT;
ALTER TABLE public."OrganisationUnit" ALTER COLUMN "OrganisationUnitID" DROP DEFAULT;
ALTER TABLE public."OrganisationRoleClaim" ALTER COLUMN "OrganisationRoleClaimID" DROP DEFAULT;
ALTER TABLE public."DefaultOrganisationRoleClaimTemplate" ALTER COLUMN "DefaultOrganisationRoleClaimTemplateID" DROP DEFAULT;
ALTER TABLE public."DefaultOrganisationRoleClaim" ALTER COLUMN "DefaultOrganisationRoleClaimID" DROP DEFAULT;
ALTER TABLE public."CurrencyRate" ALTER COLUMN "CurrencyRateID" DROP DEFAULT;
ALTER TABLE public."ClassificationTypeCategory" ALTER COLUMN "ClassificationTypeCategoryID" DROP DEFAULT;
ALTER TABLE public."ClassificationType" ALTER COLUMN "ClassificationTypeID" DROP DEFAULT;
ALTER TABLE public."AttachmentDetailRole" ALTER COLUMN "AttachmentDetailRoleID" DROP DEFAULT;
ALTER TABLE public."AttachmentDetailGroup" ALTER COLUMN "AttachmentDetailGroupID" DROP DEFAULT;
SET search_path = hangfire, pg_catalog;

ALTER TABLE hangfire.state ALTER COLUMN id DROP DEFAULT;
ALTER TABLE hangfire.set ALTER COLUMN id DROP DEFAULT;
ALTER TABLE hangfire.list ALTER COLUMN id DROP DEFAULT;
ALTER TABLE hangfire.jobqueue ALTER COLUMN id DROP DEFAULT;
ALTER TABLE hangfire.jobparameter ALTER COLUMN id DROP DEFAULT;
ALTER TABLE hangfire.job ALTER COLUMN id DROP DEFAULT;
ALTER TABLE hangfire.hash ALTER COLUMN id DROP DEFAULT;
ALTER TABLE hangfire.counter ALTER COLUMN id DROP DEFAULT;
SET search_path = audit, pg_catalog;

ALTER TABLE audit.logged_actions ALTER COLUMN event_id DROP DEFAULT;
SET search_path = sts, pg_catalog;

DROP TABLE sts."StsTransactionPropertyDetail";
DROP TABLE sts."StsTransactionProcessLog";
DROP TABLE sts."StsTransactionComponent";
DROP TABLE sts."StsTransaction";
DROP TABLE sts."StsSourceOfFundsStsDocument";
DROP TABLE sts."StsSourceOfFunds";
DROP TABLE sts."StsSearchRelation";
DROP TABLE sts."StsSearchPropertyDetail";
DROP TABLE sts."StsSearchProcessLog";
DROP TABLE sts."StsSearchDetail";
DROP TABLE sts."StsSearch";
DROP TABLE sts."StsInviteProcessLog";
DROP TABLE sts."StsInvite";
DROP TABLE sts."StsDocumentProcessLog";
DROP TABLE sts."StsDocument";
DROP TABLE sts."StsAuthorityStsDocument";
DROP TABLE sts."StsAuthority";
DROP TABLE sts."StsActorStsTransaction";
DROP TABLE sts."StsActorStsSearch";
DROP TABLE sts."StsActorStructure";
DROP TABLE sts."StsActorPurchase";
DROP TABLE sts."StsActorProcessLog";
DROP TABLE sts."StsActorAuthority";
DROP TABLE sts."StsActor";
DROP TABLE sts."StsAccountDocument";
DROP TABLE sts."PropertyDetail";
DROP TABLE sts."LRTitle";
DROP TABLE sts."LRRegisterExtract";
DROP TABLE sts."LRDocument";
SET search_path = public_audit, pg_catalog;

DROP TABLE public_audit."ProductDetail";
DROP TABLE public_audit."Plan";
SET search_path = public, pg_catalog;

DROP VIEW public."vWorkflowTree";
DROP VIEW public."vWorkflowInstanceStepTrace";
DROP VIEW public."vWorkflowInstanceStatus";
DROP VIEW public."vWorkflowInstanceRetry";
DROP VIEW public."vWorkflowInstanceNotStarted";
DROP VIEW public."vWorkflowInstanceExecutionStatusEvent";
DROP VIEW public."vWorkflowInstanceExecutionNotCompleted";
DROP VIEW public."vWorkflowInstanceProgress";
DROP VIEW public."vWorkflowActionParameter";
DROP VIEW public."vUserWorkflowInstanceStatus";
DROP VIEW public."vUserStatus";
DROP VIEW public."vUserRoleRegulatorDetail";
DROP VIEW public."vUserAccountOrganisation";
DROP VIEW public."vUserAccountNotLoggedIn";
DROP VIEW public."vTemporaryUsersNotLoggedIn";
DROP VIEW public."vStatusTypeTemplate";
DROP VIEW public."vState";
DROP VIEW public."vRole";
DROP VIEW public."vResource";
DROP VIEW public."vProductSpecificationOption";
DROP VIEW public."vProductSpecification";
DROP VIEW public."vProductDiscount";
DROP VIEW public."vProductDeduction";
DROP VIEW public."vProductAttribute";
DROP VIEW public."vPlanSubscriptionStatusWithBillingAndPaymentMethodStatus";
DROP VIEW public."vOrgansiationClaim";
DROP VIEW public."vOrganisationWithStatusAndAdmin";
DROP VIEW public."vOrganisationUserType";
DROP VIEW public."vOrganisationStatus";
DROP VIEW public."vOrganisationPaymentMethodStatus";
DROP VIEW public."vOrganisationFinancialStatus";
DROP VIEW public."vOrganisationDetail";
DROP VIEW public."vOrganisationCheckoutDiscount";
DROP VIEW public."vOrganisation";
DROP VIEW public."vNotificationWithUAOVerificationCode";
DROP VIEW public."vNotificationRecipientStatus";
DROP VIEW public."vUserAccountOrganisationUserTypeOrganisationType";
DROP VIEW public."vNotificationConstructGroupNotificationConstruct";
DROP VIEW public."vNotificationConstructGroup";
DROP VIEW public."vNotificationConstruct";
DROP VIEW public."vInvoiceWithCurrentTransactionOrderStatus";
DROP VIEW public."vInterfacePanelValidationForUI";
DROP VIEW public."vInterfacePanelForUI";
DROP VIEW public."vInterfacePanelFieldDetails";
DROP VIEW public."vGroup";
DROP VIEW public."vGlobalAccountingCurrentPeriod";
DROP VIEW public."vFieldDetailValidationForUI";
DROP VIEW public."vFieldDetailForUI";
DROP VIEW public."vDefaultOrganisationUserTypeOrganisationType";
DROP VIEW public."vDefaultOrganisationStatus";
DROP VIEW public."vStatusType";
DROP VIEW public."vDefaultEmailAddress";
DROP VIEW public."vCountryDeduction";
DROP VIEW public."vCountryAndCurrency";
DROP VIEW public."vCompany";
DROP VIEW public."vClassification";
DROP VIEW public."vClaimSource";
DROP VIEW public."vBusTaskSchedule";
DROP VIEW public."vBranch";
DROP VIEW public."vAttachment";
DROP TABLE public.timeoutentity;
DROP TABLE public.subscription;
DROP SEQUENCE public.plangroup_plangroupid_seq;
DROP SEQUENCE public.organisationtype_organisationtypeid_seq;
DROP SEQUENCE public.organisationaccountingperiod_organisationaccountingperiodid_seq;
DROP SEQUENCE public.globalaccountingperiod_globalaccountingperiodid_seq;
DROP SEQUENCE public.elmah_error_sequence;
DROP SEQUENCE public.currencyrate_seq;
DROP TABLE public.containsagadata;
DROP SEQUENCE public.contactregulator_regulatorid_seq;
DROP SEQUENCE public.busmessagecontent_busmessagecontentid_seq;
DROP TABLE public.appmanager;
DROP TABLE public."WorkflowTreeStructureTemplate";
DROP TABLE public."WorkflowTreeStructureActionTemplate";
DROP TABLE public."WorkflowTreeStructureAction";
DROP TABLE public."WorkflowTreeStructure";
DROP TABLE public."WorkflowTransistionWorkflowDecisionTemplate";
DROP TABLE public."WorkflowTransistionWorkflowDecision";
DROP TABLE public."WorkflowTransistionWorkflowActionTemplate";
DROP TABLE public."WorkflowTransistionWorkflowAction";
DROP TABLE public."WorkflowTransistionTemplate";
DROP TABLE public."WorkflowTransistionStartConditionTemplate";
DROP TABLE public."WorkflowTransistionStartCondition";
DROP TABLE public."WorkflowTransistionParameterTemplate";
DROP TABLE public."WorkflowTransistionParameter";
DROP TABLE public."WorkflowTransistionHierarchyTemplate";
DROP TABLE public."WorkflowTransistionHierarchy";
DROP TABLE public."WorkflowTransistionCompleteConditionTemplate";
DROP TABLE public."WorkflowTransistionCompleteCondition";
DROP TABLE public."WorkflowTransistion";
DROP TABLE public."WorkflowTemplate";
DROP TABLE public."WorkflowStatusTypeTemplate";
DROP TABLE public."WorkflowStatusType";
DROP TABLE public."WorkflowRoleTemplate";
DROP TABLE public."WorkflowRole";
DROP TABLE public."WorkflowParameterTemplate";
DROP TABLE public."WorkflowParameter";
DROP TABLE public."WorkflowObjectTypeTemplate";
DROP TABLE public."WorkflowObjectType";
DROP TABLE public."WorkflowNotificationConstructTemplate";
DROP TABLE public."WorkflowNotificationConstruct";
DROP TABLE public."WorkflowMainStartConditionTemplate";
DROP TABLE public."WorkflowMainStartCondition";
DROP TABLE public."WorkflowMainPreCommandTemplate";
DROP TABLE public."WorkflowMainPreCommand";
DROP TABLE public."WorkflowMainPostCommandTemplate";
DROP TABLE public."WorkflowMainPostCommand";
DROP TABLE public."WorkflowMainParameterTemplate";
DROP TABLE public."WorkflowMainParameter";
DROP TABLE public."WorkflowMainExecuteCommandTemplate";
DROP TABLE public."WorkflowMainExecuteCommand";
DROP TABLE public."WorkflowMainCompleteConditionTemplate";
DROP TABLE public."WorkflowMainCompleteCondition";
DROP TABLE public."WorkflowInstanceSession";
DROP TABLE public."WorkflowInstanceRestriction";
DROP SEQUENCE public."WorkflowInstanceExecution_WorkflowInstanceExecutionID_seq";
DROP TABLE public."WorkflowInstanceExecutionTrace";
DROP SEQUENCE public."WorkflowInstanceExecutionStat_WorkflowInstanceExecutionStat_seq";
DROP TABLE public."WorkflowInstanceExecutionStatusEvent";
DROP SEQUENCE public."WorkflowInstanceExecutionData_WorkflowInstanceExecutionData_seq";
DROP TABLE public."WorkflowInstanceExecutionDataItem";
DROP TABLE public."WorkflowInstanceExecution";
DROP TABLE public."WorkflowInstance";
DROP TABLE public."WorkflowHierarchyTemplate";
DROP TABLE public."WorkflowHierarchy";
DROP TABLE public."WorkflowExecutionTemplate";
DROP SEQUENCE public."WorkflowExecutionStatus_WorkflowExecutionStatusID_seq";
DROP TABLE public."WorkflowExecutionStatus";
DROP TABLE public."WorkflowExecution";
DROP TABLE public."WorkflowDecisionTemplate";
DROP TABLE public."WorkflowDecisionSuccessTemplate";
DROP TABLE public."WorkflowDecisionSuccess";
DROP TABLE public."WorkflowDecisionParameterTemplate";
DROP TABLE public."WorkflowDecisionParameter";
DROP TABLE public."WorkflowDecisionFailureTemplate";
DROP TABLE public."WorkflowDecisionFailure";
DROP TABLE public."WorkflowDecisionExecuteCommandTemplate";
DROP TABLE public."WorkflowDecisionExecuteCommand";
DROP TABLE public."WorkflowDecisionErrorTemplate";
DROP TABLE public."WorkflowDecisionError";
DROP TABLE public."WorkflowDecision";
DROP TABLE public."WorkflowConditionTemplate";
DROP TABLE public."WorkflowConditionParameterTemplate";
DROP TABLE public."WorkflowConditionParameter";
DROP TABLE public."WorkflowCondition";
DROP TABLE public."WorkflowCommandTemplate";
DROP TABLE public."WorkflowCommandParameterTemplate";
DROP TABLE public."WorkflowCommandParameter";
DROP TABLE public."WorkflowCommandConditionTemplate";
DROP TABLE public."WorkflowCommandCondition";
DROP TABLE public."WorkflowCommand";
DROP TABLE public."WorkflowClaimTemplate";
DROP TABLE public."WorkflowClaim";
DROP TABLE public."WorkflowActionValidationTemplate";
DROP TABLE public."WorkflowActionTemplate";
DROP TABLE public."WorkflowActionStartConditionTemplate";
DROP TABLE public."WorkflowActionStartCondition";
DROP TABLE public."WorkflowActionProductPlaceholder";
DROP TABLE public."WorkflowActionPreCommandTemplate";
DROP TABLE public."WorkflowActionPreCommand";
DROP TABLE public."WorkflowActionPostCommandTemplate";
DROP TABLE public."WorkflowActionPostCommand";
DROP TABLE public."WorkflowActionParameterTemplate";
DROP TABLE public."WorkflowActionParameterNotificationConstructTemplate";
DROP TABLE public."WorkflowActionParameterNotificationConstruct";
DROP TABLE public."WorkflowActionParameter";
DROP TABLE public."WorkflowActionNotificationTemplate";
DROP TABLE public."WorkflowActionExecutionTemplate";
DROP TABLE public."WorkflowActionExecuteCommandTemplate";
DROP TABLE public."WorkflowActionExecuteCommand";
DROP TABLE public."WorkflowActionCompleteConditionTemplate";
DROP TABLE public."WorkflowActionCompleteCondition";
DROP TABLE public."WorkflowAction";
DROP TABLE public."Workflow";
DROP TABLE public."WorflowParameterTemplate";
DROP TABLE public."UserType";
DROP TABLE public."UserClaims";
DROP TABLE public."UserCertificates";
DROP TABLE public."UserAccounts";
DROP TABLE public."UserAccountOrganisationTeam";
DROP TABLE public."UserAccountOrganisationStructure";
DROP TABLE public."UserAccountOrganisationStatus";
DROP TABLE public."UserAccountOrganisationSecondaryUserType";
DROP TABLE public."UserAccountOrganisationRole";
DROP TABLE public."UserAccountOrganisationGroup";
DROP TABLE public."UserAccountOrganisation";
DROP TABLE public."UserAccountLoginSessionData";
DROP TABLE public."UserAccountLoginSession";
DROP TABLE public."UserAccountLedgerAccount";
DROP TABLE public."UserAccountDetail";
DROP TABLE public."UserAccountAudit";
DROP SEQUENCE public."UserAccountArchive_UserAccountArchiveTypeID_seq";
DROP SEQUENCE public."UserAccountArchive_UserAccountArchiveCategoryID_seq";
DROP TABLE public."UserAccountArchive";
DROP TABLE public."TwoFactorAuthTokens";
DROP TABLE public."TransactionOrderProcessLog";
DROP TABLE public."TransactionOrderPaymentError";
DROP TABLE public."TransactionOrderPayment";
DROP TABLE public."TransactionOrderItem";
DROP TABLE public."TransactionOrder";
DROP TABLE public."TransactionLevelComponentTemplate";
DROP TABLE public."TransactionLevelComponent";
DROP TABLE public."Tenant";
DROP TABLE public."TaxRateTemplate";
DROP TABLE public."TaxRate";
DROP TABLE public."TFEventType";
DROP TABLE public."TFEventTFEventMessageSubscriber";
DROP TABLE public."TFEventMessageSubscriber";
DROP TABLE public."TFEvent";
DROP SEQUENCE public."Structure_StructureID_seq";
DROP TABLE public."Structure";
DROP TABLE public."StatusTypeValueTemplate";
DROP TABLE public."StatusTypeValue";
DROP TABLE public."StatusTypeTemplate";
DROP TABLE public."StatusTypeStructureTransitionTemplate";
DROP TABLE public."StatusTypeStructureTransition";
DROP TABLE public."StatusTypeStructureTemplate";
DROP TABLE public."StatusTypeStructure";
DROP TABLE public."StatusTypeRoleTemplate";
DROP TABLE public."StatusTypeRole";
DROP TABLE public."StatusTypeClaimTemplate";
DROP TABLE public."StatusTypeClaim";
DROP TABLE public."StatusType";
DROP TABLE public."StateItem";
DROP TABLE public."State";
DROP TABLE public."SpecificiationAttributeOption";
DROP TABLE public."SpecificationAttributeTemplate";
DROP TABLE public."SpecificationAttributeRelationshipTemplate";
DROP TABLE public."SpecificationAttributeRelationship";
DROP TABLE public."SpecificationAttributeOptionTemplate";
DROP TABLE public."SpecificationAttribute";
DROP TABLE public."ShoppingCartItemProductSpecification";
DROP TABLE public."ShoppingCartItemProductAttribute";
DROP TABLE public."ShoppingCartItem";
DROP TABLE public."ShoppingCartDeduction";
DROP TABLE public."ShoppingCartBlueprintTemplate";
DROP TABLE public."ShoppingCartBlueprintProductTemplate";
DROP TABLE public."ShoppingCartBlueprintProduct";
DROP TABLE public."ShoppingCartBlueprint";
DROP TABLE public."ShoppingCart";
DROP SEQUENCE public."Setting_Id_seq";
DROP TABLE public."Setting";
DROP TABLE public."ServiceProvider";
DROP TABLE public."ServiceInterfaceProcessLog";
DROP TABLE public."ServiceInterface";
DROP TABLE public."ServiceDefinitionDetail";
DROP TABLE public."ServiceDefinition";
DROP SEQUENCE public."RoleTemplateClaim_RoleTemplateClaimID_seq";
DROP TABLE public."RoleClaim";
DROP TABLE public."Role";
DROP TABLE public."ResourceOperationTarget";
DROP TABLE public."ResourceOperation";
DROP TABLE public."Resource";
DROP SEQUENCE public."RepositoryStructureRole_RepositoryStructureRoleID_seq";
DROP TABLE public."RepositoryStructureRole";
DROP SEQUENCE public."RepositoryStructureGroup_RepositoryStructureGroupID_seq";
DROP TABLE public."RepositoryStructureGroup";
DROP TABLE public."RepositoryStructure";
DROP TABLE public."Repository";
DROP TABLE public."RelationshipRole";
DROP TABLE public."ProductVariantAttributeValueTemplate";
DROP TABLE public."ProductVariantAttributeValue";
DROP TABLE public."ProductVariantAttributeCombinationTemplate";
DROP TABLE public."ProductVariantAttributeCombination";
DROP TABLE public."ProductTemplate";
DROP TABLE public."ProductTagTemplate";
DROP TABLE public."ProductTag";
DROP TABLE public."ProductSpecificationBlueprintTemplate";
DROP TABLE public."ProductSpecificationBlueprint";
DROP TABLE public."ProductSpecificationAttributeTemplate";
DROP TABLE public."ProductSpecificationAttributeOptionTemplate";
DROP TABLE public."ProductSpecificationAttributeOption";
DROP TABLE public."ProductSpecificationAttribute";
DROP TABLE public."ProductRoleTemplate";
DROP TABLE public."ProductRole";
DROP TABLE public."ProductRelationshipTemplate";
DROP TABLE public."ProductRelationshipBlueprintTemplate";
DROP TABLE public."ProductRelationshipBlueprint";
DROP TABLE public."ProductRelationship";
DROP TABLE public."ProductPurchaseReference";
DROP TABLE public."ProductPurchaseProcessLog";
DROP TABLE public."ProductPurchaseBusTaskProcessLog";
DROP TABLE public."ProductPurchaseBusTaskProcessDetail";
DROP TABLE public."ProductPurchase";
DROP TABLE public."ProductProductAttributeTemplate";
DROP TABLE public."ProductProductAttribute";
DROP TABLE public."ProductPlanTemplate";
DROP TABLE public."ProductPlan";
DROP TABLE public."ProductFamilyTemplate";
DROP TABLE public."ProductFamilyProductPackageTemplate";
DROP TABLE public."ProductFamilyProductPackage";
DROP TABLE public."ProductFamily";
DROP TABLE public."ProductDiscountTemplate";
DROP TABLE public."ProductDiscount";
DROP TABLE public."ProductDetailTemplate";
DROP TABLE public."ProductDetail";
DROP TABLE public."ProductDeductionTemplate";
DROP TABLE public."ProductDeduction";
DROP TABLE public."ProductComponentTierTemplate";
DROP TABLE public."ProductComponentTier";
DROP TABLE public."ProductClaimTemplate";
DROP TABLE public."ProductClaim";
DROP TABLE public."ProductBusTaskTemplate";
DROP TABLE public."ProductBusTask";
DROP TABLE public."ProductAttributeTemplate";
DROP TABLE public."ProductAttribute";
DROP TABLE public."Product";
DROP TABLE public."PluginTemplate";
DROP TABLE public."Plugin";
DROP TABLE public."PlanTransactionTemplate";
DROP TABLE public."PlanTransactionComponentTierTemplate";
DROP TABLE public."PlanTransactionComponentTier";
DROP TABLE public."PlanTransaction";
DROP TABLE public."PlanTemplate";
DROP TABLE public."PlanSubscriptionProcessLog";
DROP TABLE public."PlanSubscriptionPeriod";
DROP TABLE public."PlanSubscriptionPaymentPlan";
DROP TABLE public."PlanSubscriptionBillingProcessLog";
DROP TABLE public."PlanSubscription";
DROP TABLE public."PlanProductTemplate";
DROP TABLE public."PlanProduct";
DROP TABLE public."PlanGroup";
DROP TABLE public."PlanGlobalPaymentMethodTemplate";
DROP TABLE public."PlanGlobalPaymentMethod";
DROP TABLE public."PlanDiscountTemplate";
DROP TABLE public."PlanDiscount";
DROP TABLE public."PlanBillingTemplate";
DROP TABLE public."PlanBilling";
DROP TABLE public."Plan";
DROP TABLE public."PasswordResetSecrets";
DROP TABLE public."PackageTemplate";
DROP TABLE public."PackageProductTemplate";
DROP TABLE public."PackageProductSpecificationBlueprintTemplate";
DROP TABLE public."PackageProductSpecificationBlueprint";
DROP TABLE public."PackageProductRelationshipTemplate";
DROP TABLE public."PackageProductRelationshipBlueprintTemplate";
DROP TABLE public."PackageProductRelationshipBlueprint";
DROP TABLE public."PackageProductRelationship";
DROP TABLE public."PackageProduct";
DROP TABLE public."Package";
DROP TABLE public."OrganisationWorkflow";
DROP TABLE public."OrganisationUserType";
DROP SEQUENCE public."OrganisationUnit_OrganisationUnitID_seq";
DROP SEQUENCE public."OrganisationUnitStructure_OrganisationUnitStructureID_seq";
DROP TABLE public."OrganisationUnitStructure";
DROP TABLE public."OrganisationUnitOrganisationRole";
DROP TABLE public."OrganisationUnitOrganisationGroup";
DROP TABLE public."OrganisationUnit";
DROP TABLE public."OrganisationType";
DROP TABLE public."OrganisationTradingName";
DROP SEQUENCE public."OrganisationTeam_OrganisationTeamID_seq";
DROP TABLE public."OrganisationTeamSettingTemplate";
DROP TABLE public."OrganisationTeamSetting";
DROP TABLE public."OrganisationTeam";
DROP TABLE public."OrganisationStructure";
DROP TABLE public."OrganisationStatusType";
DROP TABLE public."OrganisationStatus";
DROP TABLE public."OrganisationShoppingCartBlueprint";
DROP TABLE public."OrganisationSettingTemplate";
DROP TABLE public."OrganisationSetting";
DROP SEQUENCE public."OrganisationRoleClaim_OrganisationRoleClaimID_seq";
DROP TABLE public."OrganisationRoleClaim";
DROP TABLE public."OrganisationRole";
DROP TABLE public."OrganisationProductPurchase";
DROP TABLE public."OrganisationPlanSubscription";
DROP TABLE public."OrganisationPaymentMethod";
DROP TABLE public."OrganisationLedgerAccount";
DROP TABLE public."OrganisationInsuranceDetails";
DROP TABLE public."OrganisationGroupRole";
DROP TABLE public."OrganisationGroup";
DROP TABLE public."OrganisationFinancialDetail";
DROP TABLE public."OrganisationDiscount";
DROP TABLE public."OrganisationDirectDebitMandateProcessLog";
DROP TABLE public."OrganisationDirectDebitMandate";
DROP TABLE public."OrganisationDetail";
DROP TABLE public."OrganisationBankAccount";
DROP TABLE public."OrganisationArtefact";
DROP TABLE public."OrganisationAccountingPeriod";
DROP TABLE public."Organisation";
DROP TABLE public."Operation";
DROP TABLE public."NotificationRecipientLog";
DROP TABLE public."NotificationRecipient";
DROP TABLE public."NotificationConstructTemplate";
DROP TABLE public."NotificationConstructTargetTemplate";
DROP TABLE public."NotificationConstructTarget";
DROP TABLE public."NotificationConstructRoleTemplate";
DROP TABLE public."NotificationConstructRole";
DROP TABLE public."NotificationConstructParameterTemplate";
DROP TABLE public."NotificationConstructParameter";
DROP TABLE public."NotificationConstructGroupTemplate";
DROP TABLE public."NotificationConstructGroupNotificationConstructTemplate";
DROP TABLE public."NotificationConstructGroupNotificationConstruct";
DROP TABLE public."NotificationConstructGroup";
DROP TABLE public."NotificationConstructDataTemplate";
DROP TABLE public."NotificationConstructData";
DROP TABLE public."NotificationConstructClaimTemplate";
DROP TABLE public."NotificationConstructClaim";
DROP TABLE public."NotificationConstruct";
DROP TABLE public."Notification";
DROP TABLE public."ModuleWorkflowTemplate";
DROP TABLE public."ModuleWorkflowTargetTemplate";
DROP TABLE public."ModuleWorkflowTarget";
DROP TABLE public."ModuleWorkflow";
DROP TABLE public."ModuleTemplate";
DROP TABLE public."ModuleSubscriptionTemplate";
DROP TABLE public."ModuleSubscription";
DROP TABLE public."ModuleStatusTypeTemplate";
DROP TABLE public."ModuleStatusType";
DROP TABLE public."ModuleSettingTemplate";
DROP TABLE public."ModuleSetting";
DROP TABLE public."ModuleRoleTemplate";
DROP TABLE public."ModuleRole";
DROP TABLE public."ModuleProductTemplate";
DROP TABLE public."ModuleProduct";
DROP TABLE public."ModulePluginTemplate";
DROP TABLE public."ModulePlugin";
DROP TABLE public."ModuleNotificationConstructTemplate";
DROP TABLE public."ModuleNotificationConstruct";
DROP TABLE public."ModuleDependencyTemplate";
DROP TABLE public."ModuleDependency";
DROP TABLE public."ModuleClaimTemplate";
DROP TABLE public."ModuleClaim";
DROP TABLE public."ModuleArtefactTemplate";
DROP TABLE public."ModuleArtefact";
DROP TABLE public."Module";
DROP TABLE public."LinkedAccounts";
DROP TABLE public."LinkedAccountClaims";
DROP TABLE public."LedgerAccountTransaction";
DROP TABLE public."LedgerAccountBalance";
DROP TABLE public."InvoiceProcessLog";
DROP TABLE public."InvoiceLineItem";
DROP TABLE public."Invoice";
DROP TABLE public."InterfacePanelValidationTemplate";
DROP TABLE public."InterfacePanelValidationOrganisationTypeUserTypeTemplate";
DROP TABLE public."InterfacePanelValidationOrganisationTypeUserType";
DROP TABLE public."InterfacePanelValidationOrganisationTypeTemplate";
DROP TABLE public."InterfacePanelValidationOrganisationType";
DROP TABLE public."InterfacePanelValidation";
DROP TABLE public."InterfacePanelTemplate";
DROP TABLE public."InterfacePanelSettingTemplate";
DROP TABLE public."InterfacePanelSetting";
DROP TABLE public."InterfacePanelRoleTemplate";
DROP TABLE public."InterfacePanelRole";
DROP TABLE public."InterfacePanelOrganisationTypeUserTypeTemplate";
DROP TABLE public."InterfacePanelOrganisationTypeUserType";
DROP TABLE public."InterfacePanelOrganisationTypeTemplate";
DROP TABLE public."InterfacePanelOrganisationType";
DROP TABLE public."InterfacePanelFieldDetailValidationTemplate";
DROP TABLE public."InterfacePanelFieldDetailValidationOrganisationTypeTemplate";
DROP TABLE public."InterfacePanelFieldDetailValidationOrganisationType";
DROP TABLE public."InterfacePanelFieldDetailValidation";
DROP TABLE public."InterfacePanelFieldDetailTemplate";
DROP TABLE public."InterfacePanelFieldDetailOrganisationTypeTemplate";
DROP TABLE public."InterfacePanelFieldDetailOrganisationType";
DROP TABLE public."InterfacePanelFieldDetail";
DROP TABLE public."InterfacePanelFDValidationOrganisationTypeUserType";
DROP TABLE public."InterfacePanelFDValidationOrgTypeUserTypeTemplate";
DROP TABLE public."InterfacePanelFDOrganisationTypeUserTypeTemplate";
DROP TABLE public."InterfacePanelFDOrganisationTypeUserType";
DROP TABLE public."InterfacePanelClaimTemplate";
DROP TABLE public."InterfacePanelClaim";
DROP TABLE public."InterfacePanel";
DROP TABLE public."GroupRole";
DROP TABLE public."Group";
DROP TABLE public."GlobalPaymentMethod";
DROP TABLE public."GlobalDirectDebitCollectionPeriod";
DROP TABLE public."GlobalAccountingPeriod";
DROP TABLE public."FieldDetailTemplate";
DROP TABLE public."FieldDetail";
DROP TABLE public."ErrorCode";
DROP TABLE public."DiscountTemplate";
DROP TABLE public."DiscountRelatedProductTemplate";
DROP TABLE public."DiscountRelatedProduct";
DROP TABLE public."DiscountComponentTierTemplate";
DROP TABLE public."DiscountComponentTier";
DROP TABLE public."Discount";
DROP TABLE public."DirectDebitSchedule";
DROP TABLE public."DirectDebitMandateTemplate";
DROP TABLE public."DirectDebitMandate";
DROP TABLE public."DefaultOrganisationWorkflowTemplate";
DROP TABLE public."DefaultOrganisationWorkflow";
DROP TABLE public."DefaultOrganisationUserTypeTemplate";
DROP TABLE public."DefaultOrganisationUserType";
DROP TABLE public."DefaultOrganisationUserTargetTemplate";
DROP TABLE public."DefaultOrganisationUserTarget";
DROP TABLE public."DefaultOrganisationTemplate";
DROP TABLE public."DefaultOrganisationTargetTemplate";
DROP TABLE public."DefaultOrganisationTarget";
DROP TABLE public."DefaultOrganisationStatusTypeTemplate";
DROP TABLE public."DefaultOrganisationStatusType";
DROP TABLE public."DefaultOrganisationShoppingCartBlueprintTemplate";
DROP TABLE public."DefaultOrganisationShoppingCartBlueprint";
DROP TABLE public."DefaultOrganisationRoleTemplate";
DROP TABLE public."DefaultOrganisationRoleTargetTemplate";
DROP TABLE public."DefaultOrganisationRoleTarget";
DROP SEQUENCE public."DefaultOrganisationRoleClaim_DefaultOrganisationRoleClaimID_seq";
DROP SEQUENCE public."DefaultOrganisationRoleClaimT_DefaultOrganisationRoleClaimT_seq";
DROP TABLE public."DefaultOrganisationRoleClaimTemplate";
DROP TABLE public."DefaultOrganisationRoleClaim";
DROP TABLE public."DefaultOrganisationRole";
DROP TABLE public."DefaultOrganisationProductTemplate";
DROP TABLE public."DefaultOrganisationProduct";
DROP TABLE public."DefaultOrganisationPaymentMethodTemplate";
DROP TABLE public."DefaultOrganisationPaymentMethod";
DROP TABLE public."DefaultOrganisationNotificationConstructTemplate";
DROP TABLE public."DefaultOrganisationNotificationConstruct";
DROP TABLE public."DefaultOrganisationModuleTemplate";
DROP TABLE public."DefaultOrganisationModule";
DROP TABLE public."DefaultOrganisationLedgerTemplate";
DROP TABLE public."DefaultOrganisationLedger";
DROP TABLE public."DefaultOrganisationGroupTemplate";
DROP TABLE public."DefaultOrganisationGroupTargetTemplate";
DROP TABLE public."DefaultOrganisationGroupTarget";
DROP TABLE public."DefaultOrganisationGroupRoleTemplate";
DROP TABLE public."DefaultOrganisationGroupRole";
DROP TABLE public."DefaultOrganisationGroup";
DROP TABLE public."DefaultOrganisationBucketTemplate";
DROP TABLE public."DefaultOrganisationBucket";
DROP TABLE public."DefaultOrganisationBranchTemplate";
DROP TABLE public."DefaultOrganisationBranch";
DROP TABLE public."DefaultOrganisationArtefactTemplate";
DROP TABLE public."DefaultOrganisationArtefact";
DROP TABLE public."DefaultOrganisation";
DROP TABLE public."DeductionTemplate";
DROP TABLE public."DeductionProductTemplate";
DROP TABLE public."DeductionProduct";
DROP TABLE public."DeductionComponentTierTemplate";
DROP TABLE public."DeductionComponentTier";
DROP TABLE public."Deduction";
DROP SEQUENCE public."CurrencyRate_currencyrateid_seq";
DROP TABLE public."CurrencyRate";
DROP TABLE public."CurrencyCode";
DROP TABLE public."CountryDeductionTemplate";
DROP TABLE public."CountryDeduction";
DROP TABLE public."CountryCode";
DROP TABLE public."ContactRegulator";
DROP TABLE public."ContactPhone";
DROP TABLE public."ContactName";
DROP TABLE public."Contact";
DROP TABLE public."ComponentTierTemplate";
DROP TABLE public."ComponentTier";
DROP TABLE public."CompanyHouse";
DROP SEQUENCE public."ClassificationType_ClassificationTypeID_seq";
DROP SEQUENCE public."ClassificationTypeCategory_ClassificationTypeCategoryID_seq";
DROP TABLE public."ClassificationTypeCategory";
DROP TABLE public."ClassificationType";
DROP TABLE public."BusTaskScheduleProcessLog";
DROP TABLE public."BusTaskSchedule";
DROP TABLE public."BusTaskHandler";
DROP TABLE public."BusTask";
DROP TABLE public."BusMessageProcessLog";
DROP TABLE public."BusMessageContent";
DROP TABLE public."BusMessage";
DROP TABLE public."BucketTemplate";
DROP TABLE public."Bucket";
DROP TABLE public."BillingTemplate";
DROP TABLE public."Billing";
DROP TABLE public."BankSortCode";
DROP SEQUENCE public."AttachmentDetailRole_AttachmentDetailRoleID_seq";
DROP TABLE public."AttachmentDetailRole";
DROP SEQUENCE public."AttachmentDetailGroup_AttachmentDetailGroupID_seq";
DROP TABLE public."AttachmentDetailGroup";
DROP TABLE public."AttachmentDetail";
DROP TABLE public."Attachment";
DROP TABLE public."ArtefactWorkflowTemplate";
DROP TABLE public."ArtefactWorkflow";
DROP TABLE public."ArtefactTemplate";
DROP TABLE public."ArtefactSubscriptionTemplate";
DROP TABLE public."ArtefactSubscription";
DROP TABLE public."ArtefactStatusTypeTemplate";
DROP TABLE public."ArtefactStatusType";
DROP TABLE public."ArtefactRoleTemplate";
DROP TABLE public."ArtefactRole";
DROP TABLE public."ArtefactProductTemplate";
DROP TABLE public."ArtefactProduct";
DROP TABLE public."ArtefactNotificationConstructTemplate";
DROP TABLE public."ArtefactNotificationConstruct";
DROP TABLE public."ArtefactDependencyTemplate";
DROP TABLE public."ArtefactDependencyStatusTypeTemplate";
DROP TABLE public."ArtefactDependencyStatusType";
DROP TABLE public."ArtefactDependency";
DROP TABLE public."ArtefactClaimTemplate";
DROP TABLE public."ArtefactClaim";
DROP TABLE public."Artefact";
DROP TABLE public."ApplicationStageWorkflow";
DROP TABLE public."ApplicationStage";
DROP TABLE public."AddressChronology";
DROP TABLE public."Address";
DROP TABLE public."ActorClaimRoleMapping";
DROP TABLE public."Actor";
DROP TABLE public."Account";
SET search_path = legal, pg_catalog;

DROP TABLE legal."LegalOrganisationDetails";
SET search_path = hangfire, pg_catalog;

DROP SEQUENCE hangfire.state_id_seq;
DROP TABLE hangfire.state;
DROP SEQUENCE hangfire.set_id_seq;
DROP TABLE hangfire.set;
DROP TABLE hangfire.server;
DROP TABLE hangfire.schema;
DROP TABLE hangfire.lock;
DROP SEQUENCE hangfire.list_id_seq;
DROP TABLE hangfire.list;
DROP SEQUENCE hangfire.jobqueue_id_seq;
DROP TABLE hangfire.jobqueue;
DROP SEQUENCE hangfire.jobparameter_id_seq;
DROP TABLE hangfire.jobparameter;
DROP SEQUENCE hangfire.job_id_seq;
DROP TABLE hangfire.job;
DROP SEQUENCE hangfire.hash_id_seq;
DROP TABLE hangfire.hash;
DROP SEQUENCE hangfire.counter_id_seq;
DROP TABLE hangfire.counter;
SET search_path = audit, pg_catalog;

DROP SEQUENCE audit.logged_actions_event_id_seq;
DROP TABLE audit.logged_actions;
SET search_path = public_audit, pg_catalog;

DROP FUNCTION public_audit."ProductDetail"();
DROP FUNCTION public_audit."Plan"();
SET search_path = public, pg_catalog;

DROP FUNCTION public.truncate_tables(username character varying);
DROP FUNCTION public.fn_newid();
DROP FUNCTION public."fn_PromoteWorkflowTemplate"("WorkflowTemplateID" uuid, "WorkflowTemplateVersionNumber" integer);
DROP FUNCTION public."fn_PromoteStatusTypeTemplate"(statustypetemplateid uuid, statustypetemplateversionnumber integer);
DROP FUNCTION public."fn_PromoteShoppingCartBlueprintTemplate"(shoppingcartblueprinttemplateid uuid);
DROP FUNCTION public."fn_PromoteProductTemplate"(producttemplateid uuid, producttemplateversionnumber integer, processpackage boolean, processrelationship boolean, processfamily boolean);
DROP FUNCTION public."fn_PromoteNotificationConstructTemplate"(notificationconstructtemplateid uuid, notificationconstructtemplateversionnumber integer);
DROP FUNCTION public."fn_PromoteModuleTemplate"(moduletemplateid uuid, moduletemplateversionnumber integer);
DROP FUNCTION public."fn_PromoteInterfacePanelTemplate"(interfacepaneltemplateid uuid, interfacepaneltemplateversionnumber integer);
DROP FUNCTION public."fn_PromoteDefaultOrganisationTemplate"(defaultorganisationtemplateid uuid, defaultorganisationtemplateversionnumber integer);
DROP FUNCTION public."fn_PromoteArtefactTemplate"(artefacttemplateid uuid, artefacttemplateversionnumber integer);
DROP FUNCTION public."fn_ProcessBillingAndPeriodForPlanSubscription"(plansubscriptionid uuid, plansubscriptionversionnumber integer, globalaccountingperiodidthatisclosing integer);
DROP FUNCTION public."fn_GetWorkFlowTreeStructure"();
DROP FUNCTION public."fn_GetWeekOfMonth"(p_date date, p_direction integer);
DROP FUNCTION public."fn_GetUserClaims"(userid uuid, organisationid uuid);
DROP FUNCTION public."fn_GetLastDayOfMonth"(date);
DROP FUNCTION public."fn_CreateOrganisationFromDefault"(organisationtypeid integer, defaultorganisationid uuid, organisationversionnumber integer, organisationname character varying, organisationdescription character varying);
DROP FUNCTION public."fn_CreateAuditTableAndColumns"(tablename character varying, schemaname character varying);
DROP FUNCTION public."fn_AddUserToTemporaryOrganisation"(useraccountid uuid);
DROP FUNCTION public."fn_AddUserToOrganisation"(useraccountid uuid, organisationid uuid, usertypeid uuid, organisationbranchid uuid);
DROP FUNCTION public."fn_AddPlanSubscriptionToOrganisation"(organisationid uuid, planid uuid, planversionnumber integer, globalpaymentmethodid uuid, quantity integer, activate boolean, startimmediately boolean);
DROP FUNCTION public."fn_AddAuditColumnToTable"(tablename character varying, schemaname character varying);
DROP FUNCTION public."fn_AddAudit"();
DROP FUNCTION public.create_audit(enable_replica boolean, tablename character varying, schemaname character varying);
SET search_path = audit, pg_catalog;

DROP FUNCTION audit.if_modified_func();
DROP FUNCTION audit.audit_table(target_table character varying, audit_rows boolean, audit_query_text boolean, ignored_cols text[]);
DROP FUNCTION audit.audit_table(target_table character varying, audit_rows boolean, audit_query_text boolean);
DROP FUNCTION audit.audit_table(target_table character varying);
DROP EXTENSION "uuid-ossp";
DROP EXTENSION hstore;
DROP EXTENSION adminpack;
DROP EXTENSION plpgsql;
DROP SCHEMA sts;
DROP SCHEMA public_audit;
DROP SCHEMA public;
DROP SCHEMA legal;
DROP SCHEMA hangfire;
DROP SCHEMA audit;
--
-- TOC entry 10 (class 2615 OID 40152)
-- Name: audit; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA audit;


ALTER SCHEMA audit OWNER TO postgres;

--
-- TOC entry 8658 (class 0 OID 0)
-- Dependencies: 10
-- Name: SCHEMA audit; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON SCHEMA audit IS 'Out-of-table audit/history logging tables and trigger functions';


--
-- TOC entry 6 (class 2615 OID 40153)
-- Name: hangfire; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA hangfire;


ALTER SCHEMA hangfire OWNER TO postgres;

--
-- TOC entry 7 (class 2615 OID 40154)
-- Name: legal; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA legal;


ALTER SCHEMA legal OWNER TO postgres;

--
-- TOC entry 11 (class 2615 OID 2200)
-- Name: public; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA public;


ALTER SCHEMA public OWNER TO postgres;

--
-- TOC entry 8660 (class 0 OID 0)
-- Dependencies: 11
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON SCHEMA public IS 'standard public schema';


--
-- TOC entry 8 (class 2615 OID 40155)
-- Name: public_audit; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA public_audit;


ALTER SCHEMA public_audit OWNER TO postgres;

--
-- TOC entry 9 (class 2615 OID 40156)
-- Name: sts; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA sts;


ALTER SCHEMA sts OWNER TO postgres;

--
-- TOC entry 822 (class 3079 OID 11855)
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner:
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- TOC entry 8662 (class 0 OID 0)
-- Dependencies: 822
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner:
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- TOC entry 821 (class 3079 OID 40157)
-- Name: adminpack; Type: EXTENSION; Schema: -; Owner:
--

CREATE EXTENSION IF NOT EXISTS adminpack WITH SCHEMA pg_catalog;


--
-- TOC entry 8663 (class 0 OID 0)
-- Dependencies: 821
-- Name: EXTENSION adminpack; Type: COMMENT; Schema: -; Owner:
--

COMMENT ON EXTENSION adminpack IS 'administrative functions for PostgreSQL';


--
-- TOC entry 824 (class 3079 OID 40166)
-- Name: hstore; Type: EXTENSION; Schema: -; Owner:
--

CREATE EXTENSION IF NOT EXISTS hstore WITH SCHEMA public;


--
-- TOC entry 8664 (class 0 OID 0)
-- Dependencies: 824
-- Name: EXTENSION hstore; Type: COMMENT; Schema: -; Owner:
--

COMMENT ON EXTENSION hstore IS 'data type for storing sets of (key, value) pairs';


--
-- TOC entry 823 (class 3079 OID 40289)
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner:
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- TOC entry 8665 (class 0 OID 0)
-- Dependencies: 823
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner:
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


SET search_path = audit, pg_catalog;

--
-- TOC entry 904 (class 1255 OID 40300)
-- Name: audit_table(character varying); Type: FUNCTION; Schema: audit; Owner: postgres
--

CREATE FUNCTION audit_table(target_table character varying) RETURNS void
    LANGUAGE sql
    AS $_$
SELECT audit.audit_table($1, BOOLEAN 't', BOOLEAN 't');
$_$;


ALTER FUNCTION audit.audit_table(target_table character varying) OWNER TO postgres;

--
-- TOC entry 8666 (class 0 OID 0)
-- Dependencies: 904
-- Name: FUNCTION audit_table(target_table character varying); Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON FUNCTION audit_table(target_table character varying) IS '
Add auditing support to the given table. Row-level changes will be logged with full client query text. No cols are ignored.
';


--
-- TOC entry 905 (class 1255 OID 40301)
-- Name: audit_table(character varying, boolean, boolean); Type: FUNCTION; Schema: audit; Owner: postgres
--

CREATE FUNCTION audit_table(target_table character varying, audit_rows boolean, audit_query_text boolean) RETURNS void
    LANGUAGE sql
    AS $_$
SELECT audit.audit_table($1, $2, $3, ARRAY[]::text[]);
$_$;


ALTER FUNCTION audit.audit_table(target_table character varying, audit_rows boolean, audit_query_text boolean) OWNER TO postgres;

--
-- TOC entry 906 (class 1255 OID 40302)
-- Name: audit_table(character varying, boolean, boolean, text[]); Type: FUNCTION; Schema: audit; Owner: postgres
--

CREATE FUNCTION audit_table(target_table character varying, audit_rows boolean, audit_query_text boolean, ignored_cols text[]) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
  stm_targets text = 'INSERT OR UPDATE OR DELETE OR TRUNCATE';
  _q_txt text;
  _ignored_cols_snip text = '';
BEGIN
    EXECUTE 'DROP TRIGGER IF EXISTS audit_trigger_row ON ' || target_table;
    EXECUTE 'DROP TRIGGER IF EXISTS audit_trigger_stm ON ' || target_table;

    IF audit_rows THEN
        IF array_length(ignored_cols,1) > 0 THEN
            _ignored_cols_snip = ', ' || quote_literal(ignored_cols);
        END IF;
        _q_txt = 'CREATE TRIGGER audit_trigger_row AFTER INSERT OR UPDATE OR DELETE ON ' ||
                 target_table ||
                 ' FOR EACH ROW EXECUTE PROCEDURE audit.if_modified_func(' ||
                 quote_literal(audit_query_text) || _ignored_cols_snip || ');';
        RAISE NOTICE '%',_q_txt;
        EXECUTE _q_txt;
        stm_targets = 'TRUNCATE';
    ELSE
    END IF;

    _q_txt = 'CREATE TRIGGER audit_trigger_stm AFTER ' || stm_targets || ' ON ' ||
             target_table ||
             ' FOR EACH STATEMENT EXECUTE PROCEDURE audit.if_modified_func('||
             quote_literal(audit_query_text) || ');';
    RAISE NOTICE '%',_q_txt;
    EXECUTE _q_txt;

END;
$$;


ALTER FUNCTION audit.audit_table(target_table character varying, audit_rows boolean, audit_query_text boolean, ignored_cols text[]) OWNER TO postgres;

--
-- TOC entry 8667 (class 0 OID 0)
-- Dependencies: 906
-- Name: FUNCTION audit_table(target_table character varying, audit_rows boolean, audit_query_text boolean, ignored_cols text[]); Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON FUNCTION audit_table(target_table character varying, audit_rows boolean, audit_query_text boolean, ignored_cols text[]) IS '
Add auditing support to a table.

Arguments:
   target_table:     Table name, schema qualified if not on search_path
   audit_rows:       Record each row change, or only audit at a statement level
   audit_query_text: Record the text of the client query that triggered the audit event?
   ignored_cols:     Columns to exclude from update diffs, ignore updates that change only ignored cols.
';


--
-- TOC entry 907 (class 1255 OID 40303)
-- Name: if_modified_func(); Type: FUNCTION; Schema: audit; Owner: postgres
--

CREATE FUNCTION if_modified_func() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO pg_catalog, public
    AS $$
DECLARE
    audit_row audit.logged_actions;
    include_values boolean;
    log_diffs boolean;
    h_old hstore;
    h_new hstore;
    excluded_cols text[] = ARRAY[]::text[];
BEGIN
    IF TG_WHEN <> 'AFTER' THEN
        RAISE EXCEPTION 'audit.if_modified_func() may only run as an AFTER trigger';
    END IF;

    audit_row = ROW(
        nextval('audit.logged_actions_event_id_seq'), -- event_id
        TG_TABLE_SCHEMA::text,                        -- schema_name
        TG_TABLE_NAME::text,                          -- table_name
        TG_RELID,                                     -- relation OID for much quicker searches
        session_user::text,                           -- session_user_name
        current_timestamp,                            -- action_tstamp_tx
        statement_timestamp(),                        -- action_tstamp_stm
        clock_timestamp(),                            -- action_tstamp_clk
        txid_current(),                               -- transaction ID
        (SELECT setting FROM pg_settings WHERE name = 'application_name'),
        inet_client_addr(),                           -- client_addr
        inet_client_port(),                           -- client_port
        current_query(),                              -- top-level query or queries (if multistatement) from client
        substring(TG_OP,1,1),                         -- action
        NULL, NULL,                                   -- row_data, changed_fields
        'f'                                           -- statement_only
        );

    IF NOT TG_ARGV[0]::boolean IS DISTINCT FROM 'f'::boolean THEN
        audit_row.client_query = NULL;
    END IF;

    IF TG_ARGV[1] IS NOT NULL THEN
        excluded_cols = TG_ARGV[1]::text[];
    END IF;

    IF (TG_OP = 'UPDATE' AND TG_LEVEL = 'ROW') THEN
        audit_row.row_data = hstore(OLD.*);
        audit_row.changed_fields =  (hstore(NEW.*) - audit_row.row_data) - excluded_cols;
        IF audit_row.changed_fields = hstore('') THEN
            -- All changed fields are ignored. Skip this update.
            RETURN NULL;
        END IF;
    ELSIF (TG_OP = 'DELETE' AND TG_LEVEL = 'ROW') THEN
        audit_row.row_data = hstore(OLD.*) - excluded_cols;
    ELSIF (TG_OP = 'INSERT' AND TG_LEVEL = 'ROW') THEN
        audit_row.row_data = hstore(NEW.*) - excluded_cols;
    ELSIF (TG_LEVEL = 'STATEMENT' AND TG_OP IN ('INSERT','UPDATE','DELETE','TRUNCATE')) THEN
        audit_row.statement_only = 't';
    ELSE
        RAISE EXCEPTION '[audit.if_modified_func] - Trigger func added as trigger for unhandled case: %, %',TG_OP, TG_LEVEL;
        RETURN NULL;
    END IF;
    INSERT INTO audit.logged_actions VALUES (audit_row.*);
    RETURN NULL;
END;
$$;


ALTER FUNCTION audit.if_modified_func() OWNER TO postgres;

--
-- TOC entry 8668 (class 0 OID 0)
-- Dependencies: 907
-- Name: FUNCTION if_modified_func(); Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON FUNCTION if_modified_func() IS '
Track changes to a table at the statement and/or row level.

Optional parameters to trigger in CREATE TRIGGER call:

param 0: boolean, whether to log the query text. Default ''t''.

param 1: text[], columns to ignore in updates. Default [].

         Updates to ignored cols are omitted from changed_fields.

         Updates with only ignored cols changed are not inserted
         into the audit log.

         Almost all the processing work is still done for updates
         that ignored. If you need to save the load, you need to use
         WHEN clause on the trigger instead.

         No warning or error is issued if ignored_cols contains columns
         that do not exist in the target table. This lets you specify
         a standard set of ignored columns.

There is no parameter to disable logging of values. Add this trigger as
a ''FOR EACH STATEMENT'' rather than ''FOR EACH ROW'' trigger if you do not
want to log row values.

Note that the user name logged is the login role for the session. The audit trigger
cannot obtain the active role because it is reset by the SECURITY DEFINER invocation
of the audit trigger its self.
';


SET search_path = public, pg_catalog;

--
-- TOC entry 908 (class 1255 OID 40304)
-- Name: create_audit(boolean, character varying, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION create_audit(enable_replica boolean, tablename character varying, schemaname character varying) RETURNS SETOF text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
SELECT format('CREATE SCHEMA IF NOT EXISTS %I;', nspname || '_audit')
FROM pg_catalog.pg_namespace n
WHERE
    n.nspname NOT IN ('pg_catalog','information_schema') AND /* Leave out the stuff in the catalog */
    n.nspname !~ '(^(pg|)_|_audit$)' /* Also omit anything that looks like PostgreSQL, Slony or Audit owns it. */
UNION ALL
(
    WITH t0 AS (
        SELECT
            n.nspname AS "schema",
            c.relname AS "table",
            a.attname AS "column_name",
            pg_catalog.format_type(a.atttypid, a.atttypmod) AS "column_type"
        FROM
            pg_catalog.pg_attribute a
        JOIN
            pg_catalog.pg_class c
            ON (
                c.relkind = 'r' AND
                c.oid = a.attrelid
            )
        JOIN
            pg_catalog.pg_namespace n
            ON (
                c.relnamespace = n.oid AND
                n.nspname NOT IN ('pg_catalog','information_schema') AND /* Leave out the stuff in the catalog */
                n.nspname !~ '(^(pg|)_|_audit$)' /* Also omit anything that looks like PostgreSQL, Slony or Audit owns it. */
            )
        WHERE
            a.attnum > 0 AND
            NOT a.attisdropped
            AND lower(n.nspname) = lower(schemaname)
            AND lower(c.relname) = lower(tablename)

        ORDER BY c.relname, a.attnum
    )
    SELECT
        format(
            $q$CREATE TABLE IF NOT EXISTS %I.%I (
    %s,
    stamp TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT current_timestamp,
    "current_user" TEXT NOT NULL DEFAULT current_user,
    "session_user" TEXT NOT NULL DEFAULT session_user,
    operation TEXT NOT NULL
);

CREATE OR REPLACE FUNCTION %I.%I()
RETURNS TRIGGER
LANGUAGE plpgsql
AS $$
DECLARE
    v_old %I.%I%%ROWTYPE;
    v_new %I.%I%%ROWTYPE;
    v_ret %I.%I%%ROWTYPE;
BEGIN
    IF (TG_OP = 'DELETE') THEN
        v_old := OLD;
        v_new := NULL;
        v_ret := OLD;
    ELSIF (TG_OP = 'INSERT') THEN
        v_old := NULL;
        v_new := NEW;
        v_ret := NEW;
    ELSIF (TG_OP = 'UPDATE') THEN
        v_old := OLD;
        v_new := NEW;
        v_ret := NEW;
    END IF;
    INSERT INTO %I.%I (
        %s,
        operation
    )
    VALUES((v_old).*, TG_OP);
    RETURN v_ret;
END;
$$;

CREATE TRIGGER %I
AFTER INSERT OR UPDATE OR DELETE ON %I.%I
    FOR EACH ROW EXECUTE PROCEDURE %I.%I();
%s
INSERT INTO %I.%I (
    %s,
    operation
)
SELECT
    %s,
    'INSERT'
FROM %I.%I;

$q$,
        "schema" || '_audit', "table",
        string_agg(

            quote_ident("column_name") || ' ' || column_type, E',\n '
        ),
        "schema" || '_audit', "table",
        "schema", "table",
        "schema", "table",
        "schema", "table",
        "schema" || '_audit', "table",
        string_agg(quote_ident("column_name"), E',\n '),
        quote_ident("schema" || '_' || "table" || '_audit'),
        "schema", "table",
        "schema" || '_audit', "table",
        CASE
        WHEN enable_replica THEN
            format(
                '%sALTER TABLE %I.%I ENABLE REPLICA TRIGGER %I;%s',
                E'\n', "schema", "table", "schema" || '_' || "table" || '_audit', E'\n'
            )
        ELSE ''
        END,
        "schema" || '_audit', "table",
        string_agg(quote_ident("column_name"), E',\n '),
        string_agg(quote_ident("column_name"), E',\n '),
        "schema", "table"
        ) AS "table and trigger"
        FROM
            t0
        GROUP BY "schema", "table"
)
UNION ALL
/* Indexes for each unique key */
(
    WITH t1 AS (
        SELECT
            n.nspname::text,
            c.relname::text,
            array_agg(a.attname::text ORDER BY k.ord) AS "cols"
        FROM
            pg_catalog.pg_class c
        JOIN
            pg_catalog.pg_namespace n
            ON (
                c.relkind = 'r' AND
                c.relnamespace = n.oid AND
                n.nspname NOT IN ('pg_catalog','information_schema') AND
                n.nspname !~ '(^(pg|)_|_audit$)'
            )
        JOIN
            pg_catalog.pg_constraint co
            ON (
                c.oid = co.conrelid AND
                co.contype IN ('p','u')
            )
        CROSS JOIN LATERAL
            /*
* XXX In 9.4+, replace the hack below with
* UNNEST(co.conkey) WITH ORDINALITY AS k(col, ord)
*/
            (SELECT col, row_number() OVER () AS ord FROM UNNEST(co.conkey) AS u(col)) AS k
        JOIN
            pg_catalog.pg_attribute a
            ON (
                k.col = a.attnum AND
                c.oid = a.attrelid
            )
        WHERE lower(n.nspname) = lower(schemaname)
            AND lower(c.relname) = lower(tablename)
        GROUP BY n.nspname, c.relname, co.conname
    )
    SELECT
        format(
            'CREATE INDEX ON %I.%I (%s);',
            nspname || '_audit',
            relname,
            (SELECT string_agg(u || '_' || v, ', ') FROM UNNEST(cols) AS u(u))
        )
    FROM
        t1
    CROSS JOIN
        (VALUES('old'),('new')) AS o_n(v)
);
$_$;


ALTER FUNCTION public.create_audit(enable_replica boolean, tablename character varying, schemaname character varying) OWNER TO postgres;

--
-- TOC entry 909 (class 1255 OID 40306)
-- Name: fn_AddAudit(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_AddAudit"() RETURNS void
    LANGUAGE plpgsql
    AS $$
begin

  PERFORM public."fn_CreateAuditTableAndColumns"('Organisation','Public');
  PERFORM public."fn_CreateAuditTableAndColumns"('Plan','Public');
  PERFORM public."fn_CreateAuditTableAndColumns"('ProductDetail','Public');
  PERFORM public."fn_CreateAuditTableAndColumns"('UserAccounts','Public');
end
$$;


ALTER FUNCTION public."fn_AddAudit"() OWNER TO postgres;

--
-- TOC entry 910 (class 1255 OID 40307)
-- Name: fn_AddAuditColumnToTable(character varying, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_AddAuditColumnToTable"(tablename character varying, schemaname character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE my_row    RECORD;
begin
    FOR my_row IN
        SELECT t.table_name
        FROM   information_schema.tables t
        WHERE  lower(t.table_schema)  = lower(schemaname) and lower(t.table_name) = lower(tablename)
    LOOP

     IF NOT EXISTS
    (
    SELECT attname FROM pg_attribute WHERE attrelid =
    (SELECT oid FROM pg_class WHERE lower(relname) =  lower(tablename) )
     AND (attname = 'CreatedOn')
     )
     THEN
        EXECUTE('ALTER TABLE ' || 'public."' || my_row.table_name || '" ADD COLUMN "CreatedOn" date NOT NULL DEFAULT CURRENT_DATE;');
    END IF;

    IF NOT EXISTS
    (
    SELECT attname FROM pg_attribute WHERE attrelid =
    (SELECT oid FROM pg_class  WHERE lower(relname) =  lower(tablename) )
     AND (attname = 'CreatedBy')
     )
     THEN
        EXECUTE('ALTER TABLE ' || 'public."' || my_row.table_name || '" ADD COLUMN "CreatedBy" varchar(200) NULL;');
    END IF;

     IF NOT EXISTS
    (
    SELECT attname FROM pg_attribute WHERE attrelid =
    (SELECT oid FROM pg_class  WHERE lower(relname) =  lower(tablename) )
     AND (attname = 'ModifiedOn')
     )
     THEN
        EXECUTE('ALTER TABLE ' || 'public."' || my_row.table_name || '" ADD COLUMN "ModifiedOn" date NULL;');
    END IF;

    IF NOT EXISTS
    (
    SELECT attname FROM pg_attribute WHERE attrelid =
    (SELECT oid FROM pg_class  WHERE lower(relname) =  lower(tablename) )
     AND (attname = 'ModifiedBy')
     )
     THEN
        EXECUTE('ALTER TABLE ' || 'public."' || my_row.table_name || '" ADD COLUMN "ModifiedBy" varchar(200) NULL;');
    END IF;

    IF NOT EXISTS
    (
    SELECT attname FROM pg_attribute WHERE attrelid =
    (SELECT oid FROM pg_class  WHERE lower(relname) =  lower(tablename) )
     AND (attname = 'IsActive')
     )
     THEN
        EXECUTE('ALTER TABLE ' || 'public."' || my_row.table_name || '" ADD COLUMN "IsActive" boolean NOT NULL DEFAULT true;');
    END IF;

    IF NOT EXISTS
    (
    SELECT attname FROM pg_attribute WHERE attrelid =
    (SELECT oid FROM pg_class  WHERE lower(relname) =  lower(tablename) )
     AND (attname = 'IsDeleted')
     )
     THEN
        EXECUTE('ALTER TABLE ' || 'public."' || my_row.table_name || '" ADD COLUMN "IsDeleted" boolean NOT NULL DEFAULT false;');
    END IF;

    END LOOP;

end
$$;


ALTER FUNCTION public."fn_AddAuditColumnToTable"(tablename character varying, schemaname character varying) OWNER TO postgres;

--
-- TOC entry 911 (class 1255 OID 40308)
-- Name: fn_AddPlanSubscriptionToOrganisation(uuid, uuid, integer, uuid, integer, boolean, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_AddPlanSubscriptionToOrganisation"(organisationid uuid, planid uuid, planversionnumber integer, globalpaymentmethodid uuid, quantity integer, activate boolean, startimmediately boolean) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
  PlanSubscriptionID UUID;
  PlanSubscriptionVersionNumber integer;
  BillingID uuid;
  PlanHasTrial boolean;
BEGIN

PlanSubscriptionID := (select uuid_generate_v1());

PlanSubscriptionVersionNumber = 1;

BillingID := (select pb."BillingID" from "PlanBilling" pb where pb."PlanID" = planid and pb."PlanVersionNumber" = planversionnumber and pb."IsActive" = true and pb."IsDeleted" = false limit 1);

PlanHasTrial := (select (case when pb."TrialPeriod" > 0 then true else false end) from "Plan" pb where pb."PlanID" = planid and pb."PlanVersionNumber" = planversionnumber);

-- create subscription
INSERT INTO
  public."PlanSubscription"
(
  "PlanSubscriptionID",
  "PlanSubscriptionVersionNumber",
  "HasInfinitePeriods",
  "PlanQuantity",
  "CreatedOn",
  "CreatedBy",
  "ActivatedOn",
  "CountryCode",
  "IsFree",
  "PlanID",
  "PlanVersionNumber",
  "OrganisationID",
  "IsRenewal"
)
SELECT
   PlanSubscriptionID,
   PlanSubscriptionVersionNumber,
   p."HasInfinitePeriods",
   quantity,
   CURRENT_DATE,
   'system',
   (CASE WHEN activate = true then CURRENT_DATE else null end),
   p."CountryCode",
   p."IsFree",
   p."PlanID",
   p."PlanVersionNumber",
   organisationid,
   FALSE
FROM
  public."Plan" p

  where p."PlanID" = planid and p."PlanVersionNumber" = planversionnumber
  and not exists (select * from "PlanSubscription" ps where ps."PlanID" = planid and ps."PlanVersionNumber" = planversionnumber and ps."IsRenewal" = false limit 1);

-- first period
-- only supports month currently for period
INSERT INTO
  public."PlanSubscriptionPeriod"
(
  "PlanSubscriptionID",
  "PlanSubscriptionVersionNumber",
  "CreatedOn",
  "StartDate",
  "EndDate",
  "IsCancellationPeriod",
  "PeriodNumber",
  "IsTrialPeriod",
  "TrialPeriodNumber",
  "TrialStartDate",
  "TrialEndDate",
  "IsClosed"
)
SELECT
	PlanSubscriptionID,
    PlanSubscriptionVersionNumber,
    CURRENT_DATE,
   -- start date
    to_date((((((((((gap."Year" || '-'::text) || gap."Month") || '-'::text) || gap."StartDay") ||
      ' '::text) || 0) || ':'::text) || 0) || ':'::text) || 0, 'YYYY-MM-DD HH24:MI:SS'::text),
    -- end date
    to_date((((((((((gap."Year" || '-'::text) || gap."Month") || '-'::text) || gap."EndDay") ||
      ' '::text) || 0) || ':'::text) || 0) || ':'::text) || 0, 'YYYY-MM-DD HH24:MI:SS'::text),
    false,
    1,
    (CASE WHEN p."TrialPeriod" > 0 then true else false end),
    (CASE WHEN p."TrialPeriod" > 0 then 1 else null end),
    (CASE WHEN p."TrialPeriod" > 0 then CURRENT_DATE else NULL end),
    (CASE WHEN p."TrialPeriod" = 0 then null else
    	 (CASE WHEN tperiod."Name" = 'Month' then (current_date + interval '1 month' * p."TrialPeriod") end) end),
    false
FROM
   public."Plan" p

   left outer join "ClassificationType" period on period."ClassificationTypeID" = p."PeriodUnitID" and period."ClassificationTypeCategoryID" = 8006
   left outer join "ClassificationType" tperiod on tperiod."ClassificationTypeID" = p."TrialPeriodUnitID" and tperiod."ClassificationTypeCategoryID" = 8006

left outer join "GlobalAccountingPeriod" gap on gap."IsCurrentPeriod" = true

  where p."PlanID" = planid and p."PlanVersionNumber" = planversionnumber;

-- payment plan
INSERT INTO
  public."PlanSubscriptionPaymentPlan"
(
  "GlobalPaymentMethodID",
  "PlanSubscriptionID",
  "PlanSubscriptionVersionNumber",
  "BillingID"
)
VALUES (
  globalpaymentmethodid,
  PlanSubscriptionID,
  PlanSubscriptionVersionNumber,
  BillingID
);

-- subscription process log, deal with trial status
IF (PlanHasTrial = true)
THEN


INSERT INTO
  public."PlanSubscriptionProcessLog"
(
  "PlanSubscriptionID",
  "PlanSubscriptionVersionNumber",
  "CreatedOn",
  "IsCancelled",
  "IsRenewed",
  "StatusTypeValueID",
  "StatusTypeID",
  "StatusTypeVersionNumber"
)
VALUES (
  PlanSubscriptionID,
  PlanSubscriptionVersionNumber,
  CURRENT_DATE,
  false,
  false,
  (select st."StatusTypeValueID" from "vStatusType" st where st."StatusTypeName" = 'PlanSubscriptionProcessLog Status' and st."Name" = 'Trialing' limit 1),
  (select st."StatusTypeID" from "vStatusType" st where st."StatusTypeName" = 'PlanSubscriptionProcessLog Status' and st."Name" = 'Trialing' limit 1),
  (select st."StatusTypeVersionNumber" from "vStatusType" st where st."StatusTypeName" = 'PlanSubscriptionProcessLog Status' and st."Name" = 'Trialing' limit 1)
);



ELSE



INSERT INTO
  public."PlanSubscriptionProcessLog"
(
  "PlanSubscriptionID",
  "PlanSubscriptionVersionNumber",
  "CreatedOn",
  "IsCancelled",
  "IsRenewed",
  "StatusTypeValueID",
  "StatusTypeID",
  "StatusTypeVersionNumber"
)
VALUES (
  PlanSubscriptionID,
  PlanSubscriptionVersionNumber,
  CURRENT_DATE,
  false,
  false,
  (select st."StatusTypeValueID" from "vStatusType" st where st."StatusTypeName" = 'PlanSubscriptionProcessLog Status' and st."IsStart" = true limit 1),
  (select st."StatusTypeID" from "vStatusType" st where st."StatusTypeName" = 'PlanSubscriptionProcessLog Status' and st."IsStart" = true limit 1),
  (select st."StatusTypeVersionNumber" from "vStatusType" st where st."StatusTypeName" = 'PlanSubscriptionProcessLog Status' and st."IsStart" = true limit 1)
);



END IF;

END;
$$;


ALTER FUNCTION public."fn_AddPlanSubscriptionToOrganisation"(organisationid uuid, planid uuid, planversionnumber integer, globalpaymentmethodid uuid, quantity integer, activate boolean, startimmediately boolean) OWNER TO postgres;

--
-- TOC entry 912 (class 1255 OID 40309)
-- Name: fn_AddUserToOrganisation(uuid, uuid, uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_AddUserToOrganisation"(useraccountid uuid, organisationid uuid, usertypeid uuid, organisationbranchid uuid) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	DefaultOrganisationID UUID;
    DefaultOrganisationVersionNumber INTEGER;
    UserExists BOOLEAN;
    UserAccountOrganisationID UUID;
BEGIN

DefaultOrganisationID := (select "DefaultOrganisationID"
	from "Organisation" where "OrganisationID" = organisationid);

DefaultOrganisationVersionNumber := (select "DefaultOrganisationVersionNumber"
	from "Organisation" where "OrganisationID" = organisationid);

-- Get UserType default if null
if(usertypeid is null)
THEN
	usertypeid := (select u."UserTypeID" from "DefaultOrganisationUserTarget" u where u."DefaultOrganisationID" = DefaultOrganisationID
    	and u."DefaultOrganisationVersionNumber" = DefaultOrganisationVersionNumber and u."IsDefault" = true and u."IsActive" = true and u."IsDeleted" = FALSE);
END IF;

-- check user doesnt exist
IF(EXISTS(select u."UserID" from "UserAccountOrganisation" u where u."UserID" = useraccountid and u."OrganisationID" = organisationbranchid))
THEN
	UserExists := true;
ELSE
	UserExists := false;
END IF;

-- Create UAO if doesnt exist
IF(UserExists = false)
THEN
INSERT INTO
  public."UserAccountOrganisation"
(
  "UserID",
  "OrganisationID",
  "IsActive",
  "IsDeleted",
  "UserTypeID",
  "ParentID"
)
values
(
  useraccountid,
  organisationbranchid,
  true,
  false,
  usertypeid,
  organisationid
);
END IF;
UserAccountOrganisationID := (select ua."UserAccountOrganisationID" from "UserAccountOrganisation" ua where ua."UserID" = useraccountid and ua."OrganisationID" = organisationbranchid);



-- Create Roles  for User
INSERT INTO
  public."UserAccountOrganisationRole"
(
  "OrganisationRoleID",
  "IsActive",
  "IsDeleted",
  "UserAccountOrganisationID"
)
SELECT
  COALESCE(or1."OrganisationRoleID",or2."OrganisationRoleID"),
  wt."IsActive",
  wt."IsDeleted",
  UserAccountOrganisationID
FROM
  public."DefaultOrganisationRoleTarget" wt

  left outer join "DefaultOrganisationRole" dor on dor."DefaultOrganisationRoleID" = wt."DefaultOrganisationRoleID"

  left outer join "OrganisationRole" or1 on or1."OrganisationID" = organisationid and or1."ParentID" = dor."DefaultOrganisationRoleID"
  left outer join "OrganisationRole" or2 on or2."OrganisationID" = organisationid and or2."ParentID" = dor."RoleID"

  left outer join "UserAccountOrganisation" uao on uao."UserID" = useraccountid and uao."OrganisationID" = organisationbranchid

  where wt."DefaultOrganisationUserTargetID" in (select d."DefaultOrganisationUserTargetID" from "DefaultOrganisationUserTarget" d where d."UserTypeID" = usertypeid and d."DefaultOrganisationID" = DefaultOrganisationID
  	and d."DefaultOrganisationVersionNumber" = DefaultOrganisationVersionNumber)
  	and (not exists(select u."OrganisationRoleID" from "UserAccountOrganisationRole" u where u."OrganisationRoleID" = or1."OrganisationRoleID" and u."UserAccountOrganisationID" = uao."UserAccountOrganisationID")
    or not exists(select u."OrganisationRoleID" from "UserAccountOrganisationRole" u where u."OrganisationRoleID" = or2."OrganisationRoleID" and u."UserAccountOrganisationID" = uao."UserAccountOrganisationID"));

-- Create Groups  for User
INSERT INTO
  public."UserAccountOrganisationGroup"
(
  "OrganisationGroupID",
  "IsActive",
  "IsDeleted",
  "UserAccountOrganisationID"
)
SELECT
  COALESCE(or1."OrganisationGroupID",or2."OrganisationGroupID"),
  wt."IsActive",
  wt."IsDeleted",
  UserAccountOrganisationID
FROM
  public."DefaultOrganisationGroupTarget" wt

  left outer join "DefaultOrganisationGroup" dor on dor."DefaultOrganisationGroupID" = wt."DefaultOrganisationGroupID"

  left outer join "OrganisationGroup" or1 on or1."OrganisationID" = organisationid and or1."ParentID" = dor."DefaultOrganisationGroupID"
  left outer join "OrganisationGroup" or2 on or2."OrganisationID" = organisationid and or2."ParentID" = dor."GroupID"

  left outer join "UserAccountOrganisation" uao on uao."UserID" = useraccountid and uao."OrganisationID" = organisationbranchid

  where wt."DefaultOrganisationUserTargetID" in (select d."DefaultOrganisationUserTargetID" from "DefaultOrganisationUserTarget" d where d."UserTypeID" = usertypeid and d."DefaultOrganisationID" = DefaultOrganisationID
  	and d."DefaultOrganisationVersionNumber" = DefaultOrganisationVersionNumber)
  	and (not exists(select u."OrganisationGroupID" from "UserAccountOrganisationGroup" u where u."OrganisationGroupID" = or1."OrganisationGroupID" and u."UserAccountOrganisationID" = uao."UserAccountOrganisationID")
    or not exists(select u."OrganisationGroupID" from "UserAccountOrganisationGroup" u where u."OrganisationGroupID" = or2."OrganisationGroupID" and u."UserAccountOrganisationID" = uao."UserAccountOrganisationID")) ;

-- Create Status for user if it doesnt exist
if(UserExists = false)
THEN
	INSERT INTO
  public."UserAccountOrganisationStatus"
(
  "UserAccountOrganisationID",
  "StatusTypeID",
  "StatusTypeVersionNumber",
  "StatusTypeValueID",
  "StatusChangedOn",
  "StatusChangedBy",
  "ParentID"
)
SELECT
  uao."UserAccountOrganisationID",
  wt."StatusTypeID",
  wt."StatusTypeVersionNumber",
  st."StatusTypeValueID",
  CURRENT_DATE,
  'System',
  wt."DefaultOrganisationUserTargetID"
FROM
  public."DefaultOrganisationUserTarget" wt
  left outer join "vStatusType" st on st."StatusTypeID" = wt."StatusTypeID" and st."StatusTypeVersionNumber" = wt."StatusTypeVersionNumber" and st."IsStart" = true
  left outer join "UserAccountOrganisation" uao on uao."UserID" = useraccountid and uao."OrganisationID" = organisationbranchid
   where wt."DefaultOrganisationID" = DefaultOrganisationID and wt."DefaultOrganisationVersionNumber" = DefaultOrganisationVersionNumber
   and not exists(select * from "UserAccountOrganisationStatus" us where us."UserAccountOrganisationID" = uao."UserAccountOrganisationID" and us."StatusTypeID" = wt."StatusTypeID"
   	and us."StatusTypeVersionNumber" = wt."StatusTypeVersionNumber" and us."StatusTypeValueID" = st."StatusTypeValueID");


END IF;

END;
$$;


ALTER FUNCTION public."fn_AddUserToOrganisation"(useraccountid uuid, organisationid uuid, usertypeid uuid, organisationbranchid uuid) OWNER TO postgres;

--
-- TOC entry 913 (class 1255 OID 40310)
-- Name: fn_AddUserToTemporaryOrganisation(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_AddUserToTemporaryOrganisation"(useraccountid uuid) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
  OrgID UUID;
  OrgBranchID UUID;
  UserTypeID UUID;
BEGIN
  UserTypeID := (select  "UserTypeID" from "UserType" where "Name" = 'Temporary');
  if(UserTypeID IS NOT NULL)
  THEN
  BEGIN
      SELECT   INTO  OrgID, OrgBranchID  "OrganisationID",  "organisationbranchid"
      FROM   public."vOrganisationUserType"  WHERE "UserTypeID" = UserTypeID and "Name" = 'Temporary' ;

      PERFORM public."fn_AddUserToOrganisation"(useraccountid, OrgID, UserTypeID, OrgBranchID);
  END;
  END IF;

END;
$$;


ALTER FUNCTION public."fn_AddUserToTemporaryOrganisation"(useraccountid uuid) OWNER TO postgres;

--
-- TOC entry 914 (class 1255 OID 40311)
-- Name: fn_CreateAuditTableAndColumns(character varying, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_CreateAuditTableAndColumns"(tablename character varying, schemaname character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
Declare
	DefaultOrganisationID uuid;
	audit_row    RECORD;
	index_row    RECORD;
begin
     -- Create Columns on target table
     PERFORM "fn_AddAuditColumnToTable"(tablename,schemaname);
     -- execute history tables

     FOR audit_row IN
         SELECT * FROM public.create_audit(false, tablename, schemaname)  where lower(create_audit ) like '%create table%'
     LOOP

     EXECUTE(audit_row.create_audit);

     END LOOP;

end;
$$;


ALTER FUNCTION public."fn_CreateAuditTableAndColumns"(tablename character varying, schemaname character varying) OWNER TO postgres;

--
-- TOC entry 920 (class 1255 OID 40312)
-- Name: fn_CreateOrganisationFromDefault(integer, uuid, integer, character varying, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_CreateOrganisationFromDefault"(organisationtypeid integer, defaultorganisationid uuid, organisationversionnumber integer, organisationname character varying DEFAULT 'Organisation'::character varying, organisationdescription character varying DEFAULT 'Organisation Description'::character varying) RETURNS uuid
    LANGUAGE plpgsql
    AS $$
Declare
  OrganisationID uuid;
  LoopRow RECORD;
begin
  OrganisationID := uuid_generate_v1();

  -- If no defaultorgid then determine from orgtypeid
  if(defaultorganisationid is null) then
    Begin
      defaultorganisationid := (
      select
        DOrg."DefaultOrganisationID"
      from
        "DefaultOrganisation" DOrg
        inner join "DefaultOrganisationTarget" DOT on DOrg."DefaultOrganisationVersionNumber" = DOT."DefaultOrganisationVersionNumber" and DOrg."DefaultOrganisationID" = DOT."DefaultOrganisationID"
          and DOT."OrganisationTypeID" = organisationtypeid
      limit
        1);
    End;
  End if;

  -- create new organisation

  INSERT INTO
    "Organisation"("OrganisationID", "IsBranch", "IsHeadOffice", "IsActive", "IsDeleted", "IsUserOrganisation", "DefaultOrganisationID", "DefaultOrganisationVersionNumber", "OrganisationTypeID")
  SELECT
    OrganisationID,
    False,
    False,
    True,
    False,
    False,
    defaultorganisationid,
    organisationversionnumber,
    wt."OrganisationTypeID"
  FROM
    public."DefaultOrganisation" wt
  where
    wt."DefaultOrganisationID" = defaultorganisationid and
    wt."DefaultOrganisationVersionNumber" = organisationversionnumber;

  -- add org default

  INSERT INTO
    public."OrganisationDetail"("OrganisationID", "Name", "Description")
  VALUES
    (OrganisationID, organisationname, organisationdescription);

  -- add payment methods
  INSERT INTO
  public."OrganisationPaymentMethod"
(
  "OrganisationID",
  "GlobalPaymentMethodID",
  "OrganisationBankAccountId",
  "IsActive",
  "IsDeleted",
  "IsDirectDebit",
  "IsBACS",
  "OrganisationDirectDebitMandateID",
  "IsPrimary",
  "StatusTypeID",
  "StatusTypeVersionNumber",
  "StatusTypeValueID",
  "DirectDebitMonthCollectionPeriodNumber",
  "BACSMonthPaymentDay",
  "DirectDebitNumberOfNotificationDaysBeforeCollection",
  "BACSNumberOfNotificationDaysBeforeExpectationOfPayment"
)
SELECT
  OrganisationID,
  wt."GlobalPaymentMethodID",
  null,
  true,
  false,
  pm."IsDirectDebit",
  (case when pm."IsDirectDebit" = false and pm."Name" <> 'BACS' then false else true end),
  null,
  (case when pm."Name" = 'BACS' then true else false end),
  st."StatusTypeID",
  st."StatusTypeVersionNumber",
  st."StatusTypeValueID",
  pm."DirectDebitDefaultMonthlyPeriodNumber",
  pm."BACSDefaultMonthlyPaymentDay",
  pm."DirectDebitDefaultNumberOfNotificationDaysBeforeCollection",
  pm."BACSDefaultNumberOfNotificationDaysBeforeExpectationOfPayment"
FROM
  public."DefaultOrganisationPaymentMethod" wt

  left outer join "GlobalPaymentMethod" pm on pm."GlobalPaymentMethodID" = wt."GlobalPaymentMethodID"
  left outer join "vStatusType" st on st."StatusTypeName" = 'OrganisationPaymentMethod Status' and st."IsStart" = true


  where wt."DefaultOrganisationID" = defaultorganisationid and wt."DefaultOrganisationVersionNumber" = organisationversionnumber
  and not exists (select * from "OrganisationPaymentMethod" dd where dd."OrganisationID" = OrganisationID and dd."GlobalPaymentMethodID" = wt."GlobalPaymentMethodID" limit 1)
  ;

-- add base financials
INSERT INTO
  public."OrganisationFinancialDetail"
(
  "OrganisationID",
  "FinancialStatusTypeID",
  "FinancialStatusTypeVersionNumber",
  "FinancialStatusTypeValueID",
  "HasACreditLimit",
  "CreditLimit",
  "NumberOfLatePayments",
  "HasLatePayments"
)
VALUES (
  OrganisationID,
  (select "StatusTypeID" from "vStatusType" st where st."StatusTypeName" = 'OrganisationFinancial Status' and st."IsStart" = true limit 1),
  (select "StatusTypeVersionNumber" from "vStatusType" st where st."StatusTypeName" = 'OrganisationFinancial Status' and st."IsStart" = true limit 1),
  (select "StatusTypeValueID" from "vStatusType" st where st."StatusTypeName" = 'OrganisationFinancial Status' and st."IsStart" = true limit 1),
  false,
  0,
  0,
  false
);


-- add accounting periods
INSERT INTO
  public."OrganisationAccountingPeriod"
(
  "OrganisationID",
  "GlobalAccountingPeriodID"
)
SELECT
  OrganisationID,
  wt."GlobalAccountingPeriodID"
FROM
  public."GlobalAccountingPeriod" wt

  where not exists (select * from "OrganisationAccountingPeriod" gp where gp."OrganisationID" = OrganisatioNID and gp."GlobalAccountingPeriodID" = wt."GlobalAccountingPeriodID" limit 1)
  ;

INSERT INTO
  public."OrganisationLedgerAccount"
(
  "LedgerAccountTypeID",
  "LedgerAccountCategoryID",
  "Name",
  "Description",
  "ParentID",
  "CreatedOn",
  "CreatedBy",
  "Balance",
  "HandlesCredit",
  "HandlesDebit",
  "ClosedOn",
  "IsActive",
  "IsDeleted",
  "OrganisationID",
  "AccountingTypeID"
)
SELECT
  wt."LedgerAccountTypeID",
  null,
  wt."LedgerAccountName",
  '',
  null,
  CURRENT_DATE,
  'System',
  0,
  wt."HandlesCredit",
  wt."HandlesDebit",
  CURRENT_DATE,
  true,
  false,
  OrganisationID,
  0
FROM
  public."DefaultOrganisationLedger" wt
  where
    wt."DefaultOrganisationID" = defaultorganisationid and
    wt."DefaultOrganisationVersionNumber" = organisationversionnumber

    and not exists(select * from "OrganisationLedgerAccount" le where le."LedgerAccountTypeID" = wt."LedgerAccountTypeID" and le."OrganisationID" = OrganisationID limit 1);



  -- create organisationroles which are not default organisation specific nad global, could be duplicates

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  select
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  from
    "Role" r
  where
    r."RoleID" in (
                    select
                      dor."RoleID"
                    from
                      "DefaultOrganisationRole" dor
                    where
                      dor."DefaultOrganisationID" = defaultorganisationid and
                      dor."IsActive" = true and
                      dor."IsDeleted" = false and
                      COALESCE(dor."IsDefaultOrganisationSpecific", false) = false
    ) and
    r."RoleID" not in (
                        select
                          org."ParentID"
                        from
                          "OrganisationRole" org
                        where
                          org."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false and
    r."IsGlobal" = true;

  -- add roleclaims which are not default organisation specific, parentID is RoleID, and are global roles

  insert into
    "OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  select
    org."OrganisationRoleID",
    rc."ResourceID",
    rc."OperationID",
    rc."StateID",
    rc."StateItemID",
    true,
    false,
    OrganisationID
  from
    "RoleClaim" rc
    inner join "OrganisationRole" org on org."OrganisationID" = OrganisationID and org."IsActive" = true and org."IsDeleted" = false and org."ParentID" = rc."RoleID"
  where
    rc."RoleID" =
    (
      select
        orgr."ParentID"
      from
        "OrganisationRole" orgr
      where
        orgr."OrganisationRoleID" = org."OrganisationRoleID"
    ) and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = org."OrganisationRoleID" and
                   orc."OperationID" = rc."OperationID" and
                   orc."ResourceID" = rc."ResourceID" and
                   orc."StateID" = rc."StateID" and
                   orc."StateItemID" = rc."StateItemID"
    );

  -- add do specific roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  select
    OrganisationID,
    dor."RoleName",
    true,
    dor."RoleTypeID",
    true,
    false,
    dor."DefaultOrganisationRoleID"
  from
    "DefaultOrganisationRole" dor
  where
    dor."IsActive" = true and
    dor."IsDeleted" = false and
    dor."IsDefaultOrganisationSpecific" = true and
    dor."DefaultOrganisationID" = defaultorganisationid and
    dor."DefaultOrganisationRoleID" not in (
                                             select
                                               dor1."ParentID"
                                             from
                                               "OrganisationRole" dor1
                                             where
                                               dor1."OrganisationID" = OrganisationID
    );

  -- add do specific claims

  insert into
    "OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  select
    org."OrganisationRoleID",
    rc."ResourceID",
    rc."OperationID",
    rc."StateID",
    rc."StateItemID",
    true,
    false,
    OrganisationID
  from
    "DefaultOrganisationRoleClaim" rc
    inner join "OrganisationRole" org on org."OrganisationID" = OrganisationID and org."ParentID" = rc."DefaultOrganisationRoleID" and org."IsActive" = true and org."IsDeleted" = FALSE
  where
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = org."OrganisationRoleID" and
                   orc."OperationID" = rc."OperationID" and
                   orc."ResourceID" = rc."ResourceID" and
                   orc."StateID" = rc."StateID" and
                   orc."StateItemID" = rc."StateItemID"
    );

  -- add global groups
  -- create organisationroles which are not default organisation specific and global

  insert into
    public."OrganisationGroup"("OrganisationID", "GroupName", "IsManaged", "GroupTypeID", "IsActive", "IsDeleted", "ParentID")
  select
    OrganisationID,
    r."GroupName",
    true,
    r."GroupTypeID",
    true,
    false,
    r."GroupID"
  from
    "Group" r
  where
    r."GroupID" in (
                     select
                       dor."GroupID"
                     from
                       "DefaultOrganisationGroup" dor
                     where
                       dor."DefaultOrganisationID" = defaultorganisationid and
                       dor."IsActive" = true and
                       dor."IsDeleted" = false and
                       COALESCE(dor."IsDefaultOrganisationSpecific", false) = false
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false and
    r."IsGlobal" = true and
    r."GroupID" not in (
                         select
                           rg."ParentID"
                         from
                           "OrganisationGroup" rg
                         where
                           rg."OrganisationID" = OrganisationID
    );

  -- add global group roles

  insert into
    "OrganisationGroupRole"("OrganisationGroupID", "OrganisationRoleID", "IsActive", "IsDeleted")
  select
    org."OrganisationGroupID",
    orgr."OrganisationRoleID",
    true,
    false
  from
    "GroupRole" rc
    inner join "OrganisationGroup" org on org."OrganisationID" = OrganisationID and org."ParentID" = rc."GroupID" and org."IsActive" = true and org."IsDeleted" = false
    inner join "OrganisationRole" orgr on orgr."OrganisationID" = OrganisationID and orgr."ParentID" = rc."RoleID" and orgr."IsActive" = true and orgr."IsDeleted" = false
  where
    rc."GroupID" =
    (
      select
        orgr."ParentID"
      from
        "OrganisationGroup" orgr
      where
        orgr."OrganisationGroupID" = org."OrganisationGroupID"
    );

  -- add do specific groups

  insert into
    public."OrganisationGroup"("OrganisationID", "GroupName", "IsManaged", "GroupTypeID", "IsActive", "IsDeleted", "ParentID")
  select
    OrganisationID,
    dor."GroupName",
    true,
    dor."GroupTypeID",
    true,
    false,
    dor."DefaultOrganisationGroupID"
  from
    "DefaultOrganisationGroup" dor
  where
    dor."IsActive" = true and
    dor."IsDeleted" = false and
    dor."IsDefaultOrganisationSpecific" = true and
    dor."DefaultOrganisationID" = defaultorganisationid and
    dor."DefaultOrganisationGroupID" not in (
                                              select
                                                dor1."ParentID"
                                              from
                                                "OrganisationGroup" dor1
                                              where
                                                dor1."OrganisationID" = OrganisationID
    );

  -- add do specific group roles

  insert into
    "OrganisationGroupRole"("OrganisationGroupID", "OrganisationRoleID", "IsActive", "IsDeleted")
  select
    org."OrganisationGroupID",
    orr."OrganisationRoleID",
    true,
    false
  from
    "DefaultOrganisationGroupRole" rc
    inner join "OrganisationGroup" org on org."OrganisationID" = OrganisationID and org."ParentID" = rc."DefaultOrganisationGroupID" and org."IsActive" = true and org."IsDeleted" = false
    left join "OrganisationRole" orr on orr."ParentID" = rc."DefaultOrganisationRoleID" and orr."IsActive" = true and orr."IsDeleted" = false and orr."OrganisationID" = OrganisationID
  where
    rc."DefaultOrganisationGroupID" =
    (
      select
        orgr."ParentID"
      from
        "OrganisationGroup" orgr
      where
        orgr."OrganisationGroupID" = org."OrganisationGroupID"
    );

  -- Organisation NC /  ROLE / CLAIM

/*  INSERT INTO
    public."OrganisationNotificationConstruct"("NotificationConstructID", "NotificationConstructVersionNumber", "IsActive", "IsDeleted", "OrganisationID", "ParentID")
  SELECT
    "NotificationConstructID",
    "NotificationConstructVersionNumber",
    true,
    false,
    OrganisationID,
    "DefaultOrganisationNotificationConstructID"
  FROM
    public."DefaultOrganisationNotificationConstruct"
  where
    "DefaultOrganisationID" = defaultorganisationid;*/

  -- NC Roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    ncr."RoleName",
    true,
    ncr."RoleSubTypeID",
    true,
    false,
    ncr."NotificationRoleConstructID"
  FROM
    public."NotificationConstructRole" ncr
    inner join "DefaultOrganisationNotificationConstruct" donc on donc."NotificationConstructID" = ncr."NotificationConstructID" and donc."NotificationConstructVersionNumber" =
      ncr."NotificationConstructVersionNumber" and donc."IsActive" = true and donc."IsDeleted" = false and donc."DefaultOrganisationID" = defaultorganisationid
  where
    ncr."IsActive" = true and
    ncr."IsDeleted" = false and
    ncr."NotificationRoleConstructID" not in (
                                               select
                                                 orn."ParentID"
                                               from
                                                 "OrganisationRole" orn
                                               where
                                                 orn."OrganisationID" = OrganisationID
    );

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA NC CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "NotificationConstructClaim" ncc on ncc."RoleID" is not null and ncc."RoleID" = r."RoleID"
    inner join "DefaultOrganisationNotificationConstruct" donc on donc."NotificationConstructID" = ncc."NotificationConstructID" and donc."NotificationConstructVersionNumber" =
      ncc."NotificationConstructVersionNumber" and donc."IsActive" = true and donc."IsDeleted" = false and donc."DefaultOrganisationID" = defaultorganisationid
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false and
    ncc."NotificationRoleConstructID" is null;

  -- NC CLAIMS THAT ARE DIRECT FROM NC ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."NotificationConstructClaim" ncc
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."NotificationRoleConstructID" and nc."IsActive" = true and nc."IsDeleted" = false and
      ncc."IsActive" = true and ncc."IsDeleted" = false and ncc."RoleID" is null and not exists (
                                                                                                  select
                                                                                                    orc."OrganisationRoleClaimID"
                                                                                                  from
                                                                                                    "OrganisationRoleClaim" orc
                                                                                                  where
                                                                                                    orc."OrganisationID" = OrganisationID and
                                                                                                    orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                                                                                                    orc."OperationID" = ncc."OperationID" and
                                                                                                    orc."ResourceID" = ncc."ResourceID" and
                                                                                                    orc."StateID" = ncc."StateID" and
                                                                                                    orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA NC CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."NotificationConstructClaim" ncc
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."NotificationRoleConstructID" is null;

  ----------------------- Artefact
  -- Org Artefact

  INSERT INTO
    public."OrganisationArtefact"("OrganisationID", "ArtefactID", "ArtefactVersionNumber", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    "ArtefactID",
    "ArtefactVersionNumber",
    "IsActive",
    "IsDeleted",
    "ArtefactID"
  FROM
    public."DefaultOrganisationArtefact"
  where
    "DefaultOrganisationID" = defaultorganisationid and
    "IsActive" = true and
    "IsDeleted" = false;

  -- Artefact Specific Roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    ncr."RoleName",
    true,
    ncr."RoleTypeID",
    true,
    false,
    ncr."ArtefactRoleID"
  FROM
    public."ArtefactRole" ncr
    inner join "DefaultOrganisationArtefact" donc on donc."ArtefactID" = ncr."ArtefactID" and donc."ArtefactVersionNumber" = ncr."ArtefactVersionNumber" and donc."IsActive" = true and donc."IsDeleted"
      = false and donc."DefaultOrganisationID" = defaultorganisationid
  where
    ncr."IsActive" = true and
    ncr."IsDeleted" = false and
    ncr."ArtefactRoleID" not in (
                                  select
                                    orn."ParentID"
                                  from
                                    "OrganisationRole" orn
                                  where
                                    orn."OrganisationID" = OrganisationID
    );

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA NC CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "ArtefactClaim" ncc on ncc."RoleID" is not null and ncc."RoleID" = r."RoleID"
    inner join "DefaultOrganisationArtefact" donc on donc."ArtefactID" = ncc."ArtefactID" and donc."ArtefactVersionNumber" = ncc."ArtefactVersionNumber" and donc."IsActive" = true and donc."IsDeleted"
      = false and donc."DefaultOrganisationID" = defaultorganisationid
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false and
    ncc."ArtefactRoleID" is null;

  -- ARTEFACT CLAIMS THAT ARE DIRECT FROM ARTEFACT ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."ArtefactClaim" ncc
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."ArtefactRoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA NC CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."ArtefactClaim" ncc
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."ArtefactRoleID" is null;

  -------------------------- MODULE

  -- Module Specific Roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    ncr."RoleName",
    true,
    ncr."RoleTypeID",
    true,
    false,
    ncr."RoleID"
  FROM
    public."ModuleRole" ncr
    inner join "DefaultOrganisationModule" donc on donc."ModuleID" = ncr."ModuleID" and donc."ModuleVersionNumber" = ncr."ModuleVersionNumber" and donc."IsActive" = true and donc."IsDeleted" = false
      and donc."DefaultOrganisationID" = defaultorganisationid
  where
    ncr."IsActive" = true and
    ncr."IsDeleted" = false and
    ncr."RoleID" not in (
                          select
                            orn."ParentID"
                          from
                            "OrganisationRole" orn
                          where
                            orn."OrganisationID" = OrganisationID
    );

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA MODULE CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "ModuleClaim" ncc on ncc."RoleID" is not null and ncc."RoleID" = r."RoleID"
    inner join "DefaultOrganisationModule" donc on donc."ModuleID" = ncc."ModuleID" and donc."ModuleVersionNumber" = ncc."ModuleVersionNumber" and donc."IsActive" = true and donc."IsDeleted" = false
      and donc."DefaultOrganisationID" = defaultorganisationid
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false and
    ncc."ModuleRoleID" is null;

  -- Module CLAIMS THAT ARE DIRECT FROM Module ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."ModuleClaim" ncc
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."ModuleRoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA MODULE CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."ModuleClaim" ncc
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."ModuleRoleID" is null;

  ----------------------------------- WORKFLOW

  INSERT INTO
    public."OrganisationWorkflow"("OrganisationID", "WorkflowID", "VersionNumber", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    "WorkflowID",
    "WorkflowVersionNumber",
    "IsActive",
    "IsDeleted",
    dow . "DefaultOrganisationID"
  FROM
    public."DefaultOrganisationWorkflow" dow
  where
    dow . "DefaultOrganisationID" = defaultorganisationid and
    dow . "IsActive" = true and
    dow . "IsDeleted" = FALSE and
    not exists (
                 select
                   dow1."OrganisationWorkflowID"
                 from
                   "OrganisationWorkflow" dow1
                 where
                   dow1."OrganisationID" = OrganisationID and
                   dow1."IsActive" = true and
                   dow1."IsDeleted" = false and
                   dow1."WorkflowID" = dow . "WorkflowID" and
                   dow1."VersionNumber" = dow . "WorkflowVersionNumber" and
                   dow1."ParentID" = dow . "DefaultOrganisationID"
    );

  -- Workflow Specific Roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    ncr."RoleName",
    true,
    ncr."RoleTypeID",
    true,
    false,
    ncr."WorkflowRoleID"
  FROM
    public."WorkflowRole" ncr
    inner join "DefaultOrganisationWorkflow" donc on donc."WorkflowID" = ncr."WorkflowID" and donc."WorkflowVersionNumber" = ncr."WorkflowVersionNumber" and donc."IsActive" = true and donc."IsDeleted"
      = false and donc."DefaultOrganisationID" = defaultorganisationid
  where
    ncr."IsActive" = true and
    ncr."IsDeleted" = false and
    ncr."WorkflowRoleID" not in (
                                  select
                                    orn."ParentID"
                                  from
                                    "OrganisationRole" orn
                                  where
                                    orn."OrganisationID" = OrganisationID
    );

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA WF CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "WorkflowClaim" ncc on ncc."RoleID" is not null and ncc."RoleID" = r."RoleID" and ncc."WorkflowRoleID" is null
    inner join "DefaultOrganisationWorkflow" donc on donc."WorkflowID" = ncc."WorkflowID" and donc."WorkflowVersionNumber" = ncc."WorkflowVersionNumber" and donc."IsActive" = true and donc."IsDeleted"
      = false and donc."DefaultOrganisationID" = defaultorganisationid
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false;

  -- Workflow CLAIMS THAT ARE DIRECT FROM Workflow ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."WorkflowClaim" ncc
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."WorkflowRoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA WF CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."WorkflowClaim" ncc
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."WorkflowRoleID" is null;

  ------------------------ MODULE WORKFLOW ROLECLAIMS

  -- Workflow Specific Roles
/*
  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    wr."RoleName",
    true,
    wr."RoleTypeID",
    true,
    false,
    wr."WorkflowRoleID"
  FROM
    public."ModuleWorkflow" mw
    inner join "OrganisationModuleSubscription" donc on donc."ModuleID" = mw."ModuleID" and donc."ModuleVersionNumber" = mw."ModuleVersionNumber" and donc."IsActive" = true and donc."IsDeleted" =
      false and donc."OrganisationID" = OrganisationID
    inner join "WorkflowRole" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
  where
    mw."IsActive" = true and
    mw."IsDeleted" = false and
    wr."WorkflowRoleID" not in (
                                 select
                                   orn."ParentID"
                                 from
                                   "OrganisationRole" orn
                                 where
                                   orn."OrganisationID" = OrganisationID
    );*/

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA WF CLAIMS

/*  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "WorkflowClaim" ncc on ncc."RoleID" is not null and ncc."RoleID" = r."RoleID" and ncc."WorkflowRoleID" is null
    inner join "ModuleWorkflow" mw on mw."WorkflowID" = ncc."WorkflowID" and mw."WorkflowVersionNumber" = ncc."WorkflowVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."ModuleID" = mw."ModuleID" and ow."ModuleVersionNumber" = mw."ModuleVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false;*/

  -- Workflow CLAIMS THAT ARE DIRECT FROM Workflow ROLES NOT GLOBAL

  /*INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."WorkflowClaim" ncc
    inner join "ModuleWorkflow" mw on mw."WorkflowID" = ncc."WorkflowID" and mw."WorkflowVersionNumber" = ncc."WorkflowVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."ModuleID" = mw."ModuleID" and ow."ModuleVersionNumber" = mw."ModuleVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."WorkflowRoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );*/

  -- INSERT CLAIMS LINKED VIA WF CLAIMS GLOBAL
/*
  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."WorkflowClaim" ncc
    inner join "ModuleWorkflow" mw on mw."WorkflowID" = ncc."WorkflowID" and mw."WorkflowVersionNumber" = ncc."WorkflowVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."ModuleID" = mw."ModuleID" and ow."ModuleVersionNumber" = mw."ModuleVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."WorkflowRoleID" is null;*/

  --------------------------------    MODULE NC ROLE/CLAIMS ----------------------

  -- Workflow Specific Roles
/*
  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    wr."RoleName",
    true,
    wr."RoleTypeID",
    true,
    false,
    wr."NotificationRoleConstructID"
  FROM
    public."ModuleNotificationConstruct" mw
    inner join "OrganisationModuleSubscription" donc on donc."ModuleID" = mw."ModuleID" and donc."ModuleVersionNumber" = mw."ModuleVersionNumber" and donc."IsActive" = true and donc."IsDeleted" =
      false and donc."OrganisationID" = OrganisationID
    inner join "NotificationConstructRole" wr on wr."NotificationConstructID" = mw."ModuleNotificationConstructID" and wr."NotificationConstructVersionNumber" = mw."NotificationConstructVersionNumber"
      and wr."IsActive" = true and wr."IsDeleted" = false
  where
    mw."IsActive" = true and
    mw."IsDeleted" = false and
    wr."NotificationRoleConstructID" not in (
                                              select
                                                orn."ParentID"
                                              from
                                                "OrganisationRole" orn
                                              where
                                                orn."OrganisationID" = OrganisationID
    );*/

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA WF CLAIMS

/*  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "NotificationConstructClaim" ncc on ncc."RoleID" is not null and ncc."RoleID" = r."RoleID" and ncc."NotificationRoleConstructID" is null
    inner join "ModuleNotificationConstruct" mw on mw."NotificationConstructID" = ncc."NotificationConstructID" and mw."NotificationConstructVersionNumber" = ncc."NotificationConstructVersionNumber"
      and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."ModuleID" = mw."ModuleID" and ow."ModuleVersionNumber" = mw."ModuleVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false;*/

  -- Workflow CLAIMS THAT ARE DIRECT FROM Workflow ROLES NOT GLOBAL

  /*INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."NotificationConstructClaim" ncc
    inner join "ModuleNotificationConstruct" mw on mw."NotificationConstructID" = ncc."NotificationConstructID" and mw."NotificationConstructVersionNumber" = ncc."NotificationConstructVersionNumber"
      and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."ModuleID" = mw."ModuleID" and ow."ModuleVersionNumber" = mw."ModuleVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."NotificationRoleConstructID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );
*/
  -- INSERT CLAIMS LINKED VIA WF CLAIMS GLOBAL

  /*INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."NotificationConstructClaim" ncc
    inner join "ModuleNotificationConstruct" mw on mw."NotificationConstructID" = ncc."NotificationConstructID" and mw."NotificationConstructVersionNumber" = ncc."NotificationConstructVersionNumber"
      and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."ModuleID" = mw."ModuleID" and ow."ModuleVersionNumber" = mw."ModuleVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."NotificationRoleConstructID" is null;*/

  ---------------------------------------------- ARTEFACT WORKFLOW AND NC ---------------
  -- Workflow Specific Roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    wr."RoleName",
    true,
    wr."RoleTypeID",
    true,
    false,
    wr."WorkflowRoleID"
  FROM
    public."ArtefactWorkflow" mw
    inner join "OrganisationArtefact" donc on donc."ArtefactID" = mw."ArtefactID" and donc."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and donc."IsActive" = true and donc."IsDeleted" = false
      and donc."OrganisationID" = OrganisationID
    inner join "WorkflowRole" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
  where
    mw."IsActive" = true and
    mw."IsDeleted" = false and
    wr."WorkflowRoleID" not in (
                                 select
                                   orn."ParentID"
                                 from
                                   "OrganisationRole" orn
                                 where
                                   orn."OrganisationID" = OrganisationID
    );

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA WF CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "WorkflowClaim" ncc on ncc."RoleID" is not null and ncc."RoleID" = r."RoleID" and ncc."WorkflowRoleID" is null
    inner join "ArtefactWorkflow" mw on mw."WorkflowID" = ncc."WorkflowID" and mw."WorkflowVersionNumber" = ncc."WorkflowVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "OrganisationArtefact" ow on ow."OrganisationID" = OrganisationID and ow."ArtefactID" = mw."ArtefactID" and ow."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false;

  -- Workflow CLAIMS THAT ARE DIRECT FROM Workflow ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."WorkflowClaim" ncc
    inner join "ArtefactWorkflow" mw on mw."WorkflowID" = ncc."WorkflowID" and mw."WorkflowVersionNumber" = ncc."WorkflowVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "OrganisationArtefact" ow on ow."OrganisationID" = OrganisationID and ow."ArtefactID" = mw."ArtefactID" and ow."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."WorkflowRoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA WF CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."WorkflowClaim" ncc
    inner join "ArtefactWorkflow" mw on mw."WorkflowID" = ncc."WorkflowID" and mw."WorkflowVersionNumber" = ncc."WorkflowVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "OrganisationArtefact" ow on ow."OrganisationID" = OrganisationID and ow."ArtefactID" = mw."ArtefactID" and ow."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."WorkflowRoleID" is null;

  --------------------------------    Artefact NC ROLE/CLAIMS ----------------------

  -- Workflow Specific Roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    wr."RoleName",
    true,
    wr."RoleTypeID",
    true,
    false,
    wr."NotificationRoleConstructID"
  FROM
    public."ArtefactNotificationConstruct" mw
    inner join "OrganisationArtefact" donc on donc."ArtefactID" = mw."ArtefactID" and donc."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and donc."IsActive" = true and donc."IsDeleted" = false
      and donc."OrganisationID" = OrganisationID
    inner join "NotificationConstructRole" wr on wr."NotificationConstructID" = mw."ArtefactNotificationConstructID" and wr."NotificationConstructVersionNumber" =
      mw."NotificationConstructVersionNumber" and wr."IsActive" = true and wr."IsDeleted" = false
  where
    mw."IsActive" = true and
    mw."IsDeleted" = false and
    wr."NotificationRoleConstructID" not in (
                                              select
                                                orn."ParentID"
                                              from
                                                "OrganisationRole" orn
                                              where
                                                orn."OrganisationID" = OrganisationID
    );

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA WF CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "NotificationConstructClaim" ncc on ncc."RoleID" is not null and ncc."RoleID" = r."RoleID" and ncc."NotificationRoleConstructID" is null
    inner join "ArtefactNotificationConstruct" mw on mw."NotificationConstructID" = ncc."NotificationConstructID" and mw."NotificationConstructVersionNumber" = ncc."NotificationConstructVersionNumber"
      and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "OrganisationArtefact" ow on ow."OrganisationID" = OrganisationID and ow."ArtefactID" = mw."ArtefactID" and ow."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false;

  -- Workflow CLAIMS THAT ARE DIRECT FROM Workflow ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."NotificationConstructClaim" ncc
    inner join "ArtefactNotificationConstruct" mw on mw."NotificationConstructID" = ncc."NotificationConstructID" and mw."NotificationConstructVersionNumber" = ncc."NotificationConstructVersionNumber"
      and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."NotificationRoleConstructID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA WF CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."NotificationConstructClaim" ncc
    inner join "ArtefactNotificationConstruct" mw on mw."NotificationConstructID" = ncc."NotificationConstructID" and mw."NotificationConstructVersionNumber" = ncc."NotificationConstructVersionNumber"
      and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "OrganisationArtefact" ow on ow."OrganisationID" = OrganisationID and ow."ArtefactID" = mw."ArtefactID" and ow."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."NotificationRoleConstructID" is null;

  ------------------------------------ ORGANISATION WORKFLOW NC ROLE / CLAIMS ---------------------------

  -- Workflow Specific Roles
/*
  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    ncr."RoleName",
    true,
    ncr."RoleTypeID",
    true,
    false,
    ncr."NotificationRoleConstructID"
  FROM
    public."ModuleWorkflow" mw
    inner join "OrganisationModuleSubscription" donc on donc."ModuleID" = mw."ModuleID" and donc."ModuleVersionNumber" = mw."ModuleVersionNumber" and donc."IsActive" = true and donc."IsDeleted" =
      false and donc."OrganisationID" = OrganisationID
    inner join "WorkflowNotificationConstruct" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "NotificationConstructRole" ncr on ncr."NotificationConstructID" = wr."NotificationConstructID" and ncr."NotificationConstructVersionNumber" = wr."NotificationConstructVersionNumber"
      and ncr."IsActive" = true and ncr."IsDeleted" = false
  where
    mw."IsActive" = true and
    mw."IsDeleted" = false and
    ncr."NotificationRoleConstructID" not in (
                                               select
                                                 orn."ParentID"
                                               from
                                                 "OrganisationRole" orn
                                               where
                                                 orn."OrganisationID" = OrganisationID
    );
*/
  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA WF CLAIMS
/*
  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false
    inner join "ModuleWorkflow" mw on mw."ModuleID" = ow."ModuleID" and mw."ModuleVersionNumber" = ow."ModuleVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowNotificationConstruct" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "NotificationConstructClaim" ncr on ncr."RoleID" = r."RoleID" and ncr."NotificationRoleConstructID" is null and ncr."NotificationConstructID" = wr."NotificationConstructID" and
      ncr."NotificationConstructVersionNumber" = wr."NotificationConstructVersionNumber" and ncr."IsActive" = true and ncr."IsDeleted" = false
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false;
*/
  -- Workflow CLAIMS THAT ARE DIRECT FROM Workflow ROLES NOT GLOBAL

  /*INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."NotificationConstructClaim" ncc
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false
    inner join "ModuleWorkflow" mw on mw."ModuleID" = ow."ModuleID" and mw."ModuleVersionNumber" = ow."ModuleVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowNotificationConstruct" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."NotificationRoleConstructID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );*/

  -- INSERT CLAIMS LINKED VIA WF CLAIMS GLOBAL
/*
  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."NotificationConstructClaim" ncc
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false
    inner join "ModuleWorkflow" mw on mw."ModuleID" = ow."ModuleID" and mw."ModuleVersionNumber" = ow."ModuleVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowNotificationConstruct" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."NotificationRoleConstructID" is null;*/
  -------------------------------------------------------
  ------------------------------------------------------- ARTEFACEWORKFLOW NC
  -- Workflow Specific Roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    ncr."RoleName",
    true,
    ncr."RoleTypeID",
    true,
    false,
    ncr."NotificationRoleConstructID"
  FROM
    public."ArtefactWorkflow" mw
    inner join "OrganisationArtefact" donc on donc."ArtefactID" = mw."ArtefactID" and donc."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and donc."IsActive" = true and donc."IsDeleted" = false
      and donc."OrganisationID" = OrganisationID
    inner join "WorkflowNotificationConstruct" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "NotificationConstructRole" ncr on ncr."NotificationConstructID" = wr."NotificationConstructID" and ncr."NotificationConstructVersionNumber" = wr."NotificationConstructVersionNumber"
      and ncr."IsActive" = true and ncr."IsDeleted" = false
  where
    mw."IsActive" = true and
    mw."IsDeleted" = false and
    ncr."NotificationRoleConstructID" not in (
                                               select
                                                 orn."ParentID"
                                               from
                                                 "OrganisationRole" orn
                                               where
                                                 orn."OrganisationID" = OrganisationID
    );

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA WF CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "OrganisationArtefact" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false
    inner join "ArtefactWorkflow" mw on mw."ArtefactID" = ow."ArtefactID" and mw."ArtefactVersionNumber" = ow."ArtefactVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowNotificationConstruct" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "NotificationConstructClaim" ncr on ncr."RoleID" = r."RoleID" and ncr."NotificationRoleConstructID" is null and ncr."NotificationConstructID" = wr."NotificationConstructID" and
      ncr."NotificationConstructVersionNumber" = wr."NotificationConstructVersionNumber" and ncr."IsActive" = true and ncr."IsDeleted" = false
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false;

  -- Workflow CLAIMS THAT ARE DIRECT FROM Workflow ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."NotificationConstructClaim" ncc
    inner join "OrganisationArtefact" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false
    inner join "ArtefactWorkflow" mw on mw."ArtefactID" = ow."ArtefactID" and mw."ArtefactVersionNumber" = ow."ArtefactVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowNotificationConstruct" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."NotificationRoleConstructID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA WF CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."NotificationConstructClaim" ncc
    inner join "OrganisationArtefact" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false
    inner join "ArtefactWorkflow" mw on mw."ArtefactID" = ow."ArtefactID" and mw."ArtefactVersionNumber" = ow."ArtefactVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowNotificationConstruct" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."NotificationRoleConstructID" is null;
  -------------------------------------------------------
  ------------------------------------------------------- ORGANISATION WORKFLOW NC ROLE / CLAIMS
  -- Workflow Specific Roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    ncr."RoleName",
    true,
    ncr."RoleTypeID",
    true,
    false,
    ncr."NotificationRoleConstructID"
  FROM
    public."OrganisationWorkflow" mw
    inner join "WorkflowNotificationConstruct" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."VersionNumber"
    inner join "NotificationConstructRole" ncr on ncr."NotificationConstructID" = wr."NotificationConstructID" and ncr."NotificationConstructVersionNumber" = wr."NotificationConstructVersionNumber"
      and ncr."IsActive" = true and ncr."IsDeleted" = false
  where
    mw."IsActive" = true and
    mw."IsDeleted" = false and
    ncr."NotificationRoleConstructID" not in (
                                               select
                                                 orn."ParentID"
                                               from
                                                 "OrganisationRole" orn
                                               where
                                                 orn."OrganisationID" = OrganisationID
    ) and
    mw."OrganisationID" = OrganisationID;

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA WF CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "OrganisationWorkflow" mw on mw."OrganisationID" = OrganisationID and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowNotificationConstruct" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."VersionNumber"
    inner join "NotificationConstructClaim" ncr on ncr."RoleID" = r."RoleID" and ncr."NotificationRoleConstructID" is null and ncr."NotificationConstructID" = wr."NotificationConstructID" and
      ncr."NotificationConstructVersionNumber" = wr."NotificationConstructVersionNumber" and ncr."IsActive" = true and ncr."IsDeleted" = false
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false;

  -- Workflow CLAIMS THAT ARE DIRECT FROM Workflow ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."NotificationConstructClaim" ncc
    inner join "OrganisationWorkflow" mw on mw."OrganisationID" = OrganisationID and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowNotificationConstruct" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."VersionNumber"
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."NotificationRoleConstructID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA WF CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."NotificationConstructClaim" ncc
    inner join "OrganisationWorkflow" mw on mw."OrganisationID" = OrganisationID and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowNotificationConstruct" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."VersionNumber"
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."NotificationRoleConstructID" is null;
  -------------------------------------------------------
  ------------------------------------------------------- MODULE ARTEFACT
/*
  INSERT INTO
    public."OrganisationArtefact"("OrganisationID", "ArtefactID", "ArtefactVersionNumber", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    "ArtefactID",
    "ArtefactVersionNumber",
    ma."IsActive",
    ma."IsDeleted",
    "ArtefactID"
  FROM
    public."ModuleArtefact" ma
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false and ow."ModuleID" = ma."ModuleID" and
      ow."ModuleVersionNumber" = ma."ModuleVersionNumber"
  where
    ma."IsActive" = true and
    ma."IsDeleted" = FALSE and
    not exists (
                 select
                   ma1."ArtefactID"
                 from
                   "OrganisationArtefact" ma1
                 where
                   ma1."OrganisationID" = OrganisationID and
                   ma1."ArtefactID" = ma."ArtefactID" and
                   ma1."ArtefactVersionNumber" = ma."ArtefactVersionNumber"
    );

  -- Artefact Specific Roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    ncr."RoleName",
    true,
    ncr."RoleTypeID",
    true,
    false,
    ncr."ArtefactRoleID"
  FROM
    public."ArtefactRole" ncr
    inner join "ModuleArtefact" ma on ma."ArtefactID" = ncr."ArtefactID" and ma."ArtefactVersionNumber" = ncr."ArtefactVersionNumber" and ma."IsActive" = true and ma."IsDeleted" = false
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false and ow."ModuleID" = ma."ModuleID" and
      ow."ModuleVersionNumber" = ma."ModuleVersionNumber"
  where
    ncr."IsActive" = true and
    ncr."IsDeleted" = false and
    ncr."ArtefactRoleID" not in (
                                  select
                                    orn."ParentID"
                                  from
                                    "OrganisationRole" orn
                                  where
                                    orn."OrganisationID" = OrganisationID
    );

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA NC CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "ArtefactClaim" ncc on ncc."RoleID" is not null and ncc."RoleID" = r."RoleID"
    inner join "ModuleArtefact" ma on ma."ArtefactID" = ncc."ArtefactID" and ma."ArtefactVersionNumber" = ncc."ArtefactVersionNumber" and ma."IsActive" = true and ma."IsDeleted" = false
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false and ow."ModuleID" = ma."ModuleID" and
      ow."ModuleVersionNumber" = ma."ModuleVersionNumber"
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false and
    ncc."ArtefactRoleID" is null;

  -- ARTEFACT CLAIMS THAT ARE DIRECT FROM ARTEFACT ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."ArtefactClaim" ncc
    inner join "ModuleArtefact" ma on ma."ArtefactID" = ncc."ArtefactID" and ma."ArtefactVersionNumber" = ncc."ArtefactVersionNumber" and ma."IsActive" = true and ma."IsDeleted" = false
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false and ow."ModuleID" = ma."ModuleID" and
      ow."ModuleVersionNumber" = ma."ModuleVersionNumber"
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."ArtefactRoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA NC CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."ArtefactClaim" ncc
    inner join "ModuleArtefact" ma on ma."ArtefactID" = ncc."ArtefactID" and ma."ArtefactVersionNumber" = ncc."ArtefactVersionNumber" and ma."IsActive" = true and ma."IsDeleted" = false
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false and ow."ModuleID" = ma."ModuleID" and
      ow."ModuleVersionNumber" = ma."ModuleVersionNumber"
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."ArtefactRoleID" is null;

  -- Workflow Specific Roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    wr."RoleName",
    true,
    wr."RoleTypeID",
    true,
    false,
    wr."WorkflowRoleID"
  FROM
    public."ArtefactWorkflow" mw
    inner join "ModuleArtefact" ma on ma."ArtefactID" = mw."ArtefactID" and ma."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ma."IsActive" = true and ma."IsDeleted" = false
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false and ow."ModuleID" = ma."ModuleID" and
      ow."ModuleVersionNumber" = ma."ModuleVersionNumber"
    inner join "OrganisationArtefact" donc on donc."ArtefactID" = mw."ArtefactID" and donc."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and donc."IsActive" = true and donc."IsDeleted" = false
      and donc."OrganisationID" = OrganisationID
    inner join "WorkflowRole" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
  where
    mw."IsActive" = true and
    mw."IsDeleted" = false and
    wr."WorkflowRoleID" not in (
                                 select
                                   orn."ParentID"
                                 from
                                   "OrganisationRole" orn
                                 where
                                   orn."OrganisationID" = OrganisationID
    );*/

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA WF CLAIMS
/*
  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "WorkflowClaim" ncc on ncc."RoleID" is not null and ncc."RoleID" = r."RoleID" and ncc."WorkflowRoleID" is null
    inner join "ArtefactWorkflow" mw on mw."WorkflowID" = ncc."WorkflowID" and mw."WorkflowVersionNumber" = ncc."WorkflowVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "ModuleArtefact" ma on ma."ArtefactID" = mw."ArtefactID" and ma."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ma."IsActive" = true and ma."IsDeleted" = false
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false and ow."ModuleID" = ma."ModuleID" and
      ow."ModuleVersionNumber" = ma."ModuleVersionNumber"
    inner join "OrganisationArtefact" oa on oa."OrganisationID" = OrganisationID and oa."ArtefactID" = mw."ArtefactID" and oa."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and oa."IsActive" =
      true and oa."IsDeleted" = false
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false;
*/
  -- Workflow CLAIMS THAT ARE DIRECT FROM Workflow ROLES NOT GLOBAL
/*
  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."WorkflowClaim" ncc
    inner join "ArtefactWorkflow" mw on mw."WorkflowID" = ncc."WorkflowID" and mw."WorkflowVersionNumber" = ncc."WorkflowVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "ModuleArtefact" ma on ma."ArtefactID" = mw."ArtefactID" and ma."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ma."IsActive" = true and ma."IsDeleted" = false
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false and ow."ModuleID" = ma."ModuleID" and
      ow."ModuleVersionNumber" = ma."ModuleVersionNumber"
    inner join "OrganisationArtefact" oa on oa."OrganisationID" = OrganisationID and oa."ArtefactID" = mw."ArtefactID" and oa."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and oa."IsActive" =
      true and oa."IsDeleted" = false
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."WorkflowRoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA WF CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."WorkflowClaim" ncc
    inner join "ArtefactWorkflow" mw on mw."WorkflowID" = ncc."WorkflowID" and mw."WorkflowVersionNumber" = ncc."WorkflowVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "ModuleArtefact" ma on ma."ArtefactID" = mw."ArtefactID" and ma."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ma."IsActive" = true and ma."IsDeleted" = false
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false and ow."ModuleID" = ma."ModuleID" and
      ow."ModuleVersionNumber" = ma."ModuleVersionNumber"
    inner join "OrganisationArtefact" oa on oa."OrganisationID" = OrganisationID and oa."ArtefactID" = mw."ArtefactID" and oa."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and oa."IsActive" =
      true and oa."IsDeleted" = false
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."WorkflowRoleID" is null;

  --------------------------------    Artefact NC ROLE/CLAIMS ----------------------

  -- Workflow Specific Roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    wr."RoleName",
    true,
    wr."RoleTypeID",
    true,
    false,
    wr."NotificationRoleConstructID"
  FROM
    public."ArtefactNotificationConstruct" mw
    inner join "ModuleArtefact" ma on ma."ArtefactID" = mw."ArtefactID" and ma."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ma."IsActive" = true and ma."IsDeleted" = false
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false and ow."ModuleID" = ma."ModuleID" and
      ow."ModuleVersionNumber" = ma."ModuleVersionNumber"
    inner join "OrganisationArtefact" donc on donc."ArtefactID" = mw."ArtefactID" and donc."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and donc."IsActive" = true and donc."IsDeleted" = false
      and donc."OrganisationID" = OrganisationID
    inner join "NotificationConstructRole" wr on wr."NotificationConstructID" = mw."ArtefactNotificationConstructID" and wr."NotificationConstructVersionNumber" =
      mw."NotificationConstructVersionNumber" and wr."IsActive" = true and wr."IsDeleted" = false
  where
    mw."IsActive" = true and
    mw."IsDeleted" = false and
    wr."NotificationRoleConstructID" not in (
                                              select
                                                orn."ParentID"
                                              from
                                                "OrganisationRole" orn
                                              where
                                                orn."OrganisationID" = OrganisationID
    );

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA WF CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "NotificationConstructClaim" ncc on ncc."RoleID" is not null and ncc."RoleID" = r."RoleID" and ncc."NotificationRoleConstructID" is null
    inner join "ArtefactNotificationConstruct" mw on mw."NotificationConstructID" = ncc."NotificationConstructID" and mw."NotificationConstructVersionNumber" = ncc."NotificationConstructVersionNumber"
      and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "ModuleArtefact" ma on ma."ArtefactID" = mw."ArtefactID" and ma."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ma."IsActive" = true and ma."IsDeleted" = false
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false and ow."ModuleID" = ma."ModuleID" and
      ow."ModuleVersionNumber" = ma."ModuleVersionNumber"
    inner join "OrganisationArtefact" oa on oa."OrganisationID" = OrganisationID and oa."ArtefactID" = mw."ArtefactID" and oa."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and oa."IsActive" =
      true and oa."IsDeleted" = false
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false;

  -- Workflow CLAIMS THAT ARE DIRECT FROM Workflow ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."NotificationConstructClaim" ncc
    inner join "ArtefactNotificationConstruct" mw on mw."NotificationConstructID" = ncc."NotificationConstructID" and mw."NotificationConstructVersionNumber" = ncc."NotificationConstructVersionNumber"
      and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "ModuleArtefact" ma on ma."ArtefactID" = mw."ArtefactID" and ma."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ma."IsActive" = true and ma."IsDeleted" = false
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false and ow."ModuleID" = ma."ModuleID" and
      ow."ModuleVersionNumber" = ma."ModuleVersionNumber"
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."NotificationRoleConstructID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA WF CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."NotificationConstructClaim" ncc
    inner join "ArtefactNotificationConstruct" mw on mw."NotificationConstructID" = ncc."NotificationConstructID" and mw."NotificationConstructVersionNumber" = ncc."NotificationConstructVersionNumber"
      and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "ModuleArtefact" ma on ma."ArtefactID" = mw."ArtefactID" and ma."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ma."IsActive" = true and ma."IsDeleted" = false
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false and ow."ModuleID" = ma."ModuleID" and
      ow."ModuleVersionNumber" = ma."ModuleVersionNumber"
    inner join "OrganisationArtefact" oa on oa."OrganisationID" = OrganisationID and oa."ArtefactID" = mw."ArtefactID" and oa."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and oa."IsActive" =
      true and oa."IsDeleted" = false
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."NotificationRoleConstructID" is null;*/

  ----------------------------------------------------------------------------
  -------------------------------------- ORG STATUS TYPE
  -- Org StatusType

  INSERT INTO
    public."OrganisationStatusType"("OrganisationID", "StatusTypeID", "StatusTypeVersionNumber", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    "StatusTypeID",
    "StatusTypeVersionNumber",
    "IsActive",
    "IsDeleted",
    "DefaultOrganisationID"
  FROM
    public."DefaultOrganisationStatusType"
  where
    "DefaultOrganisationID" = defaultorganisationid and
    "IsActive" = true and
    "IsDeleted" = false;

  -- StatusType Specific Roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    ncr."RoleName",
    true,
    ncr."RoleTypeID",
    true,
    false,
    ncr."StatusTypeRoleID"
  FROM
    public."StatusTypeRole" ncr
    inner join "DefaultOrganisationStatusType" donc on donc."StatusTypeID" = ncr."StatusTypeID" and donc."StatusTypeVersionNumber" = ncr."StatusTypeVersionNumber" and donc."IsActive" = true and
      donc."IsDeleted" = false and donc."DefaultOrganisationID" = defaultorganisationid
  where
    ncr."IsActive" = true and
    ncr."IsDeleted" = false and
    ncr."StatusTypeRoleID" not in (
                                    select
                                      orn."ParentID"
                                    from
                                      "OrganisationRole" orn
                                    where
                                      orn."OrganisationID" = OrganisationID
    );

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA NC CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "StatusTypeClaim" ncc on ncc."RoleID" is not null and ncc."RoleID" = r."RoleID"
    inner join "DefaultOrganisationStatusType" donc on donc."StatusTypeID" = ncc."StatusTypeID" and donc."StatusTypeVersionNumber" = ncc."StatusTypeVersionNumber" and donc."IsActive" = true and
      donc."IsDeleted" = false and donc."DefaultOrganisationID" = defaultorganisationid
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false and
    ncc."StatusTypeRoleID" is null;

  -- StatusType CLAIMS THAT ARE DIRECT FROM StatusType ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."StatusTypeClaim" ncc
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."StatusTypeRoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA NC CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."StatusTypeClaim" ncc
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."StatusTypeRoleID" is null;

  -----------------------------------------------------------------
  ---------------- DO-WF
/*
  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    mw."RoleName",
    true,
    mw."RoleTypeID",
    true,
    false,
    mw."StatusTypeRoleID"
  FROM
    public."StatusTypeRole" mw
    inner join "ModuleStatusType" mst on mst."StatusTypeID" = mw."StatusTypeID" and mst."StatusTypeVersionNumber" = mw."StatusTypeVersionNumber" and mst."IsActive" = true and mst."IsDeleted" = false
    inner join "OrganisationModuleSubscription" donc on donc."ModuleID" = mst."ModuleID" and donc."ModuleVersionNumber" = mst."ModuleVersionNumber" and donc."IsActive" = true and donc."IsDeleted" =
      false and donc."OrganisationID" = OrganisationID
  where
    mw."IsActive" = true and
    mw."IsDeleted" = false and
    mw."StatusTypeRoleID" not in (
                                   select
                                     orn."ParentID"
                                   from
                                     "OrganisationRole" orn
                                   where
                                     orn."OrganisationID" = OrganisationID
    );

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA WF CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "StatusTypeClaim" ncc on ncc."RoleID" is not null and ncc."RoleID" = r."RoleID" and ncc."StatusTypeRoleID" is null
    inner join "ModuleStatusType" mw on mw."StatusTypeID" = ncc."StatusTypeID" and mw."StatusTypeVersionNumber" = ncc."StatusTypeVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."ModuleID" = mw."ModuleID" and ow."ModuleVersionNumber" = mw."ModuleVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false;

  -- StatusType CLAIMS THAT ARE DIRECT FROM StatusType ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."StatusTypeClaim" ncc
    inner join "ModuleStatusType" mw on mw."StatusTypeID" = ncc."StatusTypeID" and mw."StatusTypeVersionNumber" = ncc."StatusTypeVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."ModuleID" = mw."ModuleID" and ow."ModuleVersionNumber" = mw."ModuleVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."StatusTypeRoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA WF CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."StatusTypeClaim" ncc
    inner join "ModuleStatusType" mw on mw."StatusTypeID" = ncc."StatusTypeID" and mw."StatusTypeVersionNumber" = ncc."StatusTypeVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."ModuleID" = mw."ModuleID" and ow."ModuleVersionNumber" = mw."ModuleVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."StatusTypeRoleID" is null;*/
  ----------------------------------------------------
  -------------------- DO - AR - STR
  -- Workflow Specific Roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    wr."RoleName",
    true,
    wr."RoleTypeID",
    true,
    false,
    wr."StatusTypeRoleID"
  FROM
    public."ArtefactStatusType" mw
    inner join "OrganisationArtefact" donc on donc."ArtefactID" = mw."ArtefactID" and donc."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and donc."IsActive" = true and donc."IsDeleted" = false
      and donc."OrganisationID" = OrganisationID
    inner join "StatusTypeRole" wr on wr."StatusTypeID" = mw."StatusTypeID" and wr."StatusTypeVersionNumber" = mw."StatusTypeVersionNumber"
  where
    wr."StatusTypeRoleID" not in (
                                   select
                                     orn."ParentID"
                                   from
                                     "OrganisationRole" orn
                                   where
                                     orn."OrganisationID" = OrganisationID
    );

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA WF CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "StatusTypeClaim" ncc on ncc."RoleID" is not null and ncc."RoleID" = r."RoleID" and ncc."StatusTypeRoleID" is null
    inner join "ArtefactStatusType" mw on mw."StatusTypeID" = ncc."StatusTypeID" and mw."StatusTypeVersionNumber" = ncc."StatusTypeVersionNumber"
    inner join "OrganisationArtefact" ow on ow."OrganisationID" = OrganisationID and ow."ArtefactID" = mw."ArtefactID" and ow."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false;

  -- StatusType CLAIMS THAT ARE DIRECT FROM StatusType ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."StatusTypeClaim" ncc
    inner join "ArtefactStatusType" mw on mw."StatusTypeID" = ncc."StatusTypeID" and mw."StatusTypeVersionNumber" = ncc."StatusTypeVersionNumber"
    inner join "OrganisationArtefact" ow on ow."OrganisationID" = OrganisationID and ow."ArtefactID" = mw."ArtefactID" and ow."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."StatusTypeRoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA WF CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."StatusTypeClaim" ncc
    inner join "ArtefactStatusType" mw on mw."StatusTypeID" = ncc."StatusTypeID" and mw."StatusTypeVersionNumber" = ncc."StatusTypeVersionNumber"
    inner join "OrganisationArtefact" ow on ow."OrganisationID" = OrganisationID and ow."ArtefactID" = mw."ArtefactID" and ow."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and ow."IsActive" =
      true and ow."IsDeleted" = false
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."StatusTypeRoleID" is null;
  -----------------------------------------------------
  --------------------- DO - M - WF - STR
  -- Workflow Specific Roles

 /* insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    ncr."RoleName",
    true,
    ncr."RoleTypeID",
    true,
    false,
    ncr."StatusTypeRoleID"
  FROM
    public."ModuleWorkflow" mw
    inner join "OrganisationModuleSubscription" donc on donc."ModuleID" = mw."ModuleID" and donc."ModuleVersionNumber" = mw."ModuleVersionNumber" and donc."IsActive" = true and donc."IsDeleted" =
      false and donc."OrganisationID" = OrganisationID
    inner join "WorkflowStatusType" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "StatusTypeRole" ncr on ncr."StatusTypeID" = wr."StatusTypeID" and ncr."StatusTypeVersionNumber" = wr."StatusTypeVersionNumber" and ncr."IsActive" = true and ncr."IsDeleted" = false
  where
    mw."IsActive" = true and
    mw."IsDeleted" = false and
    ncr."StatusTypeRoleID" not in (
                                    select
                                      orn."ParentID"
                                    from
                                      "OrganisationRole" orn
                                    where
                                      orn."OrganisationID" = OrganisationID
    );

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA WF CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false
    inner join "ModuleWorkflow" mw on mw."ModuleID" = ow."ModuleID" and mw."ModuleVersionNumber" = ow."ModuleVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowStatusType" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "StatusTypeClaim" ncr on ncr."RoleID" = r."RoleID" and ncr."StatusTypeRoleID" is null and ncr."StatusTypeID" = wr."StatusTypeID" and ncr."StatusTypeVersionNumber" =
      wr."StatusTypeVersionNumber" and ncr."IsActive" = true and ncr."IsDeleted" = false
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false;

  -- Workflow CLAIMS THAT ARE DIRECT FROM Workflow ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."StatusTypeClaim" ncc
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false
    inner join "ModuleWorkflow" mw on mw."ModuleID" = ow."ModuleID" and mw."ModuleVersionNumber" = ow."ModuleVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowStatusType" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."StatusTypeRoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA WF CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."StatusTypeClaim" ncc
    inner join "OrganisationModuleSubscription" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false
    inner join "ModuleWorkflow" mw on mw."ModuleID" = ow."ModuleID" and mw."ModuleVersionNumber" = ow."ModuleVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowStatusType" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."StatusTypeRoleID" is null;*/
  -----------------------------------------------------
  ---------------------------------- DO - AR -WF - STR

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    ncr."RoleName",
    true,
    ncr."RoleTypeID",
    true,
    false,
    ncr."StatusTypeRoleID"
  FROM
    public."ArtefactWorkflow" mw
    inner join "OrganisationArtefact" donc on donc."ArtefactID" = mw."ArtefactID" and donc."ArtefactVersionNumber" = mw."ArtefactVersionNumber" and donc."IsActive" = true and donc."IsDeleted" = false
      and donc."OrganisationID" = OrganisationID
    inner join "WorkflowStatusType" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "StatusTypeRole" ncr on ncr."StatusTypeID" = wr."StatusTypeID" and ncr."StatusTypeVersionNumber" = wr."StatusTypeVersionNumber" and ncr."IsActive" = true and ncr."IsDeleted" = false
  where
    mw."IsActive" = true and
    mw."IsDeleted" = false and
    ncr."StatusTypeRoleID" not in (
                                    select
                                      orn."ParentID"
                                    from
                                      "OrganisationRole" orn
                                    where
                                      orn."OrganisationID" = OrganisationID
    );

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA WF CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "OrganisationArtefact" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false
    inner join "ArtefactWorkflow" mw on mw."ArtefactID" = ow."ArtefactID" and mw."ArtefactVersionNumber" = ow."ArtefactVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowStatusType" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "StatusTypeClaim" ncr on ncr."RoleID" = r."RoleID" and ncr."StatusTypeRoleID" is null and ncr."StatusTypeID" = wr."StatusTypeID" and ncr."StatusTypeVersionNumber" =
      wr."StatusTypeVersionNumber" and ncr."IsActive" = true and ncr."IsDeleted" = false
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false;

  -- Workflow CLAIMS THAT ARE DIRECT FROM Workflow ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."StatusTypeClaim" ncc
    inner join "OrganisationArtefact" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false
    inner join "ArtefactWorkflow" mw on mw."ArtefactID" = ow."ArtefactID" and mw."ArtefactVersionNumber" = ow."ArtefactVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowStatusType" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."StatusTypeRoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA WF CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."StatusTypeClaim" ncc
    inner join "OrganisationArtefact" ow on ow."OrganisationID" = OrganisationID and ow."IsActive" = true and ow."IsDeleted" = false
    inner join "ArtefactWorkflow" mw on mw."ArtefactID" = ow."ArtefactID" and mw."ArtefactVersionNumber" = ow."ArtefactVersionNumber" and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowStatusType" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."WorkflowVersionNumber"
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."StatusTypeRoleID" is null;

  ----------------------------------------
  -------------------------- DO - WF - STR
  -- Workflow Specific Roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    ncr."RoleName",
    true,
    ncr."RoleTypeID",
    true,
    false,
    ncr."StatusTypeRoleID"
  FROM
    public."OrganisationWorkflow" mw
    inner join "WorkflowStatusType" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."VersionNumber"
    inner join "StatusTypeRole" ncr on ncr."StatusTypeID" = wr."StatusTypeID" and ncr."StatusTypeVersionNumber" = wr."StatusTypeVersionNumber" and ncr."IsActive" = true and ncr."IsDeleted" = false
  where
    mw."IsActive" = true and
    mw."IsDeleted" = false and
    ncr."StatusTypeRoleID" not in (
                                    select
                                      orn."ParentID"
                                    from
                                      "OrganisationRole" orn
                                    where
                                      orn."OrganisationID" = OrganisationID
    ) and
    mw."OrganisationID" = OrganisationID;

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA WF CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "OrganisationWorkflow" mw on mw."OrganisationID" = OrganisationID and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowStatusType" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."VersionNumber"
    inner join "StatusTypeClaim" ncr on ncr."RoleID" = r."RoleID" and ncr."StatusTypeRoleID" is null and ncr."StatusTypeID" = wr."StatusTypeID" and ncr."StatusTypeVersionNumber" =
      wr."StatusTypeVersionNumber" and ncr."IsActive" = true and ncr."IsDeleted" = false
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false;

  -- Workflow CLAIMS THAT ARE DIRECT FROM Workflow ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."StatusTypeClaim" ncc
    inner join "OrganisationWorkflow" mw on mw."OrganisationID" = OrganisationID and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowStatusType" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."VersionNumber"
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."StatusTypeRoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA WF CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."StatusTypeClaim" ncc
    inner join "OrganisationWorkflow" mw on mw."OrganisationID" = OrganisationID and mw."IsActive" = true and mw."IsDeleted" = FALSE
    inner join "WorkflowStatusType" wr on wr."WorkflowID" = mw."WorkflowID" and wr."WorkflowVersionNumber" = mw."VersionNumber"
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."StatusTypeRoleID" is null;

  -------------------------------
  ---------------------------------- INTERFACE PANEL
  -- IP Roles

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    ncr."RoleName",
    true,
    ncr."RoleTypeID",
    true,
    false,
    ncr."InterfacePanelRoleID"
  FROM
    public."InterfacePanelRole" ncr
    inner join "InterfacePanelOrganisationType" dpot on dpot."IsActive" = true and dpot."IsDeleted" = false and dpot."InterfacePanelID" = ncr."InterfacePanelID" and dpot."InterfacePanelVersionNumber"
      = ncr."InterfacePanelVersionNumber" and dpot."OrganisationTypeID" =
    (
      select
        do1."OrganisationTypeID"
      from
        "DefaultOrganisation" do1
      where
        do1."DefaultOrganisationID" = defaultorganisationid and
        do1."DefaultOrganisationVersionNumber" = organisationversionnumber
      order by
        do1."DefaultOrganisationVersionNumber" desc
      limit
        1
    ) and dpot."InterfacePanelVersionNumber" =
    (
      select
        ip."InterfacePanelVersionNumber"
      from
        "InterfacePanel" ip
      where
        ip."InterfacePanelID" = ncr."InterfacePanelID" and
        ip."IsActive" = true and
        ip."IsDeleted" = false
      order by
        ip."InterfacePanelVersionNumber" desc
      limit
        1
    )
    inner join "InterfacePanelOrganisationTypeUserType" dpotu on dpotu."IsActive" = true and dpotu."OrganisationTypeID" = dpot."OrganisationTypeID" and dpotu."IsDeleted" = false and
      dpotu."InterfacePanelID" = ncr."InterfacePanelID" and dpotu."InterfacePanelVersionNumber" = ncr."InterfacePanelVersionNumber" and dpotu."UserTypeID" in (
                                                                                                                                                                select
                                                                                                                                                                  do2."UserTypeID"
                                                                                                                                                                from
                                                                                                                                                                  "DefaultOrganisationUserType" do2
                                                                                                                                                                where
                                                                                                                                                                  do2."DefaultOrganisationID" =
                                                                                                                                                                    defaultorganisationid and
                                                                                                                                                                  do2."DefaultOrganisationVersionNumber"
                                                                                                                                                                    = organisationversionnumber and
                                                                                                                                                                  do2."IsActive" = true and
                                                                                                                                                                  do2."IsDeleted" = false
                                                                                                                                                                order by
                                                                                                                                                                  do2."DefaultOrganisationVersionNumber"
                                                                                                                                                                    desc
    ) and dpotu."InterfacePanelVersionNumber" =
    (
      select
        ip."InterfacePanelVersionNumber"
      from
        "InterfacePanel" ip
      where
        ip."InterfacePanelID" = ncr."InterfacePanelID" and
        ip."IsActive" = true and
        ip."IsDeleted" = false
      order by
        ip."InterfacePanelVersionNumber" desc
      limit
        1
    )
  where
    ncr."IsActive" = true and
    ncr."IsDeleted" = false and
    ncr."InterfacePanelRoleID" not in (
                                        select
                                          orn."ParentID"
                                        from
                                          "OrganisationRole" orn
                                        where
                                          orn."OrganisationID" = OrganisationID
    );

  -- INSERT GLOBAL ROLES THAT ARE LINKED VIA IP CLAIMS

  insert into
    public."OrganisationRole"("OrganisationID", "RoleName", "IsManaged", "RoleTypeID", "IsActive", "IsDeleted", "ParentID")
  SELECT
    OrganisationID,
    r."RoleName",
    true,
    r."RoleTypeID",
    true,
    false,
    r."RoleID"
  FROM
    public."Role" r
    inner join "InterfacePanelClaim" ipc on ipc."RoleID" = r."RoleID" and ipc."IsActive" = true and ipc."IsDeleted" = false
    inner join "InterfacePanelOrganisationType" dpot on dpot."IsActive" = true and dpot."IsDeleted" = false and dpot."InterfacePanelID" = ipc."InterfacePanelID" and dpot."InterfacePanelVersionNumber"
      = ipc."InterfacePanelVersionNumber" and dpot."OrganisationTypeID" =
    (
      select
        do1."OrganisationTypeID"
      from
        "DefaultOrganisation" do1
      where
        do1."DefaultOrganisationID" = defaultorganisationid and
        do1."DefaultOrganisationVersionNumber" = organisationversionnumber
      order by
        do1."DefaultOrganisationVersionNumber" desc
      limit
        1
    ) and dpot."InterfacePanelVersionNumber" =
    (
      select
        ip."InterfacePanelVersionNumber"
      from
        "InterfacePanel" ip
      where
        ip."InterfacePanelID" = ipc."InterfacePanelID" and
        ip."IsActive" = true and
        ip."IsDeleted" = false
      order by
        ip."InterfacePanelVersionNumber" desc
      limit
        1
    )
    inner join "InterfacePanelOrganisationTypeUserType" dpotu on dpotu."IsActive" = true and dpotu."OrganisationTypeID" = dpot."OrganisationTypeID" and dpotu."IsDeleted" = false and
      dpotu."InterfacePanelID" = ipc."InterfacePanelID" and dpotu."InterfacePanelVersionNumber" = ipc."InterfacePanelVersionNumber" and dpotu."UserTypeID" in (
                                                                                                                                                                select
                                                                                                                                                                  do2."UserTypeID"
                                                                                                                                                                from
                                                                                                                                                                  "DefaultOrganisationUserType" do2
                                                                                                                                                                where
                                                                                                                                                                  do2."DefaultOrganisationID" =
                                                                                                                                                                    defaultorganisationid and
                                                                                                                                                                  do2."DefaultOrganisationVersionNumber"
                                                                                                                                                                    = organisationversionnumber and
                                                                                                                                                                  do2."IsActive" = true and
                                                                                                                                                                  do2."IsDeleted" = false
                                                                                                                                                                order by
                                                                                                                                                                  do2."DefaultOrganisationVersionNumber"
                                                                                                                                                                    desc
    ) and dpotu."InterfacePanelVersionNumber" =
    (
      select
        ip."InterfacePanelVersionNumber"
      from
        "InterfacePanel" ip
      where
        ip."InterfacePanelID" = ipc."InterfacePanelID" and
        ip."IsActive" = true and
        ip."IsDeleted" = false
      order by
        ip."InterfacePanelVersionNumber" desc
      limit
        1
    )
  where
    r."RoleID" not in (
                        select
                          rr."ParentID"
                        from
                          "OrganisationRole" rr
                        where
                          rr."OrganisationID" = OrganisationID
    ) and
    r."IsActive" = true and
    r."IsDeleted" = false and
    ipc."InterfacePanelRoleID" is null;

  -- Module CLAIMS THAT ARE DIRECT FROM IP ROLES NOT GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."InterfacePanelClaim" ncc
    inner join "InterfacePanelOrganisationType" dpot on dpot."IsActive" = true and dpot."IsDeleted" = false and dpot."InterfacePanelID" = ncc."InterfacePanelID" and dpot."InterfacePanelVersionNumber"
      = ncc."InterfacePanelVersionNumber" and dpot."OrganisationTypeID" =
    (
      select
        do1."OrganisationTypeID"
      from
        "DefaultOrganisation" do1
      where
        do1."DefaultOrganisationID" = defaultorganisationid and
        do1."DefaultOrganisationVersionNumber" = organisationversionnumber
      order by
        do1."DefaultOrganisationVersionNumber" desc
      limit
        1
    ) and dpot."InterfacePanelVersionNumber" =
    (
      select
        ip."InterfacePanelVersionNumber"
      from
        "InterfacePanel" ip
      where
        ip."InterfacePanelID" = ncc."InterfacePanelID" and
        ip."IsActive" = true and
        ip."IsDeleted" = false
      order by
        ip."InterfacePanelVersionNumber" desc
      limit
        1
    )
    inner join "InterfacePanelOrganisationTypeUserType" dpotu on dpotu."IsActive" = true and dpotu."OrganisationTypeID" = dpot."OrganisationTypeID" and dpotu."IsDeleted" = false and
      dpotu."InterfacePanelID" = ncc."InterfacePanelID" and dpotu."InterfacePanelVersionNumber" = ncc."InterfacePanelVersionNumber" and dpotu."UserTypeID" in (
                                                                                                                                                                select
                                                                                                                                                                  do2."UserTypeID"
                                                                                                                                                                from
                                                                                                                                                                  "DefaultOrganisationUserType" do2
                                                                                                                                                                where
                                                                                                                                                                  do2."DefaultOrganisationID" =
                                                                                                                                                                    defaultorganisationid and
                                                                                                                                                                  do2."DefaultOrganisationVersionNumber"
                                                                                                                                                                    = organisationversionnumber and
                                                                                                                                                                  do2."IsActive" = true and
                                                                                                                                                                  do2."IsDeleted" = false
                                                                                                                                                                order by
                                                                                                                                                                  do2."DefaultOrganisationVersionNumber"
                                                                                                                                                                    desc
    ) and dpotu."InterfacePanelVersionNumber" =
    (
      select
        ip."InterfacePanelVersionNumber"
      from
        "InterfacePanel" ip
      where
        ip."InterfacePanelID" = ncc."InterfacePanelID" and
        ip."IsActive" = true and
        ip."IsDeleted" = false
      order by
        ip."InterfacePanelVersionNumber" desc
      limit
        1
    )
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."InterfacePanelRoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    ncc."RoleID" is null and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    );

  -- INSERT CLAIMS LINKED VIA MODULE CLAIMS GLOBAL

  INSERT INTO
    public."OrganisationRoleClaim"("OrganisationRoleID", "ResourceID", "OperationID", "StateID", "StateItemID", "IsActive", "IsDeleted", "OrganisationID")
  SELECT
    nc."OrganisationRoleID",
    ncc."ResourceID",
    ncc."OperationID",
    ncc."StateID",
    ncc."StateItemID",
    ncc."IsActive",
    ncc."IsDeleted",
    OrganisationID
  FROM
    public."InterfacePanelClaim" ncc
    inner join "InterfacePanelOrganisationType" dpot on dpot."IsActive" = true and dpot."IsDeleted" = false and dpot."InterfacePanelID" = ncc."InterfacePanelID" and dpot."InterfacePanelVersionNumber"
      = ncc."InterfacePanelVersionNumber" and dpot."OrganisationTypeID" =
    (
      select
        do1."OrganisationTypeID"
      from
        "DefaultOrganisation" do1
      where
        do1."DefaultOrganisationID" = defaultorganisationid and
        do1."DefaultOrganisationVersionNumber" = organisationversionnumber
      order by
        do1."DefaultOrganisationVersionNumber" desc
      limit
        1
    ) and dpot."InterfacePanelVersionNumber" =
    (
      select
        ip."InterfacePanelVersionNumber"
      from
        "InterfacePanel" ip
      where
        ip."InterfacePanelID" = ncc."InterfacePanelID" and
        ip."IsActive" = true and
        ip."IsDeleted" = false
      order by
        ip."InterfacePanelVersionNumber" desc
      limit
        1
    )
    inner join "InterfacePanelOrganisationTypeUserType" dpotu on dpotu."IsActive" = true and dpotu."OrganisationTypeID" = dpot."OrganisationTypeID" and dpotu."IsDeleted" = false and
      dpotu."InterfacePanelID" = ncc."InterfacePanelID" and dpotu."InterfacePanelVersionNumber" = ncc."InterfacePanelVersionNumber" and dpotu."UserTypeID" in (
                                                                                                                                                                select
                                                                                                                                                                  do2."UserTypeID"
                                                                                                                                                                from
                                                                                                                                                                  "DefaultOrganisationUserType" do2
                                                                                                                                                                where
                                                                                                                                                                  do2."DefaultOrganisationID" =
                                                                                                                                                                    defaultorganisationid and
                                                                                                                                                                  do2."DefaultOrganisationVersionNumber"
                                                                                                                                                                    = organisationversionnumber and
                                                                                                                                                                  do2."IsActive" = true and
                                                                                                                                                                  do2."IsDeleted" = false
                                                                                                                                                                order by
                                                                                                                                                                  do2."DefaultOrganisationVersionNumber"
                                                                                                                                                                    desc
    ) and dpotu."InterfacePanelVersionNumber" =
    (
      select
        ip."InterfacePanelVersionNumber"
      from
        "InterfacePanel" ip
      where
        ip."InterfacePanelID" = ncc."InterfacePanelID" and
        ip."IsActive" = true and
        ip."IsDeleted" = false
      order by
        ip."InterfacePanelVersionNumber" desc
      limit
        1
    )
    inner join "OrganisationRole" nc on nc."OrganisationID" = OrganisationID and nc."ParentID" = ncc."RoleID" and nc."IsActive" = true and nc."IsDeleted" = false
  where
    ncc."IsActive" = true and
    ncc."IsDeleted" = false and
    not exists (
                 select
                   orc."OrganisationRoleClaimID"
                 from
                   "OrganisationRoleClaim" orc
                 where
                   orc."OrganisationID" = OrganisationID and
                   orc."OrganisationRoleID" = nc."OrganisationRoleID" and
                   orc."OperationID" = ncc."OperationID" and
                   orc."ResourceID" = ncc."ResourceID" and
                   orc."StateID" = ncc."StateID" and
                   orc."StateItemID" = ncc."StateItemID"
    ) and
    ncc."InterfacePanelRoleID" is null;

  ------------------------ Branch

  -- create branches as needed

  INSERT INTO
    public."Organisation"("OrganisationID", "OrganisationTypeID", "IsBranch", "IsHeadOffice", "CreatedOn", "CreatedBy", "DefaultOrganisationID", "DefaultOrganisationVersionNumber",
      "ParentOrganisationID", "ParentID")
  SELECT
    uuid_generate_v1(),
    (
      select
        "OrganisationTypeID"
      from
        "OrganisationType"
      where
        "Name" = 'Branch'
      limit
        1
    ),
    true,
    false,
    CURRENT_DATE,
    'System',
    defaultorganisationid,
    organisationversionnumber,
    OrganisationID,
    wt."DefaultOrganisationBranchID"
  FROM
    public."DefaultOrganisationBranch" wt
  where
    wt."DefaultOrganisationID" = defaultorganisationid and
    wt."DefaultOrganisationVersionNumber" = organisationversionnumber;
  INSERT INTO
    public."OrganisationDetail"("OrganisationID", "Name", "Description")
  SELECT
    org."OrganisationID",
    dob."BranchName",
    'Branch'
  FROM
    public."Organisation" org
    left outer join "DefaultOrganisationBranch" dob on dob."DefaultOrganisationBranchID" = org."ParentID"
  where
    org."ParentOrganisationID" = OrganisationID;

  -- User Type

  INSERT INTO
    public."OrganisationUserType"("OrganisationID", "UserTypeID", "IsActive", "IsDeleted", "IsForDefaultUser")
  SELECT
    OrganisationID,
    wt."UserTypeID",
    wt."IsActive",
    wt."IsDeleted",
    wt."IsForDefaultUser"
  FROM
    public."DefaultOrganisationUserType" wt
  where
    wt."DefaultOrganisationID" = defaultorganisationid and
    wt."DefaultOrganisationVersionNumber" = organisationversionnumber;

  -- Organisation Default Status

  INSERT INTO
    public."OrganisationStatus"("OrganisationID", "StatusTypeID", "StatusTypeVersionNumber", "StatusTypeValueID", "StatusChangedOn", "StatusChangedBy", "ParentID")
  SELECT
    OrganisationID,
    wt."StatusTypeID",
    wt."StatusTypeVersionNumber",
    st."StatusTypeValueID",
    CURRENT_DATE,
    'System',
    null
  FROM
    public."DefaultOrganisationTarget" wt
    left outer join "vStatusType" st on st."StatusTypeID" = wt."StatusTypeID" and st."StatusTypeVersionNumber" = wt."StatusTypeVersionNumber" and
      st."IsStart" = true
  where
    wt."DefaultOrganisationID" = defaultorganisationid and
    wt."DefaultOrganisationVersionNumber" = organisationversionnumber and
    st."StatusTypeValueID" is not null;

  -- Organisation Branch Default Status, same as parent
  FOR LoopRow IN
  SELECT
    *
  FROM
    "Organisation"
  where
    "ParentOrganisationID" = OrganisationID
  LOOP
    INSERT INTO
      public."OrganisationStatus"("OrganisationID", "StatusTypeID", "StatusTypeVersionNumber", "StatusTypeValueID", "StatusChangedOn", "StatusChangedBy", "ParentID")
    SELECT
      loopRow."OrganisationID",
      wt."StatusTypeID",
      wt."StatusTypeVersionNumber",
      st."StatusTypeValueID",
      CURRENT_DATE,
      'System',
      null
    FROM
      public."DefaultOrganisationTarget" wt
      left outer join "vStatusType" st on st."StatusTypeID" = wt."StatusTypeID" and st."StatusTypeVersionNumber" = wt."StatusTypeVersionNumber" and st."StatusTypeName" = 'Branch Status' and
        st."IsStart" = true
    where
      wt."DefaultOrganisationID" = defaultorganisationid and
      wt."DefaultOrganisationVersionNumber" = organisationversionnumber and
      st."StatusTypeValueID" is not null;

  END LOOP;

  RETURN OrganisationId;
end;
$$;


ALTER FUNCTION public."fn_CreateOrganisationFromDefault"(organisationtypeid integer, defaultorganisationid uuid, organisationversionnumber integer, organisationname character varying, organisationdescription character varying) OWNER TO postgres;

--
-- TOC entry 915 (class 1255 OID 40314)
-- Name: fn_GetLastDayOfMonth(date); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_GetLastDayOfMonth"(date) RETURNS date
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
        SELECT (date_trunc('MONTH', $1) + INTERVAL '1 MONTH - 1 day')::date;
        $_$;


ALTER FUNCTION public."fn_GetLastDayOfMonth"(date) OWNER TO postgres;

--
-- TOC entry 916 (class 1255 OID 40315)
-- Name: fn_GetUserClaims(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_GetUserClaims"(userid uuid, organisationid uuid) RETURNS TABLE("ClaimType" character varying, "ClaimName" character varying)
    LANGUAGE plpgsql
    AS $$
BEGIN

if(organisationid is null)
THEN
	-- get default but check if temp or not
    IF((select ua."IsTemporaryAccount" from "UserAccounts" ua where ua."ID" = userid limit 1) = TRUE)
    THEN
    	organisationid := (select org."OrganisationID" from "Organisation" org where org."OrganisationTypeID" = (select "OrganisationTypeID" from "OrganisationType" where "Name" = 'Temporary' limit 1));
    ELSE
    	organisationid := (select org."ParentID" from "UserAccountOrganisation" org where org."UserID" = userid limit 1);
    END IF;

END IF;


return query SELECT

  orc."ClaimName",
  orc."ClaimSubName"

FROM
  public."vOrgansiationClaim" orc
  inner join public."UserAccountOrganisation" uao on uao."ParentID" = orc."OrganisationID"
  inner join public."UserAccountOrganisationRole" uaor on uaor."OrganisationRoleID" = orc."OrganisationRoleID" and uaor."UserAccountOrganisationID" = uao."UserAccountOrganisationID"
  where orc."OrganisationID" = organisationid and uao."UserID" = userid
 union

 SELECT

  orc."ClaimName",
  orc."ClaimSubName"

FROM
  public."vOrgansiationClaim" orc
  inner join public."UserAccountOrganisation" uao on uao."ParentID" = orc."OrganisationID"
  inner join public."UserAccountOrganisationGroup" uaog on uaog."UserAccountOrganisationID" = uao."UserAccountOrganisationID"
  inner join "OrganisationGroupRole" ogr on ogr."OrganisationGroupID" = uaog."OrganisationGroupID"
  where orc."OrganisationID" = organisationid and uao."UserID" = userid;
END;
$$;


ALTER FUNCTION public."fn_GetUserClaims"(userid uuid, organisationid uuid) OWNER TO postgres;

--
-- TOC entry 917 (class 1255 OID 40316)
-- Name: fn_GetWeekOfMonth(date, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_GetWeekOfMonth"(p_date date, p_direction integer) RETURNS integer
    LANGUAGE sql IMMUTABLE
    AS $_$
  SELECT CASE WHEN $2 >= 0 THEN
    CEIL(EXTRACT(DAY FROM $1) / 7)::int
  ELSE
    0 - CEIL(
      (EXTRACT(DAY FROM fn_GetLastDayOfMonth($1)) - EXTRACT(DAY FROM $1) + 1) / 7
    )::int
  END
$_$;


ALTER FUNCTION public."fn_GetWeekOfMonth"(p_date date, p_direction integer) OWNER TO postgres;

--
-- TOC entry 918 (class 1255 OID 40317)
-- Name: fn_GetWorkFlowTreeStructure(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_GetWorkFlowTreeStructure"() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
  WorkflowID uuid;
  WorkflowVersionNumber integer;
BEGIN
  SELECT
Level1."Name" Level1, Level1."ItemOrder", Level1."WorkflowTreeStructureID",Level1."WorkflowActionID",
Level2."Name" level2, Level2."ItemOrder" , Level2."WorkflowTreeStructureID",Level2."WorkflowActionID",
Level3."Name" level3 , Level3."ItemOrder" , Level3."WorkflowTreeStructureID", Level3."WorkflowActionID",
Level4."Name" level4 , Level4."ItemOrder", Level4."WorkflowTreeStructureID",  Level4."WorkflowActionID"
FROM  "WorkflowTreeStructure"  Level4
  LEFT JOIN "WorkflowTreeStructure"  Level3 ON Level4."ParentID" =  Level3."WorkflowTreeStructureID"
  and Level3."WorkflowID" =   WorkflowID and Level3."WorkflowVersionNumber" = WorkflowVersionNumber
  LEFT JOIN "WorkflowTreeStructure"  Level2 ON Level3."ParentID" =  Level2."WorkflowTreeStructureID"
  and Level2."WorkflowID" =   WorkflowID and Level2."WorkflowVersionNumber" = WorkflowVersionNumber
  LEFT JOIN "WorkflowTreeStructure"  Level1 ON  Level1."WorkflowTreeStructureID" = Level2."ParentID"
  and Level1."WorkflowID" =   WorkflowID and Level1."WorkflowVersionNumber" = WorkflowVersionNumber
where Level4."WorkflowID" =   WorkflowID  and Level4."WorkflowVersionNumber" = WorkflowVersionNumber
Order by Level1."ItemOrder", Level2."ItemOrder", Level3."ItemOrder" , Level4."ItemOrder" ;

END;
$$;


ALTER FUNCTION public."fn_GetWorkFlowTreeStructure"() OWNER TO postgres;

--
-- TOC entry 919 (class 1255 OID 40318)
-- Name: fn_ProcessBillingAndPeriodForPlanSubscription(uuid, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_ProcessBillingAndPeriodForPlanSubscription"(plansubscriptionid uuid, plansubscriptionversionnumber integer, globalaccountingperiodidthatisclosing integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
  NumberOfBillingPeriods integer;
  BillingID uuid;
  PlanHasTrial boolean;
  AccountingPeriodStartDate date;
  AccountingPeriodEndDate date;
  GlobalPaymentMethodID uuid;
  OrganisationID uuid;
  BillingPeriodStartDate date;
  BillingPeriodEndDate date;
  PlanSubscriptionBillingPeriodID uuid;
  NextAccountingPeriod integer;
BEGIN

NextAccountingPeriod := (select "GlobalAccountingPeriodID" from "GlobalAccountingPeriod" gap where gap."GlobalAccountingPeriodID" = ( globalaccountingperiodidthatisclosing + 1) limit 1);

-- get current accounting period range
select to_date((((((((((gap."Year" || '-'::text) || gap."Month") || '-'::text) || gap."StartDay") ||
      ' '::text) || 0) || ':'::text) || 0) || ':'::text) || 0, 'YYYY-MM-DD HH24:MI:SS'::text),
      to_date((((((((((gap."Year" || '-'::text) || gap."Month") || '-'::text) || gap."EndDay") ||
      ' '::text) || 0) || ':'::text) || 0) || ':'::text) || 0, 'YYYY-MM-DD HH24:MI:SS'::text)

into AccountingPeriodStartDate,AccountingPeriodEndDate

from "GlobalAccountingPeriod" gap where gap."GlobalAccountingPeriodID" =  globalaccountingperiodidthatisclosing;

NumberOfBillingPeriods := (select (count(*)+1) from "PlanSubscriptionBillingProcessLog" pl where pl."PlanSubscriptionID" = plansubscriptionid and pl."PlanSubscriptionVersionNumber" = plansubscriptionversionnumber
	and pl."StatusTypeValueID" = (select "StatusTypeValueID" from "vStatusType" where "StatusTypeName" = 'PlanSubscriptionBillingProcessLog Status' and "Name" = 'Paid' ) limit 1);

GlobalPaymentMethodID := (select pp."GlobalPaymentMethodID" from "PlanSubscriptionPaymentPlan" pp where pp."PlanSubscriptionID" = plansubscriptionid and pp."PlanSubscriptionVersionNumber" = plansubscriptionversionnumber limit 1);

OrganisationID := (select pp."OrganisationID" from "PlanSubscription" pp where pp."PlanSubscriptionID" = plansubscriptionid and pp."PlanSubscriptionVersionNumber" = plansubscriptionversionnumber limit 1);

-- set billing period dates
select
-- create billing period start date from existing period start date and add 1 if month
	(case when b."BillingPeriodUnitID" = 800501 then
		(AccountingPeriodStartDate + interval '1 month' * 1) else (AccountingPeriodStartDate + interval '1 month' * b."BillingPeriod") END),
    (case when b."BillingPeriodUnitID" = 800501 then
		(AccountingPeriodEndDate + interval '1 month' * 1) else (AccountingPeriodEndDate + interval '1 month' * b."BillingPeriod") END)

into

 BillingPeriodStartDate, BillingPeriodEndDate

 from

"OrganisationPaymentMethod" opm

left join "PlanSubscriptionPeriod" psp on psp."PlanSubscriptionID" = plansubscriptionid and psp."PlanSubscriptionVersionNumber" = plansubscriptionversionnumber
  and psp."StartDate" >=  AccountingPeriodStartDate and psp."EndDate" = AccountingPeriodEndDate and psp."IsClosed" = false and psp."IsActive" = true

left outer join "PlanSubscription" ps on ps."PlanSubscriptionID" = plansubscriptionid and ps."PlanSubscriptionVersionNumber" = plansubscriptionversionnumber

left join "Billing" b on b."BillingID" = (select p."BillingID" from "PlanBilling" p where p."PlanID" = ps."PlanID" and p."PlanVersionNumber" = ps."PlanVersionNumber" limit 1)

where opm."GlobalPaymentMethodID" = GlobalPaymentMethodID and opm."OrganisationID" = OrganisationID;

PlanSubscriptionBillingPeriodID := (select uuid_generate_v1());

-- create billing process log entry
INSERT INTO
  public."PlanSubscriptionBillingProcessLog"
(
  "PlanSubscriptionBillingPeriodID",
  "BillingPeriodNumber",
  "PlanSubscriptionID",
  "PlanSubscriptionVersionNumber",
  "CreatedOn",
  "StartDate",
  "EndDate",
  "StatusTypeValueID",
  "StatusTypeID",
  "StatusTypeVersionNumber"

)
VALUES(
  PlanSubscriptionBillingPeriodID,
  NumberOfBillingPeriods,
  plansubscriptionid,
  plansubscriptionversionnumber,
  CURRENT_DATE,
  BillingPeriodStartDate,
  BillingPeriodEndDate,
  (select st."StatusTypeValueID" from "vStatusType" st where st."StatusTypeName" = 'PlanSubscriptionBillingProcessLog Status' and st."Name" = 'Active' limit 1),
  (select st."StatusTypeID" from "vStatusType" st where st."StatusTypeName" = 'PlanSubscriptionBillingProcessLog Status' and st."Name" = 'Active' limit 1),
  (select st."StatusTypeVersionNumber" from "vStatusType" st where st."StatusTypeName" = 'PlanSubscriptionBillingProcessLog Status' and st."Name" = 'Active' limit 1)
);


-- mark the current subscription period as closed for current account period add new billing period
UPDATE
  public."PlanSubscriptionPeriod"
SET
  "IsClosed" = true,
  "ClosedOn" = CURRENT_DATE,
  "PlanSubscriptionBillingPeriodID" = PlanSubscriptionBillingPeriodID

WHERE
  "PlanSubscriptionID" = plansubscriptionid and "PlanSubscriptionVersionNumber" = plansubscriptionversionnumber
  and "StartDate" >=  AccountingPeriodStartDate and "EndDate" = AccountingPeriodEndDate
;

-- create next period
INSERT INTO
  public."PlanSubscriptionPeriod"
(
  "PlanSubscriptionID",
  "PlanSubscriptionVersionNumber",
  "CreatedOn",
  "StartDate",
  "EndDate",
  "IsCancellationPeriod",
  "PeriodNumber",
  "IsTrialPeriod",
  "TrialPeriodNumber",
  "IsClosed"
)
SELECT
	plansubscriptionid,
    plansubscriptionversionnumber,
    CURRENT_DATE,

    -- start date
    to_date((((((((((gap."Year" || '-'::text) || gap."Month") || '-'::text) || gap."StartDay") ||
      ' '::text) || 0) || ':'::text) || 0) || ':'::text) || 0, 'YYYY-MM-DD HH24:MI:SS'::text),
    -- end date
    to_date((((((((((gap."Year" || '-'::text) || gap."Month") || '-'::text) || gap."EndDay") ||
      ' '::text) || 0) || ':'::text) || 0) || ':'::text) || 0, 'YYYY-MM-DD HH24:MI:SS'::text),
    false,
    (select count(*) from "PlanSubscriptionPeriod" psp where psp."PlanSubscriptionID" = ps."PlanSubscriptionID" and psp."PlanSubscriptionVersionNumber" = ps."PlanSubscriptionVersionNumber"),
    (CASE WHEN ps."TrialEndDate" > BillingPeriodStartDate then true else false END),
    (CASE WHEN ps."TrialEndDate" > BillingPeriodStartDate THEN ps."TrialPeriodNumber" + 1 else null END),
    false
FROM
   public."PlanSubscriptionPeriod" ps

   left outer join "PlanSubscription" ps2 on ps2."PlanSubscriptionID" = plansubscriptionid and ps2."PlanSubscriptionVersionNumber" = plansubscriptionversionnumber

   left outer join "Plan" p on p."PlanID" = ps2."PlanID" and p."PlanVersionNumber" = ps2."PlanVersionNumber"

   left outer join "ClassificationType" period on period."ClassificationTypeID" = p."PeriodUnitID" and period."ClassificationTypeCategoryID" = 8006
   left outer join "ClassificationType" tperiod on tperiod."ClassificationTypeID" = p."TrialPeriodUnitID" and tperiod."ClassificationTypeCategoryID" = 8006

   left outer join "GlobalAccountingPeriod" gap on gap."GlobalAccountingPeriodID" = NextAccountingPeriod

  where ps."PlanSubscriptionID" = plansubscriptionid and ps."PlanSubscriptionVersionNumber" = plansubscriptionversionnumber
  and ps."CreatedOn" = (select max(psp1."CreatedOn") from "PlanSubscriptionPeriod" psp1  where psp1."PlanSubscriptionID" = plansubscriptionid and psp1."PlanSubscriptionVersionNumber" = plansubscriptionversionnumber);





END;
$$;


ALTER FUNCTION public."fn_ProcessBillingAndPeriodForPlanSubscription"(plansubscriptionid uuid, plansubscriptionversionnumber integer, globalaccountingperiodidthatisclosing integer) OWNER TO postgres;

--
-- TOC entry 921 (class 1255 OID 40320)
-- Name: fn_PromoteArtefactTemplate(uuid, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_PromoteArtefactTemplate"(artefacttemplateid uuid, artefacttemplateversionnumber integer) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
  ArtefactID UUID;
  ArtefactVersionNumber integer;
  LoopRow RECORD;
BEGIN

ArtefactID := (select dorg."ArtefactID" from "Artefact" dorg
	where dorg."ArtefactTemplateID" = artefacttemplateid limit 1);

ArtefactVersionNumber := (select dorg."ArtefactVersionNumber" from "Artefact" dorg
	where dorg."ArtefactTemplateID" = artefacttemplateid order by dorg."ArtefactVersionNumber" desc limit 1);

-- create DO entry
BEGIN

IF(ArtefactID is null)
THEN
BEGIN
	ArtefactID := uuid_generate_v1();
END;
END IF;

ArtefactVersionNumber := artefacttemplateversionnumber;


INSERT INTO
  public."Artefact"
(
  "ArtefactID",
  "ArtefactVersionNumber",
  "Name",
  "Description",
  "IsActive",
  "IsDeleted",
  "ArtefactTemplateID",
  "ArtefactTemplateVersionNumber"
)
SELECT
  ArtefactID,
  ArtefactVersionNumber,
  "Name",
  "Description",
  "IsActive",
  "IsDeleted",
  artefacttemplateid,
  artefacttemplateversionnumber
FROM
  public."ArtefactTemplate" wt where wt."ArtefactTemplateID" = artefacttemplateid and wt."ArtefactTemplateVersionNumber" = artefacttemplateversionnumber;


-- WF ROLE
INSERT INTO
  public."ArtefactRole"
(
  "RoleName",
  "RoleDescription",
  "IsActive",
  "IsDeleted",
  "ArtefactID",
  "ArtefactVersionNumber",
  "RoleTypeID",
  "RoleSubTypeID",
  "RoleCategoryID",
  "RoleSubCategoryID"
)
SELECT
  wt."RoleName",
  wt."RoleDescription",
  wt."IsActive",
  wt."IsDeleted",
  ArtefactID,
  ArtefactVersionNumber,
  wt."RoleTypeID",
  wt."RoleSubTypeID",
  wt."RoleCategoryID",
  wt."RoleSubCategoryID"
FROM
  public."ArtefactRoleTemplate" wt where wt."ArtefactTemplateID" = artefacttemplateid and wt."ArtefactTemplateVersionNumber" = artefacttemplateversionnumber ;


-- WF CLAIM
  INSERT INTO
  public."ArtefactClaim"
(
"ArtefactID",
  "ArtefactVersionNumber",
  "ResourceID",
  "OperationID",
  "StateID",
  "StateItemID",
  "IsActive",
  "IsDeleted",
  "NotificationRoleConstructID"
)
SELECT
  ArtefactID,
  ArtefactVersionNumber,
  wt."ResourceID",
  wt."OperationID",
  wt."StateID",
  wt."StateItemID",
  wt."IsActive",
  wt."IsDeleted",
 mr."ArtefactRoleID"
FROM
  public."ArtefactClaimTemplate" wt

  inner join "ArtefactRoleTemplate" wrr on wrr."ArtefactRoleID" = wt."ArtefactRoleID" and wrr."ArtefactID" = ArtefactID and wrr."ArtefactVersionNumber" = ArtefactVersionNumber

  left outer join "ArtefactRole" mr on mr."ArtefactID" = ArtefactID and mr."ArtefactVersionNumber" = ArtefactVersionNumber and mr."RoleName" = wrr."RoleName"

 where wt."ArtefactTemplateID" = artefacttemplateid and wt."ArtefactTemplateVersionNumber" = artefacttemplateversionnumber

  	and wrr."ArtefactRoleID" is not null and wt."RoleID" is null ;

INSERT INTO
  public."ArtefactClaim"
(
"ArtefactID",
  "ArtefactVersionNumber",
  "ResourceID",
  "OperationID",
  "StateID",
  "StateItemID",
  "IsActive",
  "IsDeleted",
  "RoleID"
)
SELECT
ArtefactID,
  ArtefactVersionNumber,
  wt."ResourceID",
  wt."OperationID",
  wt."StateID",
  wt."StateItemID",
  wt."IsActive",
  wt."IsDeleted",
  wt."RoleID"
FROM
  public."ArtefactClaimTemplate" wt

  inner join "Role" wrr on wrr."RoleID" = wt."RoleID"

  where wt."ArtefactTemplateID" = artefacttemplateid and wt."ArtefactTemplateVersionNumber" = artefacttemplateversionnumber

  	and wt."ArtefactRoleID" is null and wt."RoleID" is not null;

INSERT INTO
  public."ArtefactDependency"
(
  "ArtefactID",
  "ArtefactVersionNumber",
  "DependencyID",
  "DependencyVersionNumber",
  "IsActive",
  "IsDeleted"
)
SELECT
  ArtefactID,
  ArtefactVersionNumber,
  md."ArtefactID",
  md."ArtefactVersionNumber",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."ArtefactDependencyTemplate" wt

  left outer join "ArtefactTemplate" mt on mt."ArtefactTemplateID" = wt."DependencyTemplateID" and mt."ArtefactTemplateVersionNumber" = wt."DependencyTemplateVersionNumber"

  left outer join "Artefact" md on md."ArtefactID" = ArtefactID and md."ArtefactVersionNumber" = ArtefactVersionNumber and md."Name" = mt."Name" and md."IsActive" = true and md."IsDeleted" = false

  where wt."ArtefactTemplateID" = artefacttemplateid and wt."ArtefactTemplateVersionNumber" = artefacttemplateversionnumber ;

-- ST Promotion
FOR LoopRow IN
	select * from "ArtefactStatusTypeTemplate" aw
    	where aw."ArtefactTemplateID" =  artefacttemplateid and aw."ArtefactTemplateVersionNumber" =  artefacttemplateversionnumber and aw."StatusTypeTemplateID" not in (select "StatusTypeTemplateID" from "StatusType" w where w."StatusTypeTemplateID"= aw."StatusTypeTemplateID" and w."StatusTypeTemplateVersionNumber" = aw."StatusTypeTemplateVersionNumber")
LOOP
    BEGIN
    	perform "fn_PromoteStatusTypeTemplate"(LoopRow."ArtefactTemplateID", aw."ArtefactTemplateVersionNumber");
    END;
END LOOP;

-- NC Promotion
FOR LoopRow IN
	select * from "ArtefactNotificationConstructTemplate" aw
    	where aw."ArtefactTemplateID" =  artefacttemplateid and aw."ArtefactTemplateVersionNumber" =  artefacttemplateversionnumber and aw."NotificationConstructTemplateID" not in (select "NotificationConstructTemplateID" from "NotificationConstruct" w where w."NotificationConstructTemplateID"= aw."NotificationConstructTemplateID" and w."NotificationConstructTemplateVersionNumber" = aw."NotificationConstructTemplateVersionNumber")
LOOP
    BEGIN
    	perform "fn_PromoteNotificationConstructTemplate"(LoopRow."NotificationConstructTemplateID",LoopRow."NotificationConstructTemplateVersionNumber");
    END;
END LOOP;

-- WF Promotion
FOR LoopRow IN
	select * from "ArtefactWorkflowTemplate" aw
    	where aw."ArtefactTemplateID" =  artefacttemplateid and aw."ArtefactTemplateVersionNumber" =  artefacttemplateversionnumber and aw."WorkflowTemplateID" not in (select "WorkflowTemplateID" from "Workflow" w where w."WorkflowTemplateID"= aw."WorkflowTemplateID" and w."WorkflowTemplateVersionNumber" = aw."WorkflowTemplateVersionNumber")
LOOP
    BEGIN
    	perform "fn_PromoteWorkflowTemplate"(LoopRow."WorkflowTemplateID",LoopRow."WorkflowTemplateVersionNumber");
    END;
END LOOP;



END;
------ End DO

--EXCEPTION
--	WHEN
END;
$$;


ALTER FUNCTION public."fn_PromoteArtefactTemplate"(artefacttemplateid uuid, artefacttemplateversionnumber integer) OWNER TO postgres;

--
-- TOC entry 922 (class 1255 OID 40321)
-- Name: fn_PromoteDefaultOrganisationTemplate(uuid, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_PromoteDefaultOrganisationTemplate"(defaultorganisationtemplateid uuid, defaultorganisationtemplateversionnumber integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
  DefaultOrganisationID UUID;
  DefaultOrganisationVersionNumber integer;
  LoopRow RECORD;
  LoopUUID UUID;
BEGIN

DefaultOrganisationID := (select dorg."DefaultOrganisationID" from "DefaultOrganisation" dorg
	where dorg."DefaultOrganisationTemplateID" =  defaultorganisationtemplateid limit 1);

DefaultOrganisationVersionNumber := (select dorg."DefaultOrganisationVersionNumber" from "DefaultOrganisation" dorg
	where dorg."DefaultOrganisationTemplateID" = defaultorganisationtemplateid order by dorg."DefaultOrganisationVersionNumber" desc limit 1);

if(DefaultOrganisationID is null or (DefaultOrganisationID is not null and defaultorganisationtemplateversionnumber is null))
THEN
BEGIN

-- populate variables
IF(DefaultOrganisationID is null)
THEN
BEGIN
	DefaultOrganisationID := uuid_generate_v1();
END;
END IF;


	DefaultOrganisationVersionNumber := defaultorganisationtemplateversionnumber;


-- insert DO
INSERT INTO
  public."DefaultOrganisation"
(
  "DefaultOrganisationID",
  "DefaultOrganisationVersionNumber",
  "Name",
  "Description",
  "IsActive",
  "IsDeleted",
  "DefaultOrganisationTemplateID",
  "DefaultOrganisationTemplateVersionNumber",
  "OrganisationTypeID"
)
SELECT
  DefaultOrganisationID,
  DefaultOrganisationVersionNumber,
  wt."Name",
  wt."Description",
  wt."IsActive",
  wt."IsDeleted",
  defaultorganisationtemplateid,
  defaultorganisationtemplateversionnumber,
  wt."OrganisationTypeID"
FROM
  public."DefaultOrganisationTemplate" wt where wt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and wt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber ;

-- DOT ART
-- Check ART version exists
FOR LoopRow IN
	select * from "DefaultOrganisationArtefactTemplate"
    	where "DefaultOrganisationTemplateID" = defaultorganisationtemplateid and "DefaultOrganisationTemplateVersionNumber" = defaultorganisationtemplateversionnumber
        	and "ArtefactTemplateID" not in (select ar."ArtefactTemplateID" from "Artefact" ar where ar."ArtefactTemplateID" = "ArtefactTemplateID" and ar."ArtefactTemplateVersionNumber" = "ArtefactTemplateVersionNumber")
LOOP
    BEGIN
    	perform "fn_PromoteArtefactTemplate"(LoopRow."ArtefactTemplateID",LoopRow."ArtefactTemplateVersionNumber");
    END;
END LOOP;

-- Add DOT ARTS to DO
INSERT INTO
  public."DefaultOrganisationArtefact"
(
  "DefaultOrganisationID",
  "DefaultOrganisationVersionNumber",
  "ArtefactID",
  "ArtefactVersionNumber",
  "ParentID",
  "IsActive",
  "IsDeleted"
)
SELECT
  DefaultOrganisationID,
  DefaultOrganisationVersionNumber,
  ar."ArtefactID",
  ar."ArtefactVersionNumber",
  wt."ParentID",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."DefaultOrganisationArtefactTemplate"  wt

  left outer join "Artefact" ar on ar."ArtefactTemplateID" = wt."ArtefactTemplateID" and ar."ArtefactTemplateVersionNumber" = wt."ArtefactTemplateVersionNumber"

  where wt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and wt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber ;

---------------- END DOT ART
-- DOT MT
-- Check MT version exists
FOR LoopRow IN
	select * from "DefaultOrganisationModuleTemplate"
    	where "DefaultOrganisationTemplateID" = defaultorganisationtemplateid and "DefaultOrganisationTemplateVersionNumber" = defaultorganisationtemplateversionnumber
        and "ModuleTemplateID" not in (select mt."ModuleTemplateID" from "Module" mt where mt."ModuleTemplateID" = "ModuleTemplateID" and mt."ModuleTemplateVersionNumber" = "ModuleTemplateVersionNumber")
LOOP
    BEGIN
    	perform "fn_PromoteModuleTemplate"(LoopRow."ModuleTemplateID",LoopRow."ModuleTemplateVersionNumber");
	END;
END LOOP;

-- Add DOT MT to DO
INSERT INTO
  public."DefaultOrganisationModule"
(
  "DefaultOrganisationID",
  "DefaultOrganisationVersionNumber",
  "ModuleID",
  "ModuleVersionNumber",
  "ParentID",
  "IsActive",
  "IsDeleted"
)
SELECT
  DefaultOrganisationID,
  DefaultOrganisationVersionNumber,
  m."ModuleID",
  m."ModuleVersionNumber",
  null,
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."DefaultOrganisationModuleTemplate"  wt

  left outer join "Module" m on m."ModuleTemplateID" = wt."ModuleTemplateID" and m."ModuleTemplateVersionNumber" = wt."ModuleTemplateVersionNumber"

  where wt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and wt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber ;
------ End DOT MT
---------------- END DOT ART
-- DOT STT
-- Check STT version exists
FOR LoopRow IN
	select * from "DefaultOrganisationStatusTypeTemplate"
    	where "DefaultOrganisationTemplateID" = defaultorganisationtemplateid and "DefaultOrganisationTemplateVersionNumber" = defaultorganisationtemplateversionnumber
        and "StatusTypeTemplateID" not in (select st."StatusTypeTemplateID" from "StatusType" st where st."StatusTypeTemplateID" = "StatusTypeTemplateID" and st."StatusTypeTemplateVersionNumber" = "StatusTypeTemplateVersionNumber")
LOOP
    BEGIN
    	perform "fn_PromoteStatusTypeTemplate"(LoopRow."StatusTypeTemplateID",LoopRow."StatusTypeTemplateVersionNumber");
    END;
END LOOP;

-- Add DOT STT to DO
INSERT INTO
  public."DefaultOrganisationStatusType"
(
  "DefaultOrganisationID",
  "DefaultOrganisationVersionNumber",
  "StatusTypeID",
  "StatusTypeVersionNumber",
  "ParentID",
  "IsActive",
  "IsDeleted",
  "DefaultStatusTypeValueID"
)
SELECT
  DefaultOrganisationID,
  DefaultOrganisationVersionNumber,
  st."StatusTypeID",
  st."StatusTypeVersionNumber",
  wt."ParentID",
  wt."IsActive",
  wt."IsDeleted",
  stv."StatusTypeValueID"
FROM
  public."DefaultOrganisationStatusTypeTemplate" wt

  left outer join "StatusType" st on st."StatusTypeTemplateID" = wt."StatusTypeTemplateID" and st."StatusTypeTemplateVersionNumber" = wt."StatusTypeTemplateVersionNumber"

  left outer join "StatusTypeValueTemplate" stvt on stvt."StatusTypeValueTemplateID" = wt."DefaultStatusTypeValueTemplateID"

  left outer join "StatusTypeValue" stv on stv."StatusTypeID" = st."StatusTypeID" and stv."StatusTypeVersionNumber" = st."StatusTypeVersionNumber"
  	and stv."Name" = stvt."Name"

  where wt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and wt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber ;

------ End DOT STT

-- DOT NCT
-- Check NCT version exists
FOR LoopRow IN
	select * from "DefaultOrganisationNotificationConstructTemplate"
    	where "DefaultOrganisationTemplateID" = defaultorganisationtemplateid and "DefaultOrganisationTemplateVersionNumber" = defaultorganisationtemplateversionnumber
        and "NotificationConstructTemplateID" not in (select nc."NotificationConstructTemplateID" from "NotificationConstruct" nc where nc."NotificationConstructTemplateID" = "NotificationConstructTemplateID"
        	and nc."NotificationConstructTemplateVersionNumber" = "NotificationConstructTemplateVersionNumber")
LOOP
    BEGIN
    	perform "fn_PromoteNotificationConstructTemplate"(LoopRow."NotificationConstructTemplateID",LoopRow."NotificationConstructTemplateVersionNumber");
    END;
END LOOP;

-- Add DOT NCT to DO
INSERT INTO
  public."DefaultOrganisationNotificationConstruct"
(
  "DefaultOrganisationID",
  "DefaultOrganisationVersionNumber",
  "NotificationConstructID",
  "NotificationConstructVersionNumber",
  "ParentID",
  "IsActive",
  "IsDeleted"
)
SELECT
  DefaultOrganisationID,
  DefaultOrganisationVersionNumber,
  st."NotificationConstructID",
  st."NotificationConstructVersionNumber",
  wt."ParentID",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."DefaultOrganisationNotificationConstructTemplate" wt

  left outer join "NotificationConstruct" st on st."NotificationConstructTemplateID" = wt."NotificationConstructTemplateID" and st."NotificationConstructTemplateVersionNumber" = wt."NotificationConstructTemplateVersionNumber"

  where wt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and wt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber ;
------ End DOT NCT

-- DOT WT
-- Check WT version exists
FOR LoopRow IN
	select * from "DefaultOrganisationWorkflowTemplate"
    	where "DefaultOrganisationTemplateID" = defaultorganisationtemplateid and "DefaultOrganisationTemplateVersionNumber" = defaultorganisationtemplateversionnumber
        and "WorkflowTemplateID" not in (select w."WorkflowTemplateID" from "Workflow" w where w."WorkflowTemplateID" = "WorkflowTemplateID" and w."WorkflowTemplateVersionNumber" = "WorkflowTemplateVersionNumber")
LOOP
    BEGIN
    	perform "fn_PromoteWorkflowTemplate"(LoopRow."WorkflowTemplateID",LoopRow."WorkflowTemplateVersionNumber");
    END;
END LOOP;

-- Add DOT WT to DO
INSERT INTO
  public."DefaultOrganisationWorkflow"
(
  "DefaultOrganisationID",
  "DefaultOrganisationVersionNumber",
  "WorkflowID",
  "WorkflowVersionNumber",
  "ParentID",
  "IsActive",
  "IsDeleted"
)
SELECT
  DefaultOrganisationID,
  DefaultOrganisationVersionNumber,
  st."WorkflowID",
  st."WorkflowVersionNumber",
  "ParentID",
  "IsActive",
  "IsDeleted"
FROM
  public."DefaultOrganisationWorkflowTemplate"  wt

  left outer join "Workflow" st on st."WorkflowTemplateID" = wt."WorkflowTemplateID" and st."WorkflowTemplateVersionNumber" = wt."WorkflowTemplateVersionNumber"

  where wt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and wt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber ;
------ End DOT WT

END;
END IF;
------ End MT

-- Branch
INSERT INTO
  public."DefaultOrganisationBranch"
(
  "DefaultOrganisationID",
  "DefaultOrganisationVersionNumber",
  "OrganisationTypeID",
  "BranchName",
  "BranchSubType"
)
SELECT
  DefaultOrganisationID,
  DefaultOrganisationVersionNumber,
  wt."OrganisationTypeID",
  wt."BranchName",
  wt."BranchSubType"
FROM
  public."DefaultOrganisationBranchTemplate" wt

  where wt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and wt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber ;

-- INSERT BUCKETS
INSERT INTO
  public."Bucket"
(
  "BucketName",
  "BucketDescription",
  "BucketTypeID",
  "BucketSubTypeID",
  "BucketCategoryID",
  "BucketSubCategoryID",
  "IsGlobal",
  "IsActive",
  "IsDeleted"
)
SELECT
  wt."BucketName",
  wt."BucketDescription",
  wt."BucketTypeID",
  wt."BucketSubTypeID",
  wt."BucketCategoryID",
  wt."BucketSubCategoryID",
  wt."IsGlobal",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."BucketTemplate" wt

  inner join "DefaultOrganisationBucketTemplate" dt on dt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and dt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber
  	and dt."BucketTemplateID" = wt."BucketTemplateID"

  where wt."BucketName" not in (select "BucketName" from "Bucket");

-- Bucket
INSERT INTO
  public."DefaultOrganisationBucket"
(
  "DefaultOrganisationID",
  "DefaultOrganisationVersionNumber",
  "BucketTemplateID"
)
SELECT
  DefaultOrganisationID,
  DefaultOrganisationVersionNumber,
  b."BucketID"
FROM
  public."DefaultOrganisationBucketTemplate" wt

  left outer join "BucketTemplate" bt on bt."BucketTemplateID" = wt."BucketTemplateID"
  left outer join "Bucket" b on b."BucketName" = bt."BucketName"

  where wt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and wt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber ;

-- ROLE
INSERT INTO
  public."DefaultOrganisationRole"
(
  "DefaultOrganisationID",
  "DefaultOrganisationVersionNumber",
  "RoleName",
  "RoleDescription",
  "RoleTypeID",
  "RoleSubTypeID",
  "RoleCategoryID",
  "RoleSubCategoryID",
  "ParentID",
  "RoleID",
  "IsActive",
  "IsDeleted",
  "IsDefaultOrganisationSpecific"
)
SELECT
  DefaultOrganisationID,
  DefaultOrganisationVersionNumber,
  wt."RoleName",
  wt."RoleDescription",
  wt."RoleTypeID",
  wt."RoleSubTypeID",
  wt."RoleCategoryID",
  wt."RoleSubCategoryID",
  wt."DefaultOrganisationRoleTemplateID",
  wt."RoleID",
  wt."IsActive",
  wt."IsDeleted",
  wt."IsDefaultOrganisationSpecific"
FROM
  public."DefaultOrganisationRoleTemplate"  wt

  where wt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and wt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber ;

-- ROLE CLAIM
INSERT INTO
  public."DefaultOrganisationRoleClaim"
(
  "DefaultOrganisationRoleID",
  "ResourceID",
  "OperationID",
  "StateID",
  "StateItemID",
  "IsActive",
  "IsDeleted"
)
SELECT
  dor."DefaultOrganisationRoleID",
  dd."ResourceID",
  dd."OperationID",
  dd."StateID",
  dd."StateItemID",
  dd."IsActive",
  dd."IsDeleted"
FROM
  public."DefaultOrganisationRoleClaimTemplate" dd

  left outer join "DefaultOrganisationRoleTemplate" dort on dort."DefaultOrganisationRoleTemplateID" = dd."DefaultOrganisationRoleTemplateID"

  left outer join "DefaultOrganisationRole" dor on dor."RoleName" = dort."RoleName" and dor."DefaultOrganisationID" = DefaultOrganisationID and dor."DefaultOrganisationVersionNumber" = DefaultOrganisationVersionNumber

  where dort."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and dort."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber ;


-- GROUP
INSERT INTO
  public."DefaultOrganisationGroup"
(
  "DefaultOrganisationID",
  "DefaultOrganisationVersionNumber",
  "GroupName",
  "GroupDescription",
  "GroupTypeID",
  "GroupSubTypeID",
  "GroupCategoryID",
  "GroupSubCategoryID",
  "ParentID",
  "GroupID",
  "IsActive",
  "IsDeleted",
  "IsDefaultOrganisationSpecific"
)
SELECT
  DefaultOrganisationID,
  DefaultOrganisationVersionNumber,
  wt."GroupName",
  wt."GroupDescription",
  wt."GroupTypeID",
  wt."GroupSubTypeID",
  wt."GroupCategoryID",
  wt."GroupSubCategoryID",
  wt."DefaultOrganisationGroupTemplateID",
  wt."GroupID",
  wt."IsActive",
  wt."IsDeleted",
  wt."IsDefaultOrganisationSpecific"
FROM
  public."DefaultOrganisationGroupTemplate"   wt

  where wt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and wt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber ;

-- GROUPROLE
INSERT INTO
  public."DefaultOrganisationGroupRole"
(
  "DefaultOrganisationGroupID",
  "DefaultOrganisationRoleID"
)
SELECT
  dor1."DefaultOrganisationGroupID",
  dor."DefaultOrganisationRoleID"
FROM
  public."DefaultOrganisationGroupRoleTemplate" ddtt

  left outer join "DefaultOrganisationRoleTemplate" dort on dort."DefaultOrganisationRoleTemplateID" = ddtt."DefaultOrganisationRoleTemplateID"

  left outer join "DefaultOrganisationRole" dor on dor."RoleName" = dort."RoleName" and dor."ParentID" = dort."DefaultOrganisationRoleTemplateID"

  left outer join "DefaultOrganisationGroupTemplate" dort1 on dort1."DefaultOrganisationGroupTemplateID" = ddtt."DefaultOrganisationGroupTemplateID"

  left outer join "DefaultOrganisationGroup" dor1 on dor1."GroupName" = dort1."GroupName" and dor1."ParentID" = dort1."DefaultOrganisationGroupTemplateID"

  where dor1."DefaultOrganisationGroupID" is not null and dor."DefaultOrganisationRoleID" is not null;

-- TARGETS

INSERT INTO
  public."DefaultOrganisationUserTarget"
(
  "DefaultOrganisationID",
  "DefaultOrganisationVersionNumber",
  "UserSubTypeID",
  "UserCategoryID",
  "UserSubCategoryID",
  "IsActive",
  "IsDeleted",
  "StatusTypeID",
  "StatusTypeVersionNumber",
  "UserTypeID",
  "ParentID",
  "IsDefault"
)
SELECT
  DefaultOrganisationID,
  DefaultOrganisationVersionNumber,
  wt."UserSubTypeID",
  wt."UserCategoryID",
  wt."UserSubCategoryID",
  wt."IsActive",
  wt."IsDeleted",
  st."StatusTypeID",
  st."StatusTypeVersionNumber",
  wt."UserTypeID",
  wt."DefaultOrganisationUserTargetTemplateID",
  wt."IsDefault"
FROM
  public."DefaultOrganisationUserTargetTemplate"  wt

  left outer join "StatusType" st on st."StatusTypeTemplateID" = wt."StatusTypeTemplateID" and st."StatusTypeTemplateVersionNumber" = wt."StatusTypeTemplateVersionNumber"

  where wt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and wt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber ;

INSERT INTO
  public."DefaultOrganisationUserType"
(
  "DefaultOrganisationID",
  "DefaultOrganisationVersionNumber",
  "UserTypeID",
  "IsActive",
  "IsDeleted",
  "IsForDefaultUser"
)
SELECT
  DefaultOrganisationID,
  DefaultOrganisationVersionNumber,
  wt."UserTypeID",
  wt."IsActive",
  wt."IsDeleted",
  wt."IsForDefaultUser"
FROM
  public."DefaultOrganisationUserTypeTemplate"  wt

  where wt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and wt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber ;

INSERT INTO
  public."DefaultOrganisationRoleTarget"
(
  "DefaultOrganisationRoleID",
  "IsActive",
  "IsDeleted",
  "DefaultOrganisationUserTargetID"
)
SELECT
  COALESCE(rg."DefaultOrganisationRoleID" ,rg1."DefaultOrganisationRoleID"),
  wt."IsActive",
  wt."IsDeleted",
  dut."DefaultOrganisationUserTargetID"
FROM
  public."DefaultOrganisationRoleTargetTemplate" wt
  left outer join "DefaultOrganisationUserTargetTemplate" ut on ut."DefaultOrganisationUserTargetTemplateID" = wt."DefaultOrganisationUserTargetTemplateID"
  left outer join "DefaultOrganisationRoleTemplate" dor on dor."DefaultOrganisationRoleTemplateID" = wt."DefaultOrganisationRoleTemplateID"
  left outer join "DefaultOrganisationRole" rg on rg."RoleName" = dor."RoleName" and rg."DefaultOrganisationID" = DefaultOrganisationID and rg."DefaultOrganisationVersionNumber" = DefaultOrganisationVersionNumber
  left outer join "DefaultOrganisationRole" rg1 on rg1."RoleID" = dor."RoleID" and rg1."DefaultOrganisationID" = DefaultOrganisationID and rg1."DefaultOrganisationVersionNumber" = DefaultOrganisationVersionNumber
   left outer join "DefaultOrganisationUserTarget" dut on dut."ParentID" = ut."DefaultOrganisationUserTargetTemplateID"
  where ut."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and ut."DefaultOrganisationTemplateVersionNumber" = defaultorganisationtemplateversionnumber
  	and ut."DefaultOrganisationUserTargetTemplateID" is not null and COALESCE(rg."DefaultOrganisationRoleID" ,rg1."DefaultOrganisationRoleID") is not null
  ;

INSERT INTO
  public."DefaultOrganisationGroupTarget"
(
  "DefaultOrganisationGroupID",
  "IsActive",
  "IsDeleted",
  "DefaultOrganisationUserTargetID"
)
SELECT
  dor."DefaultOrganisationGroupID",
  wt."IsActive",
  wt."IsDeleted",
  dut."DefaultOrganisationUserTargetID"
FROM
  public."DefaultOrganisationGroupTargetTemplate" wt
  left outer join "DefaultOrganisationUserTargetTemplate" ut on ut."DefaultOrganisationUserTargetTemplateID" = wt."DefaultOrganisationUserTargetTemplateID"
  left outer join "DefaultOrganisationGroupTemplate" dorr on dorr."DefaultOrganisationGroupTemplateID" = wt."DefaultOrganisationGroupTemplateID"
  left outer join "DefaultOrganisationGroup" dor on dor."GroupName" = dorr."GroupName" and dor."DefaultOrganisationID" = DefaultOrganisationID and dor."DefaultOrganisationVersionNumber" = DefaultOrganisationVersionNumber
 left outer join "DefaultOrganisationUserTarget" dut on dut."ParentID" = ut."DefaultOrganisationUserTargetTemplateID"
  where ut."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and ut."DefaultOrganisationTemplateVersionNumber" = defaultorganisationtemplateversionnumber
  	and ut."DefaultOrganisationUserTargetTemplateID" is not null and dor."DefaultOrganisationGroupID" is not null
;

-- DO ORganisationtarget
INSERT INTO
  public."DefaultOrganisationTarget"
(
  "OrganisationTypeID",
  "DefaultOrganisationID",
  "IsActive",
  "IsDeleted",
  "DefaultOrganisationVersionNumber",
  "StatusTypeID",
  "StatusTypeVersionNumber"
)
SELECT
  "OrganisationTypeID",
  DefaultOrganisationID,
  wt."IsActive",
  wt."IsDeleted",
  DefaultOrganisationVersionNumber,
  stt."StatusTypeID",
  stt."StatusTypeVersionNumber"
FROM
  public."DefaultOrganisationTargetTemplate" wt

  left outer join "StatusType" stt on stt."StatusTypeTemplateID" = wt."StatusTypeTemplateID" and stt."StatusTypeTemplateVersionNumber" = wt."StatusTypeTemplateVersionNumber"

  where wt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and wt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber ;

-- ledger accounts
INSERT INTO
  public."DefaultOrganisationLedger"
(
  "DefaultOrganisationID",
  "DefaultOrganisationVersionNumber",
  "LedgerAccountTypeID",
  "LedgerAccountName",
  "HandlesCredit",
  "HandlesDebit",
  "IsActive",
  "IsDeleted",
  "ParentID"
)
SELECT
  DefaultOrganisationID,
  DefaultOrganisationVersionNumber,
  wt."LedgerAccountTypeID",
  wt."LedgerAccountName",
  wt."HandlesCredit",
  wt."HandlesDebit",
  wt."IsActive",
  wt."IsDeleted",
  wt."DefaultOrganisationLedgerTemplateID"
FROM
  public."DefaultOrganisationLedgerTemplate" wt

  where wt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and wt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber
  and not exists(select * from "DefaultOrganisationLedger" dol where dol."ParentID" = wt."DefaultOrganisationLedgerTemplateID" limit 1);

-- payment method
INSERT INTO
  public."DefaultOrganisationPaymentMethod"
(
  "DefaultOrganisationID",
  "DefaultOrganisationVersionNumber",
  "GlobalPaymentMethodID",
  "IsActive",
  "IsDeleted"
)
SELECT
  DefaultOrganisationID,
  DefaultOrganisationVersionNumber,
  wt."GlobalPaymentMethodID",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."DefaultOrganisationPaymentMethodTemplate" wt

  where wt."DefaultOrganisationTemplateID" = defaultorganisationtemplateid and wt."DefaultOrganisationTemplateVersionNumber" =defaultorganisationtemplateversionnumber

  ;


--EXCEPTION
--	WHEN
END;
$$;


ALTER FUNCTION public."fn_PromoteDefaultOrganisationTemplate"(defaultorganisationtemplateid uuid, defaultorganisationtemplateversionnumber integer) OWNER TO postgres;

--
-- TOC entry 923 (class 1255 OID 40323)
-- Name: fn_PromoteInterfacePanelTemplate(uuid, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_PromoteInterfacePanelTemplate"(interfacepaneltemplateid uuid, interfacepaneltemplateversionnumber integer) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
  InterfacePanelID UUID;
  InterfacePanelVersionNumber integer;
BEGIN

InterfacePanelID := (select dorg."InterfacePanelID" from "InterfacePanel" dorg
	where dorg."InterfacePanelTemplateID" = interfacepaneltemplateid limit 1);

InterfacePanelVersionNumber := (select dorg."InterfacePanelVersionNumber" from "InterfacePanel" dorg
	where dorg."InterfacePanelTemplateID" = interfacepaneltemplateid order by dorg."InterfacePanelVersionNumber" desc limit 1);

-- create DO entry
BEGIN


-- copy WF
IF(InterfacePanelID is null)
THEN
BEGIN
	InterfacePanelID := (select "InterfacePanelTemplateID" from "InterfacePanelTemplate" where "InterfacePanelTemplateID" = interfacepaneltemplateid limit 1);
END;
END IF;


InterfacePanelVersionNumber := interfacepaneltemplateversionnumber;


END;

INSERT INTO
  public."InterfacePanel"
(
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "Name",
  "Description",
  "InterfacePanelTypeID",
  "InterfacePanelSubTypeID",
  "InterfacePanelCategoryID",
  "InterfacePanelSubCategoryID",
  "IsActive",
  "IsDeleted",
  "ParentIPID",
  "ParentIPVersionNumber",
  "IsSecuredByClaim",
  "IsGridPanel",
  "IsGlobal",
  "InterfacePanelTemplateID",
  "InterfacePanelTemplateVersionNumber",
  "InterfacePanelLabel"
)
SELECT
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."Name",
  wt."Description",
  wt."InterfacePanelTypeID",
  wt."InterfacePanelSubTypeID",
  wt."InterfacePanelCategoryID",
  wt."InterfacePanelSubCategoryID",
  wt."IsActive",
  wt."IsDeleted",
  wt."ParentIPTemplateID",
  wt."ParentIPTemplateVersionNumber",
  wt."IsSecuredByClaim",
  wt."IsGridPanel",
  wt."IsGlobal",
  interfacepaneltemplateid,
  interfacepaneltemplateversionnumber,
  "InterfacePanelTemplateLabel"
FROM
  public."InterfacePanelTemplate"  wt where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber
  --and wt."ParentIPTemplateID" is null

  ;

 /* INSERT INTO
  public."InterfacePanel"
(
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "Name",
  "Description",
  "InterfacePanelTypeID",
  "InterfacePanelSubTypeID",
  "InterfacePanelCategoryID",
  "InterfacePanelSubCategoryID",
  "IsActive",
  "IsDeleted",
  "ParentIPID",
  "ParentIPVersionNumber",
  "IsSecuredByClaim",
  "IsGridPanel",
  "IsGlobal",
  "InterfacePanelTemplateID",
  "InterfacePanelTemplateVersionNumber"
)
SELECT
  wt."InterfacePanelTemplateID",
  wt."InterfacePanelTemplateVersionNumber",
  wt."Name",
  wt."Description",
  wt."InterfacePanelTypeID",
  wt."InterfacePanelSubTypeID",
  wt."InterfacePanelCategoryID",
  wt."InterfacePanelSubCategoryID",
  wt."IsActive",
  wt."IsDeleted",
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."IsSecuredByClaim",
  wt."IsGridPanel",
  wt."IsGlobal",
  wt."InterfacePanelTemplateID",
  wt."InterfacePanelTemplateVersionNumber"
FROM
  public."InterfacePanelTemplate"  wt

  left outer join "InterfacePanel" ip on ip."Name" = wt."Name" and ip."InterfacePanelTemplateID" =  wt."InterfacePanelTemplateID"
  	and ip."InterfacePanelTemplateVersionNumber" = wt."ParentIPTemplateVersionNumber"

  where wt."ParentIPTemplateID" = interfacepaneltemplateid and wt."ParentIPTemplateVersionNumber" = interfacepaneltemplateversionnumber
  and wt."ParentIPTemplateID" is not null;*/


INSERT INTO
  public."InterfacePanelRole"
(
  "InterfacePanelRoleID",
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "RoleName",
  "RoleDescription",
  "RoleTypeID",
  "RoleSubTypeID",
  "RoleCategoryID",
  "RoleSubCategoryID",
  "IsActive",
  "IsDeleted"
)
SELECT
  wt."InterfacePanelRoleTemplateID",
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."RoleName",
  wt."RoleDescription",
  wt."RoleTypeID",
  wt."RoleSubTypeID",
  wt."RoleCategoryID",
  wt."RoleSubCategoryID",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."InterfacePanelRoleTemplate" wt where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber ;


  INSERT INTO
  public."InterfacePanelClaim"
(
"InterfacePanelID",
  "InterfacePanelVersionNumber",
  "ResourceID",
  "OperationID",
  "StateID",
  "StateItemID",
  "IsActive",
  "IsDeleted",
  "InterfacePanelRoleID"
)
SELECT
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."ResourceID",
  wt."OperationID",
  wt."StateID",
  wt."StateItemID",
  wt."IsActive",
  wt."IsDeleted",
  mr."InterfacePanelRoleID"
FROM
  public."InterfacePanelClaimTemplate" wt

  inner join "InterfacePanelRoleTemplate" wrr on wrr."InterfacePanelRoleTemplateID" = wt."InterfacePanelRoleTemplateID" and wrr."InterfacePanelTemplateID" = interfacepaneltemplateid and wrr."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber

  left outer join "InterfacePanelRole" mr on mr."InterfacePanelID" = InterfacePanelID and mr."InterfacePanelVersionNumber" = InterfacePanelVersionNumber and mr."RoleName" = wrr."RoleName"

 where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber

  	and wrr."InterfacePanelRoleTemplateID" is not null and wt."RoleID" is null ;

INSERT INTO
  public."InterfacePanelClaim"
(
"InterfacePanelID",
  "InterfacePanelVersionNumber",
  "ResourceID",
  "OperationID",
  "StateID",
  "StateItemID",
  "IsActive",
  "IsDeleted",
  "RoleID",
  "ClaimID",
  "InterfacePanelRoleID"
)
SELECT
InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."ResourceID",
  wt."OperationID",
  wt."StateID",
  wt."StateItemID",
  wt."IsActive",
  wt."IsDeleted",
  wt."RoleID",
  wt."ClaimID",
  wt."InterfacePanelRoleTemplateID"
FROM
  public."InterfacePanelClaimTemplate" wt

  inner join "Role" wrr on wrr."RoleID" = wt."RoleID"

  where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber

  	and wt."InterfacePanelRoleTemplateID" is null and wt."RoleID" is not null;
INSERT INTO
  public."InterfacePanelOrganisationType"
(
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "OrganisationTypeID",
  "IsActive",
  "IsDeleted",
  "IsVisible",
  "ParentID",
  "InterfacePanelOrganisationTypeLabel"
)
SELECT
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."OrganisationTypeID",
  wt."IsActive",
  wt."IsDeleted",
  wt."IsVisible",
  wt."ParentID",
  wt."InterfacePanelOrganisationTypeTemplateLabel"
FROM
  public."InterfacePanelOrganisationTypeTemplate" wt where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber ;

INSERT INTO
  public."InterfacePanelOrganisationTypeUserType"
(
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "OrganisationTypeID",
  "UserTypeID",
  "IsActive",
  "IsDeleted",
  "IsVisible",
  "ParentID",
  "InterfacePanelOrganisationTypeUserTypeLabel"
)
SELECT
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."OrganisationTypeID",
  wt."UserTypeID",
  wt."IsActive",
  wt."IsDeleted",
  wt."IsVisible",
  wt."ParentID",
  wt."InterfacePanelOrganisationTypeUserTypeTemplateLabel"
FROM
  public."InterfacePanelOrganisationTypeUserTypeTemplate" wt where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber ;

INSERT INTO
  public."InterfacePanelSetting"
(
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "IsVisible",
  "IsActive",
  "IsDeleted"
)
SELECT
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."IsVisible",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."InterfacePanelSettingTemplate"  wt where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber ;

-- DEAL WITH FIELD DETAILS
INSERT INTO
  public."FieldDetail"
(
  "FieldDetailID",
  "Name",
  "Description",
  "FieldLabelValue",
  "DefaultValue",
  "IsActive",
  "IsDeleted",
  "ToolTipValue",
  "ToolTipHTML",
  "ToolTipIsHTML",
  "InformationValue",
  "InformationHTML",
  "InformationIsHTML",
  "HelpValue",
  "HelpHTML",
  "HelpIsHTML",
  "IsSecuredByClaim",
  "IsGlobal",
  "IsGridColumn",
  "FieldDetailTemplateID",
  "FieldTypeID",
  "IconAlignmentTypeID",
  "IconFileName",
  "FieldMask"
)


SELECT
  fdt."FieldDetailTemplateID",
  fdt."Name",
  fdt."Description",
  fdt."FieldLabelValue",
  fdt."DefaultValue",
  fdt."IsActive",
  fdt."IsDeleted",
  fdt."ToolTipValue",
  fdt."ToolTipHTML",
  fdt."ToolTipIsHTML",
  fdt."InformationValue",
  fdt."InformationHTML",
  fdt."InformationIsHTML",
  fdt."HelpValue",
  fdt."HelpHTML",
  fdt."HelpIsHTML",
  fdt."IsSecuredByClaim",
  fdt."IsGlobal",
  fdt."IsGridColumn",
  fdt."FieldDetailTemplateID",
  fdt."FieldTypeID",
  fdt."IconAlignmentTypeID",
  fdt."IconFileName",
  fdt."FieldMask"
FROM
  public."FieldDetailTemplate" fdt

  --inner join "InterfacePanelFieldDetailTemplate" ip on ip."FieldDetailTemplateID" = fdt."FieldDetailTemplateID" and ip."IsActive" = true and ip."IsDeleted" = false

  where fdt."FieldDetailTemplateID" not in (select "FieldDetailTemplateID" from public."FieldDetail");

/*INSERT INTO
  public."FieldDetail"
(
  "FieldDetailID",
  "Name",
  "Description",
  "FieldLabelValue",
  "DefaultValue",
  "IsActive",
  "IsDeleted",
  "ToolTipValue",
  "ToolTipHTML",
  "ToolTipIsHTML",
  "InformationValue",
  "InformationHTML",
  "InformationIsHTML",
  "HelpValue",
  "HelpHTML",
  "HelpIsHTML",
  "IsSecuredByClaim",
  "IsGlobal",
  "IsGridColumn",
  "FieldDetailTemplateID",
  "FieldTypeID",
  "IconAlignmentTypeID",
  "IconFileName",
  "FieldMask"
)


SELECT
  fdt."FieldDetailTemplateID",
  fdt."Name",
  fdt."Description",
  fdt."FieldLabelValue",
  fdt."DefaultValue",
  fdt."IsActive",
  fdt."IsDeleted",
  fdt."ToolTipValue",
  fdt."ToolTipHTML",
  fdt."ToolTipIsHTML",
  fdt."InformationValue",
  fdt."InformationHTML",
  fdt."InformationIsHTML",
  fdt."HelpValue",
  fdt."HelpHTML",
  fdt."HelpIsHTML",
  fdt."IsSecuredByClaim",
  fdt."IsGlobal",
  fdt."IsGridColumn",
  fdt."FieldDetailTemplateID",
  fdt."FieldTypeID",
  fdt."IconAlignmentTypeID",
  fdt."IconFileName",
  fdt."FieldMask"
FROM
  public."FieldDetailTemplate" fdt

  inner join public."InterfacePanelFDOrganaisationTypeUserTypeTemplate" ip on ip."FieldDetailTemplateID" = fdt."FieldDetailTemplateID" and ip."IsActive" = true and ip."IsDeleted" = false

  where fdt."FieldDetailTemplateID" not in (select "FieldDetailTemplateID" from public."FieldDetail");

INSERT INTO
  public."FieldDetail"
(
  "FieldDetailID",
  "Name",
  "Description",
  "FieldLabelValue",
  "DefaultValue",
  "IsActive",
  "IsDeleted",
  "ToolTipValue",
  "ToolTipHTML",
  "ToolTipIsHTML",
  "InformationValue",
  "InformationHTML",
  "InformationIsHTML",
  "HelpValue",
  "HelpHTML",
  "HelpIsHTML",
  "IsSecuredByClaim",
  "IsGlobal",
  "IsGridColumn",
  "FieldDetailTemplateID",
  "FieldTypeID",
  "IconAlignmentTypeID",
  "IconFileName",
  "FieldMask"
)


SELECT
  fdt."FieldDetailTemplateID",
  fdt."Name",
  fdt."Description",
  fdt."FieldLabelValue",
  fdt."DefaultValue",
  fdt."IsActive",
  fdt."IsDeleted",
  fdt."ToolTipValue",
  fdt."ToolTipHTML",
  fdt."ToolTipIsHTML",
  fdt."InformationValue",
  fdt."InformationHTML",
  fdt."InformationIsHTML",
  fdt."HelpValue",
  fdt."HelpHTML",
  fdt."HelpIsHTML",
  fdt."IsSecuredByClaim",
  fdt."IsGlobal",
  fdt."IsGridColumn",
  fdt."FieldDetailTemplateID",
  fdt."FieldTypeID",
  fdt."IconAlignmentTypeID",
  fdt."IconFileName",
  fdt."FieldMask"
FROM
  public."FieldDetailTemplate" fdt

  inner join public."InterfacePanelFieldDetailOrganaisationTypeTemplate" ip on ip."FieldDetailTemplateID" = fdt."FieldDetailTemplateID" and ip."IsActive" = true and ip."IsDeleted" = false

  where fdt."FieldDetailTemplateID" not in (select "FieldDetailTemplateID" from public."FieldDetail");*/

INSERT INTO
  public."InterfacePanelFieldDetail"
(
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "FieldDetailID",
  "IsVisible",
  "IsActive",
  "IsDeleted",
  "IsMandatory",
  "IsFilterable",
  "OverrideDefaultValue",
  "OverrideToolTipValue",
  "OverrideToolTipHTML",
  "OverrideToolTipIsHTML",
  "OverrideInformationValue",
  "OverrideInformationHTML",
  "OverrideInformationIsHTML",
  "OverrideHelpValue",
  "OverrideHelpHTML",
  "OverrideHelpIsHTML",
  "OverrideFieldLabelValue"
)
SELECT
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."FieldDetailTemplateID",
  wt."IsVisible",
  wt."IsActive",
  wt."IsDeleted",
  wt."IsMandatory",
  wt."IsFilterable",
  wt."OverrideDefaultValue",
  wt."OverrideToolTipValue",
  wt."OverrideToolTipHTML",
  wt."OverrideToolTipIsHTML",
  wt."OverrideInformationValue",
  wt."OverrideInformationHTML",
  wt."OverrideInformationIsHTML",
  wt."OverrideHelpValue",
  wt."OverrideHelpHTML",
  wt."OverrideHelpIsHTML",
  wt."OverrideFieldLabelValue"
FROM
  public."InterfacePanelFieldDetailTemplate" wt

  --left outer join "FieldDetail" fd on fd."FieldDetailTemplateID" = wt."FieldDetailTemplateID"

   where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber
   and wt."FieldDetailTemplateID" in (Select "FieldDetailID" from "FieldDetail");




INSERT INTO
  public."InterfacePanelFDOrganisationTypeUserType"
(
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "FieldDetailID",
  "OrganisationTypeID",
  "UserTypeID",
  "IsVisible",
  "IsActive",
  "IsDeleted",
  "IsMandatory",
  "IsFilterable",
  "OverrideDefaultValue",
  "OverrideToolTipValue",
  "OverrideToolTipHTML",
  "OverrideToolTipIsHTML",
  "OverrideInformationValue",
  "OverrideInformationHTML",
  "OverrideInformationIsHTML",
  "OverrideHelpValue",
  "OverrideHelpHTML",
  "OverrideHelpIsHTML",
  "OverrideFieldLabelValue"
)
SELECT
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."FieldDetailTemplateID",
  wt."OrganisationTypeID",
  wt."UserTypeID",
  wt."IsVisible",
  wt."IsActive",
  wt."IsDeleted",
  wt."IsMandatory",
  wt."IsFilterable",
  wt."OverrideDefaultValue",
  wt."OverrideToolTipValue",
  wt."OverrideToolTipHTML",
  wt."OverrideToolTipIsHTML",
  wt."OverrideInformationValue",
  wt."OverrideInformationHTML",
  wt."OverrideInformationIsHTML",
  wt."OverrideHelpValue",
  wt."OverrideHelpHTML",
  wt."OverrideHelpIsHTML",
  wt."OverrideFieldLabelValue"
FROM
  public."InterfacePanelFDOrganisationTypeUserTypeTemplate" wt

 -- left outer join "FieldDetail" fd on fd."FieldDetailTemplateID" = wt."FieldDetailTemplateID"

   where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber
   and wt."FieldDetailTemplateID" in (Select "FieldDetailID" from "FieldDetail");
INSERT INTO
  public."InterfacePanelFieldDetailOrganisationType"
(
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "FieldDetailID",
  "OrganisationTypeID",
  "IsVisible",
  "IsActive",
  "IsDeleted",
  "IsMandatory",
  "IsFilterable",
  "OverrideDefaultValue",
  "OverrideToolTipValue",
  "OverrideToolTipHTML",
  "OverrideToolTipIsHTML",
  "OverrideInformationValue",
  "OverrideInformationHTML",
  "OverrideInformationIsHTML",
  "OverrideHelpValue",
  "OverrideHelpHTML",
  "OverrideHelpIsHTML",
  "OverrideFieldLabelValue"
)
SELECT
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."FieldDetailTemplateID",
  wt."OrganisationTypeID",
  wt."IsVisible",
  wt."IsActive",
  wt."IsDeleted",
  wt."IsMandatory",
  wt."IsFilterable",
  wt."OverrideDefaultValue",
  wt."OverrideToolTipValue",
  wt."OverrideToolTipHTML",
  wt."OverrideToolTipIsHTML",
  wt."OverrideInformationValue",
  wt."OverrideInformationHTML",
  wt."OverrideInformationIsHTML",
  wt."OverrideHelpValue",
  wt."OverrideHelpHTML",
  wt."OverrideHelpIsHTML",
  wt."OverrideFieldLabelValue"
FROM
  public."InterfacePanelFieldDetailOrganisationTypeTemplate" wt

 -- left outer join "FieldDetail" fd on fd."FieldDetailTemplateID" = wt."FieldDetailTemplateID"

   where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber
and wt."FieldDetailTemplateID" in (Select "FieldDetailID" from "FieldDetail");
-- Validations related tables


   INSERT INTO
  public."InterfacePanelFieldDetailValidation"
(
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "InterfacePanelFieldDetailValidationID",
  "InterfacePanelFieldDetailValidationVersion",
  "FieldDetailID",
  "OverrideValidationMessage",
  "OverrideValidationMessageHTML",
  "OverrideValidationIsHTML",
  "ValidationType",
  "ValidationSubType",
  "ValidationCategory",
  "ValidationSubCategory",
  "SourceErrorCodes",
  "IsActive",
  "IsDeleted",
  "InterfacePanelFieldDetailValidationName"
)
SELECT
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."InterfacePanelFieldDetailValidationTemplateID",
  wt."InterfacePanelFieldDetailValidationTemplateVersion",
  wt."FieldDetailTemplateID",
  wt."OverrideValidationMessage",
  wt."OverrideValidationMessageHTML",
  wt."OverrideValidationIsHTML",
  wt."ValidationType",
  wt."ValidationSubType",
  wt."ValidationCategory",
  wt."ValidationSubCategory",
  wt."SourceErrorCodes",
  wt."IsActive",
  wt."IsDeleted",
  wt."InterfacePanelFieldDetailValidationTemplateName"
FROM
  public."InterfacePanelFieldDetailValidationTemplate" wt

 -- left outer join "FieldDetail" fd on fd."FieldDetailTemplateID" = wt."FieldDetailTemplateID"

   where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber
   and wt."FieldDetailTemplateID" in (Select "FieldDetailID" from "FieldDetail");


INSERT INTO
public."InterfacePanelFDValidationOrganisationTypeUserType"
(
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "InterfacePanelFDValidationOrganisationTypeUserTypeID",
  "InterfacePanelFDValidationOrganisationTypeUserTypeVersion",
  "FieldDetailID",
  "OrganisationTypeID",
  "UserTypeID",
  "OverrideValidationMessage",
  "OverrideValidationMessageHTML",
  "OverrideValidationIsHTML",
  "ValidationType",
  "ValidationSubType",
  "ValidationCategory",
  "ValidationSubCategory",
  "SourceErrorCodes",
  "IsActive",
  "IsDeleted",
  "InterfacePanelFDValidationOrganisationTypeUserTypeName"
)
SELECT
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."InterfacePanelFDValidationOrgTypeUserTypeTemplateID",
  wt."InterfacePanelFDValidationOrgTypeUserTypeTemplateVersion",
  wt."FieldDetailTemplateID",
  wt."OrganisationTypeID",
  wt."UserTypeID",
  wt."OverrideValidationMessage",
  wt."OverrideValidationMessageHTML",
  wt."OverrideValidationIsHTML",
  wt."ValidationType",
  wt."ValidationSubType",
  wt."ValidationCategory",
  wt."ValidationSubCategory",
  wt."SourceErrorCodes",
  wt."IsActive",
  wt."IsDeleted",
  wt."InterfacePanelFDValidationOrgTypeUserTypeTemplateName"
FROM
  public."InterfacePanelFDValidationOrgTypeUserTypeTemplate" wt

 -- left outer join "FieldDetail" fd on fd."FieldDetailTemplateID" = wt."FieldDetailTemplateID"

   where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber
   and wt."FieldDetailTemplateID" in (Select "FieldDetailID" from "FieldDetail");
INSERT INTO
  public."InterfacePanelFieldDetailValidationOrganisationType"
(
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "InterfacePanelFieldDetailValidationOrganisationTypeID",
  "InterfacePanelFieldDetailValidationOrganisationTypeVersion",
  "FieldDetailID",
  "OrganisationTypeID",
  "OverrideValidationMessage",
  "OverrideValidationMessageHTML",
  "OverrideValidationIsHTML",
  "ValidationType",
  "ValidationSubType",
  "ValidationCategory",
  "ValidationSubCategory",
  "SourceErrorCodes",
  "IsActive",
  "IsDeleted",
  "InterfacePanelFieldDetailValidationOrganisationTypeName"
)
SELECT
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."InterfacePanelFieldDetailValidationOrganisationTypeTemplateID",
  wt."InterfacePanelFieldDetailValidationOrganisationTypeTemplateVers",
  wt."FieldDetailTemplateID",
  wt."OrganisationTypeID",
  wt."OverrideValidationMessage",
  wt."OverrideValidationMessageHTML",
  wt."OverrideValidationIsHTML",
  wt."ValidationType",
  wt."ValidationSubType",
  wt."ValidationCategory",
  wt."ValidationSubCategory",
  wt."SourceErrorCodes",
  wt."IsActive",
  wt."IsDeleted",
  wt."InterfacePanelFieldDetailValidationOrganisationTypeTemplateName"
FROM
  public."InterfacePanelFieldDetailValidationOrganisationTypeTemplate" wt

  --left outer join "FieldDetail" fd on fd."FieldDetailTemplateID" = wt."FieldDetailTemplateID"

   where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber
and wt."FieldDetailTemplateID" in (Select "FieldDetailID" from "FieldDetail");

   --InterfacePanelValidation

      INSERT INTO
 public."InterfacePanelValidation"
(
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "InterfacePanelValidationID",
  "InterfacePanelValidationVersionNumber",
  "OverrideValidationMessage",
  "OverrideValidationMessageHTML",
  "OverrideValidationIsHTML",
  "ValidationType",
  "ValidationSubType",
  "ValidationCategory",
  "ValidationSubCategory",
  "SourceErrorCodes",
  "IsActive",
  "IsDeleted",
  "InterfacePanelValidationName"
)
SELECT
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."InterfacePanelValidationTemplateID",
  wt."InterfacePanelValidationTemplateVersionNumber",
  wt."OverrideValidationMessage",
  wt."OverrideValidationMessageHTML",
  wt."OverrideValidationIsHTML",
  wt."ValidationType",
  wt."ValidationSubType",
  wt."ValidationCategory",
  wt."ValidationSubCategory",
  wt."SourceErrorCodes",
  wt."IsActive",
  wt."IsDeleted",
  wt."InterfacePanelValidationTemplateName"
FROM
  public."InterfacePanelValidationTemplate" wt
  where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber
  and wt."InterfacePanelValidationTemplateID" not in (Select "InterfacePanelValidationID" from "InterfacePanelValidation");

INSERT INTO
  public."InterfacePanelValidationOrganisationTypeUserType"
(
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "InterfacePanelValidationOrganisationTypeUserTypeID",
  "InterfacePanelValidationOrganisationTypeUserTypeVersion",
  "OrganisationTypeID",
  "UserTypeID",
  "OverrideValidationMessage",
  "OverrideValidationMessageHTML",
  "OverrideValidationIsHTML",
  "ValidationType",
  "ValidationSubType",
  "ValidationCategory",
  "ValidationSubCategory",
  "SourceErrorCodes",
  "IsActive",
  "IsDeleted",
  "InterfacePanelValidationOrganisationTypeUserTypeName"
)
SELECT
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."InterfacePanelValidationOrganisationTypeUserTypeTemplateID",
  wt."InterfacePanelValidationOrganisationTypeUserTypeTemplateVersion",
  wt."OrganisationTypeID",
  wt."UserTypeID",
  wt."OverrideValidationMessage",
  wt."OverrideValidationMessageHTML",
  wt."OverrideValidationIsHTML",
  wt."ValidationType",
  wt."ValidationSubType",
  wt."ValidationCategory",
  wt."ValidationSubCategory",
  wt."SourceErrorCodes",
  wt."IsActive",
  wt."IsDeleted",
  wt."InterfacePanelValidationOrganisationTypeUserTypeTemplateName"
FROM
  public."InterfacePanelValidationOrganisationTypeUserTypeTemplate" wt
   where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber
    and wt."InterfacePanelValidationOrganisationTypeUserTypeTemplateID" not in (Select "InterfacePanelValidationOrganisationTypeUserTypeID" from "InterfacePanelValidationOrganisationTypeUserType");
INSERT INTO
   public."InterfacePanelValidationOrganisationType"
(
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "InterfacePanelValidationOrganisationTypeID",
  "InterfacePanelValidationOrganisationTypeVersion",
  "OrganisationTypeID",
  "OverrideValidationMessage",
  "OverrideValidationMessageHTML",
  "OverrideValidationIsHTML",
  "ValidationType",
  "ValidationSubType",
  "ValidationCategory",
  "ValidationSubCategory",
  "SourceErrorCodes",
  "IsActive",
  "IsDeleted",
  "InterfacePanelValidationOrganisationTypeName"
)
SELECT
  InterfacePanelID,
  InterfacePanelVersionNumber,
  wt."InterfacePanelValidationOrganisationTypeTemplateID",
  wt."InterfacePanelValidationOrganisationTypeTemplateVers",
  wt."OrganisationTypeID",
  wt."OverrideValidationMessage",
  wt."OverrideValidationMessageHTML",
  wt."OverrideValidationIsHTML",
  wt."ValidationType",
  wt."ValidationSubType",
  wt."ValidationCategory",
  wt."ValidationSubCategory",
  wt."SourceErrorCodes",
  wt."IsActive",
  wt."IsDeleted",
  wt."InterfacePanelValidationOrganisationTypeTemplateName"
FROM
  public."InterfacePanelValidationOrganisationTypeTemplate" wt
   where wt."InterfacePanelTemplateID" = interfacepaneltemplateid and wt."InterfacePanelTemplateVersionNumber" = interfacepaneltemplateversionnumber
   and wt."InterfacePanelValidationOrganisationTypeTemplateID" not in (Select "InterfacePanelValidationOrganisationTypeID" from "InterfacePanelValidationOrganisationType");

--EXCEPTION
--	WHEN
END;
$$;


ALTER FUNCTION public."fn_PromoteInterfacePanelTemplate"(interfacepaneltemplateid uuid, interfacepaneltemplateversionnumber integer) OWNER TO postgres;

--
-- TOC entry 924 (class 1255 OID 40325)
-- Name: fn_PromoteModuleTemplate(uuid, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_PromoteModuleTemplate"(moduletemplateid uuid, moduletemplateversionnumber integer) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
  ModuleID UUID;
  ModuleVersionNumber integer;
  LoopRow RECORD;
BEGIN

ModuleID := (select dorg."ModuleID" from "Module" dorg
	where dorg."ModuleTemplateID" = moduletemplateid limit 1);

ModuleVersionNumber := (select dorg."ModuleVersionNumber" from "Module" dorg
	where dorg."ModuleTemplateID" = moduletemplateid order by dorg."ModuleVersionNumber" desc limit 1);

-- create DO entry
BEGIN

-- copy WF
IF(ModuleID is null)
THEN
BEGIN
	ModuleID := uuid_generate_v1();
END;
END IF;


ModuleVersionNumber := moduletemplateversionnumber;


INSERT INTO
  public."Module"
(
  "ModuleID",
  "ModuleVersionNumber",
  "Name",
  "Description",
  "IsActive",
  "IsDeleted",
  "ModuleTemplateID",
  "ModuleTemplateVersionNumber"
)
SELECT
  ModuleID,
  ModuleVersionNumber,
  wt."Name",
  wt."Description",
  wt."IsActive",
  wt."IsDeleted",
  moduletemplateid,
  moduletemplateversionnumber
FROM
  public."ModuleTemplate" wt where wt."ModuleTemplateID" = moduletemplateid and wt."ModuleTemplateVersionNumber" = moduletemplateversionnumber ;


-- WF ROLE
INSERT INTO
  public."ModuleRole"
(
  "RoleName",
  "RoleDescription",
  "IsActive",
  "IsDeleted",
  "ModuleID",
  "ModuleVersionNumber",
  "RoleTypeID",
  "RoleSubTypeID",
  "RoleCategoryID",
  "RoleSubCategoryID"
)
SELECT
  wt."RoleName",
  wt."RoleDescription",
  wt."IsActive",
  wt."IsDeleted",
  ModuleID,
  ModuleVersionNumber,
  wt."RoleTypeID",
  wt."RoleSubTypeID",
  wt."RoleCategoryID",
  wt."RoleSubCategoryID"
FROM
  public."ModuleRoleTemplate" wt where wt."ModuleTemplateID" = moduletemplateid and wt."ModuleTemplateVersionNumber" = moduletemplateversionnumber ;

-------------- Claim
INSERT INTO
  public."ModuleClaim"
(
"ModuleID",
  "ModuleVersionNumber",
  "ResourceID",
  "OperationID",
  "StateID",
  "StateItemID",
  "IsActive",
  "IsDeleted",
  "ModuleRoleID"
)
SELECT
  ModuleID,
  ModuleVersionNumber,
  wt."ResourceID",
  wt."OperationID",
  wt."StateID",
  wt."StateItemID",
  wt."IsActive",
  wt."IsDeleted",
  mr."RoleID"
FROM
  public."ModuleClaimTemplate" wt

  inner join "ModuleRoleTemplate" wrr on wrr."RoleID" = wt."ModuleRoleID" and wrr."ModuleTemplateID" = wt."ModuleTemplateID"
  and wrr."ModuleTemplateVersionNumber" = wt."ModuleTemplateVersionNumber"

  left outer join "ModuleRole" mr on mr."ModuleID" = ModuleID and mr."ModuleVersionNumber" = ModuleVersionNumber and mr."RoleName" = wrr."RoleName"

  where wt."ModuleTemplateID" = moduletemplateid and wt."ModuleTemplateVersionNumber" = moduletemplateversionnumber
  	and wrr."RoleID" is not null and wt."RoleID" is null ;

INSERT INTO
  public."ModuleClaim"
(
"ModuleID",
  "ModuleVersionNumber",
  "ResourceID",
  "OperationID",
  "StateID",
  "StateItemID",
  "IsActive",
  "IsDeleted",
  "RoleID"
)
SELECT
ModuleID,
  ModuleVersionNumber,
  wt."ResourceID",
  wt."OperationID",
  wt."StateID",
  wt."StateItemID",
  wt."IsActive",
  wt."IsDeleted",
  wt."RoleID"
FROM
  public."ModuleClaimTemplate" wt

  inner join "Role" wrr on wrr."RoleID" = wt."RoleID"

  where wt."ModuleTemplateID" = moduletemplateid and wt."ModuleTemplateVersionNumber" = moduletemplateversionnumber
  	and wt."ModuleRoleID" is null and wt."RoleID" is not null
    and not exists(select dd."ClaimID" from "ModuleClaim" dd where dd."RoleID" = wt."RoleID" and dd."ModuleID" = ModuleID and dd."ModuleVersionNumber" =  ModuleVersionNumber);

----



INSERT INTO
  public."ModuleDependency"
(
  "ModuleID",
  "ModuleVersionNumber",
  "DependencyID",
  "DependencyVersionNumber",
  "IsActive",
  "IsDeleted"
)
SELECT
   ModuleID,
  ModuleVersionNumber,
  md."ModuleID",
  md."ModuleVersionNumber",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."ModuleDependencyTemplate" wt

  left outer join "ModuleTemplate" mt on mt."ModuleTemplateID" = wt."DependencyID" and mt."ModuleTemplateVersionNumber" = wt."DependencyVersionNumber"

  left outer join "Module" md on md."ModuleID" = ModuleID and md."ModuleVersionNumber" = ModuleVersionNumber and md."Name" = mt."Name" and md."IsActive" = true and md."IsDeleted" = false

  where wt."ModuleTemplateID" = moduletemplateid and wt."ModuleTemplateVersionNumber" = moduletemplateversionnumber ;

-- deal with plugins

INSERT INTO
  public."Plugin"
(
  "PluginVersionNumber",
  "Name",
  "Description",
  "Version",
  "VersionNumber",
  "Author",
  "SystemName",
  "DisplayOrder",
  "PluginFileName",
  "PluginTemplateID",
  "PluginTemplateVersionNumber",
  "IsActive",
  "IsDeleted"
)
SELECT
  pt."PluginTemplateVersionNumber",
  pt."Name",
  pt."Description",
  pt."Version",
  pt."VersionNumber",
  pt."Author",
  pt."SystemName",
  pt."DisplayOrder",
  pt."PluginFileName",
  pt."PluginTemplateID",
  pt."PluginTemplateVersionNumber",
  pt."IsActive",
  pt."IsDeleted"
FROM
  public."PluginTemplate" pt

  inner join "ModulePluginTemplate" mt on mt."ModuleTemplateID" = moduletemplateid and mt."ModuleTemplateVersionNumber" = moduletemplateversionnumber and mt."PluginTemplateID" = pt."PluginTemplateID" and mt."PluginVersionNumber" = pt."PluginTemplateVersionNumber"

  where pt."PluginTemplateID" not in (select ptt."PluginTemplateID" from "Plugin" ptt where ptt."PluginTemplateID" = pt."PluginTemplateID" and ptt."PluginTemplateVersionNumber" = pt."PluginTemplateVersionNumber");


INSERT INTO
  public."ModulePlugin"
(
  "ModuleID",
  "ModuleVersionNumber",
  "PluginID",
  "PluginVersionNumber",
  "IsActive",
  "IsDeleted"
)
SELECT
  ModuleID,
  ModuleVersionNumber,
  pg."PluginID",
  pg."PluginVersionNumber",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."ModulePluginTemplate" wt

  left outer join "Plugin" pg on pg."PluginTemplateID" = wt."PluginTemplateID" and pg."PluginTemplateVersionNumber" = wt."PluginVersionNumber"

  where wt."ModuleTemplateID" = moduletemplateid and wt."ModuleTemplateVersionNumber" = moduletemplateversionnumber ;

/*INSERT INTO
  public."ModuleSubscription"
(
  "ModuleID",
  "ModuleVersionNumber",
  "RegularPeriodLength",
  "RegularPeriodRecurringPrice",
  "IsFixedPrice",
  "FixedPrice",
  "FirstPeriodLength",
  "FirstPeriodPrice",
  "TotalNumberOfPeriods",
  "HasInfinitePeriods",
  "IsActive",
  "IsDeleted",
  "IsModuleFree"
)
SELECT
  ModuleID,
  ModuleVersionNumber,
  wt."RegularPeriodLength",
  wt."RegularPeriodRecurringPrice",
  wt."IsFixedPrice",
  wt."FixedPrice",
  wt."FirstPeriodLength",
  wt."FirstPeriodPrice",
  wt."TotalNumberOfPeriods",
  wt."HasInfinitePeriods",
  wt."IsActive",
  wt."IsDeleted",
  wt."IsModuleFree"
FROM
  public."ModuleSubscriptionTemplate" wt where wt."ModuleTemplateID" = moduletemplateid and wt."ModuleTemplateVersionNumber" = moduletemplateversionnumber ;
  */
INSERT INTO
  public."ModuleSetting"
(
  "Name",
  "Value",
  "IsActive",
  "IsDeleted",
  "CanOrganisationChange",
  "CanUserChange",
  "ModuleID",
  "ModuleVersionNumber"
)
SELECT
  wt."Name",
  wt."Value",
  wt."IsActive",
  wt."IsDeleted",
  wt."CanOrganisationChange",
  wt."CanUserChange",
  ModuleID,
  ModuleVersionNumber
FROM
  public."ModuleSettingTemplate" wt where wt."ModuleTemplateID" = moduletemplateid and wt."ModuleTemplateVersionNumber" = moduletemplateversionnumber ;

-- ST Promotion
FOR LoopRow IN
	select * from "ModuleStatusTypeTemplate" aw
    	where aw."ModuleTemplateID" =  moduletemplateid and aw."ModuleTemplateVersionNumber" =  moduletemplateversionnumber and aw."StatusTypeTemplateID" not in (select "StatusTypeTemplateID" from "StatusType" w where w."StatusTypeTemplateID"= aw."StatusTypeTemplateID" and w."StatusTypeTemplateVersionNumber" = aw."StatusTypeTemplateVersionNumber")
LOOP
    BEGIN
    	perform "fn_PromoteStatusTypeTemplate"(LoopRow."ModuleTemplateID", aw."ModuleTemplateVersionNumber");
    END;
END LOOP;

-- NC Promotion
FOR LoopRow IN
	select * from "ModuleNotificationConstructTemplate" aw
    	where aw."ModuleTemplateID" =  moduletemplateid and aw."ModuleTemplateVersionNumber" =  moduletemplateversionnumber and aw."NotificationConstructTemplateID" not in (select "NotificationConstructTemplateID" from "NotificationConstruct" w where w."NotificationConstructTemplateID"= aw."NotificationConstructTemplateID" and w."NotificationConstructTemplateVersionNumber" = aw."NotificationConstructTemplateVersionNumber")
LOOP
    BEGIN
    	perform "fn_PromoteNotificationConstructTemplate"(LoopRow."NotificationConstructTemplateID",LoopRow."NotificationConstructTemplateVersionNumber");
    END;
END LOOP;

-- WF Promotion
FOR LoopRow IN
	select * from "ModuleWorkflowTemplate" aw
    	where aw."ModuleTemplateID" =  moduletemplateid and aw."ModuleTemplateVersionNumber" =  moduletemplateversionnumber and aw."WorkflowTemplateID" not in (select "WorkflowTemplateID" from "Workflow" w where w."WorkflowTemplateID"= aw."WorkflowTemplateID" and w."WorkflowTemplateVersionNumber" = aw."WorkflowTemplateVersionNumber")
LOOP
    BEGIN
    	perform "fn_PromoteWorkflowTemplate"(LoopRow."WorkflowTemplateID",LoopRow."WorkflowTemplateVersionNumber");
    END;
END LOOP;

-- AR Promotion
FOR LoopRow IN
	select * from "ModuleArtefactTemplate" aw
    	where aw."ModuleTemplateID" =  moduletemplateid and aw."ModuleTemplateVersionNumber" =  moduletemplateversionnumber and aw."ArtefactTemplateID" not in (select "ArtefactTemplateID" from "Artefact" w where w."ArtefactTemplateID"= aw."ArtefactTemplateID" and w."ArtefactTemplateVersionNumber" = aw."ArtefactTemplateVersionNumber")
LOOP
    BEGIN
    	perform "fn_PromoteArtefactTemplate"(LoopRow."ArtefactTemplateID",LoopRow."ArtefactTemplateVersionNumber");
    END;
END LOOP;


END;
------ End DO

--EXCEPTION
--	WHEN
END;
$$;


ALTER FUNCTION public."fn_PromoteModuleTemplate"(moduletemplateid uuid, moduletemplateversionnumber integer) OWNER TO postgres;

--
-- TOC entry 925 (class 1255 OID 40327)
-- Name: fn_PromoteNotificationConstructTemplate(uuid, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_PromoteNotificationConstructTemplate"(notificationconstructtemplateid uuid, notificationconstructtemplateversionnumber integer) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
  NotificationConstructID UUID;
  NotificationConstructVersionNumber integer;
BEGIN

NotificationConstructID := (select dorg."NotificationConstructID" from "NotificationConstruct" dorg
	where dorg."NotificationConstructTemplateID" = notificationconstructtemplateid limit 1);

NotificationConstructVersionNumber := (select dorg."NotificationConstructVersionNumber" from "NotificationConstruct" dorg
	where dorg."NotificationConstructTemplateID" = notificationconstructtemplateid order by dorg."NotificationConstructVersionNumber" desc limit 1);

-- create DO entry
BEGIN


-- copy WF
IF(NotificationConstructID is null)
THEN
BEGIN
	NotificationConstructID := uuid_generate_v1();
END;
END IF;


NotificationConstructVersionNumber := notificationconstructtemplateversionnumber;


END;

INSERT INTO
  public."NotificationConstruct"
(
  "NotificationConstructID",
  "NotificationConstructVersionNumber",
  "Name",
  "Description",
  "IsActive",
  "IsDeleted",
  "NotificationConstructTemplateID",
  "NotificationConstructTemplateVersionNumber",
  "NotificationConstructTypeID",
  "NotificationConstructSubTypeID",
  "NotificationConstructCategoryID",
  "NotificationConstructSubCategoryID",
  "DefaultNotificationExportFormatID",
  "ExternalRelatedNotificationConstructID",
  "ExternalRelatedNotificationConstructVersionNumber",
  "DefaultNotificationDeliveryMethodID",
  "NotificationSubject",
  "NotificationTitle",
  "NotificationDetails",
  "NotificationConstructMutatorObjectType",
  "NotificationReference",
  "NotificationAdditionalDetails",
  "ParentID",
  "OwnerOrganisationID",
  "CanBeIncludedInBatchNotification"
)
SELECT
  NotificationConstructID,
  NotificationConstructVersionNumber,
  wt."Name",
  wt."Description",
  wt."IsActive",
  wt."IsDeleted",
  notificationconstructtemplateid,
  notificationconstructtemplateversionnumber,
  wt."NotificationConstructTypeID",
  wt."NotificationConstructSubTypeID",
  wt."NotificationConstructCategoryID",
  wt."NotificationConstructSubCategoryID",
  wt."DefaultNotificationExportFormatID",
  einc."NotificationConstructID",
  einc."NotificationConstructVersionNumber",
  wt."DefaultNotificationDeliveryMethodID",
  wt."NotificationSubject",
  wt."NotificationTitle",
  wt."NotificationDetails",
  wt."NotificationConstructMutatorObjectType",
  wt."NotificationReference",
  wt."NotificationAdditionalDetails",
  wt."ParentID",
  wt."OwnerOrganisationID",
  wt."CanBeIncludedInBatchNotification"
FROM
  public."NotificationConstructTemplate"  wt

  left outer join "NotificationConstruct" einc on einc."NotificationConstructTemplateID" = wt."ExternalRelatedNotificationConstructTemplateID" and einc."NotificationConstructTemplateVersionNumber" = wt."ExternalRelatedNotificationConstructTemplateVersionNumber"

  where wt."NotificationConstructTemplateID" = notificationconstructtemplateid and wt."NotificationConstructTemplateVersionNumber" = notificationconstructtemplateversionnumber ;

INSERT INTO
  public."NotificationConstructData"
(
  "NotificationConstructID",
  "NotificationConstructVersionNumber",
  "NotificationData",
  "NotificationDataLength",
  "NotificationDataMimeType",
  "NotificationDataFileName",
  "IsActive",
  "IsDeleted",
  "CreatedOn" ,
  "UsesBusinessObjects",
  "UsesDataSources"
)
SELECT
  NotificationConstructID,
  NotificationConstructVersionNumber,
  wt."NotificationData",
  wt."NotificationDataLength",
  wt."NotificationDataMimeType",
  wt."NotificationDataFileName",
  wt."IsActive",
  wt."IsDeleted",
  CURRENT_DATE ,
  wt."UsesBusinessObjects",
  wt."UsesDataSources"
FROM
  public."NotificationConstructDataTemplate"  wt where wt."NotificationConstructTemplateID" = notificationconstructtemplateid and wt."NotificationConstructTemplateVersionNumber" = notificationconstructtemplateversionnumber ;

INSERT INTO
  public."NotificationConstructParameter"
(
  "NotificationConstructID",
  "NotificationConstructVersionNumber",
  "ParameterOrBusinessObjectName",
  "DefaultValue",
  "ObjectType",
  "ObjectName",
  "ObjectNameSpace",
  "ObjectAssembly",
  "ObjectParentName",
  "ObjectParentNameSpace",
  "ObjectParentAssembly",
  "IsMandatory",
  "IsActive",
  "IsDeleted",
  "ObjectParentType",
  "IsBusinessObject",
  "BusinessObjectCategoryName"
)
SELECT
  NotificationConstructID,
  NotificationConstructVersionNumber,
  wt."ParameterOrBusinessObjectName",
  wt."DefaultValue",
  wt."ObjectType",
  wt."ObjectName",
  wt."ObjectNameSpace",
  wt."ObjectAssembly",
  wt."ObjectParentName",
  wt."ObjectParentNameSpace",
  wt."ObjectParentAssembly",
  wt."IsMandatory",
  wt."IsActive",
  wt."IsDeleted",
  wt."ObjectParentType",
  wt."IsBusinessObject",
  wt."BusinessObjectCategoryName"
FROM
  public."NotificationConstructParameterTemplate"  wt where wt."NotificationConstructTemplateID" = notificationconstructtemplateid and wt."NotificationConstructTemplateVersionNumber" = notificationconstructtemplateversionnumber ;


INSERT INTO
  public."NotificationConstructRole"
(
  "NotificationConstructID",
  "NotificationConstructVersionNumber",
  "RoleName",
  "RoleDescription",
  "RoleTypeID",
  "RoleSubTypeID",
  "RoleCategoryID",
  "RoleSubCategoryID",
  "IsActive",
  "IsDeleted"
)
SELECT
  NotificationConstructID,
  NotificationConstructVersionNumber,
  wt."RoleName",
  wt."RoleDescription",
  wt."RoleTypeID",
  wt."RoleSubTypeID",
  wt."RoleCategoryID",
  wt."RoleSubCategoryID",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."NotificationConstructRoleTemplate" wt where wt."NotificationConstructTemplateID" = notificationconstructtemplateid and wt."NotificationConstructTemplateVersionNumber" = notificationconstructtemplateversionnumber ;

INSERT INTO
  public."NotificationConstructClaim"
(
"NotificationConstructID",
  "NotificationConstructVersionNumber",
  "ResourceID",
  "OperationID",
  "StateID",
  "StateItemID",
  "IsActive",
  "IsDeleted",
  "NotificationRoleConstructID"
)
SELECT
  NotificationConstructID,
  NotificationConstructVersionNumber,
  wt."ResourceID",
  wt."OperationID",
  wt."StateID",
  wt."StateItemID",
  wt."IsActive",
  wt."IsDeleted",
  mr."NotificationRoleConstructID"
FROM
  public."NotificationConstructClaimTemplate" wt

  inner join "NotificationConstructRoleTemplate" wrr on wrr."NotificationConstructRoleID" = wt."NotificationConstructRoleID" and wrr."NotificationConstructTemplateID" = wt."NotificationConstructTemplateID" and wrr."NotificationConstructTemplateVersionNumber" = wt."NotificationConstructTemplateVersionNumber"

  left outer join "NotificationConstructRole" mr on mr."NotificationConstructID" = NotificationConstructID and mr."NotificationConstructVersionNumber" = NotificationConstructVersionNumber and mr."RoleName" = wrr."RoleName"

 where wt."NotificationConstructTemplateID" = notificationconstructtemplateid and wt."NotificationConstructTemplateVersionNumber" = notificationconstructtemplateversionnumber

  	and wrr."NotificationConstructRoleID" is not null and wt."RoleID" is null ;

INSERT INTO
  public."NotificationConstructClaim"
(
"NotificationConstructID",
  "NotificationConstructVersionNumber",
  "ResourceID",
  "OperationID",
  "StateID",
  "StateItemID",
  "IsActive",
  "IsDeleted",
  "RoleID"
)
SELECT
NotificationConstructID,
  NotificationConstructVersionNumber,
  wt."ResourceID",
  wt."OperationID",
  wt."StateID",
  wt."StateItemID",
  wt."IsActive",
  wt."IsDeleted",
  wt."RoleID"
FROM
  public."NotificationConstructClaimTemplate" wt

  inner join "Role" wrr on wrr."RoleID" = wt."RoleID"

  where wt."NotificationConstructTemplateID" = notificationconstructtemplateid and wt."NotificationConstructTemplateVersionNumber" = notificationconstructtemplateversionnumber

  	and wt."NotificationConstructRoleID" is null and wt."RoleID" is not null;

----

INSERT INTO
  public."NotificationConstructTarget"
(
  "NotificationConstructID",
  "NotificationConstructVersionNumber",
  "OrganisationTypeID",
  "UserTypeID",
  "IsSingleUser",
  "IsOrganisationBranchOnly",
  "IsDefaultTarget",
  "IsActive",
  "IsDeleted"
)
SELECT
  NotificationConstructID,
  NotificationConstructVersionNumber,
  wt."OrganisationTypeID",
  wt."UserTypeID",
  wt."IsSingleUser",
  wt."IsOrganisationBranchOnly",
  wt."IsDefaultTarget",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."NotificationConstructTargetTemplate" wt

   where wt."NotificationConstructTemplateID" = notificationconstructtemplateid and wt."NotificationConstructTemplateVersionNumber" = notificationconstructtemplateversionnumber

   and not exists (select * from "NotificationConstructTarget" nct where nct."OrganisationTypeID" = wt."OrganisationTypeID" and nct."UserTypeID" = wt."UserTypeID"
   	and nct."NotificationConstructID" = NotificationConstructID and nct."NotificationConstructVersionNumber" = NotificationConstructVersionNumber limit 1)
  ;


--EXCEPTION
--	WHEN
END;
$$;


ALTER FUNCTION public."fn_PromoteNotificationConstructTemplate"(notificationconstructtemplateid uuid, notificationconstructtemplateversionnumber integer) OWNER TO postgres;

--
-- TOC entry 926 (class 1255 OID 40329)
-- Name: fn_PromoteProductTemplate(uuid, integer, boolean, boolean, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_PromoteProductTemplate"(producttemplateid uuid, producttemplateversionnumber integer, processpackage boolean, processrelationship boolean, processfamily boolean) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
  ProductID UUID;
  ProductVersionNumber integer;
  LoopRow RECORD;
BEGIN


ProductID := (select dorg."ProductID" from "Product" dorg
	where dorg."ProductTemplateID" = producttemplateid limit 1);

ProductVersionNumber := (select dorg."ProductVersionID" from "Product" dorg
	where dorg."ProductTemplateID" = producttemplateid order by dorg."ProductVersionID" desc limit 1);

-- create DO entry
BEGIN

-- copy WF
IF(ProductID is null)
THEN
BEGIN
	ProductID := uuid_generate_v1();
END;
END IF;

IF((ProductVersionNumber is null) or (ProductVersionNumber <> producttemplateversionnumber))
THEN
BEGIN

ProductVersionNumber := producttemplateversionnumber;

-- PRODUCT DEFAULTS
-- Attribute make sure unique
INSERT INTO
  public."ProductAttribute"
(
  "Name",
  "Description",
  "IsActive",
  "IsDeleted"
)
SELECT
  wt."Name",
  wt."Description",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."ProductAttributeTemplate" wt
  where not exists(select pt."Name" from "ProductAttribute" pt where pt."Name" = wt."Name" limit 1);


-- spec
INSERT INTO
  public."SpecificationAttribute"
(
  "SpecificationAttributeTemplateID",
  "Name",
  "Description",
  "DisplayOrder",
  "IsActive",
  "IsDeleted",
  "SpecificationAttributeTypeID",
  "SpecificationAttributeCategoryID",
  "SpecificationAttributeSubTypeID",
  "SpecificationAttributeSubCategoryID"
)
SELECT
  wt."SpecificationAttributeTemplateID",
  wt."Name",
  wt."Description",
  wt."DisplayOrder",
  wt."IsActive",
  wt."IsDeleted",
  wt."SpecificationAttributeTypeID",
  wt."SpecificationAttributeCategoryID",
  wt."SpecificationAttributeSubTypeID",
  wt."SpecificationAttributeSubCategoryID"
FROM
  public."SpecificationAttributeTemplate" wt
   where not exists(select pt."SpecificationAttributeTemplateID" from "SpecificationAttribute" pt where pt."SpecificationAttributeTemplateID" = wt."SpecificationAttributeTemplateID" limit 1);

-- spec option
INSERT INTO
  public."SpecificiationAttributeOption"
(
  "SpecificationAttributeOptionTemplateID",
  "SpecificationAttributeID",
  "DisplayOrder",
  "Name",
  "Description",
  "IsActive",
  "IsDeleted"
)
SELECT
  wt."SpecificationAttributeOptionTemplateID",
  (select sa1."SpecificationAttributeID" from "SpecificationAttribute" sa1 where sa1."SpecificationAttributeTemplateID" = wt."SpecificationAttributeTemplateID" limit 1),
  wt."DisplayOrder",
  wt."Name",
  wt."Description",
  wt."IsActive",
  wt."IsDeleted"

FROM
  public."SpecificationAttributeOptionTemplate"  wt
   where not exists(select pt."SpecificationAttributeOptionTemplateID" from "SpecificiationAttributeOption" pt where pt."SpecificationAttributeOptionTemplateID" = wt."SpecificationAttributeOptionTemplateID" limit 1);

-- spec relationship
INSERT INTO
  public."SpecificationAttributeRelationship"
(
  "SpecificationAttributeID",
  "ParentSpecificationAttributeID",
  "IsMandatory",
  "IsInverse",
  "IsActive",
  "IsDeleted"
)
SELECT
  sp."SpecificationAttributeID",
  spp."SpecificationAttributeID",
  wt."IsMandatory",
  wt."IsInverse",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."SpecificationAttributeRelationshipTemplate" wt

  left outer join "SpecificationAttribute" sp on sp."SpecificationAttributeTemplateID" = wt."SpecificationAttributeTemplateID"
  left outer join "SpecificationAttribute" spp on spp."SpecificationAttributeTemplateID" = wt."ParentSpecificationAttributeTemplateID"

  where sp."SpecificationAttributeID" is not null and spp."SpecificationAttributeID" is not null

  and not exists(select * from "SpecificationAttributeRelationship" ss where ss."SpecificationAttributeID" = sp."SpecificationAttributeID" and ss."ParentSpecificationAttributeID" = spp."SpecificationAttributeID" limit 1)
 ;




-- Product
INSERT INTO
  public."Product"
(
  "ProductID",
  "ProductTemplateID",
  "IsActive",
  "IsDeleted",
  "IsPackage",
  "IsDeposit",
  "ProductVersionID",
  "ProductTemplateVersionID",
  "ParentID",
  "OwnerOrganisationID",
  "CanBeResold",
  "IsDeductionProduct"
)
SELECT
 ProductID,
  wt."ProductTemplateID",
  wt."IsActive",
  wt."IsDeleted",
  wt."IsPackage",
  false,
  ProductVersionNumber,
  wt."ProductVersionID",
  wt."ParentID",
  wt."OwnerOrganisationID",
  wt."CanBeResold",
  wt."IsDeductionProduct"
FROM
  public."ProductTemplate" wt
  where wt."ProductTemplateID" = producttemplateid and wt."ProductVersionID" = producttemplateversionnumber ;

-- PRoduct Attri
INSERT INTO
  public."ProductProductAttribute"
(
  "ProductID",
  "ProductAttributeID",
  "IsRequired",
  "DisplayOrder",
  "ProductVersionID",
  "IsActive",
  "IsDeleted"
)
SELECT
  ProductID,
  pa."ProductAttributeID",
  wt."IsRequired",
  wt."DisplayOrder",
  ProductVersionNumber,
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."ProductProductAttributeTemplate" wt
  left outer join "ProductAttributeTemplate" pat on pat."ProductAttributeTemplateID" = wt."ProductAttributeTemplateID"
  left outer join "ProductAttribute" pa on pa."Name" = pat."Name"

  where wt."ProductTemplateID" = producttemplateid and wt."ProductVersionID" = producttemplateversionnumber and pa."ProductAttributeID" is not null;

-- tag
INSERT INTO
  public."ProductTag"
(
  "Name",
  "ProductID",
  "ProductVersionID"
)
SELECT
  wt."Name",
  ProductID,
  ProductVersionNumber
FROM
  public."ProductTagTemplate" wt
  where wt."ProductTemplateID" = producttemplateid and wt."ProductVersionID" = producttemplateversionnumber;

-- deduction
INSERT INTO
  public."ProductDeduction"
(
  "ProductID",
  "ProductVersionID",
  "DeductionID",
  "DeductionPercentage",
  "DeductionValue",
  "IsActive",
  "IsDeleted",
  "DeductionVersionNumber"
)
SELECT
  ProductID,
  ProductVersionNumber,
  de."DeductionID",
  wt."DeductionPercentage",
  wt."DeductionValue",
  wt."IsActive",
  wt."IsDeleted",
  de."DeductionVersionNumber"
FROM
  public."ProductDeductionTemplate" wt
  left outer join "DeductionTemplate" dt on dt."DeductionTemplateID" = wt."DeductionTemplateID" and dt."DeductionTemplateVersionNumber" = wt."DeductionTemplateVersionNumber"
  left outer join "Deduction" de on de."Name" = dt."Name"
  where wt."ProductTemplateID" = producttemplateid and wt."ProductVersionID" = producttemplateversionnumber;

-- WF ROLE
INSERT INTO
  public."ProductRole"
(
  "RoleName",
  "RoleDescription",
  "IsActive",
  "IsDeleted",
  "ProductID",
  "ProductVersionID",
  "RoleTypeID",
  "RoleSubTypeID",
  "RoleCategoryID",
  "RoleSubCategoryID"
)
SELECT
  wt."RoleName",
  wt."RoleDescription",
  wt."IsActive",
  wt."IsDeleted",
  ProductID,
  ProductVersionNumber,
  wt."RoleTypeID",
  wt."RoleSubTypeID",
  wt."RoleCategoryID",
  wt."RoleSubCategoryID"
FROM
  public."ProductRoleTemplate" wt where wt."ProductTemplateID" = producttemplateid and wt."ProductVersionID" = producttemplateversionnumber ;

-------------- Claim
INSERT INTO
  public."ProductClaim"
(
"ProductID",
  "ProductVersionID",
  "ResourceID",
  "OperationID",
  "StateID",
  "StateItemID",
  "IsActive",
  "IsDeleted",
  "ProductRoleID"
)
SELECT
  ProductID,
  ProductVersionNumber,
  wt."ResourceID",
  wt."OperationID",
  wt."StateID",
  wt."StateItemID",
  wt."IsActive",
  wt."IsDeleted",
  mr."ProductRoleID"
FROM
  public."ProductClaimTemplate" wt

  inner join "ProductRoleTemplate" wrr on wrr."ProductRoleTemplateID" = wt."ProductRoleTemplateID" and wrr."ProductTemplateID" = wt."ProductTemplateID"
  and wrr."ProductVersionID" = wt."ProductVersionID"

  left outer join "ProductRole" mr on mr."ProductID" = ProductID and mr."ProductVersionID" = ProductVersionNumber and mr."RoleName" = wrr."RoleName"

  where wt."ProductTemplateID" = producttemplateid and wt."ProductVersionID" = producttemplateversionnumber
  	and wrr."ProductRoleTemplateID" is not null and wt."RoleID" is null ;

INSERT INTO
  public."ProductClaim"
(
"ProductID",
  "ProductVersionID",
  "ResourceID",
  "OperationID",
  "StateID",
  "StateItemID",
  "IsActive",
  "IsDeleted",
  "RoleID"
)
SELECT
ProductID,
  ProductVersionNumber,
  wt."ResourceID",
  wt."OperationID",
  wt."StateID",
  wt."StateItemID",
  wt."IsActive",
  wt."IsDeleted",
  wt."RoleID"
FROM
  public."ProductClaimTemplate" wt

  inner join "Role" wrr on wrr."RoleID" = wt."RoleID"

  where wt."ProductTemplateID" = producttemplateid and wt."ProductVersionID" = producttemplateversionnumber
  	and wt."ProductRoleTemplateID" is null and wt."RoleID" is not null
    and not exists(select dd."ProductClaimID" from "ProductClaim" dd where dd."RoleID" = wt."RoleID" and dd."ProductID" = ProductID and dd."ProductVersionID" =  ProductVersionNumber);

----
INSERT INTO
  public."ProductDetail"
(
  "Name",
  "Description",
  "ProductID",
  "IsActive",
  "IsDeleted",
  "ShortDescription",
  "LongDescription",
  "MetaKeywords",
  "MetaDescription",
  "MetaTitle",
  "RequireOtherProducts",
  "AutomaticallyAddRequiredProducts",
  "HasUserAgreement",
  "UserAgreementText",
  "IsRecurring",
  "RecurringCycleLength",
  "RecurringCyclePeriodID",
  "RecurringTotalCycle",
  "IsTaxExempt",
  "TaxCategoryID",
  "OrderMinimumQuantity",
  "OrderMaximumQuantity",
  "CallForPrice",
  "Price",
  "ProductCost",
  "CustomerEntersPrice",
  "HasTierPrices",
  "HasDiscountsApplied",
  "MinimumCustomerEnteredPrice",
  "MaximumCustomerEnteredPrice",
  "DisplayOrder",
  "AvailableStartDate",
  "AvailableEndDate",
  "ProductTypeID",
  "ProductSubTypeID",
  "ProductCategoryID",
  "ProductSubCategoryID",
  "ProductVersionID",
  "CurrencyCode",
  "CurrencyRate",
  "CurrencyRateDate",
  "CurrencyRateToGBP",
  "CurrencyRateToUSD",
  "InvoiceName",
  "IsDepositProduct"
)
SELECT
  wt."Name",
  wt."Description",
  ProductID,
  wt."IsActive",
  wt."IsDeleted",
  wt."ShortDescription",
  wt."LongDescription",
  wt."MetaKeywords",
  wt."MetaDescription",
  wt."MetaTitle",
  wt."RequireOtherProducts",
  wt."AutomaticallyAddRequiredProducts",
  wt."HasUserAgreement",
  wt."UserAgreementText",
  wt."IsRecurring",
  wt."RecurringCycleLength",
  wt."RecurringCyclePeriodID",
  wt."RecurringTotalCycles",
  wt."IsTaxExempt",
  wt."TaxCategoryID",
  wt."OrderMinimumQuantity",
  wt."OrderMaximumQuantity",
  wt."CallForPrice",
  wt."Price",
  wt."ProductCost",
  wt."CustomerEntersPrice",
  wt."HasTierPrices",
  wt."HasDiscountsApplied",
  wt."MinimumCustomerEnteredPrice",
  wt."MaximumCustomerEnteredPrice",
  wt."DisplayOrder",
  wt."AvailableStartDate",
  wt."AvailableEndDate",
  wt."ProductTypeID",
  wt."ProductSubTypeID",
  wt."ProductCategoryID",
  wt."ProductSubCategoryID",
  ProductVersionNumber,
  wt."CurrencyCode",
  wt."CurrencyRate",
  wt."CurrencyRateDate",
  wt."CurrencyRateToGBP",
  wt."CurrencyRateToUSD",
  wt."InvoiceName",
  wt."IsDepositProduct"
FROM
  public."ProductDetailTemplate" wt where wt."ProductTemplateID" = producttemplateid and wt."ProductVersionID" = producttemplateversionnumber ;

-- spec attrs
INSERT INTO
  public."ProductSpecificationAttribute"
(
  "ProductID",
  "IsMandatory",
  "IsMultiSelect",
  "DisplayOrder",
  "IsPreSelected",
  "MinimumSelectionLimit",
  "MaximumSelectionLimit",
  "IsUserDefined",
  "IsPriceDriven",
  "SpecificationAttributeID",
  "IsActive",
  "IsDeleted",
  "ProductVersionID"
)
SELECT
  ProductID,
  wt."IsMandatory",
  wt."IsMultiSelect",
  wt."DisplayOrder",
  wt."IsPreSelected",
  wt."MinimumSelectionLimit",
  wt."MaximumSelectionLimit",
  wt."IsUserDefined",
  wt."IsPriceDriven",
  sp."SpecificationAttributeID",
  wt."IsActive",
  wt."IsDeleted",
  ProductVersionNumber
FROM
  public."ProductSpecificationAttributeTemplate" wt

  left outer join "SpecificationAttribute" sp on sp."SpecificationAttributeTemplateID" = wt."SpecificationAttributeTemplateID"

  where wt."ProductTemplateID" = producttemplateid and wt."ProductVersionID" = producttemplateversionnumber;

INSERT INTO
  public."ProductSpecificationAttributeOption"
(
  "ProductSpecificationAttributeID",
  "SpecficiationAttributeOptionID",
  "PriceAdjustment",
  "WeightAdjustment",
  "Cost",
  "DefaultValue",
  "DefaultQuantity",
  "DisplayOrder",
  "IsActive",
  "IsDeleted"
)
SELECT
  psa."ProductSpecificationAttributeID",
  sao."SpecficiationAttributeOptionID",
  wt."PriceAdjustement",
  wt."WeightAdjustment",
  wt."Cost",
  wt."DefaultValue",
  wt."DefaultQuantity",
  wt."DisplayOrder",
  wt. "IsActive",
  wt."IsDeleted"
FROM
  public."ProductSpecificationAttributeOptionTemplate" wt

  left outer join "SpecificiationAttributeOption" sao on sao."SpecificationAttributeOptionTemplateID" = wt."SpecificationAttributeOptionTemplateID"

  left outer join "ProductSpecificationAttributeTemplate" psat on psat."ProductSpecificationAttributeTemplateID" = wt."ProductSpecificationAttributeTemplateID"

  left outer join "ProductSpecificationAttribute" psa on psa."ProductID" = ProductID and psa."ProductVersionID" = ProductVersionNumber
  	and psa."SpecificationAttributeID" = sao."SpecificationAttributeID"

  where psat."ProductTemplateID" = producttemplateid and psat."ProductVersionID" = producttemplateversionnumber
  and psa."ProductSpecificationAttributeID" is not null
  ;

INSERT INTO
  public."ProductSpecificationBlueprint"
(
  "ProductID",
  "ProductSpecificationAttributeID",
  "DefaultProductSpecificationAttributeOptionID",
  "IsActive",
  "IsDeleted",
  "ProductVersionID"
)
SELECT
  ProductID,
  psa."ProductSpecificationAttributeID",
  psao."ProductSpecificationAttributeOptionID",
  wt."IsActive",
  wt."IsDeleted",
  ProductVersionNumber
FROM
  public."ProductSpecificationBlueprintTemplate" wt
  left outer join "ProductSpecificationAttributeOptionTemplate" sao on sao."ProductSpecificationAttributeOptionTemplateID" = wt."DefaultProductSpecificationAttributeOptionTemplateID"
  left outer join "SpecificiationAttributeOption" saa on saa."SpecificationAttributeOptionTemplateID" = sao."SpecificationAttributeOptionTemplateID"

  left outer join "ProductSpecificationAttributeTemplate" psat on psat."ProductSpecificationAttributeTemplateID" = wt."ProductSpecificationAttributeTemplateID"

  left outer join "ProductSpecificationAttribute" psa on psa."ProductID" = ProductID and psa."ProductVersionID" = ProductVersionNumber
  	and psa."SpecificationAttributeID" = saa."SpecificationAttributeID"
  left outer join "ProductSpecificationAttributeOption" psao on psao."ProductSpecificationAttributeID" = psa."ProductSpecificationAttributeID" and psao."SpecficiationAttributeOptionID" = saa."SpecficiationAttributeOptionID"

  where wt."ProductTemplateID" = producttemplateid and wt."ProductVersionID" = producttemplateversionnumber
  ;

INSERT INTO
  public."ProductVariantAttributeValue"
(
  "ProductProductAttributeID",
  "AttributeValueTypeID",
  "Name",
  "PriceAdjustment",
  "WeightAdjustement",
  "Cost",
  "Quantity",
  "IsPreSelected",
  "DisplayOrder",
  "IsActive",
  "IsDeleted"
)
SELECT
  ppa."ProductProductAttributeID",
  wt."AttributeValueTypeID",
  wt."Name",
  wt."PriceAdjustment",
  wt."WeightAdjustment",
  wt."Cost",
  wt."Quantity",
  wt."IsPreSelected",
  wt."DisplayOrder",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."ProductVariantAttributeValueTemplate" wt

  left outer join "ProductProductAttributeTemplate" ppt on ppt."ProductProductAttributeTemplateID" = wt."ProductProductAttributeTemplateID"

  left outer join "ProductAttributeTemplate" pat on pat."ProductAttributeTemplateID" = ppt."ProductAttributeTemplateID"
  left outer join "ProductAttribute" pa on pa."Name" = pat."Name"

  left outer join "ProductProductAttribute" ppa on ppa."ProductID" =ProductID and ppa."ProductVersionID" = ProductVersionNumber
  	and ppa."ProductAttributeID" = pa."ProductAttributeID"

   where ppt."ProductTemplateID" = producttemplateid and ppt."ProductVersionID" = producttemplateversionnumber
  ;

INSERT INTO
  public."ProductVariantAttributeCombination"
(
  "ProductID",
  "AllowOutOfStockOrders",
  "StockQuantity",
  "Sku",
  "ManufacturerPartNumber",
  "Gtin",
  "OverridenPrice",
  "IsActive",
  "IsDeleted",
  "ProductVersionID"
)
SELECT
  ProductID,
  wt."AllowOutOfStockOrders",
  wt."StockQuantity",
  wt."Sku",
  wt."ManufacturerPartNumber",
  wt."Gtin",
  wt."OverriddenPrice",
  wt."IsActive",
  wt."IsDeleted",
  ProductVersionNumber
FROM
  public."ProductVariantAttributeCombinationTemplate" wt

   where wt."ProductTemplateID" = producttemplateid and wt."ProductVersionID" = producttemplateversionnumber
  ;

-- Plan
INSERT INTO
  public."Plan"
(
  "PlanVersionNumber",
  "Name",
  "Description",
  "InvoiceName",
  "Price",
  "Period",
  "TrialPeriod",
  "PeriodUnitID",
  "TrialPeriodUnitID",
  "FreeQuantity",
  "SetupCost",
  "DowngradePenalty",
  "CreatedOn",
  "CreatedBy",
  "IsActive",
  "IsDeleted",
  "CountryCode",
  "CurrencyCode",
  "CancellationPeriod",
  "CancellationPeriodUnitID",
  "IsFree",
  "HasInfinitePeriods",
  "ParentID",
  "PlanStatusID",
  "IsTransactionBased",
  "PlanTemplateID",
  "PlanTemplateVersionNumber",
  "PlanGroupID",
  "PlanCategoryID"
)
SELECT
 	1,
  wt."Name",
  wt."Description",
  wt."InvoiceName",
  wt."Price",
  wt."Period",
  wt."TrialPeriod",
  wt."PeriodUnitID",
  wt."TrialPeriodUnitID",
  wt."FreeQuantity",
  wt."SetupCost",
  wt."DowngradePenalty",
  wt."CreatedOn",
  wt."CreatedBy",
  wt."IsActive",
  wt."IsDeleted",
  wt."CountryCode",
  wt."CurrencyCode",
  wt."CancellationPeriod",
  wt."CancellationPeriodUnitID",
  wt."IsFree",
  wt."HasInfinitePeriods",
  wt."ParentID",
  wt."PlanStatusID",
  wt."IsTransactionBased",
  wt."PlanTemplateID",
  wt."PlanTemplateVersionNumber",
  wt."PlanGroupID",
  wt."PlanCategoryID"
FROM
  public."PlanTemplate" wt

  left outer join "PlanProductTemplate" ppt on ppt."ProductTemplateID" = producttemplateid and ppt."ProductVersionID" = producttemplateversionnumber
  	and ppt."PlanTemplateID" = wt."PlanTemplateID" and ppt."PlanTemplateVersionNumber" = wt."PlanTemplateVersionNumber"

  where not exists(select pt."PlanTemplateID" from "Plan" pt where pt."PlanTemplateID" = wt."PlanTemplateID" and pt."PlanTemplateVersionNumber" = wt."PlanTemplateVersionNumber")
  and ppt."ProductTemplateID" =  producttemplateid and ppt."ProductVersionID" = producttemplateversionnumber
  ;

INSERT INTO
  public."PlanProduct"
(
  "PlanID",
  "PlanVersionNumber",
  "ProductID",
  "ProductVersionID",
  "Period",
  "PeriodUnitID",
  "IsActive",
  "IsDeleted",
  "PlanProductStatusID"
)
SELECT
  p."PlanID",
  p."PlanVersionNumber",
  pr."ProductID",
  pr."ProductVersionID",
  wt."Period",
  wt."PeriodUnitID",
  wt."IsActive",
  wt."IsDeleted",
  wt."PlanProductStatusID"
FROM
  public."PlanProductTemplate" wt

   left outer join "Plan" p on p."PlanTemplateID" = wt."PlanTemplateID" and p."PlanTemplateVersionNumber" = wt."PlanTemplateVersionNumber"
   left outer join "Product" pr on pr."ProductTemplateID" = wt."ProductTemplateID" and pr."ProductVersionID" = wt."ProductVersionID"

  where wt."ProductTemplateID" = producttemplateid and wt."PlanTemplateVersionNumber" = producttemplateversionnumber

  and not exists(select pt."PlanID" from "PlanProduct" pt where pt."PlanID" = p."PlanID" and pt."PlanVersionNumber" = p."PlanVersionNumber"
  	and pt."ProductID" = pr."ProductID" and pt."ProductVersionID" = pr."ProductVersionID")

  and wt."ProductTemplateID" is not null;


-- plan transaction
INSERT INTO
  public."PlanTransaction"
(
  "PlanID",
  "PlanVersionNumber",
  "ProductID",
  "ProductVersionID",
  "IsTotalValuePricingBound",
  "IsTransactionCountPricingBound",
  "IsActive",
  "IsDeleted",
  "ParentID",
  "ApplyTransactionTierPricingPerTransaction"
)
SELECT
   p."PlanID",
 p."PlanVersionNumber",
   pr."ProductID",
  pr."ProductVersionID",
 ptt. "IsTotalValuePricingBound",
  ptt."IsTransactionCountPricingBound",
  ptt."IsActive",
  ptt."IsDeleted",
  ptt."PlanTransactionTemplateID",
  ptt."ApplyTransactionTierPricingPerTransaction"
FROM
  public."PlanTransactionTemplate" ptt

  left outer join "Plan" p on p."PlanTemplateID" = ptt."PlanTemplateID" and p."PlanTemplateVersionNumber" = ptt."PlanTemplateVersionNumber"
  left outer join "PlanProductTemplate" ppt on ptt."PlanTemplateID" = ptt."PlanTemplateID" and ppt."PlanTemplateVersionNumber" = ptt."PlanTemplateVersionNumber" and  ppt."ProductTemplateID" = producttemplateid and ppt."ProductVersionID" = producttemplateversionnumber

  left outer join "Product" pr on pr."ProductTemplateID" = ptt."ProductTemplateID" and pr."ProductVersionID" = ptt."ProductVersionID"

   where not exists(select pt."PlanTransactionID" from "PlanTransaction" pt where pt."ParentID" = ptt."PlanTransactionTemplateID")

   and p."PlanID" is not null and pr."ProductID" is not null and ppt."ProductTemplateID" is not null;

-- deal with component tiers

-- component tiers missing
INSERT INTO
  public."ComponentTier"
(
  "TotalValueLowerBound",
  "TotalValueUpperBound",
  "QuantityCountLowerBound",
  "QuantityCountUpperBound",
  "IsPercentageBased",
  "TierPrice",
  "TierPercentage",
  "ApplyToTotal",
  "ApplyOnPaymentMethodTypeID",
  "ApplyPerTransaction",
  "Name",
  "Description",
  "Order",
  "TierOrder",
  "ParentID",
  "IsActive",
  "IsDeleted",
  "OrganisationTypeID",
  "UserTypeID",
  "HasNoUpperBound",
  "ParentVersionNumber",
  "ApplyOnPaymentCardTypeID"
)
SELECT
  wt."TotalValueLowerBound",
  wt."TotalValueUpperBound",
  wt."QuantityCountLowerBound",
  wt."QuantityCountUpperBound",
  wt."IsPercentageBased",
  wt."TierPrice",
  wt."TierPercentage",
  wt."ApplyToTotal",
  wt."ApplyOnPaymentMethodTypeID",
  wt."ApplyPerTransaction",
  wt."Name",
  wt."Description",
  wt."Order",
  wt."TierOrder",
  wt."ComponentTierTemplateID",
  wt."IsActive",
  wt."IsDeleted",
  wt."OrganisationTypeID",
  wt."UserTypeID",
  wt."HasNoUpperBound",
  wt."ParentVersionNumber",
  wt."ApplyOnPaymentCardTypeID"
FROM
  public."ComponentTierTemplate" wt

  left outer join "PlanTransactionComponentTierTemplate" tem on tem."ComponentTierTemplateID" = wt."ComponentTierTemplateID"
   left outer join "PlanTransactionTemplate" tran on tran."PlanTransactionTemplateID" = tem."PlanTransactionTemplateID"
   left outer join "PlanProductTemplate" ppt on ppt."PlanTemplateID" = tran."PlanTemplateID" and ppt."PlanTemplateVersionNumber" = tran."PlanTemplateVersionNumber" and  ppt."ProductTemplateID" = producttemplateid and ppt."ProductVersionID" = producttemplateversionnumber

  left outer join "PlanTransaction" p on p."ParentID" = tran."PlanTransactionTemplateID"

  where not exists (select * from "ComponentTier" ct where ct."ParentID" = wt."ComponentTierTemplateID" limit 1)
  and p."PlanTransactionID" is not null and tran."PlanTransactionTemplateID" is not null
  ;

-- now add join table for componen tier  etc
INSERT INTO
  public."PlanTransactionComponentTier"
(
  "ComponentTierID",
  "PlanTransactionID"
)
SELECT
  ct."ComponentTierID",
  p."PlanTransactionID"
FROM
  public."PlanTransactionComponentTierTemplate" wt

  left outer join "ComponentTier" ct on ct."ParentID" = wt."ComponentTierTemplateID"
  left outer join "PlanTransaction" p on p."ParentID" = wt."PlanTransactionTemplateID"

  where not exists (select * from "PlanTransactionComponentTier" tt where tt."ComponentTierID" = ct."ComponentTierID"
  	and tt."PlanTransactionID" = p."PlanTransactionID" limit 1)
    and ct."ComponentTierID" is not null and p."PlanTransactionID" is not null
  ;

-- billing
INSERT INTO
  public."Billing"
(
  "BillingPeriod",
  "BillingPeriodUnitID",
  "BillingLagPeriod",
  "BillingLagPeriodUnitID",
  "BillingPeriodDayOfMonth",
  "DelayedBillingPeriod",
  "DelayedBillingPeriodUnitID",
  "HasDelayedBilling",
  "BillingTemplateID",
  "NumberOfBillingPeriods",
  "InvoiceToProcessingDelayPeriod",
  "InvoiceToProcessingDelayPeriodUnitID",
  "InvoiceNotificationConstructID",
  "InvoiceNotificationConstructVersionNumber",
  "EstimatedProcessingPeriod",
  "EstimatedProcessingPeriodUnitID",
  "IsActive",
  "IsDeleted"
)
SELECT
  bt."BillingPeriod",
  bt."BillingPeriodUnitID",
  bt."BillingLagPeriod",
  bt."BillingLagPeriodUnitID",
  bt."BillingPeriodDayOfMonth",
  bt."DelayedBillingPeriod",
  bt."DelayedBillingPeriodUnitID",
  bt."HasDelayedBilling",
  bt."BillingTemplateID",
  bt."NumberOfBillingPeriods",
  bt."InvoiceToProcessingDelayPeriod",
  bt."InvoiceToProcessingDelayPeriodUnitID",
  nc."NotificationConstructID",
  nc."NotificationConstructVersionNumber",
  bt."EstimatedProcessingPeriod",
  bt."EstimatedProcessingPeriodUnitID",
  bt."IsActive",
  bt."IsDeleted"
FROM
  public."BillingTemplate" bt

  left outer join "NotificationConstruct" nc on nc."NotificationConstructTemplateID" = "InvoiceNotificationConstructTemplateID"
  	and nc."NotificationConstructTemplateVersionNumber" = "InvoiceNotificationConstructTemplateVersionNumber"

  where not exists(select * from "Billing" pt where pt."BillingTemplateID" = bt."BillingTemplateID")
  ;

INSERT INTO
  public."PlanBilling"
(
  "PlanID",
  "PlanVersionNumber",
  "BillingID",
  "IsActive",
  "IsDeleted",
  "IsDefaultBilling"
)
SELECT
  p."PlanID",
  p."PlanVersionNumber",
  b."BillingID",
  wt."IsActive",
  wt."IsDeleted",
  wt."IsDefaultBilling"
FROM
  public."PlanBillingTemplate" wt
 left outer join "PlanProductTemplate" ppt on ppt."PlanTemplateID" = wt."PlanTemplateID" and ppt."PlanTemplateVersionNumber" = wt."PlanTemplateVersionNumber" and  ppt."ProductTemplateID" = producttemplateid and ppt."ProductVersionID" = producttemplateversionnumber
  left outer join "Plan" p on p."PlanTemplateID" = wt."PlanTemplateID" and p."PlanTemplateVersionNumber" = wt."PlanTemplateVersionNumber"
  left outer join "Billing" b on b."BillingTemplateID" = wt."BillingTemplateID"


   where not exists(select * from "PlanBilling" pt where pt."PlanID" = p."PlanID" and pt."PlanVersionNumber"= p."PlanVersionNumber" and pt."BillingID" = b."BillingID")

   and ppt."ProductTemplateID" is not null
  ;

INSERT INTO
  public."PlanProduct"
(
  "PlanID",
  "PlanVersionNumber",
  "ProductID",
  "ProductVersionID",
  "Period",
  "PeriodUnitID",
  "IsActive",
  "IsDeleted",
  "PlanProductStatusID"
)
SELECT
  p."PlanID",
  p."PlanVersionNumber",
  pr."ProductID",
  pr."ProductVersionID",
  wt."Period",
  wt."PeriodUnitID",
  wt."IsActive",
  wt."IsDeleted",
  wt."PlanProductStatusID"
FROM
  public."PlanProductTemplate" wt
left outer join "PlanProductTemplate" ppt on ppt."PlanTemplateID" = wt."PlanTemplateID" and ppt."PlanTemplateVersionNumber" = wt."PlanTemplateVersionNumber" and  ppt."ProductTemplateID" = producttemplateid and ppt."ProductVersionID" = producttemplateversionnumber
  left outer join "Plan" p on p."PlanTemplateID" = wt."PlanTemplateID" and p."PlanTemplateVersionNumber" = wt."PlanTemplateVersionNumber"
  left outer join "Product" pr on pr."ProductTemplateID" = wt."ProductTemplateID" and pr."ProductTemplateVersionID" = wt."ProductVersionID"

   where not exists(select * from "PlanProduct" pt where pt."PlanID" = p."PlanID" and pt."PlanVersionNumber"= p."PlanVersionNumber" and pt."ProductID" = pr."ProductID"
   	and pt."ProductVersionID" = pr."ProductVersionID")
    and ppt."ProductTemplateID" is not null
    and p."PlanID" is not null and pr."ProductID" is not null
  ;

-- product tiers
INSERT INTO
  public."ComponentTier"
(
  "TotalValueLowerBound",
  "TotalValueUpperBound",
  "QuantityCountLowerBound",
  "QuantityCountUpperBound",
  "IsPercentageBased",
  "TierPrice",
  "TierPercentage",
  "ApplyToTotal",
  "ApplyOnPaymentMethodTypeID",
  "ApplyPerTransaction",
  "Name",
  "Description",
  "Order",
  "TierOrder",
  "ParentID",
  "IsActive",
  "IsDeleted",
  "OrganisationTypeID",
  "UserTypeID",
  "HasNoUpperBound",
  "ParentVersionNumber",
  "ApplyOnPaymentCardTypeID"
)
SELECT
  wt."TotalValueLowerBound",
  wt."TotalValueUpperBound",
  wt."QuantityCountLowerBound",
  wt."QuantityCountUpperBound",
  wt."IsPercentageBased",
  wt."TierPrice",
  wt."TierPercentage",
  wt."ApplyToTotal",
  wt."ApplyOnPaymentMethodTypeID",
  wt."ApplyPerTransaction",
  wt."Name",
  wt."Description",
  wt."Order",
  wt."TierOrder",
  wt."ComponentTierTemplateID",
  wt."IsActive",
  wt."IsDeleted",
  wt."OrganisationTypeID",
  wt."UserTypeID",
  wt."HasNoUpperBound",
  wt."ParentVersionNumber",
  wt."ApplyOnPaymentCardTypeID"
FROM
  public."ComponentTierTemplate" wt

  left outer join "ProductComponentTierTemplate" tem on tem."ComponentTierTemplateID" = wt."ComponentTierTemplateID"
   left outer join "ProductTemplate" ppt on ppt."ProductTemplateID" = producttemplateid and ppt."ProductVersionID" = producttemplateversionnumber and ppt."ProductTemplateID" = tem."ProductTemplateID" and ppt."ProductVersionID" = tem."ProductVersionID"


  where not exists (select * from "ComponentTier" ct where ct."ParentID" = wt."ComponentTierTemplateID" limit 1)
  and ppt."ProductTemplateID" is not null
  ;

-- now add join table for componen tier  etc
INSERT INTO
  public."ProductComponentTier"
(
  "ComponentTierID",
  "ProductID",
  "ProductVersionID"
)
SELECT
  ct."ComponentTierID",
  p."ProductID",
  p."ProductVersionID"
FROM
  public."ProductComponentTierTemplate" wt
  left outer join "ComponentTier" ct on ct."ParentID" = wt."ComponentTierTemplateID"
  left outer join "Product" p on p."ProductTemplateID" = wt."ProductTemplateID" and p."ProductTemplateVersionID" = wt."ProductVersionID"

  where not exists (select * from "ProductComponentTier" tt where tt."ComponentTierID" = ct."ComponentTierID"
  	and tt."ProductID" = p."ProductID" and tt."ProductVersionID" = p."ProductVersionID" limit 1)
    and ct."ComponentTierID" is not null and p."ProductID" is not null
    and wt."ProductTemplateID" = producttemplateid and wt."ProductVersionID" = producttemplateversionnumber
  ;

-- product discount
INSERT INTO
  public."Discount"
(
  "DiscountVersionNumber",
  "Name",
  "Description",
  "InvoiceName",
  "DiscountTypeID",
  "DiscountPercentage",
  "DiscountAmount",
  "DiscountQuantity",
  "DiscountPeriod",
  "DisocuntPeriodUnitID",
  "ValidTill",
  "MaxRedemptions",
  "DiscountApplyOnID",
  "CreatedOn",
  "IsActive",
  "IsDeleted",
  "IsRecurring",
  "IsPercentage",
  "DiscountStatusID",
  "IsSingleProductDiscount",
  "IsCheckoutDiscount",
  "IsSingleProductQuantityDiscount",
  "SingleProductQuantityDiscountDivisor",
  "IsSingleProductQuantityDiscountPercentageBased",
  "IsSingleProductQuantityDiscountAdditionalQuantityBased",
  "SingleProductQuantityDiscountAdditionalQuantity",
  "IsMultipleProductCombinationDiscount",
  "IsMultipleProductCombinationDiscountPercentageBased",
  "IsMultipleProductCombinationDiscountCheapestFreeBased",
  "HasTiers",
  "OrganisationTypeID",
  "UserTypeID",
  "ParentID",
  "ParentVersionNumber"
)
SELECT
  1,
  wt."Name",
  wt."Description",
  wt."InvoiceName",
  wt."DiscountTypeID",
  wt."DiscountPercentage",
  wt."DiscountAmount",
  wt."DiscountQuantity",
  wt."DiscountDurationTypeID",
  wt."DiscountDurationMonth",
  wt."ValidTill",
  wt."MaxRedemptions",
  wt."DiscountApplyOnID",
  wt."CreatedOn",
  wt."IsActive",
  wt."IsDeleted",
  wt."IsRecurring",
  wt."IsPercentage",
  wt."DiscountStatusID",
  wt."IsSingleProductDiscount",
  wt."IsCheckoutDiscount",
  wt."IsSingleProductQuantityDiscount",
  wt."SingleProductQuantityDiscountDivisor",
  wt."IsSingleProductQuantityDiscountPercentageBased",
  wt."IsSingleProductQuantityDiscountAdditionalQuantityBased",
  wt."SingleProductQuantityDiscountAdditionalQuantity",
  wt."IsMultipleProductCombinationDiscount",
  wt."IsMultipleProductCombinationDiscountPercentageBased",
  wt."IsMultipleProductCombinationDiscountCheapestFreeBased",
  wt."HasTiers",
  wt."OrganisationTypeID",
  wt."UserTypeID",
  wt."DiscountTemplateID",
  wt."DiscountTemplateVersionNumber"
FROM
  public."DiscountTemplate" wt

   inner join "ProductDiscountTemplate" pd on pd."DiscountTemplateID" = wt."DiscountTemplateID" and pd."DiscountTemplateVersionNumber"
   	= wt."DiscountTemplateVersionNumber" and pd."ProductTemplateID" = producttemplateid and pd."ProductVersionID" = producttemplateversionnumber

  where not exists (select * from "Discount" d where d."ParentID" = wt."DiscountTemplateID" and d."ParentVersionNumber" =
  	wt."DiscountTemplateVersionNumber" limit 1) and pd."ProductTemplateID" is not null
  ;

INSERT INTO
  public."ComponentTier"
(
  "TotalValueLowerBound",
  "TotalValueUpperBound",
  "QuantityCountLowerBound",
  "QuantityCountUpperBound",
  "IsPercentageBased",
  "TierPrice",
  "TierPercentage",
  "ApplyToTotal",
  "ApplyOnPaymentMethodTypeID",
  "ApplyPerTransaction",
  "Name",
  "Description",
  "Order",
  "TierOrder",
  "ParentID",
  "IsActive",
  "IsDeleted",
  "OrganisationTypeID",
  "UserTypeID",
  "HasNoUpperBound",
  "ParentVersionNumber",
  "ApplyOnPaymentCardTypeID"
)
SELECT
  wt."TotalValueLowerBound",
  wt."TotalValueUpperBound",
  wt."QuantityCountLowerBound",
  wt."QuantityCountUpperBound",
  wt."IsPercentageBased",
  wt."TierPrice",
  wt."TierPercentage",
  wt."ApplyToTotal",
  wt."ApplyOnPaymentMethodTypeID",
  wt."ApplyPerTransaction",
  wt."Name",
  wt."Description",
  wt."Order",
  wt."TierOrder",
  wt."ComponentTierTemplateID",
  wt."IsActive",
  wt."IsDeleted",
  wt."OrganisationTypeID",
  wt."UserTypeID",
  wt."HasNoUpperBound",
  wt."ParentVersionNumber",
  wt."ApplyOnPaymentCardTypeID"
FROM
  public."ComponentTierTemplate" wt

  left outer join "DiscountComponentTierTemplate" tem on tem."ComponentTierTemplateID" = wt."ComponentTierTemplateID"

  inner join "ProductDiscountTemplate" pd on pd."DiscountTemplateID" = tem."DiscountTemplateID" and pd."DiscountTemplateVersionNumber"
   	= tem."DiscountTemplateVersionNumber" and pd."ProductTemplateID" = producttemplateid and pd."ProductVersionID" = producttemplateversionnumber

  where not exists (select * from "ComponentTier" ct where ct."ParentID" = wt."ComponentTierTemplateID" limit 1)
  and pd."ProductTemplateID" is not null
  ;

-- now add join table for componen tier  etc
INSERT INTO
  public."DiscountComponentTier"
(
  "ComponentTierID",
  "DiscountID",
  "DiscountVersionNumber"
)
SELECT
  ct."ComponentTierID",
  p."DiscountID",
  p."DiscountVersionNumber"
FROM
  public."DiscountComponentTierTemplate" wt

  left outer join "ComponentTier" ct on ct."ParentID" = wt."ComponentTierTemplateID"
  left outer join "Discount" p on p."ParentID" = wt."DiscountTemplateID" and p."ParentVersionNumber" = wt."DiscountTemplateVersionNumber"

  inner join "ProductDiscountTemplate" pd on pd."DiscountTemplateID" = wt."DiscountTemplateID" and pd."DiscountTemplateVersionNumber"
   	= wt."DiscountTemplateVersionNumber" and pd."ProductTemplateID" = producttemplateid and pd."ProductVersionID" = producttemplateversionnumber

  where not exists (select * from "DiscountComponentTier" tt where tt."ComponentTierID" = ct."ComponentTierID"
  	and tt."DiscountID" = p."DiscountID" and tt."DiscountVersionNumber" = p."DiscountVersionNumber" limit 1)
    and ct."ComponentTierID" is not null and p."DiscountID" is not null
  ;

-- product discount
INSERT INTO
  public."ProductDiscount"
(
  "ProductID",
  "ProductVersionID",
  "DiscountID",
  "DiscountVersionNumber",
  "IsActive",
  "IsDeleted"
)
SELECT
  pr."ProductID",
  pr."ProductVersionID",
  p."DiscountID",
  p."DiscountVersionNumber",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."ProductDiscountTemplate" wt

   left outer join "Discount" p on p."ParentID" = wt."DiscountTemplateID" and p."ParentVersionNumber" = wt."DiscountTemplateVersionNumber"

   left outer join "Product" pr on pr."ProductTemplateID" = wt."ProductTemplateID" and pr."ProductTemplateVersionID" = wt."ProductVersionID"

  where not exists (select * from "ProductDiscount" pd where pd."DiscountID" = p."DiscountID" and pd."DiscountVersionNumber" = p."DiscountVersionNumber"
  	and pd."ProductID" = pr."ProductID" and pd."ProductVersionID"  = pr."ProductVersionID" limit 1)
    and pr."ProductID" is not null
    and  wt."ProductTemplateID" = producttemplateid and wt."ProductVersionID" = producttemplateversionnumber
  ;


-- product deduction
INSERT INTO
  public."Deduction"
(
  "DeductionVersionNumber",
  "DeductionTypeID",
  "DeductionSubTypeID",
  "DeductionCategoryID",
  "DeductionSubCategoryID",
  "Name",
  "Description",
  "IsActive",
  "IsDeleted",
  "IsPercentageBased",
  "OrganisationTypeID",
  "UserTypeID",
  "IsTierDeduction",
  "IsCheckoutDeduction",
  "ParentID",
  "DeductionTemplateID",
  "DeductionTemplateVersionNumber"
)
SELECT
  1,
  wt."DeductionTypeID",
  wt."DeductionSubTypeID",
  wt."DeductionCategoryID",
  wt."DeductionSubCategoryID",
  wt."Name",
  wt."Description",
  wt."IsActive",
  wt."IsDeleted",
  wt."IsPercentageBased",
  wt."OrganisationTypeID",
  wt."UserTypeID",
  wt."IsTierDeduction",
  wt."IsCheckoutDeduction",
  wt."ParentID",
  wt."DeductionTemplateID",
  wt."DeductionTemplateVersionNumber"
FROM
  public."DeductionTemplate" wt


   inner join "ProductDeductionTemplate" pd on pd."DeductionTemplateID" = wt."DeductionTemplateID" and pd."DeductionTemplateVersionNumber"
   	= wt."DeductionTemplateVersionNumber" and pd."ProductTemplateID" = producttemplateid and pd."ProductVersionID" = producttemplateversionnumber

  where not exists (select * from "Deduction" d where d."DeductionTemplateID" = wt."DeductionTemplateID" and d."DeductionTemplateVersionNumber" =
  	wt."DeductionTemplateVersionNumber" limit 1) and pd."ProductTemplateID" is not null
  ;

INSERT INTO
  public."ComponentTier"
(
  "TotalValueLowerBound",
  "TotalValueUpperBound",
  "QuantityCountLowerBound",
  "QuantityCountUpperBound",
  "IsPercentageBased",
  "TierPrice",
  "TierPercentage",
  "ApplyToTotal",
  "ApplyOnPaymentMethodTypeID",
  "ApplyPerTransaction",
  "Name",
  "Description",
  "Order",
  "TierOrder",
  "ParentID",
  "IsActive",
  "IsDeleted",
  "OrganisationTypeID",
  "UserTypeID",
  "HasNoUpperBound",
  "ParentVersionNumber",
  "ApplyOnPaymentCardTypeID"
)
SELECT
  wt."TotalValueLowerBound",
  wt."TotalValueUpperBound",
  wt."QuantityCountLowerBound",
  wt."QuantityCountUpperBound",
  wt."IsPercentageBased",
  wt."TierPrice",
  wt."TierPercentage",
  wt."ApplyToTotal",
  wt."ApplyOnPaymentMethodTypeID",
  wt."ApplyPerTransaction",
  wt."Name",
  wt."Description",
  wt."Order",
  wt."TierOrder",
  wt."ComponentTierTemplateID",
  wt."IsActive",
  wt."IsDeleted",
  wt."OrganisationTypeID",
  wt."UserTypeID",
  wt."HasNoUpperBound",
  wt."ParentVersionNumber",
  wt."ApplyOnPaymentCardTypeID"
FROM
  public."ComponentTierTemplate" wt

  left outer join "DeductionComponentTierTemplate" tem on tem."ComponentTierTemplateID" = wt."ComponentTierTemplateID"

  inner join "ProductDeductionTemplate" pd on pd."DeductionTemplateID" = tem."DeductionTemplateID" and pd."DeductionTemplateVersionNumber"
   	= tem."DeductionTemplateVersionNumber" and pd."ProductTemplateID" = producttemplateid and pd."ProductVersionID" = producttemplateversionnumber

  where not exists (select * from "ComponentTier" ct where ct."ParentID" = wt."ComponentTierTemplateID" limit 1)
  and pd."ProductTemplateID" is not null
  ;

-- now add join table for componen tier  etc
INSERT INTO
  public."DeductionComponentTier"
(
  "ComponentTierID",
  "DeductionID",
  "DeductionVersionNumber"
)
SELECT
  ct."ComponentTierID",
  p."DeductionID",
  p."DeductionVersionNumber"
FROM
  public."DeductionComponentTierTemplate" wt

  left outer join "ComponentTier" ct on ct."ParentID" = wt."ComponentTierTemplateID"
  left outer join "Deduction" p on p."DeductionTemplateID" = wt."DeductionTemplateID" and p."DeductionTemplateVersionNumber" = wt."DeductionTemplateVersionNumber"

  inner join "ProductDeductionTemplate" pd on pd."DeductionTemplateID" = wt."DeductionTemplateID" and pd."DeductionTemplateVersionNumber"
   	= wt."DeductionTemplateVersionNumber" and pd."ProductTemplateID" = producttemplateid and pd."ProductVersionID" = producttemplateversionnumber

  where not exists (select * from "DeductionComponentTier" tt where tt."ComponentTierID" = ct."ComponentTierID"
  	and tt."DeductionID" = p."DeductionID" and tt."DeductionVersionNumber" = p."DeductionVersionNumber" limit 1)
    and ct."ComponentTierID" is not null and p."DeductionID" is not null
  ;

-- product discount
INSERT INTO
  public."ProductDeduction"
(
  "ProductID",
  "ProductVersionID",
  "DeductionID",
  "DeductionPercentage",
  "DeductionValue",
  "IsActive",
  "IsDeleted",
  "DeductionVersionNumber"
)
SELECT
  pr."ProductID",
  pr."ProductVersionID",
  p."DeductionID",
  wt."DeductionPercentage",
  wt."DeductionValue",
  wt."IsActive",
  wt."IsDeleted",
  p."DeductionVersionNumber"
FROM
  public."ProductDeductionTemplate" wt

    left outer join "Deduction" p on p."DeductionTemplateID" = wt."DeductionTemplateID" and p."DeductionTemplateVersionNumber" = wt."DeductionTemplateVersionNumber"

   left outer join "Product" pr on pr."ProductTemplateID" = wt."ProductTemplateID" and pr."ProductTemplateVersionID" = wt."ProductVersionID"

  where not exists (select * from "ProductDeduction" pd where pd."DeductionID" = p."DeductionID" and pd."DeductionVersionNumber" = p."DeductionVersionNumber"
  	and pd."ProductID" = pr."ProductID" and pd."ProductVersionID"  = pr."ProductVersionID" limit 1)
    and pr."ProductID" is not null
    and  wt."ProductTemplateID" = producttemplateid and wt."ProductVersionID" = producttemplateversionnumber
  ;














IF(ProcessRelationship = true)
THEN
BEGIN

-- first promote all parent products
FOR LoopRow IN
	select aw."ParentProductTemplateID",aw."ParentProductVersionID" from "ProductRelationshipTemplate" aw
    	where not exists(select * from "Product" p where p."ProductTemplateID" = aw."ParentProductTemplateID" and p."ProductTemplateVersionID" = aw."ParentProductVersionID" limit 1)
LOOP
    BEGIN
    	perform "fn_PromoteProductTemplate"(LoopRow."ParentProductTemplateID",LoopRow."ParentProductVersionID",false,false,false);
    END;
END LOOP;
-- first promote all child products
FOR LoopRow IN
	select aw."ChildProductTemplateID",aw."ChildProductVersionID" from "ProductRelationshipTemplate" aw
    	where not exists(select * from "Product" p where p."ProductTemplateID" = aw."ChildProductTemplateID" and p."ProductTemplateVersionID" = aw."ChildProductVersionID" limit 1)
LOOP
    BEGIN
    	perform "fn_PromoteProductTemplate"(LoopRow."ChildProductTemplateID",LoopRow."ChildProductVersionID",false,false,false);
    END;
END LOOP;


INSERT INTO
  public."ProductRelationship"
(
  "ParentProductID",
  "ChildProductID",
  "ProductRelationshipTypeID",
  "IsMandatory",
  "IsActive",
  "IsDeleted",
  "ParentProductVersionID",
  "ChildProductVersionID"
)
SELECT
  pr."ProductID",
  cpr."ProductID",
  wt."ProductRelationshipTypeID",
  wt."IsMandatory",
  wt."IsActive",
  wt."IsDeleted",
  pr."ProductVersionID",
  cpr."ProductVersionID"
FROM
  public."ProductRelationshipTemplate" wt

  left outer join "Product" pr on pr."ProductTemplateID" = wt."ParentProductTemplateID" and pr."ProductTemplateVersionID" = wt."ParentProductVersionID"
  left outer join "Product" cpr on cpr."ProductTemplateID" = wt."ChildProductTemplateID" and cpr."ProductTemplateVersionID" = wt."ChildProductVersionID"

   where wt."ParentProductTemplateID" = producttemplateid and wt."ParentProductVersionID" = producttemplateversionnumber
   and pr."ProductID" is not null and cpr."ProductID" is not null
   and not exists(select * from "ProductRelationship" prr where prr."ParentProductID" = pr."ProductID" and prr."ParentProductVersionID" = pr."ProductVersionID"
   	and prr."ChildProductID" = cpr."ProductID" and prr."ChildProductVersionID" = cpr."ProductVersionID" limit 1)
  ;

INSERT INTO
  public."ProductRelationshipBlueprint"
(
  "ProductRelationshipID",
  "DefaultQuantity",
  "IsActive",
  "IsDeleted"
)
SELECT
  prr."ProductRelationshipID",
  wt."DefaultQuantity",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."ProductRelationshipBlueprintTemplate" wt

  left outer join "ProductRelationshipTemplate" rt on rt."ProductRelationshipTemplateID" = wt."ProductRelationshipTemplateID"

   left outer join "Product" pr on pr."ProductTemplateID" = rt."ParentProductTemplateID" and pr."ProductTemplateVersionID" = rt."ParentProductVersionID"
  left outer join "Product" cpr on cpr."ProductTemplateID" = rt."ChildProductTemplateID" and cpr."ProductTemplateVersionID" = rt."ChildProductVersionID"

  left outer join "ProductRelationship" prr on prr."ChildProductID" = cpr."ProductID" and prr."ChildProductVersionID" = cpr."ProductVersionID"
  	and prr."ParentProductID" = pr."ProductID" and prr."ParentProductVersionID" = pr."ProductVersionID"

   where rt."ParentProductTemplateID" = producttemplateid and rt."ParentProductVersionID" = producttemplateversionnumber
   and not exists(select * from "ProductRelationshipBlueprint" prr1 WHERE prr1."ProductRelationshipID" = prr."ProductRelationshipID" limit 1)
   ;





END;
END IF;

-- Package
IF(ProcessPackage = true)
THEN
BEGIN

-- first promote all package related products
FOR LoopRow IN
	select aw."ProductTemplateID",aw."ProductVersionID" from "PackageTemplate" aw
    	where not exists(select * from "Product" p where p."ProductTemplateID" = aw."ProductTemplateID" and p."ProductTemplateVersionID" = aw."ProductVersionID" limit 1)
LOOP
    BEGIN
    	perform "fn_PromoteProductTemplate"(LoopRow."ProductTemplateID",LoopRow."ProductVersionID",false,false,false);
    END;
END LOOP;
-- product all package child products
FOR LoopRow IN
	select aw."ProductTemplateID",aw."ProductVersionID" from "PackageProductTemplate" aw
    	where not exists(select * from "Product" p where p."ProductTemplateID" = aw."ProductTemplateID" and p."ProductTemplateVersionID" = aw."ProductVersionID" limit 1)
LOOP
    BEGIN
    	perform "fn_PromoteProductTemplate"(LoopRow."ProductTemplateID",LoopRow."ProductVersionID",false,false,false);
    END;
END LOOP;
-- package relationship products
FOR LoopRow IN
	select aw."ParentProductTemplateID",aw."ParentProductVersionID" from "PackageProductRelationshipTemplate" aw
    	where not exists(select * from "Product" p where p."ProductTemplateID" = aw."ParentProductTemplateID" and p."ProductTemplateVersionID" = aw."ParentProductVersionID" limit 1)
LOOP
    BEGIN
    	perform "fn_PromoteProductTemplate"(LoopRow."ParentProductTemplateID",LoopRow."ParentProductVersionID",false,false,false);
    END;
END LOOP;
-- first promote all child products
FOR LoopRow IN
	select aw."ChildProductTemplateID",aw."ChildProductVersionID" from "PackageProductRelationshipTemplate" aw
    	where not exists(select * from "Product" p where p."ProductTemplateID" = aw."ChildProductTemplateID" and p."ProductTemplateVersionID" = aw."ChildProductVersionID" limit 1)
LOOP
    BEGIN
    	perform "fn_PromoteProductTemplate"(LoopRow."ChildProductTemplateID",LoopRow."ChildProductVersionID",false,false,false);
    END;
END LOOP;

INSERT INTO
  public."Package"
(
  "ProductID",
  "ProductVersionID",
  "IsActive",
  "IsDeleted",
  "PackageVersionNumber",
  "PackageTemplateID",
  "PackageTemplateVersionNumber"
)
SELECT
  p."ProductID",
  p."ProductVersionID",
  wt."IsActive",
  wt."IsDeleted",
  1,
  wt."PackageTemplateID",
  wt."PackageTemplateVersionNumber"
FROM
  public."PackageTemplate" wt

  left outer join "Product" p on p."ProductTemplateID" = wt."ProductTemplateID" and p."ProductTemplateVersionID" = wt."ProductVersionID"

  where not exists(select * from "Package" p1 where p1."PackageTemplateID" = wt."PackageTemplateID" and p1."PackageTemplateVersionNumber" = wt."PackageTemplateVersionNumber" limit 1)
  ;

INSERT INTO
  public."PackageProduct"
(
  "PackageID",
  "UseProductDefaultBlueprint",
  "UseDefaultProductPricing",
  "IsFixedPrice",
  "ProductPriceModifierPercentage",
  "ProductPriceModifierValue",
  "DefaultQuantity",
  "UserDefinableQuantity",
  "IsActive",
  "IsDeleted",
  "ProductID",
  "ProductVersionID",
  "PackageVersionNumber",
  "RelatedProductProductAttributeID"
)
SELECT
  pa."PackageID",
  wt."UseProductDefaultBlueprint",
  wt."UseDefaultProductPricing",
  wt."IsFixedPrice",
  wt."ProductPriceModifierPercentage",
  wt."ProductPriceModifierValue",
  wt."DefaultQuantity",
  wt."UserDefinableQuantity",
  wt."IsActive",
  wt."IsDeleted",
  p."ProductID",
  p."ProductVersionID",
  pa."PackageVersionNumber",
  wt."RelatedProductProductAttributeTemplateID"
FROM
  public."PackageProductTemplate" wt

  left outer join "Product" p on p."ProductTemplateID" = wt."ProductTemplateID" and p."ProductTemplateVersionID" = wt."ProductVersionID"
  left outer join "Package" pa on pa."PackageTemplateID" =wt."PackageTemplateID" and pa."PackageTemplateVersionNumber" = wt."PackageTemplateVersionNumber"
  left outer join "ProductProductAttributeTemplate" ppat on ppat."ProductProductAttributeTemplateID" = wt."RelatedProductProductAttributeTemplateID"
  left outer join "ProductAttributeTemplate" pat on pat."ProductAttributeTemplateID" = ppat."ProductAttributeTemplateID"
  left outer join "ProductAttribute" pt on pt."Name" = pat."Name"
  left outer join "ProductProductAttribute" ppa on ppa."ProductID" = p."ProductID" and ppa."ProductVersionID" = p."ProductVersionID" and ppa."ProductAttributeID" = pt."ProductAttributeID"

  where not exists(select * from "PackageProduct" p1 where p1."PackageID" = pa."PackageID" and p1."PackageVersionNumber" = pa."PackageVersionNumber"
  	and p1."ProductID" = p."ProductID" and p1."ProductVersionID" = p."ProductVersionID" limit 1)
  ;

INSERT INTO
  public."PackageProductRelationship"
(
  "ParentProductID",
  "ChildProductID",
  "ProductRelationshipTypeID",
  "IsMandatory",
  "IsActive",
  "IsDeleted",
  "PackageProductID",
  "ParentProductVersionID",
  "ChildProductVersionID",
  "PackageID",
  "PackageVersionNumber"
)
SELECT
  p."ProductID",
  xp."ProductID",
  wt."ProductRelationshipTypeID",
  wt."IsMandatory",
  wt."IsActive",
  wt."IsDeleted",
  pp."PackageProductID",
  p."ProductVersionID",
  xp."ProductVersionID",
  pa."PackageID",
  pa."PackageVersionNumber"
FROM
  public."PackageProductRelationshipTemplate" wt

  left outer join "Product" p on p."ProductTemplateID" = wt."ParentProductTemplateID" and p."ProductTemplateVersionID" = wt."ParentProductVersionID"
  left outer join "Product" xp on xp."ProductTemplateID" = wt."ChildProductTemplateID" and xp."ProductTemplateVersionID" = wt."ChildProductVersionID"
  left outer join "Package" pa on pa."PackageTemplateID" =wt."PackageTemplateID" and pa."PackageTemplateVersionNumber" = wt."PackageTemplateVersionNumber"
  left outer join "PackageProductTemplate" ppt on ppt."PackageProductTemplateID" = wt."PackageProductTemplateID"
  left outer join "Product" xp1 on xp1."ProductTemplateID" = ppt."ProductTemplateID" and xp1."ProductTemplateVersionID" =ppt."ProductVersionID"
  left outer join "PackageProduct" pp on pp."PackageID" = pa."PackageID" and pp."PackageVersionNumber" = pa."PackageVersionNumber"
  	and pp."ProductID" = xp1."ProductID" and pp."ProductVersionID" = xp1."ProductVersionID"

   where not exists(select * from "PackageProductRelationship" p1 where p1."PackageID" = pa."PackageID" and p1."PackageVersionNumber" = pa."PackageVersionNumber"
  	and p1."ChildProductID" = p."ProductID" and p1."ChildProductVersionID" = p."ProductVersionID" and p1."ParentProductID" = xp."ProductID" and p1."ParentProductVersionID" = xp."ProductVersionID"
    and p1."PackageProductID" = pp."PackageProductID"  limit 1)
  ;

INSERT INTO
  public."PackageProductRelationshipBlueprint"
(
  "PackageProductRelationshipID",
  "DefaultQuantity",
  "IsActive",
  "IsDeleted"
)
SELECT
  p1."PackageProductRelationshipID",
  wt."DefaultQuantity",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."PackageProductRelationshipBlueprintTemplate" wt

  left outer join "PackageProductRelationshipTemplate" pprt on  pprt."PackageProductRelationshipTemplateID" = wt."PackageProductRelationshipTemplateID"
  left outer join "PackageProductTemplate" ppt on ppt."PackageProductTemplateID" =  pprt."PackageProductTemplateID"
   left outer join "Product" p on p."ProductTemplateID" = pprt."ParentProductTemplateID" and p."ProductTemplateVersionID" = pprt."ParentProductVersionID"
  left outer join "Product" xp on xp."ProductTemplateID" = pprt."ChildProductTemplateID" and xp."ProductTemplateVersionID" = pprt."ChildProductVersionID"
  left outer join "Package" pa on pa."PackageTemplateID" =ppt."PackageTemplateID" and pa."PackageTemplateVersionNumber" = ppt."PackageTemplateVersionNumber"
  left outer join "Product" xp1 on xp1."ProductTemplateID" = ppt."ProductTemplateID" and xp1."ProductTemplateVersionID" =ppt."ProductVersionID"
  left outer join "PackageProduct" pp on pp."PackageID" = pa."PackageID" and pp."PackageVersionNumber" = pa."PackageVersionNumber"
  	and pp."ProductID" = xp1."ProductID" and pp."ProductVersionID" = xp1."ProductVersionID"

  left outer join "PackageProductRelationship" p1 on p1."PackageID" = pa."PackageID" and p1."PackageVersionNumber" = pa."PackageVersionNumber"
  	and p1."ChildProductID" = p."ProductID" and p1."ChildProductVersionID" = p."ProductVersionID" and p1."ParentProductID" = xp."ProductID" and p1."ParentProductVersionID" = xp."ProductVersionID"
    and p1."PackageProductID" = pp."PackageProductID"

  where not exists(select * from "PackageProductRelationshipBlueprint" pps where pps."PackageProductRelationshipID" = p1."PackageProductRelationshipID" limit 1)

  ;

END;
END IF;

END;
END IF;

END;



END;
$$;


ALTER FUNCTION public."fn_PromoteProductTemplate"(producttemplateid uuid, producttemplateversionnumber integer, processpackage boolean, processrelationship boolean, processfamily boolean) OWNER TO postgres;

--
-- TOC entry 927 (class 1255 OID 40331)
-- Name: fn_PromoteShoppingCartBlueprintTemplate(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_PromoteShoppingCartBlueprintTemplate"(shoppingcartblueprinttemplateid uuid) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
  ShoppingCartBlueprintID UUID;
BEGIN

ShoppingCartBlueprintID := (select dorg."ShoppingCartBlueprintID" from "ShoppingCartBlueprint" dorg
	where dorg."ParentID" = shoppingcartblueprinttemplateid limit 1);

-- create DO entry
BEGIN

IF(ShoppingCartBlueprintID is null)
THEN
BEGIN
	ShoppingCartBlueprintID := uuid_generate_v1();

    INSERT INTO
        public."ShoppingCartBlueprint"
      (
        "ShoppingCartBlueprintID",
        "ParentID",
        "IsActive",
        "IsDeleted",
        "Name"
      )
      SELECT
      ShoppingCartBlueprintID,
      shoppingcartblueprinttemplateid,
      bt."IsActive",
      bt."IsDeleted",
      bt."Name"
		FROM
  		public."ShoppingCartBlueprintTemplate" bt

        where not exists (select * from "ShoppingCartBlueprint" where "ParentID" = shoppingcartblueprinttemplateid limit 1)
        ;

      INSERT INTO
        public."ShoppingCartBlueprintProduct"
      (
        "ShoppingCartBlueprintID",
        "ProductID",
        "ProductVersionID",
        "Quantity",
        "IsActive",
        "IsDeleted"
      )
      SELECT
        cb."ShoppingCartBlueprintID",
        p."ProductID",
        p."ProductVersionID",
        dt."Quantity",
        dt."IsActive",
        dt."IsDeleted"
      FROM
        public."ShoppingCartBlueprintProductTemplate" dt

      left outer join "Product" p on p."ProductTemplateID" = dt."ProductTemplateID" and p."ProductTemplateVersionID" = dt."ProductVersionID"
      left outer join "ShoppingCartBlueprint" cb on cb."ParentID" = dt."ShoppingCartBlueprintTemplateID"

        where not exists (select * from "ShoppingCartBlueprintProduct" sb where sb."ProductID" = p."ProductID" and sb."ProductVersionID" = p."ProductVersionID" and sb."ShoppingCartBlueprintID" = sb."ShoppingCartBlueprintID" limit 1)

        and p."ProductID" is not null and cb."ShoppingCartBlueprintID" is not null
        ;

END;
END IF;





END;
------ End DO

--EXCEPTION
--	WHEN
END;
$$;


ALTER FUNCTION public."fn_PromoteShoppingCartBlueprintTemplate"(shoppingcartblueprinttemplateid uuid) OWNER TO postgres;

--
-- TOC entry 928 (class 1255 OID 40332)
-- Name: fn_PromoteStatusTypeTemplate(uuid, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_PromoteStatusTypeTemplate"(statustypetemplateid uuid, statustypetemplateversionnumber integer) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
  StatusTypeID UUID;
  StatusTypeVersionNumber integer;

BEGIN

StatusTypeID := (select dorg."StatusTypeID" from "StatusType" dorg
	where dorg."StatusTypeTemplateID" = statustypetemplateid limit 1);

StatusTypeVersionNumber := (select dorg."StatusTypeVersionNumber" from "StatusType" dorg
	where dorg."StatusTypeTemplateID" = statustypetemplateid order by dorg."StatusTypeVersionNumber" desc limit 1);

-- create DO entry
BEGIN

-- copy WF
IF(StatusTypeID is null)
THEN
BEGIN
	StatusTypeID := uuid_generate_v1();
END;
END IF;


StatusTypeVersionNumber := statustypetemplateversionnumber;


INSERT INTO
  public."StatusType"
(
  "StatusTypeID",
  "StatusTypeVersionNumber",
  "Name",
  "Description",
  "IsActive",
  "IsDeleted",
  "StatusTypeTemplateID",
  "StatusTypeTemplateVersionNumber"
)
SELECT
  StatusTypeID,
  StatusTypeVersionNumber,
  wt."Name",
  wt."Description",
  wt."IsActive",
  wt."IsDeleted",
  statustypetemplateid,
  statustypetemplateversionnumber
FROM
  public."StatusTypeTemplate" wt where wt."StatusTypeTemplateID" = statustypetemplateid and wt."StatusTypeTemplateVersionNumber" = statustypetemplateversionnumber;

INSERT INTO
  public."StatusTypeValue"
(
  "StatusTypeID",
  "StatusTypeVersionNumber",
  "Name",
  "Description",
  "IsActive",
  "IsDeleted"
)
SELECT
  StatusTypeID,
  StatusTypeVersionNumber,
  wt."Name",
  wt."Description",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."StatusTypeValueTemplate" wt where wt."StatusTypeTemplateID" = statustypetemplateid and wt."StatusTypeTemplateVersionNumber" = statustypetemplateversionnumber;

INSERT INTO
  public."StatusTypeStructure"
(
  "StatusTypeID",
  "StatusTypeVersionNumber",
  "StatusTypeValueID",
  "StatusOrder",
  "IsStart",
  "IsEnd"
)
SELECT
  StatusTypeID,
  StatusTypeVersionNumber,
  stv."StatusTypeValueID",
  wt."StatusOrder",
  wt."IsStart",
  wt."IsEnd"
FROM
  public."StatusTypeStructureTemplate" wt

  left outer join "StatusTypeValueTemplate" stt on stt."StatusTypeValueTemplateID" = wt."StatusTypeValueTemplateID" and stt."StatusTypeTemplateID" = wt."StatusTypeTemplateID" and stt."StatusTypeTemplateVersionNumber" = stt."StatusTypeTemplateVersionNumber"
  left outer  join "StatusTypeValue" stv on stv."StatusTypeID" = StatusTypeID and stv."StatusTypeVersionNumber" = StatusTypeVersionNumber
  	and stv."Name" = stt."Name"

  where wt."StatusTypeTemplateID" = statustypetemplateid and wt."StatusTypeTemplateVersionNumber" = statustypetemplateversionnumber;

/*INSERT INTO
  public."StatusTypeStructureTransition"
(
  "CurrentStatusTypeStructureID",
  "NextStatusTypeStructureID"
)
SELECT
  sts."StatusTypeStructureID",
  sts1."StatusTypeStructureID"
FROM
  public."StatusTypeStructureTransitionTemplate" wt


  left outer join "StatusTypeStructureTemplate" stt on stt."StatusTypeStructureTemplateID" = wt."CurrentStatusTypeStructureTemplateID"
  left outer join "StatusTypeStructureTemplate" stt1 on stt1."StatusTypeStructureTemplateID" = wt."NextStatusTypeStructureTemplateID"

left outer join "StatusTypeValueTemplate" st on st."StatusTypeValueTemplateID" = wt."StatusTypeValueTemplateID" and st."StatusTypeTemplateID" = stt."StatusTypeTemplateID" and st."StatusTypeTemplateVersionNumber" = stt."StatusTypeTemplateVersionNumber"
  left outer  join "StatusTypeValue" stv on stv."Name" = st."Name" and stv."StatusTypeVersionNumber" = StatusTypeVersionNumber and stv."StatusTypeValueID" = StatusTypeValueID

  left outer join "StatusTypeStructure" sts on sts."StatusTypeValueID" = stv."StatusTypeValueID" and sts."StatusTypeID" = StatusTypeID and sts."StatusTypeVersionNumber" = StatusTypeVersionNumber

    left outer join "StatusTypeValueTemplate" st1 on st1."StatusTypeValueTemplateID" = wt."StatusTypeValueTemplateID" and st."StatusTypeTemplateID" = st1."StatusTypeTemplateID" and st1."StatusTypeTemplateVersionNumber" = stt1."StatusTypeTemplateVersionNumber"
  left outer  join "StatusTypeValue" stv1 on stv1."Name" = st1."Name" and stv1."StatusTypeVersionNumber" = StatusTypeVersionNumber and stv1."StatusTypeValueID" = StatusTypeValueID

    left outer join "StatusTypeStructure" sts on sts."StatusTypeValueID" = stv."StatusTypeValueID" and sts."StatusTypeID" = StatusTypeID and sts."StatusTypeVersionNumber" = StatusTypeVersionNumber


    left outer join "StatusTypeStructure" sts1 on sts1."StatusTypeValueID" = stv1."StatusTypeValueID" and sts1."StatusTypeID" = StatusTypeID and sts1."StatusTypeVersionNumber" = StatusTypeVersionNumber

where stt."StatusTypeTemplateID" = statustypetemplateid
	and stt1."StatusTypeTemplateID" = statustypetemplateid
    and stt."StatusTypeTemplateVersionNumber" = statustypetemplateversionnumber
    and stt1."StatusTypeTemplateVersionNumber" = statustypetemplateversionnumber;*/

INSERT INTO
  public."StatusTypeRole"
(
  "RoleName",
  "RoleDescription",
  "RoleTypeID",
  "RoleSubTypeID",
  "RoleCategoryID",
  "RoleSubCategoryID",
  "IsActive",
  "IsDeleted",
  "StatusTypeID",
  "StatusTypeVersionNumber"
)
SELECT
  wt."RoleName",
  wt."RoleDescription",
  wt."RoleTypeID",
  wt."RoleSubTypeID",
  wt."RoleCategoryID",
  wt."RoleSubCategoryID",
  wt."IsActive",
  wt."IsDeleted",
   StatusTypeID,
  StatusTypeVersionNumber
FROM
  public."StatusTypeRoleTemplate"  wt where wt."StatusTypeTemplateID" = statustypetemplateid and wt."StatusTypeTemplateVersionNumber" = statustypetemplateversionnumber;


  INSERT INTO
  public."StatusTypeClaim"
(
  "StatusTypeID",
  "StatusTypeVersionNumber",
  "ResourceID",
  "OperationID",
  "StateID",
  "StateItemID",
  "IsActive",
  "IsDeleted",
  "StatusTypeRoleID"
)
SELECT
  StatusTypeID,
  StatusTypeVersionNumber,
  wt."ResourceID",
  wt."OperationID",
  wt."StateID",
  wt."StateItemID",
  wt."IsActive",
  wt."IsDeleted",
 mr."StatusTypeRoleID"
FROM
  public."StatusTypeClaimTemplate" wt

  inner join "StatusTypeRoleTemplate" wrr on wrr."StatusTypeRoleTemplateID" = wt."StatusTypeRoleTemplateID" and wrr."StatusTypeTemplateID" = statustypetemplateid and wrr."StatusTypeTemplateVersionNumber" = statustypetemplateversionnumber

  left outer join "StatusTypeRole" mr on mr."StatusTypeID" = StatusTypeID and mr."StatusTypeVersionNumber" = StatusTypeVersionNumber and mr."RoleName" = wrr."RoleName"

 where wt."StatusTypeTemplateID" = statustypetemplateid and wt."StatusTypeTemplateVersionNumber" = statustypetemplateversionnumber

  	and wt."StatusTypeRoleTemplateID" is not null and wt."RoleID" is null ;

INSERT INTO
  public."StatusTypeClaim"
(
"StatusTypeID",
  "StatusTypeVersionNumber",
  "ResourceID",
  "OperationID",
  "StateID",
  "StateItemID",
  "IsActive",
  "IsDeleted",
  "RoleID"
)
SELECT
StatusTypeID,
  StatusTypeVersionNumber,
  wt."ResourceID",
  wt."OperationID",
  wt."StateID",
  wt."StateItemID",
  wt."IsActive",
  wt."IsDeleted",
  wt."RoleID"
FROM
  public."StatusTypeClaimTemplate" wt

  inner join "Role" wrr on wrr."RoleID" = wt."RoleID"

  where wt."StatusTypeTemplateID" = StatusTypetemplateid and wt."StatusTypeTemplateVersionNumber" = statustypetemplateversionnumber

  	and wt."StatusTypeRoleTemplateID" is null and wt."RoleID" is not null;


END;
------ End DO

--EXCEPTION
--	WHEN
END;
$$;


ALTER FUNCTION public."fn_PromoteStatusTypeTemplate"(statustypetemplateid uuid, statustypetemplateversionnumber integer) OWNER TO postgres;

--
-- TOC entry 929 (class 1255 OID 40333)
-- Name: fn_PromoteWorkflowTemplate(uuid, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "fn_PromoteWorkflowTemplate"("WorkflowTemplateID" uuid, "WorkflowTemplateVersionNumber" integer) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
  WorkflowID UUID;
  WorkflowVersionNumber integer;
  WorkflowTemplateID uuid;
  WorkflowTemplateVersionNumber integer;
BEGIN

WorkflowTemplateID := "WorkflowTemplateID";
WorkflowTemplateVersionNumber := "WorkflowTemplateVersionNumber";

WorkflowID := (select dorg."WorkflowID" from "Workflow" dorg
	where dorg."WorkflowTemplateID" = WorkflowTemplateID limit 1);

WorkflowVersionNumber := (select dorg."WorkflowVersionNumber" from "Workflow" dorg
	where dorg."WorkflowTemplateID" = WorkflowTemplateID order by dorg."WorkflowVersionNumber" desc limit 1);

-- create DO entry
BEGIN

-- copy WF
IF(WorkflowID is null)
THEN
BEGIN
	WorkflowID := uuid_generate_v1();
END;
END IF;

WorkflowVersionNumber := WorkflowTemplateVersionNumber;


-- INSERT WF
INSERT INTO
  public."Workflow"
(
  "WorkflowID",
  "WorkflowVersionNumber",
  "Name",
  "Description",
  "WorkflowTypeID",
  "WorkflowSubTypeID",
  "WorkflowCategoryID",
  "WorkflowSubCategoryID",
  "WorkflowTemplateID",
  "WorkflowTemplateVersionNumber"
)
SELECT
  WorkflowID,
  WorkflowVersionNumber,
  wt."Name",
  wt."Description",
  wt."WorkflowTypeID",
  wt."WorkflowSubTypeID",
  wt."WorkflowCategoryID",
  wt."WorkflowSubCategoryID",
  WorkflowTemplateID,
  WorkflowTemplateVersionNumber
FROM
  public."WorkflowTemplate" wt where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

-- WF ROLE
INSERT INTO
  public."WorkflowRole"
(
  "RoleName",
  "RoleDescription",
  "IsActive",
  "IsDeleted",
  "WorkflowID",
  "WorkflowVersionNumber",
  "RoleTypeID",
  "RoleSubTypeID",
  "RoleCategoryID",
  "RoleSubCategoryID"
)
SELECT
  wt."RoleName",
  wt."RoleDescription",
  wt."IsActive",
  wt."IsDeleted",
  WorkflowID,
  WorkflowVersionNumber,
  wt."RoleTypeID",
  wt."RoleSubTypeID",
  wt."RoleCategoryID",
  wt."RoleSubCategoryID"
FROM
  public."WorkflowRoleTemplate" wt where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;


-- WF CLAIM
  INSERT INTO
  public."WorkflowClaim"
(
"WorkflowClaimID",
"WorkflowID",
  "WorkflowVersionNumber",
  "ResourceID",
  "OperationID",
  "StateID",
  "StateItemID",
  "IsActive",
  "IsDeleted",
  "WorkflowRoleID"
)
SELECT
  wt."WorkflowClaimTemplateID",
  WorkflowID,
  WorkflowVersionNumber,
  wt."ResourceID",
  wt."OperationID",
  wt."StateID",
  wt."StateItemID",
  wt."IsActive",
  wt."IsDeleted",
  mr."WorkflowRoleID"
FROM
  public."WorkflowClaimTemplate" wt

  inner join "WorkflowRoleTemplate" wrr on wrr."WorkflowRoleTemplateID" = wt."WorkflowRoleTemplateID" and wrr."WorkflowTemplateID" = WorkflowID and wrr."WorkflowTemplateVersionNumber" = WorkflowVersionNumber

  left outer join "WorkflowRole" mr on mr."WorkflowID" = WorkflowID and mr."WorkflowVersionNumber" = WorkflowVersionNumber and mr."RoleName" = wrr."RoleName"

 where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber

  	and wrr."WorkflowRoleTemplateID" is not null and wt."RoleID" is null ;

INSERT INTO
  public."WorkflowClaim"
(
"WorkflowClaimID",
"WorkflowID",
  "WorkflowVersionNumber",
  "ResourceID",
  "OperationID",
  "StateID",
  "StateItemID",
  "IsActive",
  "IsDeleted",
  "RoleID"
)
SELECT
wt."WorkflowClaimTemplateID",
WorkflowID,
  WorkflowVersionNumber,
  wt."ResourceID",
  wt."OperationID",
  wt."StateID",
  wt."StateItemID",
  wt."IsActive",
  wt."IsDeleted",
  wt."RoleID"
FROM
  public."WorkflowClaimTemplate" wt

  inner join "Role" wrr on wrr."RoleID" = wt."RoleID"

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber

  	and wt."WorkflowRoleTemplateID" is null and wt."RoleID" is not null;

-- WF OT
INSERT INTO
  public."WorkflowObjectType"
(
  "Name",
  "Description",
  "ObjectTypeName",
  "ObjectTypeNameSpace",
  "ObjectTypeAssembly",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wt."Name",
  wt."Description",
  wt."ObjectTypeName",
  wt."ObjectTypeNameSpace",
  wt."ObjectTypeAssembly",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowObjectTypeTemplate" wt where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

-- WF ST
INSERT INTO
  public."WorkflowStatusType"
(
  "WorkflowID",
  "WorkflowVersionNumber",
  "StatusTypeID",
  "StatusTypeVersionNumber",
  "IsActive",
  "IsDeleted"
)
SELECT
  WorkflowID,
  WorkflowVersionNumber,
  (select st."StatusTypeID" from "StatusType" st where st."StatusTypeTemplateID" = wt."StatusTypeTemplateID" and st."StatusTypeTemplateVersionNumber" = wt."StatusTypeTemplateVersionNumber" limit 1),
   (select st."StatusTypeVersionNumber" from "StatusType" st where st."StatusTypeTemplateID" = wt."StatusTypeTemplateID" and st."StatusTypeTemplateVersionNumber" = wt."StatusTypeTemplateVersionNumber" and st."IsActive" = true and st."IsDeleted" =false order by st."StatusTypeTemplateVersionNumber" desc limit 1),
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."WorkflowStatusTypeTemplate" wt where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

END;

-- WF NC
INSERT INTO
  public."WorkflowNotificationConstruct"
(
  "WorkflowID",
  "WorkflowVersionNumber",
  "NotificationConstructID",
  "NotificationConstructVersionNumber",

  "IsActive",
  "IsDeleted"
)
SELECT
WorkflowID,
  WorkflowVersionNumber,
  nc."NotificationConstructID",
  nc."NotificationConstructVersionNumber",
  wt."IsActive",
  wt."IsDeleted"
FROM
  public."WorkflowNotificationConstructTemplate" wt
  inner join "NotificationConstruct" nc on nc."NotificationConstructTemplateID" = wt."NotificationConstructTemplateID" and nc."NotificationConstructTemplateVersionNumber" = wt."NotificationConstructTemplateVersionNumber"
   where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

-- WF WP
INSERT INTO
  public."WorkflowParameter"
(
  "WorkflowID",
  "WorkflowVersionNumber",
  "Name",
  "Description",
  "ObjectType",
  "ObjectValue"
)
SELECT
WorkflowID,
  WorkflowVersionNumber,
  wt."Name",
  wt."Description",
  wt."ObjectType",
  wt."ObjectValue"
FROM
  public."WorkflowParameterTemplate" wt where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

-- WF TRANS
INSERT INTO
  public."WorkflowTransistion"
(
  "Name",
  "Description",
  "IsWorkflowStart",
  "IsWorkflowEnd",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wt."Name",
  wt."Description",
  wt."IsWorkflowStart",
  wt."IsWorkflowEnd",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowTransistionTemplate" wt  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

-- WF ACTION
INSERT INTO
  public."WorkflowAction"
(
  "WorkflowID",
  "WorkflowVersionNumber",
  "Name",
  "Description",
  "IsTransistionStart",
  "IsTransistionEnd",
  "WorkflowActionTypeID",
  "IsManual",
  "WorkflowObjectTypeID"
)
SELECT
WorkflowID,
  WorkflowVersionNumber,
  wt."Name",
  wt."Description",
  wt."IsTransistionStart",
  wt."IsTransistionEnd",
  wt."WorkflowActionTypeTemplateID",
  wt."IsManual",
  wot."WorkflowObjectTypeID"
FROM
  public."WorkflowActionTemplate" wt

  inner join "WorkflowObjectTypeTemplate" wott on wott."WorkflowTemplateID" = wt."WorkflowTemplateID" and wott."WorkflowTemplateVersionNumber" = wt."WorkflowTemplateVersionNumber"
  	and wott."WorkflowObjectTypeTemplateID" = wt."WorkflowObjectTypeTemplateID"
  inner join "WorkflowObjectType" wot on wot."WorkflowID" = WorkflowID and wot."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wot."Name" = wott."Name" and wot."ObjectTypeName" = wott."ObjectTypeName"

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

-- WF DECISION
INSERT INTO
  public."WorkflowDecision"
(
  "Name",
  "Description",
  "IsTransistionStart",
  "IsTransistionEnd",
  "WorkflowDecisionTypeID",
  "WorkflowID",
  "WorkflowVersionNumber",
  "WorkflowObjectTypeID"
)
SELECT
  wt."Name",
  wt."Description",
  wt."IsTransistionStart",
  wt."IsTransistionEnd",
  wt."WorkflowDecisionTypeTemplateID",
  WorkflowID,
  WorkflowVersionNumber,
  wot."WorkflowObjectTypeID"
FROM
  public."WorkflowDecisionTemplate" wt

    inner join "WorkflowObjectTypeTemplate" wott on wott."WorkflowTemplateID" = wt."WorkflowTemplateID" and wott."WorkflowTemplateVersionNumber" = wt."WorkflowTemplateVersionNumber"
  	and wott."WorkflowObjectTypeTemplateID" = wt."WorkflowObjectTypeTemplateID"
  inner join "WorkflowObjectType" wot on wot."WorkflowID" = WorkflowID and wot."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wot."Name" = wott."Name" and wot."ObjectTypeName" = wott."ObjectTypeName"

where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

-- WF COND
INSERT INTO
  public."WorkflowCondition"
(
  "Name",
  "Description",
  "WorkflowObjectTypeID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wt."Name",
  wt."Description",
  wot."WorkflowObjectTypeID",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowConditionTemplate" wt

    inner join "WorkflowObjectTypeTemplate" wott on wott."WorkflowTemplateID" = wt."WorkflowTemplateID" and wott."WorkflowTemplateVersionNumber" = wt."WorkflowTemplateVersionNumber"
  	and wott."WorkflowObjectTypeTemplateID" = wt."WorkflowObjectTypeTemplateID"
  inner join "WorkflowObjectType" wot on wot."WorkflowID" = WorkflowID and wot."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wot."Name" = wott."Name" and wot."ObjectTypeName" = wott."ObjectTypeName"

where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

-- WF COMMAND
INSERT INTO
  public."WorkflowCommand"
(
  "Name",
  "Description",
  "WorkflowID",
  "WorkflowVersionNumber",
  "WorkflowObjectTypeID"
)
SELECT
  wt."Name",
  wt."Description",
   WorkflowID,
  WorkflowVersionNumber,
  wot."WorkflowObjectTypeID"
FROM
  public."WorkflowCommandTemplate" wt

    inner join "WorkflowObjectTypeTemplate" wott on wott."WorkflowTemplateID" = wt."WorkflowTemplateID" and wott."WorkflowTemplateVersionNumber" = wt."WorkflowTemplateVersionNumber"
  	and wott."WorkflowObjectTypeTemplateID" = wt."WorkflowObjectTypeTemplateID"
  inner join "WorkflowObjectType" wot on wot."WorkflowID" = WorkflowID and wot."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wot."Name" = wott."Name" and wot."ObjectTypeName" = wott."ObjectTypeName"

where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

---------------- PARAMETER
INSERT INTO
  public."WorkflowCommandParameter"
(
  "WorkflowCommandID",
  "WorkflowParameterID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wpc."WorkflowCommandID",
  wp."WorkflowParameterID",
   WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowCommandParameterTemplate" wt

  left outer join "WorkflowParameter" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowParameterTemplate" wpt where wpt."WorkflowParameterTemplateID" = wt."WorkflowParameterTemplateID" limit 1)
    and wp."ObjectValue" = (select wpt."ObjectValue" from "WorkflowParameterTemplate" wpt where wpt."WorkflowParameterTemplateID" = wt."WorkflowParameterTemplateID" limit 1)

    left outer join "WorkflowCommand" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowCommandTemplate" wptc where wptc."WorkflowCommandTemplateID" = wt."WorkflowCommandTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;


INSERT INTO
  public."WorkflowActionParameter"
(
  "WorkflowActionID",
  "WorkflowParameterID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wpc."WorkflowActionID",
  wp."WorkflowParameterID",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowActionParameterTemplate" wt

  left outer join "WorkflowParameter" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowParameterTemplate" wpt where wpt."WorkflowParameterTemplateID" = wt."WorkflowParameterTemplateID" limit 1)
    and wp."ObjectValue" = (select wpt."ObjectValue" from "WorkflowParameterTemplate" wpt where wpt."WorkflowParameterTemplateID" = wt."WorkflowParameterTemplateID" limit 1)

    left outer join "WorkflowAction" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowActionTemplate" wptc where wptc."WorkflowActionTemplateID"= wt."WorkflowActionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowConditionParameter"
(
  "WorkflowConditionID",
  "WorkflowParameterID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wpc."WorkflowConditionID",
  wp."WorkflowParameterID",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowConditionParameterTemplate" wt

  left outer join "WorkflowParameter" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowParameterTemplate" wpt where wpt."WorkflowParameterTemplateID" = wt."WorkflowParameterTemplateID" limit 1)
	and wp."ObjectValue" = (select wpt."ObjectValue" from "WorkflowParameterTemplate" wpt where wpt."WorkflowParameterTemplateID" = wt."WorkflowParameterTemplateID" limit 1)

    left outer join "WorkflowCondition" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowConditionTemplate" wptc where wptc."WorkflowConditionTemplateID"= wt."WorkflowConditionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowDecisionParameter"
(
  "WorkflowDecisionID",
  "WorkflowParameterID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wpc."WorkflowDecisionID",
  wp."WorkflowParameterID",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowDecisionParameterTemplate" wt

  left outer join "WorkflowParameter" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowParameterTemplate" wpt where wpt."WorkflowParameterTemplateID" = wt."WorkflowParameterTemplateID" limit 1)
	and wp."ObjectValue" = (select wpt."ObjectValue" from "WorkflowParameterTemplate" wpt where wpt."WorkflowParameterTemplateID" = wt."WorkflowParameterTemplateID" limit 1)

    left outer join "WorkflowDecision" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowDecisionTemplate" wptc where wptc."WorkflowDecisionTemplateID"= wt."WorkflowDecisionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowMainParameter"
(
 "WorkflowID",
  "WorkflowVersionNumber",
  "WorkflowParameterID"
)
SELECT
  WorkflowID,
  WorkflowVersionNumber,
  wp."WorkflowParameterID"
FROM
  public."WorkflowMainParameterTemplate" wt

    left outer join "WorkflowParameter" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowParameterTemplate" wpt where wpt."WorkflowParameterTemplateID" = wt."WorkflowParameterTemplateID" limit 1)
	and wp."ObjectValue" = (select wpt."ObjectValue" from "WorkflowParameterTemplate" wpt where wpt."WorkflowParameterTemplateID" = wt."WorkflowParameterTemplateID" limit 1)

   where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowTransistionParameter"
(
  "WorkflowTransistionID",
  "WorkflowParameterID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wpc."WorkflowTransistionID",
 wp."WorkflowParameterID",
 WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowTransistionParameterTemplate" wt

  left outer join "WorkflowParameter" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowParameterTemplate" wpt where wpt."WorkflowParameterTemplateID" = wt."WorkflowParameterTemplateID" limit 1)
	and wp."ObjectValue" = (select wpt."ObjectValue" from "WorkflowParameterTemplate" wpt where wpt."WorkflowParameterTemplateID" = wt."WorkflowParameterTemplateID" limit 1)

    left outer join "WorkflowTransistion" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowTransistionTemplate" wptc where wptc."WorkflowTransistionTemplateID"= wt."WorkflowTransistionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

------------- CONDITIONS
INSERT INTO
  public."WorkflowActionCompleteCondition"
(
  "WorkflowActionID",
  "WorkflowConditionID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wpc."WorkflowActionID",
  wp."WorkflowConditionID",
   WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowActionCompleteConditionTemplate" wt

  left outer join "WorkflowCondition" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowConditionTemplate" wpt where wpt."WorkflowConditionTemplateID" = wt."WorkflowConditionTemplateID" limit 1)

    left outer join "WorkflowAction" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowActionTemplate" wptc where wptc."WorkflowActionTemplateID"= wt."WorkflowActionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowActionStartCondition"
(
  "WorkflowActionID",
  "WorkflowConditionID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wpc."WorkflowActionID",
  wp."WorkflowConditionID",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowActionStartConditionTemplate" wt

  left outer join "WorkflowCondition" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowConditionTemplate" wpt where wpt."WorkflowConditionTemplateID" = wt."WorkflowConditionTemplateID" limit 1)

    left outer join "WorkflowAction" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowActionTemplate" wptc where wptc."WorkflowActionTemplateID"= wt."WorkflowActionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;


INSERT INTO
  public."WorkflowCommandCondition"
(
  "WorkflowCommandID",
  "WorkflowConditionID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wpc."WorkflowCommandID",
  wp."WorkflowConditionID",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowCommandConditionTemplate" wt

  left outer join "WorkflowCondition" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowConditionTemplate" wpt where wpt."WorkflowConditionTemplateID" = wt."WorkflowConditionTemplateID" limit 1)

    left outer join "WorkflowCommand" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowCommandTemplate" wptc where wptc."WorkflowCommandTemplateID"= wt."WorkflowCommandTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;


INSERT INTO
  public."WorkflowMainCompleteCondition"
(
  "WorkflowID",
  "WorkflowVersionNumber",
  "WorkflowConditionID"
)
SELECT
  WorkflowID,
  WorkflowVersionNumber,
  wp."WorkflowConditionID"
FROM
  public."WorkflowMainCompleteConditionTemplate" wt

  left outer join "WorkflowCondition" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowConditionTemplate" wpt where wpt."WorkflowConditionTemplateID" = wt."WorkflowConditionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowMainStartCondition"
(
  "WorkflowID",
  "WorkflowVersionNumber",
  "WorkflowConditionID"
)
SELECT
  WorkflowID,
  WorkflowVersionNumber,
  wp."WorkflowConditionID"
FROM
  public."WorkflowMainStartConditionTemplate" wt

  left outer join "WorkflowCondition" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowConditionTemplate" wpt where wpt."WorkflowConditionTemplateID" = wt."WorkflowConditionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowTransistionCompleteCondition"
(
  "WorkflowTransistionID",
  "WorkflowConditionID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wpc."WorkflowTransistionID",
  wp."WorkflowConditionID",
 WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowTransistionCompleteConditionTemplate" wt

  left outer join "WorkflowCondition" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowConditionTemplate" wpt where wpt."WorkflowConditionTemplateID" = wt."WorkflowConditionTemplateID" limit 1)

    left outer join "WorkflowTransistion" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowTransistionTemplate" wptc where wptc."WorkflowTransistionTemplateID"= wt."WorkflowTransistionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowTransistionStartCondition"
(
  "WorkflowTransistionID",
  "WorkflowConditionID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wpc."WorkflowTransistionID",
  wp."WorkflowConditionID",
 WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowTransistionStartConditionTemplate" wt

  left outer join "WorkflowCondition" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowConditionTemplate" wpt where wpt."WorkflowConditionTemplateID" = wt."WorkflowConditionTemplateID" limit 1)

    left outer join "WorkflowTransistion" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowTransistionTemplate" wptc where wptc."WorkflowTransistionTemplateID"= wt."WorkflowTransistionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

-- COMMANDS
INSERT INTO
  public."WorkflowActionExecuteCommand"
(
  "WorkflowActionID",
  "WorkflowCommandID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wpc."WorkflowActionID",
  wp."WorkflowCommandID",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowActionExecuteCommandTemplate" wt

  left outer join "WorkflowCommand" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowCommandTemplate" wpt where wpt."WorkflowCommandTemplateID" = wt."WorkflowCommandTemplateID" limit 1)

    left outer join "WorkflowAction" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowActionTemplate" wptc where wptc."WorkflowActionTemplateID"= wt."WorkflowActionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowActionPostCommand"
(
  "WorkflowActionID",
  "WorkflowCommandID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wpc."WorkflowActionID",
  wp."WorkflowCommandID",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowActionPostCommandTemplate" wt

  left outer join "WorkflowCommand" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowCommandTemplate" wpt where wpt."WorkflowCommandTemplateID" = wt."WorkflowCommandTemplateID" limit 1)

    left outer join "WorkflowAction" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowActionTemplate" wptc where wptc."WorkflowActionTemplateID"= wt."WorkflowActionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowActionPreCommand"
(
  "WorkflowActionID",
  "WorkflowCommandID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wpc."WorkflowActionID",
  wp."WorkflowCommandID",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowActionPreCommandTemplate" wt

  left outer join "WorkflowCommand" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowCommandTemplate" wpt where wpt."WorkflowCommandTemplateID" = wt."WorkflowCommandTemplateID" limit 1)

    left outer join "WorkflowAction" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowActionTemplate" wptc where wptc."WorkflowActionTemplateID"= wt."WorkflowActionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowDecisionExecuteCommand"
(
  "WorkflowDecisionID",
  "WorkflowCommandID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wpc."WorkflowDecisionID",
  wp."WorkflowCommandID",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowDecisionExecuteCommandTemplate" wt

  left outer join "WorkflowCommand" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowCommandTemplate" wpt where wpt."WorkflowCommandTemplateID" = wt."WorkflowCommandTemplateID" limit 1)

    left outer join "WorkflowDecision" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowDecisionTemplate" wptc where wptc."WorkflowDecisionTemplateID"= wt."WorkflowDecisionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;


INSERT INTO
  public."WorkflowMainExecuteCommand"
(
  "WorkflowCommandID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wp."WorkflowCommandID",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowMainExecuteCommandTemplate" wt

  left outer join "WorkflowCommand" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowCommandTemplate" wpt where wpt."WorkflowCommandTemplateID" = wt."WorkflowCommandTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowMainPostCommand"
(
  "WorkflowCommandID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wp."WorkflowCommandID",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowMainPostCommandTemplate" wt

  left outer join "WorkflowCommand" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowCommandTemplate" wpt where wpt."WorkflowCommandTemplateID" = wt."WorkflowCommandTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowMainPreCommand"
(
  "WorkflowCommandID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wp."WorkflowCommandID",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowMainPreCommandTemplate" wt

  left outer join "WorkflowCommand" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowCommandTemplate" wpt where wpt."WorkflowCommandTemplateID" = wt."WorkflowCommandTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

-- DECISION ETC
INSERT INTO
  public."WorkflowDecisionError"
(

  "WorkflowID",
  "WorkflowVersionNumber",
  "WorkflowDecisionID",
  "NextWorkflowActionID",
  "NextWorkflowDecisionID"
)
SELECT
 WorkflowID,
  WorkflowVersionNumber,
  wpc."WorkflowDecisionID",
  wp."WorkflowActionID",
  wpc2."WorkflowDecisionID"
FROM
  public."WorkflowDecisionErrorTemplate" wt

  left outer join "WorkflowAction" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowActionTemplate" wpt where wpt."WorkflowActionTemplateID" = wt."NextWorkflowActionTemplateID" limit 1)

    left outer join "WorkflowDecision" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowDecisionTemplate" wptc where wptc."WorkflowDecisionTemplateID"= wt."WorkflowDecisionTemplateID" limit 1)

   left outer join "WorkflowDecision" wpc2 on wpc2."WorkflowID" = WorkflowID and wpc2."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc2."Name" = (select wptc."Name" from "WorkflowDecisionTemplate" wptc where wptc."WorkflowDecisionTemplateID"= wt."NextWorkflowDecisionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowDecisionFailure"
(

  "WorkflowID",
  "WorkflowVersionNumber",
  "WorkflowDecisionID",
  "NextWorkflowActionID",
  "NextWorkflowDecisionID"
)
SELECT
 WorkflowID,
  WorkflowVersionNumber,
  wpc."WorkflowDecisionID",
  wp."WorkflowActionID",
  wpc2."WorkflowDecisionID"
FROM
  public."WorkflowDecisionFailureTemplate" wt

  left outer join "WorkflowAction" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowActionTemplate" wpt where wpt."WorkflowActionTemplateID" = wt."NextWorkflowActionTemplateID" limit 1)

    left outer join "WorkflowDecision" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowDecisionTemplate" wptc where wptc."WorkflowDecisionTemplateID"= wt."WorkflowDecisionTemplateID" limit 1)

   left outer join "WorkflowDecision" wpc2 on wpc2."WorkflowID" = WorkflowID and wpc2."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc2."Name" = (select wptc."Name" from "WorkflowDecisionTemplate" wptc where wptc."WorkflowDecisionTemplateID"= wt."NextWorkflowDecisionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowDecisionSuccess"
(

  "WorkflowID",
  "WorkflowVersionNumber",
  "WorkflowDecisionID",
  "NextWorkflowActionID",
  "NextWorkflowDecisionID"
)
SELECT
 WorkflowID,
  WorkflowVersionNumber,
  wpc."WorkflowDecisionID",
  wp."WorkflowActionID",
  wpc2."WorkflowDecisionID"
FROM
  public."WorkflowDecisionSuccessTemplate" wt

  left outer join "WorkflowAction" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowActionTemplate" wpt where wpt."WorkflowActionTemplateID" = wt."NextWorkflowActionTemplateID" limit 1)

    left outer join "WorkflowDecision" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowDecisionTemplate" wptc where wptc."WorkflowDecisionTemplateID"= wt."WorkflowDecisionTemplateID" limit 1)

   left outer join "WorkflowDecision" wpc2 on wpc2."WorkflowID" = WorkflowID and wpc2."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc2."Name" = (select wptc."Name" from "WorkflowDecisionTemplate" wptc where wptc."WorkflowDecisionTemplateID"= wt."NextWorkflowDecisionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

------ End DO

INSERT INTO
  public."WorkflowTransistionWorkflowAction"
(
  "WorkflowTransistionID",
  "WorkflowActionID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
 wpc."WorkflowTransistionID",
  wp."WorkflowActionID",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowTransistionWorkflowActionTemplate" wt

  left outer join "WorkflowAction" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowActionTemplate" wpt where wpt."WorkflowActionTemplateID" = wt."WorkflowActionTemplateID" limit 1)

    left outer join "WorkflowTransistion" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowTransistionTemplate" wptc where wptc."WorkflowTransistionTemplateID"= wt."WorkflowTransistionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

INSERT INTO
  public."WorkflowTransistionWorkflowDecision"
(
  "WorkflowTransistionID",
  "WorkflowDecisionID",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
 wpc."WorkflowTransistionID",
  wp."WorkflowDecisionID",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowTransistionWorkflowDecisionTemplate" wt

  left outer join "WorkflowDecision" wp on wp."WorkflowID" = WorkflowID and wp."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wp."Name" = (select wpt."Name" from "WorkflowDecisionTemplate" wpt where wpt."WorkflowDecisionTemplateID" = wt."WorkflowDecisionTemplateID" limit 1)

    left outer join "WorkflowTransistion" wpc on wpc."WorkflowID" = WorkflowID and wpc."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wpc."Name" = (select wptc."Name" from "WorkflowTransistionTemplate" wptc where wptc."WorkflowTransistionTemplateID"= wt."WorkflowTransistionTemplateID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;


----------- HIERARCY
INSERT INTO
  public."WorkflowTransistionHierarchy"
(
  "ChildComponentID",
  "ParentComponentID",
  "IsWorkflowStart",
  "IsWorkflowEnd",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  ct."WorkflowTransistionID",
  pt."WorkflowTransistionID",
  wt."IsWorkflowStart",
  wt."IsWorkflowEnd",
  WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowTransistionHierarchyTemplate" wt

  left outer join "WorkflowTransistion" pt on pt."WorkflowID" = WorkflowID and pt."WorkflowVersionNumber" = WorkflowVersionNumber
  	and pt."Name" = (select wpt."Name" from "WorkflowTransistionTemplate" wpt where wpt."WorkflowTransistionTemplateID" = wt."ParentComponentID" limit 1)

  left outer join "WorkflowTransistion" ct on ct."WorkflowID" = WorkflowID and ct."WorkflowVersionNumber" = WorkflowVersionNumber
  	and ct."Name" = (select wpt."Name" from "WorkflowTransistionTemplate" wpt where wpt."WorkflowTransistionTemplateID" = wt."ChildComponentID" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;


INSERT INTO
  public."WorkflowHierarchy"
(
  "WorkflowTransistionID",
  "ChildComponentID",
  "ParentComponentID",
  "IsTransistionStart",
  "IsTranistionEnd",
  "IsChildDependentOnParent",
  "WorkflowID",
  "WorkflowVersionNumber"
)
SELECT
  wtt."WorkflowTransistionID",
	COALESCE(ct."WorkflowActionID",ct1."WorkflowDecisionID"),
  COALESCE(pt."WorkflowActionID",pt1."WorkflowDecisionID"),
  wt."IsTransistionStart",
  wt."IsTranistionEnd",
  wt."IsChildDependentOnParent",
   WorkflowID,
  WorkflowVersionNumber
FROM
  public."WorkflowHierarchyTemplate" wt

left outer join "WorkflowTransistion" wtt on wtt."WorkflowID" = WorkflowID and wtt."WorkflowVersionNumber" = WorkflowVersionNumber
  	and wtt."Name" = (select wpt."Name" from "WorkflowTransistionTemplate" wpt where wpt."WorkflowTransistionTemplateID" = wt."WorkflowTransistionTemplateID" limit 1)


  left outer join "WorkflowAction" pt on pt."WorkflowID" = WorkflowID and pt."WorkflowVersionNumber" = WorkflowVersionNumber
  	and pt."Name" = (select wpt."Name" from "WorkflowActionTemplate" wpt where wpt."WorkflowActionTemplateID" = wt."ParentComponentID" limit 1)

  left outer join "WorkflowAction" ct on ct."WorkflowID" = WorkflowID and ct."WorkflowVersionNumber" = WorkflowVersionNumber
  	and ct."Name" = (select wpt."Name" from "WorkflowActionTemplate" wpt where wpt."WorkflowActionTemplateID" = wt."ChildComponentID" limit 1)

     left outer join "WorkflowDecision" pt1 on pt1."WorkflowID" = WorkflowID and pt1."WorkflowVersionNumber" = WorkflowVersionNumber
  	and pt1."Name" = (select wpt."Name" from "WorkflowDecisionTemplate" wpt where wpt."WorkflowDecisionTemplateID" = wt."ParentComponentID" limit 1)

  left outer join "WorkflowDecision" ct1 on ct1."WorkflowID" = WorkflowID and ct1."WorkflowVersionNumber" = WorkflowVersionNumber
  	and ct1."Name" = (select wpt."Name" from "WorkflowDecisionTemplate" wpt where wpt."WorkflowDecisionTemplateID" = wt."ChildComponentID" limit 1)


  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber ;

--Tree Structure


INSERT INTO
  public."WorkflowTreeStructure"
  (
  "WorkflowTreeStructureID",
  "WorkflowID",
  "WorkflowVersionNumber",
  "Name",
  "Description",
  "ItemOrder",
  "IsLeafNode",
  "IsActive" ,
  "IsDeleted",
  "ParentID" ,
  "InterfacePanelID",
  "InterfacePanelVersionNumber",
  "Level"
  )
  select
  wt."WorkflowTreeStructureTemplateID",
   WorkflowID,
  WorkflowVersionNumber,
  wt."Name",
  wt."Description",
  wt."ItemOrder",
  wt."IsLeafNode",
  wt."IsActive" ,
  wt."IsDeleted",
  wt."ParentID",
  ip."InterfacePanelID",
  ip."InterfacePanelVersionNumber",
  wt."Level"
   from "WorkflowTreeStructureTemplate" wt

  left outer join "InterfacePanel" ip on ip."InterfacePanelTemplateID" = wt."InterfacePanelTemplateID" and ip."InterfacePanelTemplateVersionNumber" = wt."InterfacePanelTemplateVersionNumber"
  	and ip."Name" = (select ipt."Name" from "InterfacePanelTemplate" ipt where ipt."InterfacePanelTemplateID" = wt."InterfacePanelTemplateID" and ip."InterfacePanelTemplateVersionNumber" = wt."InterfacePanelTemplateVersionNumber" limit 1)

  where wt."WorkflowTemplateID" = WorkflowTemplateID and wt."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber;

  --Tree Structure Action mapping
  INSERT INTO
  public."WorkflowTreeStructureAction"
  (
  "WorkflowTreeStructureActionID",
  "WorkflowTreeStructureID",
  "IsVisible" ,
  "IsActive" ,
  "IsDeleted",
  "WorkflowActionID",
  "ConditionString"
  )
  select
  wt."WorkflowTreeStructureActionTemplateID",
  wtst."WorkflowTreeStructureTemplateID",
  wt."IsVisible",
  wt."IsActive" ,
  wt."IsDeleted",
  wa."WorkflowActionID",
  wt."ConditionString"
  from "WorkflowTreeStructureActionTemplate" wt
  Left JOIN "WorkflowTreeStructureTemplate" wtst on wt."WorkflowTreeStructureTemplateID" = wtst."WorkflowTreeStructureTemplateID"
  Left Join "WorkflowTreeStructure" wts on wtst."WorkflowTreeStructureTemplateID" = wts."WorkflowTreeStructureID"
  left outer join "WorkflowAction" wa on wa."WorkflowID" = WorkflowID   and wa."WorkflowVersionNumber" = WorkflowVersionNumber
  and wa."Name" = (select wpt."Name" from "WorkflowActionTemplate" wpt where wpt."WorkflowActionTemplateID" = wt."WorkflowActionTemplateID" limit 1)
  where wtst."WorkflowTemplateID" = WorkflowTemplateID and wtst."WorkflowTemplateVersionNumber" = WorkflowTemplateVersionNumber;

--EXCEPTION
--	WHEN
END;
$$;


ALTER FUNCTION public."fn_PromoteWorkflowTemplate"("WorkflowTemplateID" uuid, "WorkflowTemplateVersionNumber" integer) OWNER TO postgres;

--
-- TOC entry 930 (class 1255 OID 40335)
-- Name: fn_newid(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION fn_newid() RETURNS character varying
    LANGUAGE sql
    AS $$
	SELECT LOWER(
        REPLACE(
        CAST(uuid_generate_v1() As varchar(50))
            , '-','')
    );

$$;


ALTER FUNCTION public.fn_newid() OWNER TO postgres;

--
-- TOC entry 931 (class 1255 OID 40336)
-- Name: truncate_tables(character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION truncate_tables(username character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    statements CURSOR FOR
        SELECT tablename FROM pg_tables
        WHERE tableowner = username AND schemaname = 'public';
BEGIN
    FOR stmt IN statements LOOP
        EXECUTE 'TRUNCATE TABLE ' || quote_ident(stmt.tablename) || ' CASCADE;';
    END LOOP;
END;
$$;


ALTER FUNCTION public.truncate_tables(username character varying) OWNER TO postgres;

SET search_path = public_audit, pg_catalog;

--
-- TOC entry 932 (class 1255 OID 40337)
-- Name: Plan(); Type: FUNCTION; Schema: public_audit; Owner: postgres
--

CREATE FUNCTION "Plan"() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_old public."Plan"%ROWTYPE;
    v_new public."Plan"%ROWTYPE;
    v_ret public."Plan"%ROWTYPE;
BEGIN
    IF (TG_OP = 'DELETE') THEN
        v_old := OLD;
        v_new := NULL;
        v_ret := OLD;
    ELSIF (TG_OP = 'INSERT') THEN
        v_old := NULL;
        v_new := NEW;
        v_ret := NEW;
    ELSIF (TG_OP = 'UPDATE') THEN
        v_old := OLD;
        v_new := NEW;
        v_ret := NEW;
    END IF;
    INSERT INTO public_audit."Plan" (
        "PlanID",
 "PlanVersionNumber",
 "Name",
 "Description",
 "InvoiceName",
 "Price",
 "Period",
 "TrialPeriod",
 "PeriodUnitID",
 "TrialPeriodUnitID",
 "FreeQuantity",
 "SetupCost",
 "DowngradePenalty",
 "CreatedOn",
 "CreatedBy",
 "IsActive",
 "IsDeleted",
 "CountryCode",
 "CurrencyCode",
 "CancellationPeriod",
 "CancellationPeriodUnitID",
 "IsFree",
 "HasInfinitePeriods",
 "ParentID",
 "PlanTemplateID",
 "PlanTemplateVersionNumber",
 "PlanStatusID",
 "IsTransactionBased",
 "CoolOffPeriod",
 "CoolOffPeriodUnitID",
 "RenewalPrice",
 "RenewalPercentage",
 "RenewalIsPercentageOfOriginalPrice",
 "HasForwardCycleFee",
 "ForwardCycleFee",
 "ForwardCycleFreeIsSameAsPrice",
 "RenewalOfferPeriod",
 "RenewalOfferPeriodUnitID",
 "ForwardCycleFeePeriod",
 "ForwardCycleFeePeriodUnitID",
 "HasRenewalOffer",
 "PriceDailyProRata",
 "IsAutoRenew",
 "AutoRenewDecisionPeriod",
 "AutoRenewDecisionUnitID",
 "AutoRenewPeriod",
 "AutoRenewPeriodUnitID",
 "PlanGroupID",
 "PlanTypeID",
 "PlanCategoryID",
 "ModifiedOn",
 "ModifiedBy",
        operation
    )
    VALUES((v_old).*, TG_OP);
    RETURN v_ret;
END;
$$;


ALTER FUNCTION public_audit."Plan"() OWNER TO postgres;

--
-- TOC entry 933 (class 1255 OID 40338)
-- Name: ProductDetail(); Type: FUNCTION; Schema: public_audit; Owner: postgres
--

CREATE FUNCTION "ProductDetail"() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_old public."ProductDetail"%ROWTYPE;
    v_new public."ProductDetail"%ROWTYPE;
    v_ret public."ProductDetail"%ROWTYPE;
BEGIN
    IF (TG_OP = 'DELETE') THEN
        v_old := OLD;
        v_new := NULL;
        v_ret := OLD;
    ELSIF (TG_OP = 'INSERT') THEN
        v_old := NULL;
        v_new := NEW;
        v_ret := NEW;
    ELSIF (TG_OP = 'UPDATE') THEN
        v_old := OLD;
        v_new := NEW;
        v_ret := NEW;
    END IF;
    INSERT INTO public_audit."ProductDetail" (

        "ProductDetailID",
 "Name",
 "Description",
 "ProductID",
 "IsActive",
 "IsDeleted",
 "ShortDescription",
 "LongDescription",
 "MetaKeywords",
 "MetaDescription",
 "MetaTitle",
 "RequireOtherProducts",
 "AutomaticallyAddRequiredProducts",
 "HasUserAgreement",
 "UserAgreementText",
 "IsRecurring",
 "RecurringCycleLength",
 "RecurringCyclePeriodID",
 "RecurringTotalCycle",
 "IsTaxExempt",
 "TaxCategoryID",
 "OrderMinimumQuantity",
 "OrderMaximumQuantity",
 "CallForPrice",
 "Price",
 "ProductCost",
 "CustomerEntersPrice",
 "HasTierPrices",
 "HasDiscountsApplied",
 "MinimumCustomerEnteredPrice",
 "MaximumCustomerEnteredPrice",
 "DisplayOrder",
 "AvailableStartDate",
 "AvailableEndDate",
 "ProductTypeID",
 "ProductSubTypeID",
 "ProductCategoryID",
 "ProductSubCategoryID",
 "ProductVersionID",
 "CurrencyCode",
 "CurrencyRate",
 "CurrencyRateDate",
 "CurrencyRateToGBP",
 "CurrencyRateToUSD",
 "InvoiceName",
 "IsDepositProduct",
        operation
    )
    VALUES( (v_old).*, TG_OP);
    RETURN v_ret;
END;
$$;


ALTER FUNCTION public_audit."ProductDetail"() OWNER TO postgres;

SET search_path = audit, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- TOC entry 177 (class 1259 OID 40339)
-- Name: logged_actions; Type: TABLE; Schema: audit; Owner: postgres; Tablespace:
--

CREATE TABLE logged_actions (
    event_id bigint NOT NULL,
    schema_name text NOT NULL,
    table_name text NOT NULL,
    relid oid NOT NULL,
    session_user_name text,
    action_tstamp_tx timestamp with time zone NOT NULL,
    action_tstamp_stm timestamp with time zone NOT NULL,
    action_tstamp_clk timestamp with time zone NOT NULL,
    transaction_id bigint,
    application_name text,
    client_addr inet,
    client_port integer,
    client_query text NOT NULL,
    action text NOT NULL,
    row_data public.hstore,
    changed_fields public.hstore,
    statement_only boolean NOT NULL,
    CONSTRAINT logged_actions_action_check CHECK ((action = ANY (ARRAY['I'::text, 'D'::text, 'U'::text, 'T'::text])))
);


ALTER TABLE logged_actions OWNER TO postgres;

--
-- TOC entry 8669 (class 0 OID 0)
-- Dependencies: 177
-- Name: TABLE logged_actions; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON TABLE logged_actions IS 'History of auditable actions on audited tables, from audit.if_modified_func()';


--
-- TOC entry 8670 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.event_id; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.event_id IS 'Unique identifier for each auditable event';


--
-- TOC entry 8671 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.schema_name; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.schema_name IS 'Database schema audited table for this event is in';


--
-- TOC entry 8672 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.table_name; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.table_name IS 'Non-schema-qualified table name of table event occured in';


--
-- TOC entry 8673 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.relid; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.relid IS 'Table OID. Changes with drop/create. Get with ''tablename''::regclass';


--
-- TOC entry 8674 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.session_user_name; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.session_user_name IS 'Login / session user whose statement caused the audited event';


--
-- TOC entry 8675 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.action_tstamp_tx; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.action_tstamp_tx IS 'Transaction start timestamp for tx in which audited event occurred';


--
-- TOC entry 8676 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.action_tstamp_stm; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.action_tstamp_stm IS 'Statement start timestamp for tx in which audited event occurred';


--
-- TOC entry 8677 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.action_tstamp_clk; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.action_tstamp_clk IS 'Wall clock time at which audited event''s trigger call occurred';


--
-- TOC entry 8678 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.transaction_id; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.transaction_id IS 'Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx.';


--
-- TOC entry 8679 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.application_name; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.application_name IS 'Application name set when this audit event occurred. Can be changed in-session by client.';


--
-- TOC entry 8680 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.client_addr; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.client_addr IS 'IP address of client that issued query. Null for unix domain socket.';


--
-- TOC entry 8681 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.client_port; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.client_port IS 'Remote peer IP port address of client that issued query. Undefined for unix socket.';


--
-- TOC entry 8682 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.client_query; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.client_query IS 'Top-level query that caused this auditable event. May be more than one statement.';


--
-- TOC entry 8683 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.action; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.action IS 'Action type; I = insert, D = delete, U = update, T = truncate';


--
-- TOC entry 8684 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.row_data; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.row_data IS 'Record value. Null for statement-level trigger. For INSERT this is the new tuple. For DELETE and UPDATE it is the old tuple.';


--
-- TOC entry 8685 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.changed_fields; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.changed_fields IS 'New values of fields changed by UPDATE. Null except for row-level UPDATE events.';


--
-- TOC entry 8686 (class 0 OID 0)
-- Dependencies: 177
-- Name: COLUMN logged_actions.statement_only; Type: COMMENT; Schema: audit; Owner: postgres
--

COMMENT ON COLUMN logged_actions.statement_only IS '''t'' if audit event is from an FOR EACH STATEMENT trigger, ''f'' for FOR EACH ROW';


--
-- TOC entry 178 (class 1259 OID 40346)
-- Name: logged_actions_event_id_seq; Type: SEQUENCE; Schema: audit; Owner: postgres
--

CREATE SEQUENCE logged_actions_event_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE logged_actions_event_id_seq OWNER TO postgres;

--
-- TOC entry 8688 (class 0 OID 0)
-- Dependencies: 178
-- Name: logged_actions_event_id_seq; Type: SEQUENCE OWNED BY; Schema: audit; Owner: postgres
--

ALTER SEQUENCE logged_actions_event_id_seq OWNED BY logged_actions.event_id;


SET search_path = hangfire, pg_catalog;

--
-- TOC entry 179 (class 1259 OID 40348)
-- Name: counter; Type: TABLE; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE TABLE counter (
    id integer NOT NULL,
    key character varying(100) NOT NULL,
    value smallint NOT NULL,
    expireat timestamp without time zone,
    updatecount integer DEFAULT 0 NOT NULL
);


ALTER TABLE counter OWNER TO postgres;

--
-- TOC entry 180 (class 1259 OID 40352)
-- Name: counter_id_seq; Type: SEQUENCE; Schema: hangfire; Owner: postgres
--

CREATE SEQUENCE counter_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE counter_id_seq OWNER TO postgres;

--
-- TOC entry 8689 (class 0 OID 0)
-- Dependencies: 180
-- Name: counter_id_seq; Type: SEQUENCE OWNED BY; Schema: hangfire; Owner: postgres
--

ALTER SEQUENCE counter_id_seq OWNED BY counter.id;


--
-- TOC entry 181 (class 1259 OID 40354)
-- Name: hash; Type: TABLE; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE TABLE hash (
    id integer NOT NULL,
    key character varying(100) NOT NULL,
    field character varying(100) NOT NULL,
    value text,
    expireat timestamp without time zone,
    updatecount integer DEFAULT 0 NOT NULL
);


ALTER TABLE hash OWNER TO postgres;

--
-- TOC entry 182 (class 1259 OID 40361)
-- Name: hash_id_seq; Type: SEQUENCE; Schema: hangfire; Owner: postgres
--

CREATE SEQUENCE hash_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE hash_id_seq OWNER TO postgres;

--
-- TOC entry 8690 (class 0 OID 0)
-- Dependencies: 182
-- Name: hash_id_seq; Type: SEQUENCE OWNED BY; Schema: hangfire; Owner: postgres
--

ALTER SEQUENCE hash_id_seq OWNED BY hash.id;


--
-- TOC entry 183 (class 1259 OID 40363)
-- Name: job; Type: TABLE; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE TABLE job (
    id integer NOT NULL,
    stateid integer,
    statename character varying(20),
    invocationdata text NOT NULL,
    arguments text NOT NULL,
    createdat timestamp without time zone NOT NULL,
    expireat timestamp without time zone,
    updatecount integer DEFAULT 0 NOT NULL
);


ALTER TABLE job OWNER TO postgres;

--
-- TOC entry 184 (class 1259 OID 40370)
-- Name: job_id_seq; Type: SEQUENCE; Schema: hangfire; Owner: postgres
--

CREATE SEQUENCE job_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE job_id_seq OWNER TO postgres;

--
-- TOC entry 8691 (class 0 OID 0)
-- Dependencies: 184
-- Name: job_id_seq; Type: SEQUENCE OWNED BY; Schema: hangfire; Owner: postgres
--

ALTER SEQUENCE job_id_seq OWNED BY job.id;


--
-- TOC entry 185 (class 1259 OID 40372)
-- Name: jobparameter; Type: TABLE; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE TABLE jobparameter (
    id integer NOT NULL,
    jobid integer NOT NULL,
    name character varying(40) NOT NULL,
    value text,
    updatecount integer DEFAULT 0 NOT NULL
);


ALTER TABLE jobparameter OWNER TO postgres;

--
-- TOC entry 186 (class 1259 OID 40379)
-- Name: jobparameter_id_seq; Type: SEQUENCE; Schema: hangfire; Owner: postgres
--

CREATE SEQUENCE jobparameter_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE jobparameter_id_seq OWNER TO postgres;

--
-- TOC entry 8692 (class 0 OID 0)
-- Dependencies: 186
-- Name: jobparameter_id_seq; Type: SEQUENCE OWNED BY; Schema: hangfire; Owner: postgres
--

ALTER SEQUENCE jobparameter_id_seq OWNED BY jobparameter.id;


--
-- TOC entry 187 (class 1259 OID 40381)
-- Name: jobqueue; Type: TABLE; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE TABLE jobqueue (
    id integer NOT NULL,
    jobid integer NOT NULL,
    queue character varying(20) NOT NULL,
    fetchedat timestamp without time zone,
    updatecount integer DEFAULT 0 NOT NULL
);


ALTER TABLE jobqueue OWNER TO postgres;

--
-- TOC entry 188 (class 1259 OID 40385)
-- Name: jobqueue_id_seq; Type: SEQUENCE; Schema: hangfire; Owner: postgres
--

CREATE SEQUENCE jobqueue_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE jobqueue_id_seq OWNER TO postgres;

--
-- TOC entry 8693 (class 0 OID 0)
-- Dependencies: 188
-- Name: jobqueue_id_seq; Type: SEQUENCE OWNED BY; Schema: hangfire; Owner: postgres
--

ALTER SEQUENCE jobqueue_id_seq OWNED BY jobqueue.id;


--
-- TOC entry 189 (class 1259 OID 40387)
-- Name: list; Type: TABLE; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE TABLE list (
    id integer NOT NULL,
    key character varying(100) NOT NULL,
    value text,
    expireat timestamp without time zone,
    updatecount integer DEFAULT 0 NOT NULL
);


ALTER TABLE list OWNER TO postgres;

--
-- TOC entry 190 (class 1259 OID 40394)
-- Name: list_id_seq; Type: SEQUENCE; Schema: hangfire; Owner: postgres
--

CREATE SEQUENCE list_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE list_id_seq OWNER TO postgres;

--
-- TOC entry 8694 (class 0 OID 0)
-- Dependencies: 190
-- Name: list_id_seq; Type: SEQUENCE OWNED BY; Schema: hangfire; Owner: postgres
--

ALTER SEQUENCE list_id_seq OWNED BY list.id;


--
-- TOC entry 191 (class 1259 OID 40396)
-- Name: lock; Type: TABLE; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE TABLE lock (
    resource character varying(100) NOT NULL,
    updatecount integer DEFAULT 0 NOT NULL
);


ALTER TABLE lock OWNER TO postgres;

--
-- TOC entry 192 (class 1259 OID 40400)
-- Name: schema; Type: TABLE; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE TABLE schema (
    version integer NOT NULL
);


ALTER TABLE schema OWNER TO postgres;

--
-- TOC entry 193 (class 1259 OID 40403)
-- Name: server; Type: TABLE; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE TABLE server (
    id character varying(50) NOT NULL,
    data text,
    lastheartbeat timestamp without time zone NOT NULL,
    updatecount integer DEFAULT 0 NOT NULL
);


ALTER TABLE server OWNER TO postgres;

--
-- TOC entry 194 (class 1259 OID 40410)
-- Name: set; Type: TABLE; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE TABLE set (
    id integer NOT NULL,
    key character varying(100) NOT NULL,
    score double precision NOT NULL,
    value text NOT NULL,
    expireat timestamp without time zone,
    updatecount integer DEFAULT 0 NOT NULL
);


ALTER TABLE set OWNER TO postgres;

--
-- TOC entry 195 (class 1259 OID 40417)
-- Name: set_id_seq; Type: SEQUENCE; Schema: hangfire; Owner: postgres
--

CREATE SEQUENCE set_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE set_id_seq OWNER TO postgres;

--
-- TOC entry 8695 (class 0 OID 0)
-- Dependencies: 195
-- Name: set_id_seq; Type: SEQUENCE OWNED BY; Schema: hangfire; Owner: postgres
--

ALTER SEQUENCE set_id_seq OWNED BY set.id;


--
-- TOC entry 196 (class 1259 OID 40419)
-- Name: state; Type: TABLE; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE TABLE state (
    id integer NOT NULL,
    jobid integer NOT NULL,
    name character varying(20) NOT NULL,
    reason character varying(100),
    createdat timestamp without time zone NOT NULL,
    data text,
    updatecount integer DEFAULT 0 NOT NULL
);


ALTER TABLE state OWNER TO postgres;

--
-- TOC entry 197 (class 1259 OID 40426)
-- Name: state_id_seq; Type: SEQUENCE; Schema: hangfire; Owner: postgres
--

CREATE SEQUENCE state_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE state_id_seq OWNER TO postgres;

--
-- TOC entry 8696 (class 0 OID 0)
-- Dependencies: 197
-- Name: state_id_seq; Type: SEQUENCE OWNED BY; Schema: hangfire; Owner: postgres
--

ALTER SEQUENCE state_id_seq OWNED BY state.id;


SET search_path = legal, pg_catalog;

--
-- TOC entry 198 (class 1259 OID 40428)
-- Name: LegalOrganisationDetails; Type: TABLE; Schema: legal; Owner: postgres; Tablespace:
--

CREATE TABLE "LegalOrganisationDetails" (
    "OrganisationID" uuid NOT NULL,
    "IsVATRegistered" boolean DEFAULT false NOT NULL,
    "VATNumber" character varying(50) NOT NULL,
    "IsCompanyHouseRegistered" boolean DEFAULT false NOT NULL,
    "RegisteredCompanyNumber" character varying(100),
    "PartnersCount" integer,
    "RegisteredPractitionersCount" integer,
    "StaffCount" integer,
    "MonthlyCompletionsCount" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "LegalOrganisationDetails" OWNER TO postgres;

SET search_path = public, pg_catalog;

--
-- TOC entry 199 (class 1259 OID 40435)
-- Name: Account; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Account" (
    "AccountID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "AccountName" character varying(100) NOT NULL,
    "CountryTypeID" integer NOT NULL,
    "AccountClassificationTypeID" integer,
    "CustomerTypeID" integer,
    "BusinessTypeID" integer,
    "PreferredContactMethodID" integer,
    "IndustryTypeID" integer,
    "AccountTypeID" integer NOT NULL,
    "AccountSubTypeID" integer,
    "Description" character varying,
    "EmailAddress1" character varying,
    "EmailAddress2" character varying,
    "EmailAddress3" character varying,
    "DoNotPhone" boolean DEFAULT false,
    "DoNotEmail" boolean DEFAULT false,
    "Fax" character varying(100),
    "IsPrivate" boolean DEFAULT false NOT NULL,
    "Telephone1" character varying(100),
    "Telephone2" character varying(100),
    "Telephone3" character varying(100),
    "StateTypeID" integer NOT NULL,
    "OwnerID" uuid NOT NULL,
    "ContactID" uuid,
    "ParentAccountID" uuid,
    "MasterID" uuid,
    "DoNotTelephone" boolean DEFAULT false,
    "MobileNumber1" character varying(100),
    "MobileNumber2" character varying(100),
    "MobileNumber3" character varying(100),
    "ParentID" uuid,
    "AccountCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "AccountRelationshipTypeID" integer,
    "ContactOrganisationID" uuid,
    "ParentOrganisationID" uuid
);


ALTER TABLE "Account" OWNER TO postgres;

--
-- TOC entry 200 (class 1259 OID 40448)
-- Name: Actor; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Actor" (
    "ActorID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ActorName" character varying(300) NOT NULL,
    "ActorDescription" character varying(2000),
    "ActorTypeID" integer,
    "ActorSubTypeID" integer,
    "ActorCategoryID" integer,
    "ActorSubCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsGlobal" boolean DEFAULT true NOT NULL
);


ALTER TABLE "Actor" OWNER TO postgres;

--
-- TOC entry 201 (class 1259 OID 40458)
-- Name: ActorClaimRoleMapping; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ActorClaimRoleMapping" (
    "ActorClaimRoleMappingID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ActorID" uuid,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "RoleID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ActorClaimRoleMapping" OWNER TO postgres;

--
-- TOC entry 202 (class 1259 OID 40464)
-- Name: Address; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Address" (
    "AddressID" uuid NOT NULL,
    "Name" character varying(100) NOT NULL,
    "PrimaryContactName" character varying(100),
    "Line1" character varying(500) NOT NULL,
    "Line2" character varying(500),
    "Line3" character varying(500),
    "City" character varying(200),
    "StateOrProvince" character varying(200),
    "County" character varying(200),
    "Country" character varying(200),
    "PostOfficeBox" character varying(200),
    "PostalCode" character varying(200),
    "UTCOffSet" character varying(200),
    "Latitude" double precision,
    "Longitude" double precision,
    "Telephone1" character varying(200),
    "Telephone2" character varying(200),
    "Telephone3" character varying(200),
    "Fax" character varying(200),
    "ParentID" uuid NOT NULL,
    "AddressTypeID" integer NOT NULL,
    "AddressNumber" integer DEFAULT 0 NOT NULL,
    "IsPrimaryAddress" boolean DEFAULT false,
    "AddressCategoryID" integer,
    "AddressSubTypeID" integer,
    "BuildingName" character varying(500),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "Order" integer,
    "CountryCode" character varying(300),
    "AdditionalAddressInformation" character varying(1000),
    "Town" character varying(200)
);


ALTER TABLE "Address" OWNER TO postgres;

--
-- TOC entry 203 (class 1259 OID 40475)
-- Name: AddressChronology; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "AddressChronology" (
    "AddressChronologyID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ParentID" uuid NOT NULL,
    "DataFrom" timestamp without time zone NOT NULL,
    "DateTo" timestamp without time zone,
    "IsCurrentAddress" boolean DEFAULT false,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "AddressChronology" OWNER TO postgres;

--
-- TOC entry 204 (class 1259 OID 40482)
-- Name: ApplicationStage; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ApplicationStage" (
    "ApplicationStageID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(50) NOT NULL,
    "Description" character varying(500),
    "Order" integer DEFAULT 0 NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ApplicationStage" OWNER TO postgres;

--
-- TOC entry 205 (class 1259 OID 40492)
-- Name: ApplicationStageWorkflow; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ApplicationStageWorkflow" (
    "ApplicationStageWorkflowID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ApplicationStageID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "VersionNumber" integer NOT NULL
);


ALTER TABLE "ApplicationStageWorkflow" OWNER TO postgres;

--
-- TOC entry 206 (class 1259 OID 40496)
-- Name: Artefact; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Artefact" (
    "ArtefactID" uuid NOT NULL,
    "ArtefactVersionNumber" integer DEFAULT 1 NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ArtefactTemplateID" uuid NOT NULL,
    "ArtefactTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "Artefact" OWNER TO postgres;

--
-- TOC entry 207 (class 1259 OID 40505)
-- Name: ArtefactClaim; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactClaim" (
    "ArtefactClaimID" uuid NOT NULL,
    "ArtefactID" uuid,
    "ArtefactVersionNumber" integer,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ArtefactRoleID" uuid,
    "RoleID" uuid
);


ALTER TABLE "ArtefactClaim" OWNER TO postgres;

--
-- TOC entry 208 (class 1259 OID 40510)
-- Name: ArtefactClaimTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactClaimTemplate" (
    "ArtefactClaimTemplateID" uuid NOT NULL,
    "ArtefactTemplateID" uuid,
    "ArtefactTemplateVersionNumber" integer,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ArtefactRoleTemplateID" uuid,
    "RoleID" uuid
);


ALTER TABLE "ArtefactClaimTemplate" OWNER TO postgres;

--
-- TOC entry 209 (class 1259 OID 40515)
-- Name: ArtefactDependency; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactDependency" (
    "ArtefactDependencyID" uuid NOT NULL,
    "ArtefactID" uuid NOT NULL,
    "ArtefactVersionNumber" integer NOT NULL,
    "DependencyArtefactID" uuid NOT NULL,
    "DependencyArtefactVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ArtefactDependencyTemplateID" uuid NOT NULL
);


ALTER TABLE "ArtefactDependency" OWNER TO postgres;

--
-- TOC entry 210 (class 1259 OID 40520)
-- Name: ArtefactDependencyStatusType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactDependencyStatusType" (
    "ArtefactDependencyStatusTypeID" uuid NOT NULL,
    "ArtefactDependencyID" uuid,
    "ArtefactID" uuid,
    "ArtefactVersionNumber" integer,
    "StatusTypeID" uuid,
    "StatusTypeVersionNumber" integer,
    "StatusTypeValueID" uuid,
    "DependencyCanBeCreated" boolean DEFAULT false,
    "DependencyCanBeEdited" boolean DEFAULT false NOT NULL,
    "DependencyCanBeDeleted" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ArtefactDependencyStatusType" OWNER TO postgres;

--
-- TOC entry 211 (class 1259 OID 40528)
-- Name: ArtefactDependencyStatusTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactDependencyStatusTypeTemplate" (
    "ArtefactDependencyStatusTypeTemplate" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ArtefactDependencyTemplateID" uuid NOT NULL,
    "ArtefactTemplateID" uuid NOT NULL,
    "ArtefactTemplateVersionNumber" integer NOT NULL,
    "StatusTypeTemplateID" uuid NOT NULL,
    "StatusTypeTemplateVersionNumber" integer NOT NULL,
    "StatusTypeValueTemplateID" uuid,
    "DependencyCanBeCreated" boolean DEFAULT true NOT NULL,
    "DependencyCanBeEdited" boolean DEFAULT false NOT NULL,
    "DependencyCanBeDeleted" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ArtefactDependencyStatusTypeTemplate" OWNER TO postgres;

--
-- TOC entry 212 (class 1259 OID 40537)
-- Name: ArtefactDependencyTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactDependencyTemplate" (
    "ArtefactDependencyTemplateID" uuid NOT NULL,
    "ArtefactTemplateID" uuid NOT NULL,
    "ArtefactTemplateVersionNumber" integer NOT NULL,
    "DependencyArtefactTemplateID" uuid NOT NULL,
    "DependencyArtefactTemplateVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ArtefactDependencyTemplate" OWNER TO postgres;

--
-- TOC entry 213 (class 1259 OID 40542)
-- Name: ArtefactNotificationConstruct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactNotificationConstruct" (
    "ArtefactID" uuid NOT NULL,
    "ArtefactVersionNumber" integer NOT NULL,
    "NotificationConstructID" uuid NOT NULL,
    "NotificationConstructVersionNumber" integer NOT NULL,
    "ArtefactNotificationConstructID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ArtefactNotificationConstruct" OWNER TO postgres;

--
-- TOC entry 214 (class 1259 OID 40547)
-- Name: ArtefactNotificationConstructTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactNotificationConstructTemplate" (
    "ArtefactTemplateID" uuid NOT NULL,
    "ArtefactTemplateVersionNumber" integer NOT NULL,
    "NotificationConstructTemplateID" uuid NOT NULL,
    "NotificationConstructTemplateVersionNumber" integer NOT NULL,
    "ArtefactNotificationConstructTemplateID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ArtefactNotificationConstructTemplate" OWNER TO postgres;

--
-- TOC entry 215 (class 1259 OID 40552)
-- Name: ArtefactProduct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactProduct" (
    "ArtefactID" uuid NOT NULL,
    "ArtefactVersionNumber" integer NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ArtefactProduct" OWNER TO postgres;

--
-- TOC entry 216 (class 1259 OID 40557)
-- Name: ArtefactProductTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactProductTemplate" (
    "ArtefactTemplateID" uuid NOT NULL,
    "ArtefactTemplateVersionNumber" integer NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ArtefactProductTemplate" OWNER TO postgres;

--
-- TOC entry 217 (class 1259 OID 40562)
-- Name: ArtefactRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactRole" (
    "ArtefactRoleID" uuid NOT NULL,
    "ArtefactID" uuid,
    "ArtefactVersionNumber" integer,
    "RoleName" character varying(300) NOT NULL,
    "RoleDescription" character varying(2000),
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "RoleSubCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ArtefactRole" OWNER TO postgres;

--
-- TOC entry 218 (class 1259 OID 40570)
-- Name: ArtefactRoleTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactRoleTemplate" (
    "ArtefactRoleTemplateID" uuid NOT NULL,
    "ArtefactTemplateID" uuid,
    "ArtefactTemplateVersionNumber" integer,
    "RoleName" character varying(300) NOT NULL,
    "RoleDescription" character varying(2000),
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "RoleSubCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ArtefactRoleTemplate" OWNER TO postgres;

--
-- TOC entry 219 (class 1259 OID 40578)
-- Name: ArtefactStatusType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactStatusType" (
    "ArtefactID" uuid NOT NULL,
    "ArtefactVersionNumber" integer NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL
);


ALTER TABLE "ArtefactStatusType" OWNER TO postgres;

--
-- TOC entry 220 (class 1259 OID 40581)
-- Name: ArtefactStatusTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactStatusTypeTemplate" (
    "ArtefactTemplateID" uuid NOT NULL,
    "ArtefactTemplateVersionNumber" integer NOT NULL,
    "StatusTypeTemplateID" uuid NOT NULL,
    "StatusTypeTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "ArtefactStatusTypeTemplate" OWNER TO postgres;

--
-- TOC entry 221 (class 1259 OID 40584)
-- Name: ArtefactSubscription; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactSubscription" (
    "ArtefactSubscriptionID" uuid NOT NULL,
    "ArtefactID" uuid NOT NULL,
    "ArtefactVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "PlanSubscriptionID" uuid NOT NULL,
    "PlanSubscriptionVersionNumber" integer NOT NULL
);


ALTER TABLE "ArtefactSubscription" OWNER TO postgres;

--
-- TOC entry 222 (class 1259 OID 40589)
-- Name: ArtefactSubscriptionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactSubscriptionTemplate" (
    "ArtefactSubscriptionTemplateID" uuid NOT NULL,
    "ArtefactTemplateID" uuid NOT NULL,
    "ArtefactTemplateVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "PlanSubscriptionTemplateID" uuid NOT NULL,
    "PlanSubscriptionTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "ArtefactSubscriptionTemplate" OWNER TO postgres;

--
-- TOC entry 223 (class 1259 OID 40594)
-- Name: ArtefactTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactTemplate" (
    "ArtefactTemplateID" uuid NOT NULL,
    "ArtefactTemplateVersionNumber" integer DEFAULT 1 NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ArtefactTemplate" OWNER TO postgres;

--
-- TOC entry 224 (class 1259 OID 40603)
-- Name: ArtefactWorkflow; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactWorkflow" (
    "ArtefactID" uuid NOT NULL,
    "ArtefactVersionNumber" integer NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "ArtefactWorkflowID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ArtefactWorkflow" OWNER TO postgres;

--
-- TOC entry 225 (class 1259 OID 40608)
-- Name: ArtefactWorkflowTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ArtefactWorkflowTemplate" (
    "ArtefactTemplateID" uuid NOT NULL,
    "ArtefactTemplateVersionNumber" integer NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "ArtefactWorkflowTemplateID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ArtefactWorkflowTemplate" OWNER TO postgres;

--
-- TOC entry 226 (class 1259 OID 40613)
-- Name: Attachment; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Attachment" (
    "AttachmentID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "MimeType" character varying(256),
    "Body" bytea,
    "Subject" character varying(2000),
    "FileName" character varying(2000),
    "FileSize" integer,
    "AttachmentDetailID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentID" uuid
);


ALTER TABLE "Attachment" OWNER TO postgres;

--
-- TOC entry 227 (class 1259 OID 40622)
-- Name: AttachmentDetail; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "AttachmentDetail" (
    "AttachmentDetailID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "OrganisationID" uuid,
    "AttachmentTypeID" integer NOT NULL,
    "AttachmentSubTypeID" integer,
    "AttachmentCategoryID" integer,
    "RepositoryStructureID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentID" uuid
);


ALTER TABLE "AttachmentDetail" OWNER TO postgres;

--
-- TOC entry 228 (class 1259 OID 40628)
-- Name: AttachmentDetailGroup; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "AttachmentDetailGroup" (
    "AttachmentDetailGroupID" integer NOT NULL,
    "AttachmentDetailID" uuid NOT NULL,
    "OrganisationGroupID" uuid,
    "OrganisationExternalGroupID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "AttachmentDetailGroup" OWNER TO postgres;

--
-- TOC entry 229 (class 1259 OID 40633)
-- Name: AttachmentDetailGroup_AttachmentDetailGroupID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "AttachmentDetailGroup_AttachmentDetailGroupID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "AttachmentDetailGroup_AttachmentDetailGroupID_seq" OWNER TO postgres;

--
-- TOC entry 8697 (class 0 OID 0)
-- Dependencies: 229
-- Name: AttachmentDetailGroup_AttachmentDetailGroupID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "AttachmentDetailGroup_AttachmentDetailGroupID_seq" OWNED BY "AttachmentDetailGroup"."AttachmentDetailGroupID";


--
-- TOC entry 230 (class 1259 OID 40635)
-- Name: AttachmentDetailRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "AttachmentDetailRole" (
    "AttachmentDetailID" uuid NOT NULL,
    "OrganisationRoleID" uuid,
    "OrganisationExternalRoleID" uuid,
    "AttachmentDetailRoleID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "AttachmentDetailRole" OWNER TO postgres;

--
-- TOC entry 231 (class 1259 OID 40640)
-- Name: AttachmentDetailRole_AttachmentDetailRoleID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "AttachmentDetailRole_AttachmentDetailRoleID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "AttachmentDetailRole_AttachmentDetailRoleID_seq" OWNER TO postgres;

--
-- TOC entry 8698 (class 0 OID 0)
-- Dependencies: 231
-- Name: AttachmentDetailRole_AttachmentDetailRoleID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "AttachmentDetailRole_AttachmentDetailRoleID_seq" OWNED BY "AttachmentDetailRole"."AttachmentDetailRoleID";


--
-- TOC entry 232 (class 1259 OID 40642)
-- Name: BankSortCode; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "BankSortCode" (
    "SortCode" character varying NOT NULL,
    "Address" character varying(2000) NOT NULL,
    "BankName" character varying(300) NOT NULL
);


ALTER TABLE "BankSortCode" OWNER TO postgres;

--
-- TOC entry 233 (class 1259 OID 40648)
-- Name: Billing; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Billing" (
    "BillingID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "BillingPeriod" integer NOT NULL,
    "BillingPeriodUnitID" integer NOT NULL,
    "BillingLagPeriod" integer,
    "BillingLagPeriodUnitID" integer,
    "BillingPeriodDayOfMonth" integer,
    "DelayedBillingPeriod" integer,
    "DelayedBillingPeriodUnitID" integer,
    "HasDelayedBilling" boolean DEFAULT false,
    "BillingTemplateID" uuid,
    "NumberOfBillingPeriods" integer,
    "InvoiceToProcessingDelayPeriod" integer,
    "InvoiceToProcessingDelayPeriodUnitID" integer,
    "InvoiceNotificationConstructID" uuid,
    "InvoiceNotificationConstructVersionNumber" integer,
    "EstimatedProcessingPeriod" integer,
    "EstimatedProcessingPeriodUnitID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "Billing" OWNER TO postgres;

--
-- TOC entry 234 (class 1259 OID 40655)
-- Name: BillingTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "BillingTemplate" (
    "BillingTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "BillingPeriod" integer NOT NULL,
    "BillingPeriodUnitID" integer NOT NULL,
    "ParentID" uuid,
    "BillingLagPeriod" integer,
    "BillingLagPeriodUnitID" integer,
    "BillingPeriodDayOfMonth" integer,
    "DelayedBillingPeriod" integer,
    "DelayedBillingPeriodUnitID" integer,
    "HasDelayedBilling" boolean DEFAULT false,
    "NumberOfBillingPeriods" integer,
    "InvoiceToProcessingDelayPeriod" integer,
    "InvoiceToProcessingDelayPeriodUnitID" integer,
    "InvoiceNotificationConstructTemplateID" uuid,
    "InvoiceNotificationConstructTemplateVersionNumber" integer,
    "EstimatedProcessingPeriod" integer,
    "EstimatedProcessingPeriodUnitID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "BillingTemplate" OWNER TO postgres;

--
-- TOC entry 235 (class 1259 OID 40662)
-- Name: Bucket; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Bucket" (
    "BucketID" uuid NOT NULL,
    "BucketName" character varying(500) NOT NULL,
    "BucketDescription" character varying(5000),
    "BucketTypeID" integer,
    "BucketSubTypeID" integer,
    "BucketCategoryID" integer,
    "BucketSubCategoryID" integer,
    "IsGlobal" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "Bucket" OWNER TO postgres;

--
-- TOC entry 236 (class 1259 OID 40671)
-- Name: BucketTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "BucketTemplate" (
    "BucketTemplateID" uuid NOT NULL,
    "BucketName" character varying(500) NOT NULL,
    "BucketDescription" character varying(5000),
    "BucketTypeID" integer,
    "BucketSubTypeID" integer,
    "BucketCategoryID" integer,
    "BucketSubCategoryID" integer,
    "IsGlobal" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "BucketTemplate" OWNER TO postgres;

--
-- TOC entry 237 (class 1259 OID 40680)
-- Name: BusMessage; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "BusMessage" (
    "MessageId" uuid NOT NULL,
    "CorrelationId" uuid NOT NULL,
    "BusMessageID" uuid NOT NULL,
    "ConversationId" uuid NOT NULL,
    "TimeSent" timestamp without time zone,
    "EnclosedMessageTypes" character varying NOT NULL,
    "WinIdName" character varying NOT NULL,
    "ProcessingMachine" character varying NOT NULL,
    "ProcessingStarted" timestamp without time zone,
    "BusMessageTypeID" integer NOT NULL,
    "MessageSentFrom" character varying(300),
    "Source" character varying(300),
    "ParentID" uuid,
    "EventReference" character varying(1000)
);


ALTER TABLE "BusMessage" OWNER TO postgres;

--
-- TOC entry 238 (class 1259 OID 40686)
-- Name: BusMessageContent; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "BusMessageContent" (
    "BusMessageContentID" integer DEFAULT nextval(('public.busmessagecontent_busmessagecontentid_seq'::text)::regclass) NOT NULL,
    "BusMessageContent" bytea NOT NULL,
    "BusMessageID" uuid NOT NULL,
    "BusMessageContentType" character varying(500) NOT NULL,
    "BusMessageHeader" json
);


ALTER TABLE "BusMessageContent" OWNER TO postgres;

--
-- TOC entry 239 (class 1259 OID 40693)
-- Name: BusMessageProcessLog; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "BusMessageProcessLog" (
    "BusMessageID" uuid NOT NULL,
    "CreatedOn" timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    "BusMessageProcessLogID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProcessDetail" json,
    "ProcessMessage" character varying(2000),
    "ParentID" uuid,
    "BusMessageSubscriber" character varying(300) NOT NULL,
    "BusMessageHandler" character varying(300) NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "HasError" boolean DEFAULT false NOT NULL,
    "NumberOfRetries" integer DEFAULT 0 NOT NULL,
    "IsComplete" boolean DEFAULT false NOT NULL
);


ALTER TABLE "BusMessageProcessLog" OWNER TO postgres;

--
-- TOC entry 240 (class 1259 OID 40704)
-- Name: BusTask; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "BusTask" (
    "BusTaskID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "CreatedOn" timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "BusTaskHandlerID" uuid NOT NULL,
    "BusTaskVersionNumber" integer NOT NULL
);


ALTER TABLE "BusTask" OWNER TO postgres;

--
-- TOC entry 241 (class 1259 OID 40714)
-- Name: BusTaskHandler; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "BusTaskHandler" (
    "BusTaskHandlerID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "ObjectTypeName" character varying(500) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ObjectTypeAssembly" character varying(300),
    "MessageTypeName" character varying(300),
    "MessageTypeAssembly" character varying(300),
    "HandlerMessageTypeName" character varying(500),
    "HandlerMessageTypeAssembly" character varying(500),
    "IsHandlerBasedTask" boolean DEFAULT false,
    "NumberOfRetries" integer DEFAULT 1,
    "TaskDataHasExpiry" boolean DEFAULT false NOT NULL,
    "TaskDataExpiryPeriodUnitID" integer,
    "TaskDataExpiryPeriod" integer,
    "DefaultProcessDataTypeID" integer,
    "DefaultProcessDataCategoryID" integer
);


ALTER TABLE "BusTaskHandler" OWNER TO postgres;

--
-- TOC entry 242 (class 1259 OID 40726)
-- Name: BusTaskSchedule; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "BusTaskSchedule" (
    "BusTaskScheduleID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "BusTaskID" uuid NOT NULL,
    "IntervalInMinutes" integer DEFAULT 0 NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "BusTaskVersionNumber" integer NOT NULL
);


ALTER TABLE "BusTaskSchedule" OWNER TO postgres;

--
-- TOC entry 243 (class 1259 OID 40733)
-- Name: BusTaskScheduleProcessLog; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "BusTaskScheduleProcessLog" (
    "CreatedOn" timestamp without time zone NOT NULL,
    "HasError" boolean DEFAULT false NOT NULL,
    "IsComplete" boolean DEFAULT false NOT NULL,
    "ProcessMessage" character varying(2000),
    "ProcessDetail" json,
    "BusTaskScheduleID" uuid NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "BusTaskScheduleProcessLogID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ParentID" uuid,
    "NumberOfRetries" integer DEFAULT 0 NOT NULL
);


ALTER TABLE "BusTaskScheduleProcessLog" OWNER TO postgres;

--
-- TOC entry 244 (class 1259 OID 40743)
-- Name: ClassificationType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ClassificationType" (
    "ClassificationTypeID" integer NOT NULL,
    "Name" character varying(100) NOT NULL,
    "Description" character varying,
    "ClassificationTypeCategoryID" integer NOT NULL,
    "ParentClassificationTypeCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ClassificationType" OWNER TO postgres;

--
-- TOC entry 245 (class 1259 OID 40751)
-- Name: ClassificationTypeCategory; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ClassificationTypeCategory" (
    "ClassificationTypeCategoryID" integer NOT NULL,
    "Name" character varying(50) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ClassificationTypeCategory" OWNER TO postgres;

--
-- TOC entry 246 (class 1259 OID 40756)
-- Name: ClassificationTypeCategory_ClassificationTypeCategoryID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "ClassificationTypeCategory_ClassificationTypeCategoryID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "ClassificationTypeCategory_ClassificationTypeCategoryID_seq" OWNER TO postgres;

--
-- TOC entry 8699 (class 0 OID 0)
-- Dependencies: 246
-- Name: ClassificationTypeCategory_ClassificationTypeCategoryID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "ClassificationTypeCategory_ClassificationTypeCategoryID_seq" OWNED BY "ClassificationTypeCategory"."ClassificationTypeCategoryID";


--
-- TOC entry 247 (class 1259 OID 40758)
-- Name: ClassificationType_ClassificationTypeID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "ClassificationType_ClassificationTypeID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "ClassificationType_ClassificationTypeID_seq" OWNER TO postgres;

--
-- TOC entry 8700 (class 0 OID 0)
-- Dependencies: 247
-- Name: ClassificationType_ClassificationTypeID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "ClassificationType_ClassificationTypeID_seq" OWNED BY "ClassificationType"."ClassificationTypeID";


--
-- TOC entry 248 (class 1259 OID 40760)
-- Name: CompanyHouse; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "CompanyHouse" (
    companyname character varying(250) NOT NULL,
    companynumber character varying(25),
    "regaddress.careof" character varying(50),
    "regaddress.pobox" character varying(25),
    "regaddress.addressline1" character varying(100),
    " regaddress.addressline2" character varying(50),
    "regaddress.posttown" character varying(50),
    "regaddress.county" character varying(50),
    "regaddress.country" character varying(25),
    "regaddress.postcode" character varying(25),
    companycategory character varying(100),
    companystatus character varying(50),
    countryoforigin character varying(25),
    dissolutiondate character varying(25),
    incorporationdate character varying(25),
    "accounts.accountrefday" character varying(25),
    "accounts.accountrefmonth" character varying(25),
    "accounts.nextduedate" character varying(25),
    "accounts.lastmadeupdate" character varying(25),
    "accounts.accountcategory" character varying(50),
    "returns.nextduedate" character varying(25),
    "returns.lastmadeupdate" character varying(25),
    "mortgages.nummortcharges" integer,
    "mortgages.nummortoutstanding" integer,
    "mortgages.nummortpartsatisfied" integer,
    "mortgages.nummortsatisfied" integer,
    "siccode.sictext_1" character varying(250),
    "siccode.sictext_2" character varying(250),
    "siccode.sictext_3" character varying(100),
    "siccode.sictext_4" character varying(100),
    "limitedpartnerships.numgenpartners" integer,
    "limitedpartnerships.numlimpartners" integer,
    uri character varying(50),
    "previousname_1.condate" character varying(25),
    " previousname_1.companyname" character varying(100),
    " previousname_2.condate" character varying(25),
    " previousname_2.companyname" character varying(50),
    "previousname_3.condate" character varying(25),
    " previousname_3.companyname" character varying(50),
    "previousname_4.condate" character varying(25),
    " previousname_4.companyname" character varying(25),
    "previousname_5.condate" character varying(25),
    " previousname_5.companyname" character varying(50),
    "previousname_6.condate" character varying(25),
    " previousname_6.companyname" character varying(25),
    "previousname_7.condate" character varying(25),
    " previousname_7.companyname" character varying(25),
    "previousname_8.condate" character varying(25),
    " previousname_8.companyname" character varying(25),
    "previousname_9.condate" character varying(25),
    " previousname_9.companyname" character varying(25),
    "previousname_10.condate" character varying(25),
    " previousname_10.companyname" character varying(25)
);


ALTER TABLE "CompanyHouse" OWNER TO postgres;

--
-- TOC entry 249 (class 1259 OID 40766)
-- Name: ComponentTier; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ComponentTier" (
    "ComponentTierID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "TotalValueLowerBound" numeric(30,8),
    "TotalValueUpperBound" numeric(30,8),
    "QuantityCountLowerBound" integer,
    "QuantityCountUpperBound" integer,
    "IsPercentageBased" boolean DEFAULT false NOT NULL,
    "TierPrice" numeric(30,8),
    "TierPercentage" numeric(30,8),
    "ApplyToTotal" boolean DEFAULT false NOT NULL,
    "ApplyOnPaymentMethodTypeID" integer,
    "ApplyPerTransaction" boolean DEFAULT false NOT NULL,
    "Name" character varying(400),
    "Description" character varying(2000),
    "Order" integer NOT NULL,
    "TierOrder" integer,
    "ParentID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "OrganisationTypeID" integer,
    "UserTypeID" uuid,
    "HasNoUpperBound" boolean DEFAULT false NOT NULL,
    "ParentVersionNumber" integer,
    "ApplyOnPaymentCardTypeID" integer
);


ALTER TABLE "ComponentTier" OWNER TO postgres;

--
-- TOC entry 250 (class 1259 OID 40779)
-- Name: ComponentTierTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ComponentTierTemplate" (
    "ComponentTierTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "TotalValueLowerBound" numeric(30,8),
    "TotalValueUpperBound" numeric(30,8),
    "QuantityCountLowerBound" integer,
    "QuantityCountUpperBound" integer,
    "IsPercentageBased" boolean DEFAULT false NOT NULL,
    "TierPrice" numeric(30,8),
    "TierPercentage" numeric(30,8),
    "ApplyToTotal" boolean DEFAULT false NOT NULL,
    "ApplyOnPaymentMethodTypeID" integer,
    "ApplyPerTransaction" boolean DEFAULT false NOT NULL,
    "Name" character varying(400),
    "Description" character varying(2000),
    "Order" integer NOT NULL,
    "TierOrder" integer,
    "ParentID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "OrganisationTypeID" integer,
    "UserTypeID" uuid,
    "HasNoUpperBound" boolean DEFAULT false NOT NULL,
    "ParentVersionNumber" integer,
    "ApplyOnPaymentCardTypeID" integer
);


ALTER TABLE "ComponentTierTemplate" OWNER TO postgres;

--
-- TOC entry 251 (class 1259 OID 40792)
-- Name: Contact; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Contact" (
    "ContactID" uuid NOT NULL,
    "ContactName" character varying(100) NOT NULL,
    "MasterContactID" uuid,
    "ParentID" uuid NOT NULL,
    "OwnerID" uuid,
    "CustomerTypeID" character varying,
    "PreferredContactMethodID" integer,
    "IsBackOfficeCustomer" boolean DEFAULT false,
    "Salutation" character varying(100),
    "JobTitle" character varying(100),
    "FirstName" character varying(100),
    "Department" character varying(100),
    "NickName" character varying(100),
    "MiddleName" character varying(100),
    "LastName" character varying(100),
    "BirthDate" timestamp without time zone,
    "Description" character varying,
    "GenderTypeID" integer,
    "HasChildren" boolean,
    "EducationTypeID" integer,
    "WebSiteURL" character varying,
    "EmailAddress1" character varying(200),
    "EmailAddress2" character varying(200),
    "EmailAddress3" character varying(200),
    "AssistantName" character varying(200),
    "AssistantPhone" character varying(200),
    "ManagerName" character varying(200),
    "ManagerPhone" character varying(200),
    "CountryTypeID" integer,
    "DoNotFax" boolean,
    "DoNotEmail" boolean DEFAULT false,
    "DoNotTelephone" boolean DEFAULT false,
    "IsPrivate" boolean DEFAULT false,
    "Telephone1" character varying(50),
    "Telephone2" character varying(50),
    "Telephone3" character varying(50),
    "Fax" character varying(50),
    "MobileNumber1" character varying(50),
    "MobileNumber2" character varying(50),
    "MobileNumber3" character varying(50),
    "OrganisationUnitID" integer,
    "ParentContactID" uuid,
    "IsPrimaryContact" boolean DEFAULT false NOT NULL,
    "ContactTypeID" integer,
    "ContactSubTypeID" integer,
    "ContactCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "FirmName" character varying(500)
);


ALTER TABLE "Contact" OWNER TO postgres;

--
-- TOC entry 252 (class 1259 OID 40806)
-- Name: ContactName; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ContactName" (
    "ContactNameID" uuid NOT NULL,
    "ContactID" uuid NOT NULL,
    "SalutationTypeID" integer NOT NULL,
    "FirstName" character varying(200) NOT NULL,
    "MiddleName" character varying(200) NOT NULL,
    "LastName" character varying(200) NOT NULL,
    "NickName" character varying(200) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ContactName" OWNER TO postgres;

--
-- TOC entry 253 (class 1259 OID 40814)
-- Name: ContactPhone; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ContactPhone" (
    "ContactPhoneId" integer NOT NULL,
    "ContactID" uuid,
    "PhoneTypeID" integer NOT NULL,
    "PhoneNumber" integer NOT NULL,
    "CountryCode" character varying(15),
    "IsPrimary" boolean DEFAULT true NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ContactPhone" OWNER TO postgres;

--
-- TOC entry 254 (class 1259 OID 40820)
-- Name: ContactRegulator; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ContactRegulator" (
    "ContactID" uuid NOT NULL,
    "RegulatorID" integer DEFAULT nextval(('public.contactregulator_regulatorid_seq'::text)::regclass) NOT NULL,
    "RegulatorNumber" character varying(50),
    "IsPrimary" boolean DEFAULT true NOT NULL,
    "DateQualified" timestamp without time zone,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "RegulatorName" character varying(500),
    "RegulatorOtherName" character varying(500)
);


ALTER TABLE "ContactRegulator" OWNER TO postgres;

--
-- TOC entry 255 (class 1259 OID 40830)
-- Name: CountryCode; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "CountryCode" (
    "CountryCode" character varying(300) NOT NULL,
    "CountryName" character varying(400) NOT NULL,
    "CurrencyCode" character varying(30)
);


ALTER TABLE "CountryCode" OWNER TO postgres;

--
-- TOC entry 256 (class 1259 OID 40836)
-- Name: CountryDeduction; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "CountryDeduction" (
    "CountryCode" character varying(300) NOT NULL,
    "DeductionPercentage" numeric(30,8),
    "DeductionValue" numeric(30,8),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsAppliedToAllOrders" boolean DEFAULT true NOT NULL,
    "DeductionID" uuid NOT NULL,
    "CountryDeductionID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DeductionVersionNumber" integer NOT NULL
);


ALTER TABLE "CountryDeduction" OWNER TO postgres;

--
-- TOC entry 257 (class 1259 OID 40843)
-- Name: CountryDeductionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "CountryDeductionTemplate" (
    "DeductionTemplateID" uuid NOT NULL,
    "CountryCode" character varying(300) NOT NULL,
    "DeductionPercentage" numeric(30,8),
    "DeductionValue" numeric(30,8),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsAppliedToAllOrders" boolean DEFAULT true NOT NULL,
    "CountryDeductionTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DeductionTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "CountryDeductionTemplate" OWNER TO postgres;

--
-- TOC entry 258 (class 1259 OID 40850)
-- Name: CurrencyCode; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "CurrencyCode" (
    "CurrencyCode" character varying(150) NOT NULL,
    "CurrencyName" character varying(400) NOT NULL
);


ALTER TABLE "CurrencyCode" OWNER TO postgres;

--
-- TOC entry 259 (class 1259 OID 40856)
-- Name: CurrencyRate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "CurrencyRate" (
    "CurrencyCode" character varying(30) NOT NULL,
    "CurrencyRateDate" date NOT NULL,
    "CurrencyRate" numeric(30,8) NOT NULL,
    "CurrencyRateToGBP" numeric(30,8),
    "CurrencyRateToUSD" numeric(30,8) NOT NULL,
    "CurrencyRateID" integer NOT NULL
);


ALTER TABLE "CurrencyRate" OWNER TO postgres;

--
-- TOC entry 260 (class 1259 OID 40859)
-- Name: CurrencyRate_currencyrateid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "CurrencyRate_currencyrateid_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "CurrencyRate_currencyrateid_seq" OWNER TO postgres;

--
-- TOC entry 8701 (class 0 OID 0)
-- Dependencies: 260
-- Name: CurrencyRate_currencyrateid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "CurrencyRate_currencyrateid_seq" OWNED BY "CurrencyRate"."CurrencyRateID";


--
-- TOC entry 261 (class 1259 OID 40861)
-- Name: Deduction; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Deduction" (
    "DeductionID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DeductionTypeID" integer,
    "DeductionSubTypeID" integer,
    "DeductionCategoryID" integer,
    "DeductionSubCategoryID" integer,
    "Name" character varying(300) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsPercentageBased" boolean DEFAULT true NOT NULL,
    "DeductionVersionNumber" integer NOT NULL,
    "OrganisationTypeID" integer,
    "UserTypeID" uuid,
    "IsTierDeduction" boolean DEFAULT false NOT NULL,
    "IsCheckoutDeduction" boolean DEFAULT false NOT NULL,
    "ParentID" uuid,
    "DeductionTemplateID" uuid,
    "DeductionTemplateVersionNumber" integer
);


ALTER TABLE "Deduction" OWNER TO postgres;

--
-- TOC entry 262 (class 1259 OID 40873)
-- Name: DeductionComponentTier; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DeductionComponentTier" (
    "DeductionID" uuid NOT NULL,
    "DeductionVersionNumber" integer NOT NULL,
    "ComponentTierID" uuid NOT NULL
);


ALTER TABLE "DeductionComponentTier" OWNER TO postgres;

--
-- TOC entry 263 (class 1259 OID 40876)
-- Name: DeductionComponentTierTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DeductionComponentTierTemplate" (
    "DeductionTemplateID" uuid NOT NULL,
    "DeductionTemplateVersionNumber" integer NOT NULL,
    "ComponentTierTemplateID" uuid NOT NULL
);


ALTER TABLE "DeductionComponentTierTemplate" OWNER TO postgres;

--
-- TOC entry 264 (class 1259 OID 40879)
-- Name: DeductionProduct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DeductionProduct" (
    "DeductionID" uuid NOT NULL,
    "DeductionVersionNumber" integer NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL
);


ALTER TABLE "DeductionProduct" OWNER TO postgres;

--
-- TOC entry 265 (class 1259 OID 40882)
-- Name: DeductionProductTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DeductionProductTemplate" (
    "DeductionTemplateID" uuid NOT NULL,
    "DeductionTemplateVersionNumber" integer NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL
);


ALTER TABLE "DeductionProductTemplate" OWNER TO postgres;

--
-- TOC entry 266 (class 1259 OID 40885)
-- Name: DeductionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DeductionTemplate" (
    "DeductionTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DeductionTypeID" integer,
    "DeductionSubTypeID" integer,
    "DeductionCategoryID" integer,
    "DeductionSubCategoryID" integer,
    "Name" character varying(300) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsPercentageBased" boolean DEFAULT true NOT NULL,
    "DeductionTemplateVersionNumber" integer NOT NULL,
    "OrganisationTypeID" integer,
    "UserTypeID" uuid,
    "IsTierDeduction" boolean DEFAULT false NOT NULL,
    "IsCheckoutDeduction" boolean DEFAULT false NOT NULL,
    "ParentID" uuid
);


ALTER TABLE "DeductionTemplate" OWNER TO postgres;

--
-- TOC entry 267 (class 1259 OID 40897)
-- Name: DefaultOrganisation; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisation" (
    "DefaultOrganisationID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(500) NOT NULL,
    "Description" character varying NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationVersionNumber" integer NOT NULL,
    "DefaultOrganisationTemplateID" uuid,
    "DefaultOrganisationTemplateVersionNumber" integer,
    "OrganisationTypeID" integer NOT NULL
);


ALTER TABLE "DefaultOrganisation" OWNER TO postgres;

--
-- TOC entry 268 (class 1259 OID 40906)
-- Name: DefaultOrganisationArtefact; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationArtefact" (
    "DefaultOrganisationID" uuid NOT NULL,
    "ArtefactID" uuid NOT NULL,
    "ArtefactVersionNumber" integer NOT NULL,
    "ParentID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationArtefact" OWNER TO postgres;

--
-- TOC entry 269 (class 1259 OID 40911)
-- Name: DefaultOrganisationArtefactTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationArtefactTemplate" (
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "ArtefactTemplateID" uuid NOT NULL,
    "ArtefactTemplateVersionNumber" integer NOT NULL,
    "ParentID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationArtefactTemplate" OWNER TO postgres;

--
-- TOC entry 270 (class 1259 OID 40916)
-- Name: DefaultOrganisationBranch; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationBranch" (
    "DefaultOrganisationBranchID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DefaultOrganisationID" uuid NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "BranchName" character varying(30),
    "BranchSubType" integer,
    "DefaultOrganisationVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationBranch" OWNER TO postgres;

--
-- TOC entry 271 (class 1259 OID 40920)
-- Name: DefaultOrganisationBranchTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationBranchTemplate" (
    "DefaultOrganisationBranchTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "BranchName" character varying(200),
    "BranchSubType" integer NOT NULL,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationBranchTemplate" OWNER TO postgres;

--
-- TOC entry 272 (class 1259 OID 40924)
-- Name: DefaultOrganisationBucket; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationBucket" (
    "DefaultOrganisationID" uuid NOT NULL,
    "BucketTemplateID" uuid NOT NULL,
    "DefaultOrganisationVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationBucket" OWNER TO postgres;

--
-- TOC entry 273 (class 1259 OID 40927)
-- Name: DefaultOrganisationBucketTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationBucketTemplate" (
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "BucketTemplateID" uuid NOT NULL,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationBucketTemplate" OWNER TO postgres;

--
-- TOC entry 274 (class 1259 OID 40930)
-- Name: DefaultOrganisationGroup; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationGroup" (
    "DefaultOrganisationGroupID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DefaultOrganisationID" uuid NOT NULL,
    "GroupName" character varying(300),
    "GroupDescription" character varying(2000),
    "GroupTypeID" integer,
    "GroupSubTypeID" integer,
    "GroupCategoryID" integer,
    "GroupSubCategoryID" integer,
    "ParentID" uuid,
    "GroupID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsDefaultOrganisationSpecific" boolean DEFAULT false,
    "DefaultOrganisationVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationGroup" OWNER TO postgres;

--
-- TOC entry 275 (class 1259 OID 40940)
-- Name: DefaultOrganisationGroupRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationGroupRole" (
    "DefaultOrganisationGroupID" uuid NOT NULL,
    "DefaultOrganisationRoleID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DefaultOrganisationGroupRole" OWNER TO postgres;

--
-- TOC entry 276 (class 1259 OID 40945)
-- Name: DefaultOrganisationGroupRoleTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationGroupRoleTemplate" (
    "DefaultOrganisationGroupTemplateID" uuid NOT NULL,
    "DefaultOrganisationRoleTemplateID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DefaultOrganisationGroupRoleTemplate" OWNER TO postgres;

--
-- TOC entry 277 (class 1259 OID 40950)
-- Name: DefaultOrganisationGroupTarget; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationGroupTarget" (
    "DefaultOrganisationGroupID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationUserTargetID" uuid NOT NULL
);


ALTER TABLE "DefaultOrganisationGroupTarget" OWNER TO postgres;

--
-- TOC entry 278 (class 1259 OID 40955)
-- Name: DefaultOrganisationGroupTargetTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationGroupTargetTemplate" (
    "DefaultOrganisationGroupTemplateID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationUserTargetTemplateID" uuid NOT NULL
);


ALTER TABLE "DefaultOrganisationGroupTargetTemplate" OWNER TO postgres;

--
-- TOC entry 279 (class 1259 OID 40960)
-- Name: DefaultOrganisationGroupTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationGroupTemplate" (
    "DefaultOrganisationGroupTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "GroupName" character varying(300),
    "GroupDescription" character varying(2000),
    "GroupTypeID" integer,
    "GroupSubTypeID" integer,
    "GroupCategoryID" integer,
    "GroupSubCategoryID" integer,
    "ParentID" uuid,
    "GroupID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsDefaultOrganisationSpecific" boolean DEFAULT false,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationGroupTemplate" OWNER TO postgres;

--
-- TOC entry 280 (class 1259 OID 40970)
-- Name: DefaultOrganisationLedger; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationLedger" (
    "DefaultOrganisationLedgerID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DefaultOrganisationID" uuid NOT NULL,
    "DefaultOrganisationVersionNumber" integer NOT NULL,
    "LedgerAccountTypeID" integer NOT NULL,
    "LedgerAccountName" character varying(200) NOT NULL,
    "HandlesCredit" boolean DEFAULT false NOT NULL,
    "HandlesDebit" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentID" uuid
);


ALTER TABLE "DefaultOrganisationLedger" OWNER TO postgres;

--
-- TOC entry 281 (class 1259 OID 40978)
-- Name: DefaultOrganisationLedgerTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationLedgerTemplate" (
    "DefaultOrganisationLedgerTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL,
    "LedgerAccountTypeID" integer NOT NULL,
    "LedgerAccountName" character varying(200) NOT NULL,
    "HandlesCredit" boolean DEFAULT false NOT NULL,
    "HandlesDebit" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DefaultOrganisationLedgerTemplate" OWNER TO postgres;

--
-- TOC entry 282 (class 1259 OID 40986)
-- Name: DefaultOrganisationModule; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationModule" (
    "DefaultOrganisationID" uuid NOT NULL,
    "ModuleID" uuid NOT NULL,
    "ModuleVersionNumber" integer NOT NULL,
    "ParentID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationModule" OWNER TO postgres;

--
-- TOC entry 283 (class 1259 OID 40991)
-- Name: DefaultOrganisationModuleTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationModuleTemplate" (
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "ModuleTemplateID" uuid NOT NULL,
    "ModuleTemplateVersionNumber" integer NOT NULL,
    "ParentID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationModuleTemplate" OWNER TO postgres;

--
-- TOC entry 284 (class 1259 OID 40996)
-- Name: DefaultOrganisationNotificationConstruct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationNotificationConstruct" (
    "DefaultOrganisationNotificationConstructID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationID" uuid NOT NULL,
    "NotificationConstructID" uuid NOT NULL,
    "NotificationConstructVersionNumber" integer NOT NULL,
    "ParentID" uuid,
    "DefaultOrganisationVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationNotificationConstruct" OWNER TO postgres;

--
-- TOC entry 285 (class 1259 OID 41002)
-- Name: DefaultOrganisationNotificationConstructTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationNotificationConstructTemplate" (
    "DefaultOrganisationNotificationConstructTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "NotificationConstructTemplateID" uuid NOT NULL,
    "NotificationConstructTemplateVersionNumber" integer NOT NULL,
    "ParentID" uuid,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationNotificationConstructTemplate" OWNER TO postgres;

--
-- TOC entry 286 (class 1259 OID 41008)
-- Name: DefaultOrganisationPaymentMethod; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationPaymentMethod" (
    "DefaultOrganisationID" uuid NOT NULL,
    "DefaultOrganisationVersionNumber" integer NOT NULL,
    "GlobalPaymentMethodID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DefaultOrganisationPaymentMethod" OWNER TO postgres;

--
-- TOC entry 287 (class 1259 OID 41013)
-- Name: DefaultOrganisationPaymentMethodTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationPaymentMethodTemplate" (
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL,
    "GlobalPaymentMethodID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DefaultOrganisationPaymentMethodTemplate" OWNER TO postgres;

--
-- TOC entry 288 (class 1259 OID 41018)
-- Name: DefaultOrganisationProduct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationProduct" (
    "DefaultOrganisationID" uuid NOT NULL,
    "DefaultOrganisationVersionNumber" integer NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DefaultOrganisationProduct" OWNER TO postgres;

--
-- TOC entry 289 (class 1259 OID 41023)
-- Name: DefaultOrganisationProductTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationProductTemplate" (
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DefaultOrganisationProductTemplate" OWNER TO postgres;

--
-- TOC entry 290 (class 1259 OID 41028)
-- Name: DefaultOrganisationRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationRole" (
    "DefaultOrganisationRoleID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DefaultOrganisationID" uuid NOT NULL,
    "RoleName" character varying(300),
    "RoleDescription" character varying(500),
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "RoleSubCategoryID" integer,
    "ParentID" uuid,
    "RoleID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsDefaultOrganisationSpecific" boolean DEFAULT false,
    "DefaultOrganisationVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationRole" OWNER TO postgres;

--
-- TOC entry 291 (class 1259 OID 41038)
-- Name: DefaultOrganisationRoleClaim; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationRoleClaim" (
    "DefaultOrganisationRoleClaimID" integer NOT NULL,
    "DefaultOrganisationRoleID" uuid NOT NULL,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DefaultOrganisationRoleClaim" OWNER TO postgres;

--
-- TOC entry 292 (class 1259 OID 41043)
-- Name: DefaultOrganisationRoleClaimTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationRoleClaimTemplate" (
    "DefaultOrganisationRoleClaimTemplateID" integer NOT NULL,
    "DefaultOrganisationRoleTemplateID" uuid NOT NULL,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DefaultOrganisationRoleClaimTemplate" OWNER TO postgres;

--
-- TOC entry 293 (class 1259 OID 41048)
-- Name: DefaultOrganisationRoleClaimT_DefaultOrganisationRoleClaimT_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "DefaultOrganisationRoleClaimT_DefaultOrganisationRoleClaimT_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "DefaultOrganisationRoleClaimT_DefaultOrganisationRoleClaimT_seq" OWNER TO postgres;

--
-- TOC entry 8702 (class 0 OID 0)
-- Dependencies: 293
-- Name: DefaultOrganisationRoleClaimT_DefaultOrganisationRoleClaimT_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "DefaultOrganisationRoleClaimT_DefaultOrganisationRoleClaimT_seq" OWNED BY "DefaultOrganisationRoleClaimTemplate"."DefaultOrganisationRoleClaimTemplateID";


--
-- TOC entry 294 (class 1259 OID 41050)
-- Name: DefaultOrganisationRoleClaim_DefaultOrganisationRoleClaimID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "DefaultOrganisationRoleClaim_DefaultOrganisationRoleClaimID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "DefaultOrganisationRoleClaim_DefaultOrganisationRoleClaimID_seq" OWNER TO postgres;

--
-- TOC entry 8703 (class 0 OID 0)
-- Dependencies: 294
-- Name: DefaultOrganisationRoleClaim_DefaultOrganisationRoleClaimID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "DefaultOrganisationRoleClaim_DefaultOrganisationRoleClaimID_seq" OWNED BY "DefaultOrganisationRoleClaim"."DefaultOrganisationRoleClaimID";


--
-- TOC entry 295 (class 1259 OID 41052)
-- Name: DefaultOrganisationRoleTarget; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationRoleTarget" (
    "DefaultOrganisationRoleID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationUserTargetID" uuid NOT NULL
);


ALTER TABLE "DefaultOrganisationRoleTarget" OWNER TO postgres;

--
-- TOC entry 296 (class 1259 OID 41057)
-- Name: DefaultOrganisationRoleTargetTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationRoleTargetTemplate" (
    "DefaultOrganisationRoleTemplateID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationUserTargetTemplateID" uuid NOT NULL
);


ALTER TABLE "DefaultOrganisationRoleTargetTemplate" OWNER TO postgres;

--
-- TOC entry 297 (class 1259 OID 41062)
-- Name: DefaultOrganisationRoleTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationRoleTemplate" (
    "DefaultOrganisationRoleTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "RoleName" character varying(300),
    "RoleDescription" character varying(500),
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "RoleSubCategoryID" integer,
    "ParentID" uuid,
    "RoleID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsDefaultOrganisationSpecific" boolean DEFAULT false,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationRoleTemplate" OWNER TO postgres;

--
-- TOC entry 298 (class 1259 OID 41072)
-- Name: DefaultOrganisationShoppingCartBlueprint; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationShoppingCartBlueprint" (
    "DefaultOrganisationID" uuid NOT NULL,
    "DefaultOrganisationVersionNumber" integer NOT NULL,
    "ShoppingCartBlueprintID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DefaultOrganisationShoppingCartBlueprint" OWNER TO postgres;

--
-- TOC entry 299 (class 1259 OID 41077)
-- Name: DefaultOrganisationShoppingCartBlueprintTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationShoppingCartBlueprintTemplate" (
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL,
    "ShoppingCartBlueprintTemplateID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DefaultOrganisationShoppingCartBlueprintTemplate" OWNER TO postgres;

--
-- TOC entry 300 (class 1259 OID 41082)
-- Name: DefaultOrganisationStatusType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationStatusType" (
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "ParentID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationID" uuid NOT NULL,
    "DefaultOrganisationVersionNumber" integer NOT NULL,
    "DefaultStatusTypeValueID" uuid NOT NULL
);


ALTER TABLE "DefaultOrganisationStatusType" OWNER TO postgres;

--
-- TOC entry 301 (class 1259 OID 41087)
-- Name: DefaultOrganisationStatusTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationStatusTypeTemplate" (
    "StatusTypeTemplateID" uuid NOT NULL,
    "StatusTypeTemplateVersionNumber" integer NOT NULL,
    "ParentID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL,
    "DefaultStatusTypeValueTemplateID" uuid NOT NULL
);


ALTER TABLE "DefaultOrganisationStatusTypeTemplate" OWNER TO postgres;

--
-- TOC entry 302 (class 1259 OID 41092)
-- Name: DefaultOrganisationTarget; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationTarget" (
    "DefaultOrganisationTargetID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "OrganisationSubTypeID" integer,
    "OrganisationCategoryID" integer,
    "OrganisationSubCategoryID" integer,
    "DefaultOrganisationID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationVersionNumber" integer NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationTarget" OWNER TO postgres;

--
-- TOC entry 303 (class 1259 OID 41098)
-- Name: DefaultOrganisationTargetTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationTargetTemplate" (
    "DefaultOrganisationTargetTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "OrganisationSubTypeID" integer,
    "OrganisationCategoryID" integer,
    "OrganisationSubCategoryID" integer,
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL,
    "StatusTypeTemplateID" uuid NOT NULL,
    "StatusTypeTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationTargetTemplate" OWNER TO postgres;

--
-- TOC entry 304 (class 1259 OID 41104)
-- Name: DefaultOrganisationTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationTemplate" (
    "DefaultOrganisationTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL,
    "Name" character varying(500) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "OrganisationTypeID" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationTemplate" OWNER TO postgres;

--
-- TOC entry 305 (class 1259 OID 41113)
-- Name: DefaultOrganisationUserTarget; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationUserTarget" (
    "DefaultOrganisationUserTargetID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DefaultOrganisationID" uuid NOT NULL,
    "DefaultOrganisationVersionNumber" integer NOT NULL,
    "UserSubTypeID" integer,
    "UserCategoryID" integer,
    "UserSubCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "ParentID" uuid,
    "IsDefault" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DefaultOrganisationUserTarget" OWNER TO postgres;

--
-- TOC entry 306 (class 1259 OID 41120)
-- Name: DefaultOrganisationUserTargetTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationUserTargetTemplate" (
    "DefaultOrganisationUserTargetTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL,
    "UserSubTypeID" integer,
    "UserCategoryID" integer,
    "UserSubCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "StatusTypeTemplateID" uuid NOT NULL,
    "StatusTypeTemplateVersionNumber" integer NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "IsDefault" boolean DEFAULT false NOT NULL,
    "WorkflowTemplateID" uuid,
    "WorkflowTemplateVersionNumber" integer
);


ALTER TABLE "DefaultOrganisationUserTargetTemplate" OWNER TO postgres;

--
-- TOC entry 307 (class 1259 OID 41127)
-- Name: DefaultOrganisationUserType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationUserType" (
    "DefaultOrganisationID" uuid NOT NULL,
    "DefaultOrganisationVersionNumber" integer NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsForDefaultUser" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DefaultOrganisationUserType" OWNER TO postgres;

--
-- TOC entry 308 (class 1259 OID 41133)
-- Name: DefaultOrganisationUserTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationUserTypeTemplate" (
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsForDefaultUser" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DefaultOrganisationUserTypeTemplate" OWNER TO postgres;

--
-- TOC entry 309 (class 1259 OID 41139)
-- Name: DefaultOrganisationWorkflow; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationWorkflow" (
    "DefaultOrganisationID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "ParentID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationWorkflow" OWNER TO postgres;

--
-- TOC entry 310 (class 1259 OID 41144)
-- Name: DefaultOrganisationWorkflowTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DefaultOrganisationWorkflowTemplate" (
    "DefaultOrganisationTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "ParentID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultOrganisationTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "DefaultOrganisationWorkflowTemplate" OWNER TO postgres;

--
-- TOC entry 311 (class 1259 OID 41149)
-- Name: DirectDebitMandate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DirectDebitMandate" (
    "DirectDebitMandateID" uuid NOT NULL,
    "DirectDebitMandateVersionNumber" integer NOT NULL,
    "NotificationConstructID" uuid NOT NULL,
    "NotificationConstructVersionNumber" integer NOT NULL,
    "Name" character varying(300) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DirectDebitMandateTemplateID" uuid NOT NULL,
    "DirectDebitMandateTemplateVersionNumber" integer NOT NULL,
    "IsDefaultMandate" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DirectDebitMandate" OWNER TO postgres;

--
-- TOC entry 312 (class 1259 OID 41158)
-- Name: DirectDebitMandateTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DirectDebitMandateTemplate" (
    "DirectDebitMandateTemplateID" uuid NOT NULL,
    "DirectDebitMandateTemplateVersionNumber" integer NOT NULL,
    "Name" character varying(300) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "NotificationConstructTemplateID" uuid NOT NULL,
    "NotificationConstructTemplateVersionNumber" integer NOT NULL,
    "IsDefaultMandate" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DirectDebitMandateTemplate" OWNER TO postgres;

--
-- TOC entry 313 (class 1259 OID 41167)
-- Name: DirectDebitSchedule; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DirectDebitSchedule" (
    "DirectDebitScheduleID" uuid NOT NULL
);


ALTER TABLE "DirectDebitSchedule" OWNER TO postgres;

--
-- TOC entry 314 (class 1259 OID 41170)
-- Name: Discount; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Discount" (
    "DiscountID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DiscountVersionNumber" integer DEFAULT 1 NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "InvoiceName" character varying(200),
    "DiscountTypeID" integer NOT NULL,
    "DiscountPercentage" numeric(30,8),
    "DiscountAmount" numeric(30,8),
    "DiscountQuantity" integer,
    "DiscountPeriod" integer,
    "DisocuntPeriodUnitID" integer,
    "ValidTill" timestamp without time zone,
    "MaxRedemptions" integer DEFAULT 1,
    "DiscountApplyOnID" integer,
    "CreatedOn" timestamp without time zone NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsRecurring" boolean DEFAULT false,
    "IsPercentage" boolean DEFAULT true NOT NULL,
    "ParentID" uuid,
    "DiscountStatusID" integer NOT NULL,
    "IsSingleProductDiscount" boolean DEFAULT false NOT NULL,
    "IsCheckoutDiscount" boolean DEFAULT false NOT NULL,
    "IsSingleProductQuantityDiscount" boolean DEFAULT false NOT NULL,
    "SingleProductQuantityDiscountDivisor" integer DEFAULT 0 NOT NULL,
    "IsSingleProductQuantityDiscountPercentageBased" boolean DEFAULT false NOT NULL,
    "IsSingleProductQuantityDiscountAdditionalQuantityBased" boolean DEFAULT false NOT NULL,
    "SingleProductQuantityDiscountAdditionalQuantity" integer DEFAULT 0 NOT NULL,
    "IsMultipleProductCombinationDiscount" boolean DEFAULT false NOT NULL,
    "IsMultipleProductCombinationDiscountPercentageBased" boolean DEFAULT false NOT NULL,
    "IsMultipleProductCombinationDiscountCheapestFreeBased" boolean DEFAULT false NOT NULL,
    "HasTiers" boolean DEFAULT false NOT NULL,
    "OrganisationTypeID" integer,
    "UserTypeID" uuid,
    "ParentVersionNumber" integer,
    "OwnerOrganisationID" uuid
);


ALTER TABLE "Discount" OWNER TO postgres;

--
-- TOC entry 315 (class 1259 OID 41194)
-- Name: DiscountComponentTier; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DiscountComponentTier" (
    "DiscountID" uuid NOT NULL,
    "DiscountVersionNumber" integer NOT NULL,
    "ComponentTierID" uuid NOT NULL
);


ALTER TABLE "DiscountComponentTier" OWNER TO postgres;

--
-- TOC entry 316 (class 1259 OID 41197)
-- Name: DiscountComponentTierTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DiscountComponentTierTemplate" (
    "DiscountTemplateID" uuid NOT NULL,
    "DiscountTemplateVersionNumber" integer NOT NULL,
    "ComponentTierTemplateID" uuid NOT NULL
);


ALTER TABLE "DiscountComponentTierTemplate" OWNER TO postgres;

--
-- TOC entry 317 (class 1259 OID 41200)
-- Name: DiscountRelatedProduct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DiscountRelatedProduct" (
    "DiscountRelatedProductID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DiscountID" uuid NOT NULL,
    "DiscountVersionNumber" integer NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DiscountRelatedProduct" OWNER TO postgres;

--
-- TOC entry 318 (class 1259 OID 41206)
-- Name: DiscountRelatedProductTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DiscountRelatedProductTemplate" (
    "DiscountRelatedProductTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DiscountTemplateID" uuid NOT NULL,
    "DiscountTemplateVersionNumber" integer NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "DiscountRelatedProductTemplate" OWNER TO postgres;

--
-- TOC entry 319 (class 1259 OID 41212)
-- Name: DiscountTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "DiscountTemplate" (
    "DiscountTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DiscountTemplateVersionNumber" integer DEFAULT 1 NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "InvoiceName" character varying(200),
    "DiscountTypeID" integer NOT NULL,
    "DiscountPercentage" numeric(30,8),
    "DiscountAmount" numeric(30,8),
    "DiscountQuantity" integer,
    "DiscountDurationTypeID" integer,
    "DiscountDurationMonth" integer,
    "ValidTill" timestamp without time zone,
    "MaxRedemptions" integer DEFAULT 1,
    "DiscountApplyOnID" integer,
    "CreatedOn" timestamp without time zone NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsRecurring" boolean DEFAULT false,
    "IsPercentage" boolean DEFAULT false NOT NULL,
    "ParentID" uuid,
    "DiscountStatusID" integer NOT NULL,
    "IsSingleProductDiscount" boolean DEFAULT false NOT NULL,
    "IsCheckoutDiscount" boolean DEFAULT false NOT NULL,
    "IsSingleProductQuantityDiscount" boolean DEFAULT false NOT NULL,
    "SingleProductQuantityDiscountDivisor" integer DEFAULT 0 NOT NULL,
    "IsSingleProductQuantityDiscountPercentageBased" boolean DEFAULT false NOT NULL,
    "IsSingleProductQuantityDiscountAdditionalQuantityBased" boolean DEFAULT false NOT NULL,
    "SingleProductQuantityDiscountAdditionalQuantity" integer DEFAULT 0 NOT NULL,
    "IsMultipleProductCombinationDiscount" boolean DEFAULT false NOT NULL,
    "IsMultipleProductCombinationDiscountPercentageBased" boolean DEFAULT false NOT NULL,
    "IsMultipleProductCombinationDiscountCheapestFreeBased" boolean DEFAULT false NOT NULL,
    "HasTiers" boolean DEFAULT false NOT NULL,
    "OrganisationTypeID" integer,
    "UserTypeID" uuid
);


ALTER TABLE "DiscountTemplate" OWNER TO postgres;

--
-- TOC entry 320 (class 1259 OID 41236)
-- Name: ErrorCode; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ErrorCode" (
    "ErrorCodeID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ErrorCode" character varying(50) NOT NULL,
    "Explanation" character varying(1000),
    "ErrorMessage" character varying(2000),
    "ErrorMapping" character varying(200),
    "Notes" character varying(2000),
    "ErrorCodeTypeID" integer,
    "ErrorCodeCategoryID" integer
);


ALTER TABLE "ErrorCode" OWNER TO postgres;

--
-- TOC entry 321 (class 1259 OID 41243)
-- Name: FieldDetail; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "FieldDetail" (
    "FieldDetailID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(300) NOT NULL,
    "Description" character varying(2000),
    "FieldLabelValue" character varying(2000),
    "DefaultValue" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ToolTipValue" character varying(5000),
    "ToolTipHTML" character varying(10000),
    "ToolTipIsHTML" boolean DEFAULT false NOT NULL,
    "InformationValue" character varying(5000),
    "InformationHTML" character varying(10000),
    "InformationIsHTML" boolean DEFAULT false NOT NULL,
    "HelpValue" character varying(5000),
    "HelpHTML" character varying(10000),
    "HelpIsHTML" boolean DEFAULT false NOT NULL,
    "IsSecuredByClaim" boolean DEFAULT false NOT NULL,
    "IsGlobal" boolean DEFAULT true NOT NULL,
    "FieldDetailTemplateID" uuid NOT NULL,
    "FieldTypeID" integer,
    "IconAlignmentTypeID" integer,
    "IconFileName" character varying(100),
    "IsGridColumn" boolean DEFAULT false,
    "FieldMask" character varying(10000)
);


ALTER TABLE "FieldDetail" OWNER TO postgres;

--
-- TOC entry 322 (class 1259 OID 41258)
-- Name: FieldDetailTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "FieldDetailTemplate" (
    "FieldDetailTemplateID" uuid NOT NULL,
    "Name" character varying(300) NOT NULL,
    "Description" character varying(2000),
    "FieldLabelValue" character varying(2000),
    "DefaultValue" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ToolTipValue" character varying(5000),
    "ToolTipHTML" character varying(10000),
    "ToolTipIsHTML" boolean DEFAULT false NOT NULL,
    "InformationValue" character varying(5000),
    "InformationHTML" character varying(10000),
    "InformationIsHTML" boolean DEFAULT false NOT NULL,
    "HelpValue" character varying(5000),
    "HelpHTML" character varying(10000),
    "HelpIsHTML" boolean DEFAULT false NOT NULL,
    "IsSecuredByClaim" boolean DEFAULT false NOT NULL,
    "IsGlobal" boolean DEFAULT true NOT NULL,
    "FieldTypeID" integer,
    "IconAlignmentTypeID" integer,
    "IconFileName" character varying(100),
    "IsGridColumn" boolean DEFAULT false,
    "FieldMask" character varying(1000)
);


ALTER TABLE "FieldDetailTemplate" OWNER TO postgres;

--
-- TOC entry 323 (class 1259 OID 41272)
-- Name: GlobalAccountingPeriod; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "GlobalAccountingPeriod" (
    "GlobalAccountingPeriodID" integer DEFAULT nextval(('public.globalaccountingperiod_globalaccountingperiodid_seq'::text)::regclass) NOT NULL,
    "PeriodNumber" integer NOT NULL,
    "StartDay" integer NOT NULL,
    "EndDay" integer NOT NULL,
    "Month" integer NOT NULL,
    "Year" integer NOT NULL,
    "IsFinancialClosePeriod" boolean DEFAULT false NOT NULL,
    "IsCurrentPeriod" boolean DEFAULT false NOT NULL,
    "IsClosed" boolean DEFAULT false NOT NULL
);


ALTER TABLE "GlobalAccountingPeriod" OWNER TO postgres;

--
-- TOC entry 324 (class 1259 OID 41279)
-- Name: GlobalDirectDebitCollectionPeriod; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "GlobalDirectDebitCollectionPeriod" (
    "GlobalDirectDebitCollectionPeriodID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "PeriodNumber" integer NOT NULL,
    "CollectionDay" integer NOT NULL,
    "CollectionMonth" integer NOT NULL,
    "CollectionYear" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsCurrentPeriod" boolean DEFAULT false NOT NULL,
    "IsManuallyDrivenOnly" boolean DEFAULT false NOT NULL,
    "IsClosed" boolean DEFAULT false NOT NULL
);


ALTER TABLE "GlobalDirectDebitCollectionPeriod" OWNER TO postgres;

--
-- TOC entry 325 (class 1259 OID 41288)
-- Name: GlobalPaymentMethod; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "GlobalPaymentMethod" (
    "GlobalPaymentMethodID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "PaymentMethodID" integer NOT NULL,
    "IsDefaultForOnlinePayments" boolean DEFAULT false NOT NULL,
    "Description" character varying(2000),
    "IsDefaultForOfflinePayments" boolean DEFAULT true NOT NULL,
    "DirectDebitMandateID" uuid,
    "DirectDebitMandateVersionNumber" integer,
    "IsDirectDebit" boolean DEFAULT false NOT NULL,
    "DirectDebitDefaultMonthlyPeriodNumber" integer DEFAULT 3,
    "DirectDebitMaxDaysAwaitingCollectionFromMonthPeriodNumber" integer,
    "BACSDefaultMonthlyPaymentDay" integer,
    "BACSMaxDaysAwaitingPaymentFromMonthlyPaymentDay" integer,
    "DirectDebitDefaultNumberOfNotificationDaysBeforeCollection" integer,
    "BACSDefaultNumberOfNotificationDaysBeforeExpectationOfPayment" integer
);


ALTER TABLE "GlobalPaymentMethod" OWNER TO postgres;

--
-- TOC entry 326 (class 1259 OID 41299)
-- Name: Group; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Group" (
    "GroupID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "GroupName" character varying(300) NOT NULL,
    "GroupDescription" character varying(500) NOT NULL,
    "GroupTypeID" integer NOT NULL,
    "GroupSubTypeID" integer,
    "GroupCategoryID" integer,
    "GroupSubCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsGlobal" boolean DEFAULT true
);


ALTER TABLE "Group" OWNER TO postgres;

--
-- TOC entry 327 (class 1259 OID 41309)
-- Name: GroupRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "GroupRole" (
    "GroupID" uuid NOT NULL,
    "RoleID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsGlobal" boolean DEFAULT true
);


ALTER TABLE "GroupRole" OWNER TO postgres;

--
-- TOC entry 328 (class 1259 OID 41315)
-- Name: InterfacePanel; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanel" (
    "InterfacePanelID" uuid NOT NULL,
    "InterfacePanelVersionNumber" integer NOT NULL,
    "Name" character varying(500) NOT NULL,
    "Description" character varying(500),
    "InterfacePanelTypeID" integer,
    "InterfacePanelSubTypeID" integer,
    "InterfacePanelCategoryID" integer,
    "InterfacePanelSubCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentIPID" uuid,
    "ParentIPVersionNumber" integer,
    "IsSecuredByClaim" boolean DEFAULT false NOT NULL,
    "IsGridPanel" boolean DEFAULT false NOT NULL,
    "IsGlobal" boolean DEFAULT true NOT NULL,
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer NOT NULL,
    "InterfacePanelLabel" character varying(200)
);


ALTER TABLE "InterfacePanel" OWNER TO postgres;

--
-- TOC entry 329 (class 1259 OID 41326)
-- Name: InterfacePanelClaim; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelClaim" (
    "ClaimID" uuid NOT NULL,
    "RoleID" uuid,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "InterfacePanelID" uuid NOT NULL,
    "InterfacePanelVersionNumber" integer DEFAULT 0 NOT NULL,
    "InterfacePanelRoleID" uuid
);


ALTER TABLE "InterfacePanelClaim" OWNER TO postgres;

--
-- TOC entry 330 (class 1259 OID 41332)
-- Name: InterfacePanelClaimTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelClaimTemplate" (
    "ClaimID" uuid NOT NULL,
    "RoleID" uuid,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer DEFAULT 0 NOT NULL,
    "InterfacePanelRoleTemplateID" uuid
);


ALTER TABLE "InterfacePanelClaimTemplate" OWNER TO postgres;

--
-- TOC entry 331 (class 1259 OID 41338)
-- Name: InterfacePanelFDOrganisationTypeUserType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelFDOrganisationTypeUserType" (
    "InterfacePanelID" uuid NOT NULL,
    "InterfacePanelVersionNumber" integer NOT NULL,
    "FieldDetailID" uuid NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "IsVisible" boolean DEFAULT true NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsMandatory" boolean DEFAULT false NOT NULL,
    "IsFilterable" boolean DEFAULT false NOT NULL,
    "OverrideDefaultValue" character varying(5000),
    "OverrideToolTipValue" character varying(5000),
    "OverrideToolTipHTML" character varying(10000),
    "OverrideToolTipIsHTML" boolean DEFAULT false,
    "OverrideInformationValue" character varying(5000),
    "OverrideInformationHTML" character varying(10000),
    "OverrideInformationIsHTML" boolean DEFAULT false,
    "OverrideHelpValue" character varying(5000),
    "OverrideHelpHTML" character varying(10000),
    "OverrideHelpIsHTML" boolean DEFAULT false,
    "OverrideFieldLabelValue" character varying(2000)
);


ALTER TABLE "InterfacePanelFDOrganisationTypeUserType" OWNER TO postgres;

--
-- TOC entry 332 (class 1259 OID 41352)
-- Name: InterfacePanelFDOrganisationTypeUserTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelFDOrganisationTypeUserTypeTemplate" (
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer NOT NULL,
    "FieldDetailTemplateID" uuid NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "IsVisible" boolean DEFAULT true NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsMandatory" boolean DEFAULT false NOT NULL,
    "IsFilterable" boolean DEFAULT false NOT NULL,
    "OverrideDefaultValue" character varying(5000),
    "OverrideToolTipValue" character varying(5000),
    "OverrideToolTipHTML" character varying(10000),
    "OverrideToolTipIsHTML" boolean DEFAULT false,
    "OverrideInformationValue" character varying(5000),
    "OverrideInformationHTML" character varying(10000),
    "OverrideInformationIsHTML" boolean DEFAULT false,
    "OverrideHelpValue" character varying(5000),
    "OverrideHelpHTML" character varying(10000),
    "OverrideHelpIsHTML" boolean DEFAULT false,
    "OverrideFieldLabelValue" character varying(2000)
);


ALTER TABLE "InterfacePanelFDOrganisationTypeUserTypeTemplate" OWNER TO postgres;

--
-- TOC entry 333 (class 1259 OID 41366)
-- Name: InterfacePanelFDValidationOrgTypeUserTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelFDValidationOrgTypeUserTypeTemplate" (
    "InterfacePanelFDValidationOrgTypeUserTypeTemplateID" uuid NOT NULL,
    "InterfacePanelFDValidationOrgTypeUserTypeTemplateVersion" integer NOT NULL,
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer NOT NULL,
    "FieldDetailTemplateID" uuid NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "OverrideValidationMessage" character varying,
    "OverrideValidationMessageHTML" character varying,
    "OverrideValidationIsHTML" boolean,
    "ValidationType" integer,
    "ValidationSubType" integer,
    "ValidationCategory" integer,
    "ValidationSubCategory" integer,
    "SourceErrorCodes" character varying(100),
    "IsActive" boolean,
    "IsDeleted" boolean,
    "InterfacePanelFDValidationOrgTypeUserTypeTemplateName" character varying(200)
);


ALTER TABLE "InterfacePanelFDValidationOrgTypeUserTypeTemplate" OWNER TO postgres;

--
-- TOC entry 334 (class 1259 OID 41372)
-- Name: InterfacePanelFDValidationOrganisationTypeUserType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelFDValidationOrganisationTypeUserType" (
    "InterfacePanelFDValidationOrganisationTypeUserTypeID" uuid NOT NULL,
    "InterfacePanelFDValidationOrganisationTypeUserTypeVersion" integer NOT NULL,
    "InterfacePanelID" uuid NOT NULL,
    "InterfacePanelVersionNumber" integer NOT NULL,
    "FieldDetailID" uuid NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "OverrideValidationMessage" character varying,
    "OverrideValidationMessageHTML" character varying,
    "OverrideValidationIsHTML" boolean,
    "ValidationType" integer,
    "ValidationSubType" integer,
    "ValidationCategory" integer,
    "ValidationSubCategory" integer,
    "SourceErrorCodes" character varying(100),
    "IsActive" boolean,
    "IsDeleted" boolean,
    "InterfacePanelFDValidationOrganisationTypeUserTypeName" character varying(200)
);


ALTER TABLE "InterfacePanelFDValidationOrganisationTypeUserType" OWNER TO postgres;

--
-- TOC entry 335 (class 1259 OID 41378)
-- Name: InterfacePanelFieldDetail; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelFieldDetail" (
    "InterfacePanelID" uuid NOT NULL,
    "InterfacePanelVersionNumber" integer NOT NULL,
    "FieldDetailID" uuid NOT NULL,
    "IsVisible" boolean DEFAULT true NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsMandatory" boolean DEFAULT false NOT NULL,
    "IsFilterable" boolean DEFAULT false NOT NULL,
    "OverrideDefaultValue" character varying(2000),
    "OverrideToolTipValue" character varying(5000),
    "OverrideToolTipHTML" character varying(10000),
    "OverrideToolTipIsHTML" boolean DEFAULT false,
    "OverrideInformationValue" character varying(5000),
    "OverrideInformationHTML" character varying(10000),
    "OverrideInformationIsHTML" boolean DEFAULT false,
    "OverrideHelpValue" character varying(5000),
    "OverrideHelpHTML" character varying(10000),
    "OverrideHelpIsHTML" boolean DEFAULT false,
    "OverrideFieldLabelValue" character varying(2000)
);


ALTER TABLE "InterfacePanelFieldDetail" OWNER TO postgres;

--
-- TOC entry 336 (class 1259 OID 41392)
-- Name: InterfacePanelFieldDetailOrganisationType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelFieldDetailOrganisationType" (
    "InterfacePanelID" uuid NOT NULL,
    "InterfacePanelVersionNumber" integer NOT NULL,
    "FieldDetailID" uuid NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "IsVisible" boolean DEFAULT true NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsMandatory" boolean DEFAULT false NOT NULL,
    "IsFilterable" boolean DEFAULT false NOT NULL,
    "OverrideDefaultValue" character varying(5000),
    "OverrideToolTipValue" character varying(5000),
    "OverrideToolTipHTML" character varying(10000),
    "OverrideToolTipIsHTML" boolean DEFAULT false,
    "OverrideInformationValue" character varying(5000),
    "OverrideInformationHTML" character varying(10000),
    "OverrideInformationIsHTML" boolean DEFAULT false,
    "OverrideHelpValue" character varying(5000),
    "OverrideHelpHTML" character varying(10000),
    "OverrideHelpIsHTML" boolean DEFAULT false,
    "OverrideFieldLabelValue" character varying(2000)
);


ALTER TABLE "InterfacePanelFieldDetailOrganisationType" OWNER TO postgres;

--
-- TOC entry 337 (class 1259 OID 41406)
-- Name: InterfacePanelFieldDetailOrganisationTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelFieldDetailOrganisationTypeTemplate" (
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer NOT NULL,
    "FieldDetailTemplateID" uuid NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "IsVisible" boolean DEFAULT true NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsMandatory" boolean DEFAULT false NOT NULL,
    "IsFilterable" boolean DEFAULT false NOT NULL,
    "OverrideDefaultValue" character varying(5000),
    "OverrideToolTipValue" character varying(5000),
    "OverrideToolTipHTML" character varying(10000),
    "OverrideToolTipIsHTML" boolean DEFAULT false,
    "OverrideInformationValue" character varying(5000),
    "OverrideInformationHTML" character varying(10000),
    "OverrideInformationIsHTML" boolean DEFAULT false,
    "OverrideHelpValue" character varying(5000),
    "OverrideHelpHTML" character varying(10000),
    "OverrideHelpIsHTML" boolean DEFAULT false,
    "OverrideFieldLabelValue" character varying(2000)
);


ALTER TABLE "InterfacePanelFieldDetailOrganisationTypeTemplate" OWNER TO postgres;

--
-- TOC entry 338 (class 1259 OID 41420)
-- Name: InterfacePanelFieldDetailTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelFieldDetailTemplate" (
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer NOT NULL,
    "FieldDetailTemplateID" uuid NOT NULL,
    "IsVisible" boolean DEFAULT true NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsMandatory" boolean DEFAULT false NOT NULL,
    "IsFilterable" boolean DEFAULT false NOT NULL,
    "OverrideDefaultValue" character varying(2000),
    "OverrideToolTipValue" character varying(5000),
    "OverrideToolTipHTML" character varying(10000),
    "OverrideToolTipIsHTML" boolean DEFAULT false,
    "OverrideInformationValue" character varying(5000),
    "OverrideInformationHTML" character varying(10000),
    "OverrideInformationIsHTML" boolean DEFAULT false,
    "OverrideHelpValue" character varying(5000),
    "OverrideHelpHTML" character varying(10000),
    "OverrideHelpIsHTML" boolean DEFAULT false,
    "OverrideFieldLabelValue" character varying(2000)
);


ALTER TABLE "InterfacePanelFieldDetailTemplate" OWNER TO postgres;

--
-- TOC entry 339 (class 1259 OID 41434)
-- Name: InterfacePanelFieldDetailValidation; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelFieldDetailValidation" (
    "InterfacePanelFieldDetailValidationID" uuid NOT NULL,
    "InterfacePanelID" uuid NOT NULL,
    "InterfacePanelVersionNumber" integer NOT NULL,
    "InterfacePanelFieldDetailValidationVersion" integer NOT NULL,
    "FieldDetailID" uuid NOT NULL,
    "OverrideValidationMessage" character varying,
    "OverrideValidationMessageHTML" character varying,
    "OverrideValidationIsHTML" boolean,
    "ValidationType" integer,
    "ValidationSubType" integer,
    "ValidationCategory" integer,
    "ValidationSubCategory" integer,
    "SourceErrorCodes" character varying(100),
    "IsActive" boolean,
    "IsDeleted" boolean,
    "InterfacePanelFieldDetailValidationName" character varying(200) NOT NULL
);
ALTER TABLE ONLY "InterfacePanelFieldDetailValidation" ALTER COLUMN "InterfacePanelID" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelFieldDetailValidation" ALTER COLUMN "InterfacePanelVersionNumber" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelFieldDetailValidation" ALTER COLUMN "FieldDetailID" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelFieldDetailValidation" ALTER COLUMN "ValidationSubType" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelFieldDetailValidation" ALTER COLUMN "ValidationCategory" SET STATISTICS 0;


ALTER TABLE "InterfacePanelFieldDetailValidation" OWNER TO postgres;

--
-- TOC entry 340 (class 1259 OID 41440)
-- Name: InterfacePanelFieldDetailValidationOrganisationType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelFieldDetailValidationOrganisationType" (
    "InterfacePanelFieldDetailValidationOrganisationTypeID" uuid NOT NULL,
    "InterfacePanelFieldDetailValidationOrganisationTypeVersion" integer NOT NULL,
    "InterfacePanelID" uuid NOT NULL,
    "InterfacePanelVersionNumber" integer NOT NULL,
    "FieldDetailID" uuid NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "OverrideValidationMessage" character varying,
    "OverrideValidationMessageHTML" character varying,
    "OverrideValidationIsHTML" boolean,
    "ValidationType" integer,
    "ValidationSubType" integer,
    "ValidationCategory" integer,
    "ValidationSubCategory" integer,
    "SourceErrorCodes" character varying(100),
    "IsActive" boolean,
    "IsDeleted" boolean,
    "InterfacePanelFieldDetailValidationOrganisationTypeName" character varying(200)
);


ALTER TABLE "InterfacePanelFieldDetailValidationOrganisationType" OWNER TO postgres;

--
-- TOC entry 341 (class 1259 OID 41446)
-- Name: InterfacePanelFieldDetailValidationOrganisationTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelFieldDetailValidationOrganisationTypeTemplate" (
    "InterfacePanelFieldDetailValidationOrganisationTypeTemplateID" uuid NOT NULL,
    "InterfacePanelFieldDetailValidationOrganisationTypeTemplateVers" integer NOT NULL,
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer NOT NULL,
    "FieldDetailTemplateID" uuid NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "OverrideValidationMessage" character varying,
    "OverrideValidationMessageHTML" character varying,
    "OverrideValidationIsHTML" boolean,
    "ValidationType" integer,
    "ValidationSubType" integer,
    "ValidationCategory" integer,
    "ValidationSubCategory" integer,
    "SourceErrorCodes" character varying(100),
    "IsActive" boolean,
    "IsDeleted" boolean,
    "InterfacePanelFieldDetailValidationOrganisationTypeTemplateName" character varying(200)
);


ALTER TABLE "InterfacePanelFieldDetailValidationOrganisationTypeTemplate" OWNER TO postgres;

--
-- TOC entry 342 (class 1259 OID 41452)
-- Name: InterfacePanelFieldDetailValidationTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelFieldDetailValidationTemplate" (
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer NOT NULL,
    "InterfacePanelFieldDetailValidationTemplateVersion" integer NOT NULL,
    "FieldDetailTemplateID" uuid NOT NULL,
    "OverrideValidationMessage" character varying,
    "OverrideValidationMessageHTML" character varying,
    "OverrideValidationIsHTML" boolean,
    "ValidationType" integer,
    "ValidationSubType" integer,
    "ValidationCategory" integer,
    "SourceErrorCodes" character varying(100),
    "IsActive" boolean,
    "IsDeleted" boolean,
    "InterfacePanelFieldDetailValidationTemplateID" uuid NOT NULL,
    "ValidationSubCategory" integer,
    "InterfacePanelFieldDetailValidationTemplateName" character varying(200) NOT NULL
);
ALTER TABLE ONLY "InterfacePanelFieldDetailValidationTemplate" ALTER COLUMN "InterfacePanelTemplateID" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelFieldDetailValidationTemplate" ALTER COLUMN "InterfacePanelTemplateVersionNumber" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelFieldDetailValidationTemplate" ALTER COLUMN "FieldDetailTemplateID" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelFieldDetailValidationTemplate" ALTER COLUMN "ValidationSubType" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelFieldDetailValidationTemplate" ALTER COLUMN "ValidationCategory" SET STATISTICS 0;


ALTER TABLE "InterfacePanelFieldDetailValidationTemplate" OWNER TO postgres;

--
-- TOC entry 343 (class 1259 OID 41458)
-- Name: InterfacePanelOrganisationType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelOrganisationType" (
    "InterfacePanelID" uuid NOT NULL,
    "InterfacePanelVersionNumber" integer NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsVisible" boolean DEFAULT true NOT NULL,
    "ParentID" uuid,
    "InterfacePanelOrganisationTypeLabel" character varying(200)
);


ALTER TABLE "InterfacePanelOrganisationType" OWNER TO postgres;

--
-- TOC entry 344 (class 1259 OID 41464)
-- Name: InterfacePanelOrganisationTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelOrganisationTypeTemplate" (
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsVisible" boolean DEFAULT true NOT NULL,
    "ParentID" uuid,
    "InterfacePanelOrganisationTypeTemplateLabel" character varying(200)
);


ALTER TABLE "InterfacePanelOrganisationTypeTemplate" OWNER TO postgres;

--
-- TOC entry 345 (class 1259 OID 41470)
-- Name: InterfacePanelOrganisationTypeUserType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelOrganisationTypeUserType" (
    "InterfacePanelID" uuid NOT NULL,
    "InterfacePanelVersionNumber" integer NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsVisible" boolean DEFAULT true NOT NULL,
    "ParentID" uuid,
    "InterfacePanelOrganisationTypeUserTypeLabel" character varying(200)
);


ALTER TABLE "InterfacePanelOrganisationTypeUserType" OWNER TO postgres;

--
-- TOC entry 346 (class 1259 OID 41476)
-- Name: InterfacePanelOrganisationTypeUserTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelOrganisationTypeUserTypeTemplate" (
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsVisible" boolean DEFAULT true NOT NULL,
    "ParentID" uuid,
    "InterfacePanelOrganisationTypeUserTypeTemplateLabel" character varying(200)
);


ALTER TABLE "InterfacePanelOrganisationTypeUserTypeTemplate" OWNER TO postgres;

--
-- TOC entry 347 (class 1259 OID 41482)
-- Name: InterfacePanelRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelRole" (
    "InterfacePanelRoleID" uuid NOT NULL,
    "RoleName" character varying(300) NOT NULL,
    "RoleDescription" character varying(500),
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "InterfacePanelID" uuid NOT NULL,
    "InterfacePanelVersionNumber" integer DEFAULT 0 NOT NULL,
    "RoleSubCategoryID" integer
);


ALTER TABLE "InterfacePanelRole" OWNER TO postgres;

--
-- TOC entry 348 (class 1259 OID 41491)
-- Name: InterfacePanelRoleTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelRoleTemplate" (
    "InterfacePanelRoleTemplateID" uuid NOT NULL,
    "RoleName" character varying(300) NOT NULL,
    "RoleDescription" character varying(500),
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer DEFAULT 0 NOT NULL,
    "RoleSubCategoryID" integer
);


ALTER TABLE "InterfacePanelRoleTemplate" OWNER TO postgres;

--
-- TOC entry 349 (class 1259 OID 41500)
-- Name: InterfacePanelSetting; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelSetting" (
    "InterfacePanelSettingID" uuid NOT NULL,
    "InterfacePanelID" uuid NOT NULL,
    "InterfacePanelVersionNumber" integer NOT NULL,
    "IsVisible" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "InterfacePanelSetting" OWNER TO postgres;

--
-- TOC entry 350 (class 1259 OID 41506)
-- Name: InterfacePanelSettingTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelSettingTemplate" (
    "InterfacePanelSettingTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer NOT NULL,
    "IsVisible" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "InterfacePanelSettingTemplate" OWNER TO postgres;

--
-- TOC entry 351 (class 1259 OID 41512)
-- Name: InterfacePanelTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelTemplate" (
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer NOT NULL,
    "Name" character varying(500) NOT NULL,
    "Description" character varying(500),
    "InterfacePanelTypeID" integer,
    "InterfacePanelSubTypeID" integer,
    "InterfacePanelCategoryID" integer,
    "InterfacePanelSubCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentIPTemplateID" uuid,
    "ParentIPTemplateVersionNumber" integer,
    "IsSecuredByClaim" boolean DEFAULT false NOT NULL,
    "IsGridPanel" boolean DEFAULT false NOT NULL,
    "IsGlobal" boolean DEFAULT true NOT NULL,
    "InterfacePanelTemplateLabel" character varying(200)
);


ALTER TABLE "InterfacePanelTemplate" OWNER TO postgres;

--
-- TOC entry 352 (class 1259 OID 41523)
-- Name: InterfacePanelValidation; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelValidation" (
    "InterfacePanelValidationID" uuid NOT NULL,
    "InterfacePanelID" uuid NOT NULL,
    "InterfacePanelVersionNumber" integer NOT NULL,
    "InterfacePanelValidationVersionNumber" integer,
    "OverrideValidationMessage" character varying(1000),
    "OverrideValidationMessageHTML" character varying(1000),
    "ValidationType" integer,
    "ValidationSubType" integer,
    "ValidationCategory" integer,
    "ValidationSubCategory" integer,
    "SourceErrorCodes" character varying(100),
    "IsActive" boolean,
    "IsDeleted" boolean,
    "OverrideValidationIsHTML" boolean,
    "InterfacePanelValidationName" character varying(200)
);
ALTER TABLE ONLY "InterfacePanelValidation" ALTER COLUMN "InterfacePanelValidationID" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidation" ALTER COLUMN "InterfacePanelID" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidation" ALTER COLUMN "InterfacePanelVersionNumber" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidation" ALTER COLUMN "InterfacePanelValidationVersionNumber" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidation" ALTER COLUMN "OverrideValidationMessage" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidation" ALTER COLUMN "OverrideValidationMessageHTML" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidation" ALTER COLUMN "ValidationType" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidation" ALTER COLUMN "ValidationSubType" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidation" ALTER COLUMN "ValidationCategory" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidation" ALTER COLUMN "ValidationSubCategory" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidation" ALTER COLUMN "SourceErrorCodes" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidation" ALTER COLUMN "IsActive" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidation" ALTER COLUMN "IsDeleted" SET STATISTICS 0;


ALTER TABLE "InterfacePanelValidation" OWNER TO postgres;

--
-- TOC entry 353 (class 1259 OID 41529)
-- Name: InterfacePanelValidationOrganisationType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelValidationOrganisationType" (
    "InterfacePanelValidationOrganisationTypeID" uuid NOT NULL,
    "InterfacePanelValidationOrganisationTypeVersion" integer NOT NULL,
    "InterfacePanelID" uuid NOT NULL,
    "InterfacePanelVersionNumber" integer NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "OverrideValidationMessage" character varying,
    "OverrideValidationMessageHTML" character varying,
    "OverrideValidationIsHTML" boolean,
    "ValidationType" integer,
    "ValidationSubType" integer,
    "ValidationCategory" integer,
    "ValidationSubCategory" integer,
    "SourceErrorCodes" character varying(100),
    "IsActive" boolean,
    "IsDeleted" boolean,
    "InterfacePanelValidationOrganisationTypeName" character varying(200)
);


ALTER TABLE "InterfacePanelValidationOrganisationType" OWNER TO postgres;

--
-- TOC entry 354 (class 1259 OID 41535)
-- Name: InterfacePanelValidationOrganisationTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelValidationOrganisationTypeTemplate" (
    "InterfacePanelValidationOrganisationTypeTemplateID" uuid NOT NULL,
    "InterfacePanelValidationOrganisationTypeTemplateVers" integer NOT NULL,
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "OverrideValidationMessage" character varying,
    "OverrideValidationMessageHTML" character varying,
    "OverrideValidationIsHTML" boolean,
    "ValidationType" integer,
    "ValidationSubType" integer,
    "ValidationCategory" integer,
    "ValidationSubCategory" integer,
    "SourceErrorCodes" character varying(100),
    "IsActive" boolean,
    "IsDeleted" boolean,
    "InterfacePanelValidationOrganisationTypeTemplateName" character varying(200)
);


ALTER TABLE "InterfacePanelValidationOrganisationTypeTemplate" OWNER TO postgres;

--
-- TOC entry 355 (class 1259 OID 41541)
-- Name: InterfacePanelValidationOrganisationTypeUserType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelValidationOrganisationTypeUserType" (
    "InterfacePanelValidationOrganisationTypeUserTypeID" uuid NOT NULL,
    "InterfacePanelValidationOrganisationTypeUserTypeVersion" integer NOT NULL,
    "InterfacePanelID" uuid NOT NULL,
    "InterfacePanelVersionNumber" integer NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "OverrideValidationMessage" character varying,
    "OverrideValidationMessageHTML" character varying,
    "OverrideValidationIsHTML" boolean,
    "ValidationType" integer,
    "ValidationSubType" integer,
    "ValidationCategory" integer,
    "ValidationSubCategory" integer,
    "SourceErrorCodes" character varying(100),
    "IsActive" boolean,
    "IsDeleted" boolean,
    "InterfacePanelValidationOrganisationTypeUserTypeName" character varying(200)
);


ALTER TABLE "InterfacePanelValidationOrganisationTypeUserType" OWNER TO postgres;

--
-- TOC entry 356 (class 1259 OID 41547)
-- Name: InterfacePanelValidationOrganisationTypeUserTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelValidationOrganisationTypeUserTypeTemplate" (
    "InterfacePanelValidationOrganisationTypeUserTypeTemplateID" uuid NOT NULL,
    "InterfacePanelValidationOrganisationTypeUserTypeTemplateVersion" integer NOT NULL,
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "OverrideValidationMessage" character varying,
    "OverrideValidationMessageHTML" character varying,
    "OverrideValidationIsHTML" boolean,
    "ValidationType" integer,
    "ValidationSubType" integer,
    "ValidationCategory" integer,
    "ValidationSubCategory" integer,
    "SourceErrorCodes" character varying(100),
    "IsActive" boolean,
    "IsDeleted" boolean,
    "InterfacePanelValidationOrganisationTypeUserTypeTemplateName" character varying(200)
);


ALTER TABLE "InterfacePanelValidationOrganisationTypeUserTypeTemplate" OWNER TO postgres;

--
-- TOC entry 357 (class 1259 OID 41553)
-- Name: InterfacePanelValidationTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InterfacePanelValidationTemplate" (
    "InterfacePanelValidationTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "InterfacePanelTemplateID" uuid NOT NULL,
    "InterfacePanelTemplateVersionNumber" integer,
    "InterfacePanelValidationTemplateVersionNumber" integer NOT NULL,
    "OverrideValidationMessage" character varying(1000),
    "OverrideValidationMessageHTML" character varying(1000),
    "ValidationType" integer,
    "ValidationSubType" integer,
    "ValidationCategory" integer,
    "ValidationSubCategory" integer,
    "SourceErrorCodes" character varying(100),
    "IsActive" boolean,
    "IsDeleted" boolean,
    "OverrideValidationIsHTML" boolean,
    "InterfacePanelValidationTemplateName" character varying(200) NOT NULL
);
ALTER TABLE ONLY "InterfacePanelValidationTemplate" ALTER COLUMN "InterfacePanelTemplateID" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidationTemplate" ALTER COLUMN "InterfacePanelTemplateVersionNumber" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidationTemplate" ALTER COLUMN "InterfacePanelValidationTemplateVersionNumber" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidationTemplate" ALTER COLUMN "OverrideValidationMessage" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidationTemplate" ALTER COLUMN "OverrideValidationMessageHTML" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidationTemplate" ALTER COLUMN "ValidationType" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidationTemplate" ALTER COLUMN "ValidationSubType" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidationTemplate" ALTER COLUMN "ValidationCategory" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidationTemplate" ALTER COLUMN "ValidationSubCategory" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidationTemplate" ALTER COLUMN "SourceErrorCodes" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidationTemplate" ALTER COLUMN "IsActive" SET STATISTICS 0;
ALTER TABLE ONLY "InterfacePanelValidationTemplate" ALTER COLUMN "IsDeleted" SET STATISTICS 0;


ALTER TABLE "InterfacePanelValidationTemplate" OWNER TO postgres;

--
-- TOC entry 358 (class 1259 OID 41560)
-- Name: Invoice; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Invoice" (
    "InvoiceID" uuid NOT NULL,
    "VatNumber" character varying(200),
    "StartDate" timestamp without time zone,
    "EndDate" timestamp without time zone NOT NULL,
    "Total" numeric(30,8) NOT NULL,
    "LastReminder" timestamp without time zone,
    "Balance" numeric(30,8),
    "ParentID" uuid,
    "DueDate" timestamp without time zone,
    "CountryCode" character varying(300) NOT NULL,
    "NumberOfPaymentAttempts" integer DEFAULT 0 NOT NULL,
    "CarriedBalance" numeric(30,8),
    "InvoiceTypeID" integer,
    "InvoiceNumber" integer,
    "InvoiceName" character varying(200),
    "CreatedOn" timestamp without time zone NOT NULL,
    "CurrencyCode" character varying(30) NOT NULL,
    "CurrencyRateDate" timestamp without time zone NOT NULL,
    "CurrencyRate" numeric(30,8) DEFAULT 0 NOT NULL,
    "CurrencyRateToGBP" numeric(30,8),
    "CurrencyRateToUSD" numeric(30,8),
    "InvoiceSubTotalInclTaxAndDeduct" numeric(30,8) NOT NULL,
    "InvoiceSubTotalExclTaxAndDeduct" numeric(30,8) NOT NULL,
    "InvoiceSubTotalDiscountsInclTaxAndDeduct" numeric(30,8) NOT NULL,
    "InvoiceSubTotalDiscountsExclTaxAndDeduct" numeric(30,8) NOT NULL,
    "PaymentMethodAdditionalFeesInclTax" numeric(30,8) NOT NULL,
    "PaymentMethodAdditionalFeesExclTax" numeric(30,8) NOT NULL,
    "TaxTotal" numeric(30,8),
    "DiscountTotal" numeric(30,8),
    "OrganisationID" uuid,
    "ShoppingCartID" uuid,
    "OrganisationAccountingPeriodID" integer,
    "TaxTotalPercentage" numeric(30,8),
    "TaxTotalValue" numeric(30,8),
    "DeductionTotalPercentage" numeric(30,8),
    "DeductionTotalValue" numeric(30,8),
    "DiscountTotalPercentage" numeric(30,8),
    "DiscountTotalValue" numeric(30,8),
    "DeductionTotal" numeric(30,8),
    "InvoiceReference" character varying(50) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsClosed" boolean DEFAULT false NOT NULL,
    "IsFrozenPendingPayment" boolean DEFAULT false NOT NULL,
    "GlobalPaymentMethodID" uuid,
    "UserAccountOrganisationID" uuid
);


ALTER TABLE "Invoice" OWNER TO postgres;

--
-- TOC entry 359 (class 1259 OID 41572)
-- Name: InvoiceLineItem; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InvoiceLineItem" (
    "InvoiceLineItemID" uuid NOT NULL,
    "InvoiceID" uuid,
    "DateFrom" timestamp without time zone NOT NULL,
    "DateTo" timestamp without time zone NOT NULL,
    "SingleProductPrice" numeric(30,8) NOT NULL,
    "Quantity" numeric(30,8) NOT NULL,
    "TaxTotal" numeric(30,8),
    "Price" numeric(30,8) NOT NULL,
    "Description" character varying(2000) NOT NULL,
    "InvoiceLineItemTypeID" integer NOT NULL,
    "ParentID" uuid,
    "PriceInclTax" numeric(30,8) NOT NULL,
    "CountryCode" character varying(300) NOT NULL,
    "IsCredit" boolean DEFAULT false NOT NULL,
    "IsDebit" boolean DEFAULT false NOT NULL,
    "ProductID" uuid,
    "ProductVersionID" integer,
    "PriceExclTax" numeric(30,8) NOT NULL,
    "SingleProductPriceInclTaxAndDeduct" numeric(30,8),
    "SingleProductPriceExclTaxAndDeduct" numeric(30,8) NOT NULL,
    "DiscountTotal" numeric(30,8),
    "IsDepositProduct" boolean DEFAULT false NOT NULL,
    "TaxTotalPercentage" numeric(30,8),
    "TaxTotalValue" numeric(30,8),
    "DiscountTotalValue" numeric(30,8),
    "DiscountTotalPercentage" numeric(30,8),
    "DeductionTotalValue" numeric(30,8),
    "DeductionTotalPercentage" numeric(30,8),
    "DeductionTotal" numeric(30,8),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsClosed" boolean DEFAULT false NOT NULL,
    "PlanSubscriptionPeriodID" uuid,
    "IsFrozenPendingPayment" boolean DEFAULT false NOT NULL,
    "AccountID" uuid
);


ALTER TABLE "InvoiceLineItem" OWNER TO postgres;

--
-- TOC entry 360 (class 1259 OID 41585)
-- Name: InvoiceProcessLog; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "InvoiceProcessLog" (
    "InvoiceID" uuid NOT NULL,
    "CreatedOn" timestamp without time zone NOT NULL,
    "NotificationID" uuid,
    "InvoiceStatusDetail" character varying(2000),
    "PaidOn" timestamp without time zone,
    "IsInvoiceProcessed" boolean DEFAULT false NOT NULL,
    "IsPaid" boolean DEFAULT false NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "IsClosed" boolean DEFAULT false NOT NULL,
    "ClosedOn" timestamp without time zone,
    "InvoiceAccountingStatusID" integer
);


ALTER TABLE "InvoiceProcessLog" OWNER TO postgres;

--
-- TOC entry 361 (class 1259 OID 41594)
-- Name: LedgerAccountBalance; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "LedgerAccountBalance" (
    "LedgerAccountID" uuid NOT NULL,
    "BalanceOn" timestamp without time zone NOT NULL,
    "Balance" numeric(30,8) NOT NULL,
    "BalanceAvailableAdjusted" numeric(30,8),
    "BalanceAvailableClosing" numeric(30,8),
    "BalanceBookAdjusted" numeric(30,8),
    "BalanceBookClosing" numeric(30,8),
    "BalanceCollectedAdjusted" numeric(30,8),
    "BalanceCollectedClosing" numeric(30,8),
    "IsDebit" boolean DEFAULT false NOT NULL,
    "IsCredit" boolean DEFAULT false NOT NULL
);


ALTER TABLE "LedgerAccountBalance" OWNER TO postgres;

--
-- TOC entry 362 (class 1259 OID 41599)
-- Name: LedgerAccountTransaction; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "LedgerAccountTransaction" (
    "LedgerAccountID" uuid NOT NULL,
    "TransactionOrderID" uuid NOT NULL,
    "BalanceOn" timestamp without time zone NOT NULL
);


ALTER TABLE "LedgerAccountTransaction" OWNER TO postgres;

--
-- TOC entry 363 (class 1259 OID 41602)
-- Name: LinkedAccountClaims; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "LinkedAccountClaims" (
    "LinkedAccount_ProviderName" character varying(30) NOT NULL,
    "LinkedAccount_ProviderAccountID" character varying(100) NOT NULL,
    "Type" character varying(150) NOT NULL,
    "Value" character varying(150) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "LinkedAccountClaims" OWNER TO postgres;

--
-- TOC entry 364 (class 1259 OID 41607)
-- Name: LinkedAccounts; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "LinkedAccounts" (
    "UserAccount_ID" uuid NOT NULL,
    "ProviderName" character varying(30) NOT NULL,
    "ProviderAccountID" character varying(100) NOT NULL,
    "LastLogin" timestamp without time zone NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "LinkedAccounts" OWNER TO postgres;

--
-- TOC entry 365 (class 1259 OID 41612)
-- Name: Module; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Module" (
    "ModuleID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ModuleVersionNumber" integer DEFAULT 0 NOT NULL,
    "Name" character varying(300) NOT NULL,
    "Description" character varying(2000),
    "ModuleTemplateID" uuid NOT NULL,
    "ModuleTemplateVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "Module" OWNER TO postgres;

--
-- TOC entry 366 (class 1259 OID 41622)
-- Name: ModuleArtefact; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleArtefact" (
    "ArtefactID" uuid NOT NULL,
    "ArtefactVersionNumber" integer NOT NULL,
    "ModuleID" uuid NOT NULL,
    "ModuleVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ModuleArtefact" OWNER TO postgres;

--
-- TOC entry 367 (class 1259 OID 41627)
-- Name: ModuleArtefactTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleArtefactTemplate" (
    "ArtefactTemplateID" uuid NOT NULL,
    "ArtefactTemplateVersionNumber" integer NOT NULL,
    "ModuleTemplateID" uuid NOT NULL,
    "ModuleTemplateVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ModuleArtefactTemplate" OWNER TO postgres;

--
-- TOC entry 368 (class 1259 OID 41632)
-- Name: ModuleClaim; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleClaim" (
    "ClaimID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "RoleID" uuid,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "ModuleID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ModuleVersionNumber" integer DEFAULT 0 NOT NULL,
    "ModuleRoleID" uuid
);


ALTER TABLE "ModuleClaim" OWNER TO postgres;

--
-- TOC entry 369 (class 1259 OID 41639)
-- Name: ModuleClaimTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleClaimTemplate" (
    "ClaimID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "RoleID" uuid,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ModuleTemplateID" uuid NOT NULL,
    "ModuleTemplateVersionNumber" integer DEFAULT 0 NOT NULL,
    "ModuleRoleID" uuid
);


ALTER TABLE "ModuleClaimTemplate" OWNER TO postgres;

--
-- TOC entry 370 (class 1259 OID 41646)
-- Name: ModuleDependency; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleDependency" (
    "ModuleDependencyID" uuid NOT NULL,
    "ModuleID" uuid NOT NULL,
    "ModuleVersionNumber" integer NOT NULL,
    "DependencyID" uuid NOT NULL,
    "DependencyVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ModuleDependency" OWNER TO postgres;

--
-- TOC entry 371 (class 1259 OID 41651)
-- Name: ModuleDependencyTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleDependencyTemplate" (
    "ModuleDependencyTemplateID" uuid NOT NULL,
    "ModuleTemplateID" uuid NOT NULL,
    "ModuleTemplateVersionNumber" integer NOT NULL,
    "DependencyID" uuid NOT NULL,
    "DependencyVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ModuleDependencyTemplate" OWNER TO postgres;

--
-- TOC entry 372 (class 1259 OID 41656)
-- Name: ModuleNotificationConstruct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleNotificationConstruct" (
    "ModuleNotificationConstructID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ModuleID" uuid NOT NULL,
    "ModuleVersionNumber" integer NOT NULL,
    "NotificationConstructID" uuid NOT NULL,
    "NotificationConstructVersionNumber" integer NOT NULL
);


ALTER TABLE "ModuleNotificationConstruct" OWNER TO postgres;

--
-- TOC entry 373 (class 1259 OID 41661)
-- Name: ModuleNotificationConstructTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleNotificationConstructTemplate" (
    "ModuleNotificationConstructTemplateID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "NotificationConstructTemplateID" uuid NOT NULL,
    "NotificationConstructTemplateVersionNumber" integer NOT NULL,
    "ModuleTemplateID" uuid NOT NULL,
    "ModuleTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "ModuleNotificationConstructTemplate" OWNER TO postgres;

--
-- TOC entry 374 (class 1259 OID 41666)
-- Name: ModulePlugin; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModulePlugin" (
    "ModulePluginID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ModuleID" uuid NOT NULL,
    "ModuleVersionNumber" integer NOT NULL,
    "PluginID" uuid NOT NULL,
    "PluginVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ModulePlugin" OWNER TO postgres;

--
-- TOC entry 375 (class 1259 OID 41672)
-- Name: ModulePluginTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModulePluginTemplate" (
    "ModulePluginTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ModuleTemplateID" uuid NOT NULL,
    "ModuleTemplateVersionNumber" integer NOT NULL,
    "PluginTemplateID" uuid NOT NULL,
    "PluginVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ModulePluginTemplate" OWNER TO postgres;

--
-- TOC entry 376 (class 1259 OID 41678)
-- Name: ModuleProduct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleProduct" (
    "ModuleID" uuid NOT NULL,
    "ModuleVersionNumber" integer NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ModuleProduct" OWNER TO postgres;

--
-- TOC entry 377 (class 1259 OID 41683)
-- Name: ModuleProductTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleProductTemplate" (
    "ModuleTemplateID" uuid NOT NULL,
    "ModuleTemplateVersionNumber" integer NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ModuleProductTemplate" OWNER TO postgres;

--
-- TOC entry 378 (class 1259 OID 41688)
-- Name: ModuleRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleRole" (
    "RoleID" uuid NOT NULL,
    "ModuleID" uuid NOT NULL,
    "RoleName" character varying(300) NOT NULL,
    "RoleDescription" character varying(500),
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ModuleVersionNumber" integer DEFAULT 0 NOT NULL,
    "RoleSubCategoryID" integer
);


ALTER TABLE "ModuleRole" OWNER TO postgres;

--
-- TOC entry 379 (class 1259 OID 41697)
-- Name: ModuleRoleTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleRoleTemplate" (
    "RoleID" uuid NOT NULL,
    "RoleName" character varying(300) NOT NULL,
    "RoleDescription" character varying(500),
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ModuleTemplateID" uuid NOT NULL,
    "ModuleTemplateVersionNumber" integer DEFAULT 0 NOT NULL,
    "RoleSubCategoryID" integer
);


ALTER TABLE "ModuleRoleTemplate" OWNER TO postgres;

--
-- TOC entry 380 (class 1259 OID 41706)
-- Name: ModuleSetting; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleSetting" (
    "ModuleSettingID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ModuleID" uuid NOT NULL,
    "Name" character varying(1000) NOT NULL,
    "Value" character varying NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "CanOrganisationChange" boolean DEFAULT false NOT NULL,
    "CanUserChange" boolean DEFAULT false NOT NULL,
    "ModuleVersionNumber" integer DEFAULT 0 NOT NULL
);


ALTER TABLE "ModuleSetting" OWNER TO postgres;

--
-- TOC entry 381 (class 1259 OID 41718)
-- Name: ModuleSettingTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleSettingTemplate" (
    "ModuleSettingTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(1000) NOT NULL,
    "Value" character varying NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "CanOrganisationChange" boolean DEFAULT false NOT NULL,
    "CanUserChange" boolean DEFAULT false NOT NULL,
    "ModuleTemplateID" uuid NOT NULL,
    "ModuleTemplateVersionNumber" integer DEFAULT 0 NOT NULL
);


ALTER TABLE "ModuleSettingTemplate" OWNER TO postgres;

--
-- TOC entry 382 (class 1259 OID 41730)
-- Name: ModuleStatusType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleStatusType" (
    "ModuleID" uuid NOT NULL,
    "ModuleVersionNumber" integer NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ModuleStatusType" OWNER TO postgres;

--
-- TOC entry 383 (class 1259 OID 41735)
-- Name: ModuleStatusTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleStatusTypeTemplate" (
    "ModuleTemplateID" uuid NOT NULL,
    "ModuleTemplateVersionNumber" integer NOT NULL,
    "StatusTypeTemplateID" uuid NOT NULL,
    "StatusTypeTemplateVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ModuleStatusTypeTemplate" OWNER TO postgres;

--
-- TOC entry 384 (class 1259 OID 41740)
-- Name: ModuleSubscription; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleSubscription" (
    "ModuleSubscriptionID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ModuleID" uuid NOT NULL,
    "ModuleVersionNumber" integer DEFAULT 0 NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "PlanSubscriptionID" uuid NOT NULL,
    "PlanSubscriptionVersionNumber" integer NOT NULL
);


ALTER TABLE "ModuleSubscription" OWNER TO postgres;

--
-- TOC entry 385 (class 1259 OID 41747)
-- Name: ModuleSubscriptionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleSubscriptionTemplate" (
    "ModuleSubscriptionTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ModuleTemplateID" uuid NOT NULL,
    "ModuleTemplateVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "PlanSubscriptionTemplateID" uuid NOT NULL,
    "PlanSubscriptionTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "ModuleSubscriptionTemplate" OWNER TO postgres;

--
-- TOC entry 386 (class 1259 OID 41753)
-- Name: ModuleTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleTemplate" (
    "ModuleTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(300) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ModuleTemplateVersionNumber" integer DEFAULT 0 NOT NULL
);


ALTER TABLE "ModuleTemplate" OWNER TO postgres;

--
-- TOC entry 387 (class 1259 OID 41763)
-- Name: ModuleWorkflow; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleWorkflow" (
    "ModuleWorkflowID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "ModuleID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "AppliesToAllOrganisations" boolean DEFAULT false NOT NULL,
    "AppliesToAllUsers" boolean DEFAULT false NOT NULL,
    "ModuleVersionNumber" integer NOT NULL
);


ALTER TABLE "ModuleWorkflow" OWNER TO postgres;

--
-- TOC entry 388 (class 1259 OID 41771)
-- Name: ModuleWorkflowTarget; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleWorkflowTarget" (
    "ModuleWorkflowTargetID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ModuleWorkflowID" uuid NOT NULL,
    "OrganisationTypeID" integer,
    "OrganisationSubTypeID" integer,
    "OrganisationCategoryID" integer,
    "OrganisationSubCategoryID" integer,
    "UserTypeID" integer,
    "UserSubTypeID" integer,
    "UserCategoryID" integer,
    "UserSubCategoryID" integer
);


ALTER TABLE "ModuleWorkflowTarget" OWNER TO postgres;

--
-- TOC entry 389 (class 1259 OID 41775)
-- Name: ModuleWorkflowTargetTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleWorkflowTargetTemplate" (
    "ModuleWorkflowTargetTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ModuleWorkflowTemplateID" uuid NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "OrganisationSubTypeID" integer,
    "OrganisationCategoryID" integer,
    "OrganisationSubCategoryID" integer,
    "UserTypeID" integer,
    "UserSubTypeID" integer,
    "UserCategoryID" integer,
    "UserSubCategoryID" integer
);


ALTER TABLE "ModuleWorkflowTargetTemplate" OWNER TO postgres;

--
-- TOC entry 390 (class 1259 OID 41779)
-- Name: ModuleWorkflowTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ModuleWorkflowTemplate" (
    "ModuleWorkflowTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ModuleTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "AppliesToAllOrganisations" boolean DEFAULT false NOT NULL,
    "AppliesToAllUsers" boolean DEFAULT false NOT NULL,
    "ModuleTemplateVersionNumber" integer DEFAULT 0 NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "ModuleWorkflowTemplate" OWNER TO postgres;

--
-- TOC entry 391 (class 1259 OID 41788)
-- Name: Notification; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Notification" (
    "NotificationID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "FromParentID" uuid,
    "DateSent" date NOT NULL,
    "ParentID" uuid,
    "NotificationConstructID" uuid NOT NULL,
    "NotificationConstructVersionNumber" integer NOT NULL,
    "ModuleNotificationConstructID" uuid,
    "ModuleNotificationConstructVersionNumber" integer,
    "IsSent" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsInternal" boolean DEFAULT false NOT NULL,
    "IsExternal" boolean DEFAULT false NOT NULL,
    "IsVisible" boolean DEFAULT true NOT NULL,
    "NotificationData" json NOT NULL,
    "NotificationStatusID" integer
);


ALTER TABLE "Notification" OWNER TO postgres;

--
-- TOC entry 392 (class 1259 OID 41801)
-- Name: NotificationConstruct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstruct" (
    "NotificationConstructID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructVersionNumber" integer NOT NULL,
    "Name" character varying(300) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "NotificationConstructTemplateID" uuid NOT NULL,
    "NotificationConstructTemplateVersionNumber" integer NOT NULL,
    "NotificationConstructTypeID" integer,
    "NotificationConstructSubTypeID" integer,
    "NotificationConstructCategoryID" integer,
    "NotificationConstructSubCategoryID" integer,
    "DefaultNotificationExportFormatID" integer,
    "ExternalRelatedNotificationConstructID" uuid,
    "ExternalRelatedNotificationConstructVersionNumber" integer,
    "DefaultNotificationDeliveryMethodID" integer,
    "NotificationSubject" character varying(200),
    "NotificationTitle" character varying(300),
    "NotificationDetails" character varying(2000),
    "NotificationConstructMutatorObjectType" character varying(500),
    "NotificationReference" character varying(200),
    "NotificationAdditionalDetails" character varying(2000),
    "ParentID" uuid,
    "OwnerOrganisationID" uuid,
    "CanBeIncludedInBatchNotification" boolean DEFAULT false NOT NULL
);


ALTER TABLE "NotificationConstruct" OWNER TO postgres;

--
-- TOC entry 393 (class 1259 OID 41811)
-- Name: NotificationConstructClaim; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstructClaim" (
    "NotificationConstructClaimID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructID" uuid NOT NULL,
    "NotificationConstructVersionNumber" integer NOT NULL,
    "NotificationRoleConstructID" uuid,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "RoleID" uuid
);


ALTER TABLE "NotificationConstructClaim" OWNER TO postgres;

--
-- TOC entry 394 (class 1259 OID 41817)
-- Name: NotificationConstructClaimTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstructClaimTemplate" (
    "NotificationConstructClaimTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructTemplateID" uuid NOT NULL,
    "NotificationConstructTemplateVersionNumber" integer NOT NULL,
    "NotificationConstructRoleID" uuid,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "RoleID" uuid
);


ALTER TABLE "NotificationConstructClaimTemplate" OWNER TO postgres;

--
-- TOC entry 395 (class 1259 OID 41823)
-- Name: NotificationConstructData; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstructData" (
    "NotificationConstructDataID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructID" uuid NOT NULL,
    "NotificationConstructVersionNumber" integer NOT NULL,
    "NotificationData" bytea,
    "NotificationDataLength" integer,
    "NotificationDataMimeType" character varying(100),
    "NotificationDataFileName" character varying(300),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "CreatedOn" date DEFAULT ('now'::text)::date,
    "UsesBusinessObjects" boolean DEFAULT true,
    "UsesDataSources" boolean DEFAULT false
);


ALTER TABLE "NotificationConstructData" OWNER TO postgres;

--
-- TOC entry 396 (class 1259 OID 41835)
-- Name: NotificationConstructDataTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstructDataTemplate" (
    "NotificationConstructDataTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructTemplateID" uuid NOT NULL,
    "NotificationConstructTemplateVersionNumber" integer NOT NULL,
    "NotificationData" bytea,
    "NotificationDataLength" integer,
    "NotificationDataMimeType" character varying(100),
    "NotificationDataFileName" character varying(300),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "CreatedOn" date DEFAULT ('now'::text)::date,
    "UsesBusinessObjects" boolean DEFAULT true,
    "UsesDataSources" boolean DEFAULT false
);


ALTER TABLE "NotificationConstructDataTemplate" OWNER TO postgres;

--
-- TOC entry 397 (class 1259 OID 41847)
-- Name: NotificationConstructGroup; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstructGroup" (
    "NotificationConstructGroupID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructGroupVersion" integer NOT NULL,
    "Name" character varying(200),
    "Description" character varying(200),
    "IsActive" boolean DEFAULT true,
    "IsDeleted" boolean DEFAULT false,
    "ParentID" uuid,
    "NotificationConstructGroupTemplateID" uuid,
    "NotificationConstructGroupTemplateVersion" integer,
    "NotificationConstructGroupTypeID" integer,
    "NotificationConstructGroupCategoryID" integer
);
ALTER TABLE ONLY "NotificationConstructGroup" ALTER COLUMN "NotificationConstructGroupID" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroup" ALTER COLUMN "NotificationConstructGroupVersion" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroup" ALTER COLUMN "Name" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroup" ALTER COLUMN "Description" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroup" ALTER COLUMN "ParentID" SET STATISTICS 0;


ALTER TABLE "NotificationConstructGroup" OWNER TO postgres;

--
-- TOC entry 398 (class 1259 OID 41853)
-- Name: NotificationConstructGroupNotificationConstruct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstructGroupNotificationConstruct" (
    "NotificationConstructGroupNotificationConstructID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructGroupNotificationConstructVersion" integer NOT NULL,
    "NotificationConstructGroupID" uuid,
    "NotificationConstructGroupVersion" integer,
    "UserTypeID" uuid,
    "NotificationConstructID" uuid NOT NULL,
    "WorkflowID" uuid,
    "WorkflowVersionNumber" integer,
    "IsActive" boolean DEFAULT true,
    "IsDeleted" boolean DEFAULT false,
    "ConditionString" character varying(200),
    "OrganisationTypeID" integer,
    "NotificationConstructVersionNumber" integer NOT NULL
);
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstruct" ALTER COLUMN "NotificationConstructGroupNotificationConstructID" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstruct" ALTER COLUMN "NotificationConstructGroupNotificationConstructVersion" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstruct" ALTER COLUMN "NotificationConstructGroupID" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstruct" ALTER COLUMN "NotificationConstructGroupVersion" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstruct" ALTER COLUMN "UserTypeID" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstruct" ALTER COLUMN "NotificationConstructID" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstruct" ALTER COLUMN "WorkflowID" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstruct" ALTER COLUMN "WorkflowVersionNumber" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstruct" ALTER COLUMN "ConditionString" SET STATISTICS 0;


ALTER TABLE "NotificationConstructGroupNotificationConstruct" OWNER TO postgres;

--
-- TOC entry 399 (class 1259 OID 41859)
-- Name: NotificationConstructGroupNotificationConstructTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstructGroupNotificationConstructTemplate" (
    "NotificationConstructGroupNotificationConstructTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructGroupNotificationConstructTemplateVersion" integer NOT NULL,
    "NotificationConstructGroupTemplateID" uuid,
    "NotificationConstructGroupTemplateVersion" integer,
    "UserTypeID" uuid,
    "NotificationConstructTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid,
    "WorkflowTemplateVersionNumber" integer,
    "IsActive" boolean DEFAULT true,
    "IsDeleted" boolean DEFAULT false,
    "ConditionString" character varying(200),
    "OrganisationTypeID" integer,
    "NotificationConstructTemplateVersionNumber" integer NOT NULL
);
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstructTemplate" ALTER COLUMN "NotificationConstructGroupNotificationConstructTemplateID" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstructTemplate" ALTER COLUMN "NotificationConstructGroupNotificationConstructTemplateVersion" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstructTemplate" ALTER COLUMN "NotificationConstructGroupTemplateID" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstructTemplate" ALTER COLUMN "NotificationConstructGroupTemplateVersion" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstructTemplate" ALTER COLUMN "UserTypeID" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstructTemplate" ALTER COLUMN "NotificationConstructTemplateID" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstructTemplate" ALTER COLUMN "WorkflowTemplateID" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstructTemplate" ALTER COLUMN "WorkflowTemplateVersionNumber" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupNotificationConstructTemplate" ALTER COLUMN "ConditionString" SET STATISTICS 0;


ALTER TABLE "NotificationConstructGroupNotificationConstructTemplate" OWNER TO postgres;

--
-- TOC entry 400 (class 1259 OID 41865)
-- Name: NotificationConstructGroupTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstructGroupTemplate" (
    "NotificationConstructGroupTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructGroupTemplateVersion" integer NOT NULL,
    "Name" character varying(200),
    "Description" character varying(200),
    "IsActive" boolean DEFAULT true,
    "IsDeleted" boolean DEFAULT false,
    "ParentID" uuid,
    "NotificationConstructGroupTypeID" integer,
    "NotificationConstructGroupCategoryID" integer
);
ALTER TABLE ONLY "NotificationConstructGroupTemplate" ALTER COLUMN "NotificationConstructGroupTemplateID" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupTemplate" ALTER COLUMN "NotificationConstructGroupTemplateVersion" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupTemplate" ALTER COLUMN "Name" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupTemplate" ALTER COLUMN "Description" SET STATISTICS 0;
ALTER TABLE ONLY "NotificationConstructGroupTemplate" ALTER COLUMN "ParentID" SET STATISTICS 0;


ALTER TABLE "NotificationConstructGroupTemplate" OWNER TO postgres;

--
-- TOC entry 401 (class 1259 OID 41871)
-- Name: NotificationConstructParameter; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstructParameter" (
    "NotificationConstructParameterID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructID" uuid NOT NULL,
    "NotificationConstructVersionNumber" integer NOT NULL,
    "ParameterOrBusinessObjectName" character varying(300) NOT NULL,
    "DefaultValue" character varying(2000),
    "ObjectType" character varying(300),
    "ObjectName" character varying(300),
    "ObjectNameSpace" character varying(300),
    "ObjectAssembly" character varying(300),
    "ObjectParentName" character varying(300),
    "ObjectParentNameSpace" character varying(300),
    "ObjectParentAssembly" character varying(300),
    "IsMandatory" boolean DEFAULT true NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ObjectParentType" character varying(300),
    "IsBusinessObject" boolean DEFAULT true,
    "BusinessObjectCategoryName" character varying(200)
);


ALTER TABLE "NotificationConstructParameter" OWNER TO postgres;

--
-- TOC entry 402 (class 1259 OID 41882)
-- Name: NotificationConstructParameterTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstructParameterTemplate" (
    "NotificationConstructParameterTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructTemplateID" uuid NOT NULL,
    "NotificationConstructTemplateVersionNumber" integer NOT NULL,
    "ParameterOrBusinessObjectName" character varying(300) NOT NULL,
    "DefaultValue" character varying(2000),
    "ObjectType" character varying(300),
    "ObjectName" character varying(300),
    "ObjectNameSpace" character varying(300),
    "ObjectAssembly" character varying(300),
    "ObjectParentName" character varying(300),
    "ObjectParentNameSpace" character varying(300),
    "ObjectParentAssembly" character varying(300),
    "IsMandatory" boolean DEFAULT true NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ObjectParentType" character varying(300),
    "IsBusinessObject" boolean DEFAULT true,
    "BusinessObjectCategoryName" character varying(200)
);


ALTER TABLE "NotificationConstructParameterTemplate" OWNER TO postgres;

--
-- TOC entry 403 (class 1259 OID 41893)
-- Name: NotificationConstructRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstructRole" (
    "NotificationRoleConstructID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructID" uuid NOT NULL,
    "NotificationConstructVersionNumber" integer NOT NULL,
    "RoleName" character varying(300) NOT NULL,
    "RoleDescription" character varying(2000),
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "RoleSubCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "RoleTypeID" integer NOT NULL
);


ALTER TABLE "NotificationConstructRole" OWNER TO postgres;

--
-- TOC entry 404 (class 1259 OID 41902)
-- Name: NotificationConstructRoleTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstructRoleTemplate" (
    "NotificationConstructRoleID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructTemplateID" uuid NOT NULL,
    "NotificationConstructTemplateVersionNumber" integer NOT NULL,
    "RoleName" character varying(300) NOT NULL,
    "RoleDescription" character varying(2000),
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "RoleSubCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "NotificationConstructRoleTemplate" OWNER TO postgres;

--
-- TOC entry 405 (class 1259 OID 41911)
-- Name: NotificationConstructTarget; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstructTarget" (
    "NotificationConstructTargetID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructID" uuid NOT NULL,
    "NotificationConstructVersionNumber" integer NOT NULL,
    "OrganisationTypeID" integer,
    "UserTypeID" uuid,
    "IsSingleUser" boolean DEFAULT false NOT NULL,
    "IsOrganisationBranchOnly" boolean DEFAULT false NOT NULL,
    "IsDefaultTarget" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "NotificationConstructTarget" OWNER TO postgres;

--
-- TOC entry 406 (class 1259 OID 41920)
-- Name: NotificationConstructTargetTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstructTargetTemplate" (
    "NotificationConstructTargetTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructTemplateID" uuid NOT NULL,
    "NotificationConstructTemplateVersionNumber" integer NOT NULL,
    "OrganisationTypeID" integer,
    "UserTypeID" uuid,
    "IsSingleUser" boolean DEFAULT false NOT NULL,
    "IsOrganisationBranchOnly" boolean DEFAULT false NOT NULL,
    "IsDefaultTarget" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "NotificationConstructTargetTemplate" OWNER TO postgres;

--
-- TOC entry 407 (class 1259 OID 41929)
-- Name: NotificationConstructTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationConstructTemplate" (
    "NotificationConstructTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "NotificationConstructTemplateVersionNumber" integer NOT NULL,
    "Name" character varying(300) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "NotificationConstructTypeID" integer,
    "NotificationConstructSubTypeID" integer,
    "NotificationConstructCategoryID" integer,
    "NotificationConstructSubCategoryID" integer,
    "DefaultNotificationExportFormatID" integer,
    "ExternalRelatedNotificationConstructTemplateID" uuid,
    "ExternalRelatedNotificationConstructTemplateVersionNumber" integer,
    "DefaultNotificationDeliveryMethodID" integer,
    "NotificationSubject" character varying(200) DEFAULT 200,
    "NotificationAdditionalDetails" character varying(2000),
    "NotificationConstructMutatorObjectType" character varying(500),
    "ParentID" uuid,
    "OwnerOrganisationID" uuid,
    "CanBeIncludedInBatchNotification" boolean DEFAULT false NOT NULL,
    "NotificationDetails" character varying(2000),
    "NotificationReference" character varying(200),
    "NotificationTitle" character varying(300)
);


ALTER TABLE "NotificationConstructTemplate" OWNER TO postgres;

--
-- TOC entry 408 (class 1259 OID 41940)
-- Name: NotificationRecipient; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationRecipient" (
    "NotificationRecipientID" uuid NOT NULL,
    "NotificationID" uuid NOT NULL,
    "ToParentID" uuid,
    "OrganisationID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentID" uuid,
    "IsAccepted" boolean,
    "AcceptedDate" date,
    "UserAccountOrganisationID" uuid
);


ALTER TABLE "NotificationRecipient" OWNER TO postgres;

--
-- TOC entry 409 (class 1259 OID 41945)
-- Name: NotificationRecipientLog; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "NotificationRecipientLog" (
    "NotificationRecipientID" uuid NOT NULL,
    "CreatedOn" timestamp without time zone NOT NULL,
    "SentOn" timestamp without time zone,
    "NotificationExportFormatID" integer,
    "IsSent" boolean DEFAULT false,
    "IsRead" boolean DEFAULT false,
    "ErrorOccured" boolean DEFAULT false,
    "DateRead" timestamp without time zone,
    "NotificationDeliveryMethodID" integer,
    "NotificationRecipientLogID" uuid DEFAULT uuid_generate_v1() NOT NULL
);


ALTER TABLE "NotificationRecipientLog" OWNER TO postgres;

--
-- TOC entry 410 (class 1259 OID 41952)
-- Name: Operation; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Operation" (
    "OperationID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "OperationName" character varying(150) NOT NULL,
    "OperationDescription" character varying(500),
    "SourceID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentID" uuid
);


ALTER TABLE "Operation" OWNER TO postgres;

--
-- TOC entry 411 (class 1259 OID 41961)
-- Name: Organisation; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Organisation" (
    "OrganisationID" uuid NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "OrganisationSubTypeID" integer,
    "OrganisationCategoryID" integer,
    "IsBranch" boolean DEFAULT false NOT NULL,
    "IsHeadOffice" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsUserOrganisation" boolean DEFAULT false NOT NULL,
    "CreatedOn" timestamp(0) without time zone DEFAULT ('now'::text)::date NOT NULL,
    "CreatedBy" character varying(200),
    "ModifiedOn" date,
    "ModifiedBy" character varying(200),
    "OrganisationSubCategoryID" integer,
    "DefaultOrganisationID" uuid NOT NULL,
    "DefaultOrganisationVersionNumber" integer NOT NULL,
    "ParentID" uuid,
    "ParentOrganisationID" uuid,
    "IsPaymentProvider" boolean DEFAULT false,
    "PrimaryContactID" uuid,
    "CompanyPinCode" character varying(40) DEFAULT ''::character varying,
    "CompanyPinCreated" date DEFAULT ('now'::text)::date,
    "IsCompanyVerified" boolean DEFAULT false,
    "IsCompanyPinCreated" boolean DEFAULT false,
    "ReturnUrl" character varying(250) DEFAULT ''::character varying
);


ALTER TABLE "Organisation" OWNER TO postgres;

--
-- TOC entry 412 (class 1259 OID 41979)
-- Name: OrganisationAccountingPeriod; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationAccountingPeriod" (
    "OrganisationAccountingPeriodID" integer DEFAULT nextval(('public.organisationaccountingperiod_organisationaccountingperiodid_seq'::text)::regclass) NOT NULL,
    "OrganisationID" uuid NOT NULL,
    "GlobalAccountingPeriodID" integer NOT NULL
);


ALTER TABLE "OrganisationAccountingPeriod" OWNER TO postgres;

--
-- TOC entry 413 (class 1259 OID 41983)
-- Name: OrganisationArtefact; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationArtefact" (
    "OrganisationID" uuid NOT NULL,
    "ArtefactID" uuid NOT NULL,
    "ArtefactVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentID" uuid
);


ALTER TABLE "OrganisationArtefact" OWNER TO postgres;

--
-- TOC entry 414 (class 1259 OID 41988)
-- Name: OrganisationBankAccount; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationBankAccount" (
    "OrganisationBankAccountId" integer NOT NULL,
    "OrganisationID" uuid NOT NULL,
    "BankAccountTypeID" integer NOT NULL,
    "SortCode" character varying(10),
    "BankAccountNumber" character varying(20) NOT NULL,
    "IBANNumber" character varying(20),
    "SwiftCode" character varying(20),
    "BankAccountDurationTypeID" integer NOT NULL,
    "BankAccountOpeningYear" integer,
    "BankAccountOpeningMonth" integer,
    "IsPrimary" boolean DEFAULT true NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsDirectDebtAccount" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationBankAccount" OWNER TO postgres;

--
-- TOC entry 415 (class 1259 OID 41995)
-- Name: OrganisationDetail; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationDetail" (
    "OrganisationDetailID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "OrganisationID" uuid NOT NULL,
    "Name" character varying(2000) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "OrganisationDefaultLogoID" uuid,
    "OrganisationLegalBlurb" character varying
);


ALTER TABLE "OrganisationDetail" OWNER TO postgres;

--
-- TOC entry 416 (class 1259 OID 42004)
-- Name: OrganisationDirectDebitMandate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationDirectDebitMandate" (
    "OrganisationID" uuid NOT NULL,
    "DirectDebitMandateID" uuid NOT NULL,
    "DirectDebitMandateVersionNumber" integer NOT NULL,
    "CreatedOn" timestamp without time zone NOT NULL,
    "DirectDebitMandateStatusID" integer NOT NULL,
    "IsSigned" boolean DEFAULT false NOT NULL,
    "SignedOn" timestamp without time zone,
    "NotificationID" uuid,
    "OrganisationDirectDebitMandateID" uuid DEFAULT uuid_generate_v1() NOT NULL
);


ALTER TABLE "OrganisationDirectDebitMandate" OWNER TO postgres;

--
-- TOC entry 417 (class 1259 OID 42009)
-- Name: OrganisationDirectDebitMandateProcessLog; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationDirectDebitMandateProcessLog" (
    "OrganisationDirectDebitMandateID" uuid NOT NULL,
    "NotificationRecipientID" uuid NOT NULL,
    "CreatedOn" timestamp without time zone NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL
);


ALTER TABLE "OrganisationDirectDebitMandateProcessLog" OWNER TO postgres;

--
-- TOC entry 418 (class 1259 OID 42012)
-- Name: OrganisationDiscount; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationDiscount" (
    "OrganisationID" uuid NOT NULL,
    "DiscountID" uuid NOT NULL,
    "DiscountVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationDiscount" OWNER TO postgres;

--
-- TOC entry 419 (class 1259 OID 42017)
-- Name: OrganisationFinancialDetail; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationFinancialDetail" (
    "OrganisationFinancialDetailID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "FinancialStatusTypeID" uuid,
    "FinancialStatusTypeVersionNumber" integer,
    "FinancialStatusTypeValueID" uuid,
    "HasACreditLimit" boolean DEFAULT false NOT NULL,
    "CreditLimit" numeric(30,8),
    "NumberOfLatePayments" integer DEFAULT 0 NOT NULL,
    "HasLatePayments" boolean DEFAULT false NOT NULL,
    "OrganisationID" uuid NOT NULL
);


ALTER TABLE "OrganisationFinancialDetail" OWNER TO postgres;

--
-- TOC entry 420 (class 1259 OID 42024)
-- Name: OrganisationGroup; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationGroup" (
    "OrganisationGroupID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "GroupName" character varying(300) NOT NULL,
    "OrganisationID" uuid NOT NULL,
    "ParentID" uuid,
    "ParentOrganisationGroupID" uuid,
    "ParentRootGroupID" uuid,
    "IsManaged" boolean DEFAULT false NOT NULL,
    "GroupTypeID" integer,
    "GroupSubTypeID" integer,
    "GroupCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "GroupDescription" character varying(2000),
    "GroupSubCategoryID" integer
);


ALTER TABLE "OrganisationGroup" OWNER TO postgres;

--
-- TOC entry 421 (class 1259 OID 42034)
-- Name: OrganisationGroupRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationGroupRole" (
    "OrganisationGroupID" uuid NOT NULL,
    "OrganisationRoleID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentID" uuid
);


ALTER TABLE "OrganisationGroupRole" OWNER TO postgres;

--
-- TOC entry 422 (class 1259 OID 42039)
-- Name: OrganisationInsuranceDetails; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationInsuranceDetails" (
    "OrganisationID" uuid,
    "InsuranceProviderID" integer,
    "InsuranceProviderName" character varying(500),
    "InsuranceTypeID" integer,
    "PolicyNumber" character varying(100),
    "PolicyRenewalDate" timestamp without time zone,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationInsuranceDetails" OWNER TO postgres;

--
-- TOC entry 423 (class 1259 OID 42047)
-- Name: OrganisationLedgerAccount; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationLedgerAccount" (
    "OrganisationLedgerAccountID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "LedgerAccountTypeID" integer NOT NULL,
    "LedgerAccountCategoryID" integer,
    "Name" character varying(3000),
    "Description" character varying(3000),
    "ParentID" uuid,
    "CreatedOn" timestamp without time zone NOT NULL,
    "CreatedBy" character varying(150) NOT NULL,
    "Balance" numeric(30,8) DEFAULT 0 NOT NULL,
    "UpdatedOn" timestamp without time zone,
    "HandlesCredit" boolean DEFAULT false NOT NULL,
    "HandlesDebit" boolean DEFAULT false NOT NULL,
    "OpenedOn" timestamp without time zone,
    "ClosedOn" timestamp without time zone,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "OrganisationID" uuid NOT NULL,
    "AccountingTypeID" integer NOT NULL,
    "IsPrimaryAccount" boolean DEFAULT true NOT NULL
);


ALTER TABLE "OrganisationLedgerAccount" OWNER TO postgres;

--
-- TOC entry 424 (class 1259 OID 42060)
-- Name: OrganisationPaymentMethod; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationPaymentMethod" (
    "OrganisationID" uuid NOT NULL,
    "GlobalPaymentMethodID" uuid NOT NULL,
    "OrganisationBankAccountId" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsDirectDebit" boolean DEFAULT true NOT NULL,
    "IsBACS" boolean DEFAULT false NOT NULL,
    "OrganisationDirectDebitMandateID" uuid,
    "IsPrimary" boolean DEFAULT false NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "DirectDebitMonthCollectionPeriodNumber" integer,
    "BACSMonthPaymentDay" integer,
    "DirectDebitNumberOfNotificationDaysBeforeCollection" integer,
    "BACSNumberOfNotificationDaysBeforeExpectationOfPayment" integer
);


ALTER TABLE "OrganisationPaymentMethod" OWNER TO postgres;

--
-- TOC entry 425 (class 1259 OID 42068)
-- Name: OrganisationPlanSubscription; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationPlanSubscription" (
    "OrganisationID" uuid NOT NULL,
    "PlanSubscriptionID" uuid NOT NULL,
    "PlanSubscriptionVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationPlanSubscription" OWNER TO postgres;

--
-- TOC entry 426 (class 1259 OID 42073)
-- Name: OrganisationProductPurchase; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationProductPurchase" (
    "OrganisationID" uuid NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "InvoiceLineItemID" uuid NOT NULL
);


ALTER TABLE "OrganisationProductPurchase" OWNER TO postgres;

--
-- TOC entry 427 (class 1259 OID 42076)
-- Name: OrganisationRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationRole" (
    "OrganisationRoleID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "OrganisationID" uuid NOT NULL,
    "ParentOrganisationRoleID" uuid,
    "RoleName" character varying(300) NOT NULL,
    "ParentRootRoleID" uuid,
    "IsManaged" boolean DEFAULT false NOT NULL,
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "RoleDescription" character varying(2000),
    "RoleSubCategoryID" integer,
    "ParentID" uuid
);


ALTER TABLE "OrganisationRole" OWNER TO postgres;

--
-- TOC entry 428 (class 1259 OID 42086)
-- Name: OrganisationRoleClaim; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationRoleClaim" (
    "OrganisationRoleClaimID" integer NOT NULL,
    "OrganisationRoleID" uuid,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "OrganisationID" uuid NOT NULL
);


ALTER TABLE "OrganisationRoleClaim" OWNER TO postgres;

--
-- TOC entry 429 (class 1259 OID 42091)
-- Name: OrganisationRoleClaim_OrganisationRoleClaimID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "OrganisationRoleClaim_OrganisationRoleClaimID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "OrganisationRoleClaim_OrganisationRoleClaimID_seq" OWNER TO postgres;

--
-- TOC entry 8704 (class 0 OID 0)
-- Dependencies: 429
-- Name: OrganisationRoleClaim_OrganisationRoleClaimID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "OrganisationRoleClaim_OrganisationRoleClaimID_seq" OWNED BY "OrganisationRoleClaim"."OrganisationRoleClaimID";


--
-- TOC entry 430 (class 1259 OID 42093)
-- Name: OrganisationSetting; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationSetting" (
    "OrganisationSettingID" integer NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Value" character varying(2000) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "OrganisationID" uuid NOT NULL
);


ALTER TABLE "OrganisationSetting" OWNER TO postgres;

--
-- TOC entry 431 (class 1259 OID 42101)
-- Name: OrganisationSettingTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationSettingTemplate" (
    "OrganisationSettingTemplateID" integer NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Value" character varying(2000) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationSettingTemplate" OWNER TO postgres;

--
-- TOC entry 432 (class 1259 OID 42109)
-- Name: OrganisationShoppingCartBlueprint; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationShoppingCartBlueprint" (
    "OrganisationID" uuid,
    "ShoppingCartBlueprintID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationShoppingCartBlueprint" OWNER TO postgres;

--
-- TOC entry 433 (class 1259 OID 42114)
-- Name: OrganisationStatus; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationStatus" (
    "OrganisationID" uuid NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "StatusChangedOn" timestamp without time zone NOT NULL,
    "StatusChangedBy" character varying(200) NOT NULL,
    "ParentID" uuid
);


ALTER TABLE "OrganisationStatus" OWNER TO postgres;

--
-- TOC entry 434 (class 1259 OID 42117)
-- Name: OrganisationStatusType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationStatusType" (
    "OrganisationStatusTypeID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "OrganisationID" uuid NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "ParentID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationStatusType" OWNER TO postgres;

--
-- TOC entry 435 (class 1259 OID 42123)
-- Name: OrganisationStructure; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationStructure" (
    "OrganisationStructureID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ParentOrganisationStructureID" uuid,
    "Name" character varying(100),
    "IsLeafNode" boolean DEFAULT false NOT NULL,
    "OrganisationID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationStructure" OWNER TO postgres;

--
-- TOC entry 436 (class 1259 OID 42130)
-- Name: OrganisationTeam; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationTeam" (
    "OrganisationTeamID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying,
    "EmailAddress" character varying,
    "IsDefault" boolean DEFAULT false NOT NULL,
    "TeamTypeID" integer,
    "TeamSubTypeID" integer,
    "TeamCategoryID" integer,
    "TeamSubCategoryID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "OrganisationID" uuid NOT NULL
);


ALTER TABLE "OrganisationTeam" OWNER TO postgres;

--
-- TOC entry 437 (class 1259 OID 42140)
-- Name: OrganisationTeamSetting; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationTeamSetting" (
    "OrganisationTeamSettingID" integer NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Value" character varying(2000) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "OrganisationTeamID" uuid NOT NULL
);


ALTER TABLE "OrganisationTeamSetting" OWNER TO postgres;

--
-- TOC entry 438 (class 1259 OID 42148)
-- Name: OrganisationTeamSettingTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationTeamSettingTemplate" (
    "OrganisationTeamSettingID" integer NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Value" character varying(2000) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationTeamSettingTemplate" OWNER TO postgres;

--
-- TOC entry 439 (class 1259 OID 42156)
-- Name: OrganisationTeam_OrganisationTeamID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "OrganisationTeam_OrganisationTeamID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "OrganisationTeam_OrganisationTeamID_seq" OWNER TO postgres;

--
-- TOC entry 440 (class 1259 OID 42158)
-- Name: OrganisationTradingName; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationTradingName" (
    "OrganisationTradingNameID" integer NOT NULL,
    "OrganisationID" uuid NOT NULL,
    "Name" character varying(200) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationTradingName" OWNER TO postgres;

--
-- TOC entry 441 (class 1259 OID 42163)
-- Name: OrganisationType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationType" (
    "OrganisationTypeID" integer DEFAULT nextval(('public.organisationtype_organisationtypeid_seq'::text)::regclass) NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationType" OWNER TO postgres;

--
-- TOC entry 442 (class 1259 OID 42172)
-- Name: OrganisationUnit; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationUnit" (
    "OrganisationUnitID" integer NOT NULL,
    "Name" character varying(50) NOT NULL,
    "Description" character varying(500),
    "DivisionName" character varying(500),
    "OrganisationID" uuid,
    "OrganisationUnitTypeID" integer,
    "OrganisationUnitCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationUnit" OWNER TO postgres;

--
-- TOC entry 443 (class 1259 OID 42180)
-- Name: OrganisationUnitOrganisationGroup; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationUnitOrganisationGroup" (
    "OrganisationUnitID" integer NOT NULL,
    "OrganisationGroupID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationUnitOrganisationGroup" OWNER TO postgres;

--
-- TOC entry 444 (class 1259 OID 42185)
-- Name: OrganisationUnitOrganisationRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationUnitOrganisationRole" (
    "OrganisationUnitID" integer NOT NULL,
    "OrganisationRoleID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationUnitOrganisationRole" OWNER TO postgres;

--
-- TOC entry 445 (class 1259 OID 42190)
-- Name: OrganisationUnitStructure; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationUnitStructure" (
    "OrganisationUnitStructureID" integer NOT NULL,
    "OrganisationUnitID" integer NOT NULL,
    "OrganisationID" uuid,
    "ParentOrganisationUnitStructureID" integer,
    "IsLeafNode" boolean DEFAULT false NOT NULL,
    "Name" character varying(100) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationUnitStructure" OWNER TO postgres;

--
-- TOC entry 446 (class 1259 OID 42196)
-- Name: OrganisationUnitStructure_OrganisationUnitStructureID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "OrganisationUnitStructure_OrganisationUnitStructureID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "OrganisationUnitStructure_OrganisationUnitStructureID_seq" OWNER TO postgres;

--
-- TOC entry 8705 (class 0 OID 0)
-- Dependencies: 446
-- Name: OrganisationUnitStructure_OrganisationUnitStructureID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "OrganisationUnitStructure_OrganisationUnitStructureID_seq" OWNED BY "OrganisationUnitStructure"."OrganisationUnitStructureID";


--
-- TOC entry 447 (class 1259 OID 42198)
-- Name: OrganisationUnit_OrganisationUnitID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "OrganisationUnit_OrganisationUnitID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "OrganisationUnit_OrganisationUnitID_seq" OWNER TO postgres;

--
-- TOC entry 8706 (class 0 OID 0)
-- Dependencies: 447
-- Name: OrganisationUnit_OrganisationUnitID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "OrganisationUnit_OrganisationUnitID_seq" OWNED BY "OrganisationUnit"."OrganisationUnitID";


--
-- TOC entry 448 (class 1259 OID 42200)
-- Name: OrganisationUserType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationUserType" (
    "OrganisationID" uuid NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsForDefaultUser" boolean DEFAULT false NOT NULL
);


ALTER TABLE "OrganisationUserType" OWNER TO postgres;

--
-- TOC entry 449 (class 1259 OID 42206)
-- Name: OrganisationWorkflow; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "OrganisationWorkflow" (
    "OrganisationWorkflowID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "OrganisationID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "VersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentID" uuid
);


ALTER TABLE "OrganisationWorkflow" OWNER TO postgres;

--
-- TOC entry 450 (class 1259 OID 42212)
-- Name: Package; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Package" (
    "PackageID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "PackageVersionNumber" integer NOT NULL,
    "PackageTemplateID" uuid NOT NULL,
    "PackageTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "Package" OWNER TO postgres;

--
-- TOC entry 451 (class 1259 OID 42218)
-- Name: PackageProduct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PackageProduct" (
    "PackageProductID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "PackageID" uuid NOT NULL,
    "UseProductDefaultBlueprint" boolean DEFAULT false NOT NULL,
    "UseDefaultProductPricing" boolean DEFAULT false NOT NULL,
    "IsFixedPrice" boolean DEFAULT false NOT NULL,
    "ProductPriceModifierPercentage" numeric NOT NULL,
    "ProductPriceModifierValue" numeric NOT NULL,
    "DefaultQuantity" integer DEFAULT 0 NOT NULL,
    "UserDefinableQuantity" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "PackageVersionNumber" integer NOT NULL,
    "RelatedProductProductAttributeID" uuid
);


ALTER TABLE "PackageProduct" OWNER TO postgres;

--
-- TOC entry 452 (class 1259 OID 42232)
-- Name: PackageProductRelationship; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PackageProductRelationship" (
    "PackageProductRelationshipID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ParentProductID" uuid NOT NULL,
    "ChildProductID" uuid NOT NULL,
    "ProductRelationshipTypeID" integer NOT NULL,
    "IsMandatory" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "PackageProductID" uuid NOT NULL,
    "ParentProductVersionID" integer NOT NULL,
    "ChildProductVersionID" integer NOT NULL,
    "PackageID" uuid NOT NULL,
    "PackageVersionNumber" integer NOT NULL
);


ALTER TABLE "PackageProductRelationship" OWNER TO postgres;

--
-- TOC entry 453 (class 1259 OID 42239)
-- Name: PackageProductRelationshipBlueprint; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PackageProductRelationshipBlueprint" (
    "PackageProductRelationshipBlueprintID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "PackageProductRelationshipID" uuid NOT NULL,
    "DefaultQuantity" integer DEFAULT 0 NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "PackageProductRelationshipBlueprint" OWNER TO postgres;

--
-- TOC entry 454 (class 1259 OID 42246)
-- Name: PackageProductRelationshipBlueprintTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PackageProductRelationshipBlueprintTemplate" (
    "PackageProductRelationshipBlueprintTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "PackageProductRelationshipTemplateID" uuid,
    "DefaultQuantity" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "PackageProductRelationshipBlueprintTemplate" OWNER TO postgres;

--
-- TOC entry 455 (class 1259 OID 42252)
-- Name: PackageProductRelationshipTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PackageProductRelationshipTemplate" (
    "PackageProductRelationshipTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ParentProductTemplateID" uuid NOT NULL,
    "ChildProductTemplateID" uuid NOT NULL,
    "ProductRelationshipTypeID" integer NOT NULL,
    "IsMandatory" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "PackageProductTemplateID" uuid NOT NULL,
    "ParentProductVersionID" integer NOT NULL,
    "ChildProductVersionID" integer NOT NULL,
    "PackageTemplateID" uuid NOT NULL,
    "PackageTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "PackageProductRelationshipTemplate" OWNER TO postgres;

--
-- TOC entry 456 (class 1259 OID 42259)
-- Name: PackageProductSpecificationBlueprint; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PackageProductSpecificationBlueprint" (
    "PackageProductSpecificationBlueprintID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "PackageProductID" uuid NOT NULL,
    "ProductSpecificationAttributeID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DefaultProductSpecificationAttributeOptionID" uuid NOT NULL,
    "PackageID" uuid NOT NULL,
    "PackageVersionNumber" integer NOT NULL
);


ALTER TABLE "PackageProductSpecificationBlueprint" OWNER TO postgres;

--
-- TOC entry 457 (class 1259 OID 42265)
-- Name: PackageProductSpecificationBlueprintTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PackageProductSpecificationBlueprintTemplate" (
    "PackageProductSpecificationBlueprintTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "PackageProductTemplateID" uuid NOT NULL,
    "ProductSpecificationAttributeTemplate" uuid NOT NULL,
    "DefaultProductSpecificationAttributeOptionTemplateID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "PackageTemplateID" uuid NOT NULL,
    "PackageTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "PackageProductSpecificationBlueprintTemplate" OWNER TO postgres;

--
-- TOC entry 458 (class 1259 OID 42271)
-- Name: PackageProductTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PackageProductTemplate" (
    "PackageProductTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "PackageTemplateID" uuid NOT NULL,
    "UseProductDefaultBlueprint" boolean DEFAULT true NOT NULL,
    "UseDefaultProductPricing" boolean DEFAULT true NOT NULL,
    "IsFixedPrice" boolean DEFAULT false NOT NULL,
    "ProductPriceModifierPercentage" numeric NOT NULL,
    "ProductPriceModifierValue" numeric NOT NULL,
    "DefaultQuantity" integer NOT NULL,
    "UserDefinableQuantity" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "PackageTemplateVersionNumber" integer NOT NULL,
    "RelatedProductProductAttributeTemplateID" uuid
);


ALTER TABLE "PackageProductTemplate" OWNER TO postgres;

--
-- TOC entry 459 (class 1259 OID 42284)
-- Name: PackageTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PackageTemplate" (
    "PackageTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "PackageTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "PackageTemplate" OWNER TO postgres;

--
-- TOC entry 460 (class 1259 OID 42290)
-- Name: PasswordResetSecrets; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PasswordResetSecrets" (
    "PasswordResetSecretID" uuid NOT NULL,
    "QuestionID" integer NOT NULL,
    "Answer" character varying(150) NOT NULL,
    "UserAccount_ID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "PasswordResetSecrets" OWNER TO postgres;

--
-- TOC entry 461 (class 1259 OID 42295)
-- Name: Plan; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Plan" (
    "PlanID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "PlanVersionNumber" integer NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "InvoiceName" character varying(200),
    "Price" numeric(30,8) DEFAULT 0 NOT NULL,
    "Period" integer DEFAULT 1 NOT NULL,
    "TrialPeriod" integer DEFAULT 1 NOT NULL,
    "PeriodUnitID" integer,
    "TrialPeriodUnitID" integer,
    "FreeQuantity" integer DEFAULT 0 NOT NULL,
    "SetupCost" numeric(30,8),
    "DowngradePenalty" numeric(30,8),
    "CreatedOn" timestamp without time zone NOT NULL,
    "CreatedBy" character varying(200) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "CountryCode" character varying(300) NOT NULL,
    "CurrencyCode" character varying(150),
    "CancellationPeriod" integer,
    "CancellationPeriodUnitID" integer,
    "IsFree" boolean DEFAULT false NOT NULL,
    "HasInfinitePeriods" boolean DEFAULT false NOT NULL,
    "ParentID" uuid,
    "PlanTemplateID" uuid NOT NULL,
    "PlanTemplateVersionNumber" integer NOT NULL,
    "PlanStatusID" integer NOT NULL,
    "IsTransactionBased" boolean DEFAULT false NOT NULL,
    "CoolOffPeriod" integer,
    "CoolOffPeriodUnitID" integer,
    "RenewalPrice" numeric(30,8),
    "RenewalPercentage" numeric(30,8),
    "RenewalIsPercentageOfOriginalPrice" boolean DEFAULT false,
    "HasForwardCycleFee" boolean DEFAULT false,
    "ForwardCycleFee" numeric(30,8),
    "ForwardCycleFreeIsSameAsPrice" numeric(30,8),
    "RenewalOfferPeriod" integer,
    "RenewalOfferPeriodUnitID" integer,
    "ForwardCycleFeePeriod" integer,
    "ForwardCycleFeePeriodUnitID" integer,
    "HasRenewalOffer" boolean DEFAULT false,
    "PriceDailyProRata" numeric(30,8),
    "IsAutoRenew" boolean DEFAULT false,
    "AutoRenewDecisionPeriod" integer,
    "AutoRenewDecisionUnitID" integer,
    "AutoRenewPeriod" integer,
    "AutoRenewPeriodUnitID" integer,
    "PlanGroupID" integer NOT NULL,
    "PlanTypeID" integer,
    "PlanCategoryID" integer NOT NULL,
    "ModifiedOn" date,
    "ModifiedBy" character varying(200)
);


ALTER TABLE "Plan" OWNER TO postgres;

--
-- TOC entry 462 (class 1259 OID 42315)
-- Name: PlanBilling; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanBilling" (
    "PlanID" uuid NOT NULL,
    "PlanVersionNumber" integer NOT NULL,
    "BillingID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsDefaultBilling" boolean DEFAULT false NOT NULL
);


ALTER TABLE "PlanBilling" OWNER TO postgres;

--
-- TOC entry 463 (class 1259 OID 42321)
-- Name: PlanBillingTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanBillingTemplate" (
    "PlanTemplateID" uuid NOT NULL,
    "PlanTemplateVersionNumber" integer NOT NULL,
    "BillingTemplateID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsDefaultBilling" boolean DEFAULT true NOT NULL
);


ALTER TABLE "PlanBillingTemplate" OWNER TO postgres;

--
-- TOC entry 464 (class 1259 OID 42327)
-- Name: PlanDiscount; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanDiscount" (
    "PlanID" uuid NOT NULL,
    "PlanVersionNumber" integer NOT NULL,
    "DiscountID" uuid NOT NULL,
    "DiscountVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "PlanDiscount" OWNER TO postgres;

--
-- TOC entry 465 (class 1259 OID 42332)
-- Name: PlanDiscountTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanDiscountTemplate" (
    "PlanTemplateID" uuid NOT NULL,
    "PlanTemplateVersionNumber" integer NOT NULL,
    "DiscountTemplateID" uuid NOT NULL,
    "DiscountTemplateVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "PlanDiscountTemplate" OWNER TO postgres;

--
-- TOC entry 466 (class 1259 OID 42337)
-- Name: PlanGlobalPaymentMethod; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanGlobalPaymentMethod" (
    "PlanID" uuid NOT NULL,
    "PlanVersionNumber" integer NOT NULL,
    "GlobalPaymentMethodID" uuid NOT NULL,
    "IsDefaultPaymentMethod" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "BillingID" uuid
);


ALTER TABLE "PlanGlobalPaymentMethod" OWNER TO postgres;

--
-- TOC entry 467 (class 1259 OID 42343)
-- Name: PlanGlobalPaymentMethodTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanGlobalPaymentMethodTemplate" (
    "PlanTemplateID" uuid NOT NULL,
    "PlanTemplateVersionNumber" integer NOT NULL,
    "GlobalPaymentMethodID" uuid NOT NULL,
    "IsDefaultPaymentMethod" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "BillingTemplateID" uuid
);


ALTER TABLE "PlanGlobalPaymentMethodTemplate" OWNER TO postgres;

--
-- TOC entry 468 (class 1259 OID 42349)
-- Name: PlanGroup; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanGroup" (
    "PlanGroupID" integer DEFAULT nextval(('public.plangroup_plangroupid_seq'::text)::regclass) NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "ParentID" uuid,
    "HasSameGlobalPaymentMethodForAllPlans" boolean DEFAULT false NOT NULL
);


ALTER TABLE "PlanGroup" OWNER TO postgres;

--
-- TOC entry 469 (class 1259 OID 42357)
-- Name: PlanProduct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanProduct" (
    "PlanID" uuid NOT NULL,
    "PlanVersionNumber" integer NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "Period" integer DEFAULT 1 NOT NULL,
    "PeriodUnitID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "PlanProductStatusID" integer
);


ALTER TABLE "PlanProduct" OWNER TO postgres;

--
-- TOC entry 470 (class 1259 OID 42363)
-- Name: PlanProductTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanProductTemplate" (
    "PlanTemplateID" uuid NOT NULL,
    "PlanTemplateVersionNumber" integer NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "Period" integer DEFAULT 1 NOT NULL,
    "PeriodUnitID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "PlanProductStatusID" integer
);


ALTER TABLE "PlanProductTemplate" OWNER TO postgres;

--
-- TOC entry 471 (class 1259 OID 42369)
-- Name: PlanSubscription; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanSubscription" (
    "PlanSubscriptionID" uuid NOT NULL,
    "PlanSubscriptionVersionNumber" integer NOT NULL,
    "HasInfinitePeriods" boolean DEFAULT false NOT NULL,
    "PlanQuantity" integer DEFAULT 1 NOT NULL,
    "CreatedOn" timestamp without time zone NOT NULL,
    "CreatedBy" character varying(200),
    "ActivatedOn" timestamp without time zone,
    "CancelledOn" timestamp without time zone,
    "CancelReasonID" integer,
    "DueInvoicesCount" integer,
    "DueSince" timestamp without time zone,
    "DueAmount" numeric(30,8),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentID" uuid,
    "CountryCode" character varying(300) NOT NULL,
    "IsFree" boolean DEFAULT false NOT NULL,
    "PlanID" uuid NOT NULL,
    "PlanVersionNumber" integer NOT NULL,
    "ParentVersionNumber" integer,
    "OrganisationID" uuid NOT NULL,
    "IsRenewal" boolean DEFAULT false NOT NULL,
    "RenewedOn" timestamp without time zone,
    "PlanSubscriptionReference" character varying(50)
);


ALTER TABLE "PlanSubscription" OWNER TO postgres;

--
-- TOC entry 472 (class 1259 OID 42381)
-- Name: PlanSubscriptionBillingProcessLog; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanSubscriptionBillingProcessLog" (
    "BillingPeriodNumber" integer NOT NULL,
    "PlanSubscriptionID" uuid NOT NULL,
    "PlanSubscriptionVersionNumber" integer NOT NULL,
    "CreatedOn" timestamp without time zone NOT NULL,
    "PlanSubscriptionBillingPeriodID" uuid NOT NULL,
    "StartDate" timestamp without time zone NOT NULL,
    "EndDate" timestamp without time zone NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsClosed" boolean DEFAULT false NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "ClosedOn" timestamp without time zone
);


ALTER TABLE "PlanSubscriptionBillingProcessLog" OWNER TO postgres;

--
-- TOC entry 473 (class 1259 OID 42387)
-- Name: PlanSubscriptionPaymentPlan; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanSubscriptionPaymentPlan" (
    "PlanSubscriptionPaymentPlanID" uuid NOT NULL,
    "GlobalPaymentMethodID" uuid NOT NULL,
    "PlanSubscriptionID" uuid NOT NULL,
    "PlanSubscriptionVersionNumber" integer NOT NULL,
    "BillingID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "PlanSubscriptionPaymentPlan" OWNER TO postgres;

--
-- TOC entry 474 (class 1259 OID 42392)
-- Name: PlanSubscriptionPeriod; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanSubscriptionPeriod" (
    "PlanSubscriptionID" uuid NOT NULL,
    "PlanSubscriptionVersionNumber" integer NOT NULL,
    "CreatedOn" timestamp without time zone,
    "StartDate" timestamp without time zone NOT NULL,
    "EndDate" timestamp without time zone NOT NULL,
    "IsCancellationPeriod" boolean DEFAULT false NOT NULL,
    "CancellationPeriodNumber" integer,
    "PeriodNumber" integer NOT NULL,
    "IsTrialPeriod" boolean DEFAULT false NOT NULL,
    "TrialPeriodNumber" integer,
    "TrialStartDate" timestamp without time zone,
    "TrialEndDate" timestamp without time zone,
    "CancellationStartDate" timestamp without time zone,
    "CancellationEndDate" timestamp without time zone,
    "PlanSubscriptionPeriodID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsClosed" boolean DEFAULT false NOT NULL,
    "PlanSubscriptionBillingPeriodID" uuid,
    "ClosedOn" timestamp without time zone
);


ALTER TABLE "PlanSubscriptionPeriod" OWNER TO postgres;

--
-- TOC entry 475 (class 1259 OID 42400)
-- Name: PlanSubscriptionProcessLog; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanSubscriptionProcessLog" (
    "PlanSubscriptionID" uuid NOT NULL,
    "PlanSubscriptionVersionNumber" integer NOT NULL,
    "CreatedOn" timestamp without time zone NOT NULL,
    "IsCancelled" boolean DEFAULT false NOT NULL,
    "IsRenewed" boolean DEFAULT false NOT NULL,
    "PlanSubscriptionStatusDetail" character varying(2000),
    "StatusTypeValueID" uuid NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL
);


ALTER TABLE "PlanSubscriptionProcessLog" OWNER TO postgres;

--
-- TOC entry 476 (class 1259 OID 42408)
-- Name: PlanTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanTemplate" (
    "PlanTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "PlanTemplateVersionNumber" integer NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "InvoiceName" character varying(200),
    "Price" numeric(30,8) DEFAULT 0 NOT NULL,
    "Period" integer DEFAULT 1 NOT NULL,
    "TrialPeriod" integer DEFAULT 1 NOT NULL,
    "PeriodUnitID" integer,
    "TrialPeriodUnitID" integer,
    "FreeQuantity" integer DEFAULT 0 NOT NULL,
    "SetupCost" numeric(30,8),
    "DowngradePenalty" numeric(30,8),
    "CreatedOn" timestamp without time zone NOT NULL,
    "CreatedBy" character varying(200) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "CountryCode" character varying(300) NOT NULL,
    "CurrencyCode" character varying(150),
    "CancellationPeriod" integer,
    "CancellationPeriodUnitID" integer,
    "IsFree" boolean DEFAULT false NOT NULL,
    "HasInfinitePeriods" boolean DEFAULT false NOT NULL,
    "ParentID" uuid,
    "PlanStatusID" integer NOT NULL,
    "IsTransactionBased" boolean DEFAULT false NOT NULL,
    "CoolOffPeriod" integer,
    "CoolOffPeriodUnitID" integer,
    "RenewalPrice" numeric(30,8),
    "RenewalPercentage" numeric(30,8),
    "RenewalIsPercentageOfOriginalPrice" boolean DEFAULT false,
    "HasForwardCycleFee" boolean DEFAULT false,
    "ForwardCycleFee" numeric(30,8),
    "ForwardCycleFeeIsSameAsPrice" boolean DEFAULT false,
    "RenewalOfferPeriod" integer,
    "RenewalOfferPeriodUnitID" integer,
    "ForwardCycleFeePeriod" integer,
    "ForwardCycleFeePeriodUnitID" integer,
    "HasRenewalOffer" boolean DEFAULT false,
    "PriceDailyProRata" numeric(30,8),
    "IsAutoRenew" boolean DEFAULT false,
    "AutoRenewDecisionPeriod" integer,
    "AutoRenewDecisionPeriodUnitID" integer,
    "AutoRenewPeriod" integer,
    "AutoRenewPeriodUnitID" integer,
    "PlanGroupID" integer,
    "PlanTypeID" integer,
    "PlanCategoryID" integer
);


ALTER TABLE "PlanTemplate" OWNER TO postgres;

--
-- TOC entry 477 (class 1259 OID 42429)
-- Name: PlanTransaction; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanTransaction" (
    "PlanTransactionID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "PlanID" uuid NOT NULL,
    "PlanVersionNumber" integer NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsTotalValuePricingBound" boolean DEFAULT false,
    "IsTransactionCountPricingBound" boolean DEFAULT false,
    "IsActive" boolean DEFAULT true,
    "IsDeleted" boolean DEFAULT false,
    "ParentID" uuid,
    "ApplyTransactionTierPricingPerTransaction" boolean DEFAULT false NOT NULL
);


ALTER TABLE "PlanTransaction" OWNER TO postgres;

--
-- TOC entry 478 (class 1259 OID 42438)
-- Name: PlanTransactionComponentTier; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanTransactionComponentTier" (
    "ComponentTierID" uuid NOT NULL,
    "PlanTransactionID" uuid NOT NULL
);


ALTER TABLE "PlanTransactionComponentTier" OWNER TO postgres;

--
-- TOC entry 479 (class 1259 OID 42441)
-- Name: PlanTransactionComponentTierTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanTransactionComponentTierTemplate" (
    "ComponentTierTemplateID" uuid NOT NULL,
    "PlanTransactionTemplateID" uuid NOT NULL
);


ALTER TABLE "PlanTransactionComponentTierTemplate" OWNER TO postgres;

--
-- TOC entry 480 (class 1259 OID 42444)
-- Name: PlanTransactionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PlanTransactionTemplate" (
    "PlanTransactionTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "PlanTemplateID" uuid NOT NULL,
    "PlanTemplateVersionNumber" integer NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsTotalValuePricingBound" boolean DEFAULT false,
    "IsTransactionCountPricingBound" boolean DEFAULT false,
    "IsActive" boolean DEFAULT true,
    "IsDeleted" boolean DEFAULT false,
    "ParentID" uuid,
    "ApplyTransactionTierPricingPerTransaction" boolean DEFAULT false NOT NULL
);


ALTER TABLE "PlanTransactionTemplate" OWNER TO postgres;

--
-- TOC entry 481 (class 1259 OID 42453)
-- Name: Plugin; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Plugin" (
    "PluginID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "PluginVersionNumber" integer NOT NULL,
    "Name" character varying(500) NOT NULL,
    "Description" character varying,
    "Version" character varying(50),
    "VersionNumber" integer NOT NULL,
    "Author" character varying(200),
    "SystemName" character varying(2000),
    "DisplayOrder" integer NOT NULL,
    "PluginFileName" character varying(2000) NOT NULL,
    "PluginTemplateID" uuid NOT NULL,
    "PluginTemplateVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "Plugin" OWNER TO postgres;

--
-- TOC entry 482 (class 1259 OID 42462)
-- Name: PluginTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "PluginTemplate" (
    "PluginTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "PluginTemplateVersionNumber" integer DEFAULT 0 NOT NULL,
    "Name" character varying(500) NOT NULL,
    "Description" character varying,
    "Version" character varying(50),
    "VersionNumber" integer NOT NULL,
    "Author" character varying(200),
    "SystemName" character varying(2000),
    "DisplayOrder" integer DEFAULT 0 NOT NULL,
    "PluginFileName" character varying(2000) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "PluginTemplate" OWNER TO postgres;

--
-- TOC entry 483 (class 1259 OID 42473)
-- Name: Product; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Product" (
    "ProductID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsPackage" boolean DEFAULT false NOT NULL,
    "IsDeposit" boolean DEFAULT false NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "ProductTemplateVersionID" integer NOT NULL,
    "ParentID" uuid,
    "OwnerOrganisationID" uuid,
    "CanBeResold" boolean DEFAULT false NOT NULL,
    "IsDeductionProduct" boolean DEFAULT false NOT NULL
);


ALTER TABLE "Product" OWNER TO postgres;

--
-- TOC entry 484 (class 1259 OID 42483)
-- Name: ProductAttribute; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductAttribute" (
    "ProductAttributeID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(400) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductAttribute" OWNER TO postgres;

--
-- TOC entry 485 (class 1259 OID 42492)
-- Name: ProductAttributeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductAttributeTemplate" (
    "ProductAttributeTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(400) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductAttributeTemplate" OWNER TO postgres;

--
-- TOC entry 486 (class 1259 OID 42501)
-- Name: ProductBusTask; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductBusTask" (
    "ProductBusTaskID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "BusTaskID" uuid,
    "Order" bigint DEFAULT 0 NOT NULL,
    "BusTaskVersionNumber" integer
);


ALTER TABLE "ProductBusTask" OWNER TO postgres;

--
-- TOC entry 487 (class 1259 OID 42508)
-- Name: ProductBusTaskTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductBusTaskTemplate" (
    "ProductBusTaskTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "BusTaskID" uuid,
    "Order" integer DEFAULT 0 NOT NULL,
    "BusTaskVersionNumber" integer
);


ALTER TABLE "ProductBusTaskTemplate" OWNER TO postgres;

--
-- TOC entry 488 (class 1259 OID 42515)
-- Name: ProductClaim; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductClaim" (
    "ProductClaimID" uuid NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "RoleID" uuid,
    "ProductRoleID" uuid,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductClaim" OWNER TO postgres;

--
-- TOC entry 489 (class 1259 OID 42520)
-- Name: ProductClaimTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductClaimTemplate" (
    "ProductClaimTemplateID" uuid NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "RoleID" uuid,
    "ProductRoleTemplateID" uuid,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductClaimTemplate" OWNER TO postgres;

--
-- TOC entry 490 (class 1259 OID 42525)
-- Name: ProductComponentTier; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductComponentTier" (
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "ComponentTierID" uuid NOT NULL
);


ALTER TABLE "ProductComponentTier" OWNER TO postgres;

--
-- TOC entry 491 (class 1259 OID 42528)
-- Name: ProductComponentTierTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductComponentTierTemplate" (
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "ComponentTierTemplateID" uuid NOT NULL
);


ALTER TABLE "ProductComponentTierTemplate" OWNER TO postgres;

--
-- TOC entry 492 (class 1259 OID 42531)
-- Name: ProductDeduction; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductDeduction" (
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "DeductionID" uuid NOT NULL,
    "DeductionPercentage" numeric(30,8),
    "DeductionValue" numeric(30,8),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ProductDeductionID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DeductionVersionNumber" integer NOT NULL
);


ALTER TABLE "ProductDeduction" OWNER TO postgres;

--
-- TOC entry 493 (class 1259 OID 42537)
-- Name: ProductDeductionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductDeductionTemplate" (
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "DeductionTemplateID" uuid NOT NULL,
    "DeductionPercentage" numeric(30,8),
    "DeductionValue" numeric(30,8),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ProductDeductionTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "DeductionTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "ProductDeductionTemplate" OWNER TO postgres;

--
-- TOC entry 494 (class 1259 OID 42543)
-- Name: ProductDetail; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductDetail" (
    "ProductDetailID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(1000) NOT NULL,
    "Description" character varying(2000),
    "ProductID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ShortDescription" character varying,
    "LongDescription" character varying,
    "MetaKeywords" character varying(400),
    "MetaDescription" character varying,
    "MetaTitle" character varying(400),
    "RequireOtherProducts" boolean DEFAULT false NOT NULL,
    "AutomaticallyAddRequiredProducts" boolean DEFAULT false NOT NULL,
    "HasUserAgreement" boolean DEFAULT false NOT NULL,
    "UserAgreementText" character varying,
    "IsRecurring" boolean DEFAULT false NOT NULL,
    "RecurringCycleLength" integer NOT NULL,
    "RecurringCyclePeriodID" integer NOT NULL,
    "RecurringTotalCycle" integer NOT NULL,
    "IsTaxExempt" boolean DEFAULT false,
    "TaxCategoryID" integer,
    "OrderMinimumQuantity" integer DEFAULT 0 NOT NULL,
    "OrderMaximumQuantity" integer DEFAULT 0 NOT NULL,
    "CallForPrice" boolean DEFAULT false NOT NULL,
    "Price" numeric NOT NULL,
    "ProductCost" numeric NOT NULL,
    "CustomerEntersPrice" boolean DEFAULT false NOT NULL,
    "HasTierPrices" boolean DEFAULT false NOT NULL,
    "HasDiscountsApplied" boolean DEFAULT false NOT NULL,
    "MinimumCustomerEnteredPrice" numeric NOT NULL,
    "MaximumCustomerEnteredPrice" numeric NOT NULL,
    "DisplayOrder" integer NOT NULL,
    "AvailableStartDate" timestamp without time zone,
    "AvailableEndDate" timestamp without time zone,
    "ProductTypeID" integer NOT NULL,
    "ProductSubTypeID" integer,
    "ProductCategoryID" integer,
    "ProductSubCategoryID" integer,
    "ProductVersionID" integer NOT NULL,
    "CurrencyCode" character varying(30) NOT NULL,
    "CurrencyRate" numeric,
    "CurrencyRateDate" date,
    "CurrencyRateToGBP" numeric,
    "CurrencyRateToUSD" numeric,
    "InvoiceName" character varying(2000),
    "IsDepositProduct" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductDetail" OWNER TO postgres;

--
-- TOC entry 495 (class 1259 OID 42564)
-- Name: ProductDetailTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductDetailTemplate" (
    "ProductDetailTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ShortDescription" character varying,
    "LongDescription" character varying,
    "MetaKeywords" character varying(400),
    "MetaDescription" character varying,
    "MetaTitle" character varying(400),
    "AutomaticallyAddRequiredProducts" boolean DEFAULT false NOT NULL,
    "HasUserAgreement" boolean DEFAULT false NOT NULL,
    "UserAgreementText" character varying,
    "IsRecurring" boolean DEFAULT false NOT NULL,
    "RecurringCycleLength" integer DEFAULT 0 NOT NULL,
    "RecurringCyclePeriodID" integer DEFAULT 0 NOT NULL,
    "RecurringTotalCycles" integer DEFAULT 0 NOT NULL,
    "IsTaxExempt" boolean DEFAULT false NOT NULL,
    "TaxCategoryID" integer,
    "OrderMinimumQuantity" integer DEFAULT 0 NOT NULL,
    "OrderMaximumQuantity" integer DEFAULT 0 NOT NULL,
    "CallForPrice" boolean DEFAULT false NOT NULL,
    "Price" numeric NOT NULL,
    "ProductCost" numeric NOT NULL,
    "CustomerEntersPrice" boolean DEFAULT false NOT NULL,
    "HasTierPrices" boolean DEFAULT false NOT NULL,
    "HasDiscountsApplied" boolean DEFAULT false NOT NULL,
    "MinimumCustomerEnteredPrice" numeric DEFAULT 0 NOT NULL,
    "MaximumCustomerEnteredPrice" numeric DEFAULT 0 NOT NULL,
    "DisplayOrder" integer NOT NULL,
    "AvailableStartDate" timestamp without time zone,
    "AvailableEndDate" timestamp without time zone,
    "ProductTypeID" integer NOT NULL,
    "ProductSubTypeID" integer,
    "ProductCategoryID" integer,
    "ProductSubCategoryID" integer,
    "RequireOtherProducts" boolean DEFAULT false NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "CurrencyCode" character varying(30),
    "CurrencyRate" numeric NOT NULL,
    "CurrencyRateDate" date,
    "CurrencyRateToGBP" numeric,
    "CurrencyRateToUSD" numeric,
    "InvoiceName" character varying(2000),
    "IsDepositProduct" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductDetailTemplate" OWNER TO postgres;

--
-- TOC entry 496 (class 1259 OID 42590)
-- Name: ProductDiscount; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductDiscount" (
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "DiscountID" uuid NOT NULL,
    "DiscountVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductDiscount" OWNER TO postgres;

--
-- TOC entry 497 (class 1259 OID 42595)
-- Name: ProductDiscountTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductDiscountTemplate" (
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "DiscountTemplateID" uuid NOT NULL,
    "DiscountTemplateVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductDiscountTemplate" OWNER TO postgres;

--
-- TOC entry 498 (class 1259 OID 42600)
-- Name: ProductFamily; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductFamily" (
    "ProductFamilyID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(500) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductFamily" OWNER TO postgres;

--
-- TOC entry 499 (class 1259 OID 42609)
-- Name: ProductFamilyProductPackage; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductFamilyProductPackage" (
    "ProductFamilyProductPackageID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductFamilyID" uuid NOT NULL,
    "PackageProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "PackageID" uuid NOT NULL,
    "PackageVersionNumber" integer NOT NULL
);


ALTER TABLE "ProductFamilyProductPackage" OWNER TO postgres;

--
-- TOC entry 500 (class 1259 OID 42613)
-- Name: ProductFamilyProductPackageTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductFamilyProductPackageTemplate" (
    "ProductFamilyProductPackageTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "PackageProductTemplateID" uuid NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductFamilyTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "PackageTemplateID" uuid NOT NULL,
    "PackageTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "ProductFamilyProductPackageTemplate" OWNER TO postgres;

--
-- TOC entry 501 (class 1259 OID 42617)
-- Name: ProductFamilyTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductFamilyTemplate" (
    "ProductFamilyTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(500) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductFamilyTemplate" OWNER TO postgres;

--
-- TOC entry 502 (class 1259 OID 42626)
-- Name: ProductPlan; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductPlan" (
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "PlanID" uuid NOT NULL,
    "PlanVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductPlan" OWNER TO postgres;

--
-- TOC entry 503 (class 1259 OID 42631)
-- Name: ProductPlanTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductPlanTemplate" (
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "PlanTemplateID" uuid NOT NULL,
    "PlanTemplateVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductPlanTemplate" OWNER TO postgres;

--
-- TOC entry 504 (class 1259 OID 42636)
-- Name: ProductProductAttribute; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductProductAttribute" (
    "ProductProductAttributeID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductAttributeID" uuid NOT NULL,
    "IsRequired" boolean DEFAULT false NOT NULL,
    "DisplayOrder" integer NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductProductAttribute" OWNER TO postgres;

--
-- TOC entry 505 (class 1259 OID 42643)
-- Name: ProductProductAttributeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductProductAttributeTemplate" (
    "ProductProductAttributeTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductAttributeTemplateID" uuid NOT NULL,
    "IsRequired" boolean DEFAULT false NOT NULL,
    "DisplayOrder" integer DEFAULT 0 NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductProductAttributeTemplate" OWNER TO postgres;

--
-- TOC entry 506 (class 1259 OID 42651)
-- Name: ProductPurchase; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductPurchase" (
    "ProductPurchaseID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "InvoiceLineItemID" uuid NOT NULL,
    "PurchaseDate" timestamp without time zone NOT NULL,
    "ParentID" uuid
);


ALTER TABLE "ProductPurchase" OWNER TO postgres;

--
-- TOC entry 507 (class 1259 OID 42655)
-- Name: ProductPurchaseBusTaskProcessDetail; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductPurchaseBusTaskProcessDetail" (
    "ProductPurchaseBusTaskProcessDetailID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductPurchaseProductTaskID" uuid,
    "StartDate" timestamp without time zone NOT NULL,
    "EndDate" timestamp without time zone,
    "CreatedBy" character varying DEFAULT 200,
    "MessageDetail" character varying,
    "MessageJsonDetail" json,
    "MessageAdditionalDetail" character varying,
    "MessageJsonAdditionalDetail" json,
    "TaskDataHasExpiry" boolean DEFAULT false NOT NULL,
    "TaskDataExpiryDate" timestamp without time zone,
    "ProcessDataTypeID" integer,
    "ProcessDataCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductPurchaseBusTaskProcessDetail" OWNER TO postgres;

--
-- TOC entry 508 (class 1259 OID 42666)
-- Name: ProductPurchaseBusTaskProcessLog; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductPurchaseBusTaskProcessLog" (
    "ProductPurchaseProductTaskID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductPurchaseID" uuid NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "CreatedOn" timestamp without time zone NOT NULL,
    "IsComplete" boolean DEFAULT false NOT NULL,
    "ProcessMessage" character varying(2000) NOT NULL,
    "ProcessDetail" json NOT NULL,
    "ProductBusTaskID" uuid,
    "HasError" boolean DEFAULT false NOT NULL,
    "NumberOfRetries" integer DEFAULT 0 NOT NULL,
    "ParentID" uuid
);


ALTER TABLE "ProductPurchaseBusTaskProcessLog" OWNER TO postgres;

--
-- TOC entry 509 (class 1259 OID 42676)
-- Name: ProductPurchaseProcessLog; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductPurchaseProcessLog" (
    "ProductPurchaseProcessLogID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "CreatedOn" timestamp without time zone NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "ProductPurchaseID" uuid NOT NULL,
    "ProcessMessage" character varying(2000),
    "ProcessDetail" json,
    "HasError" boolean DEFAULT false NOT NULL,
    "IsComplete" boolean DEFAULT false NOT NULL,
    "NumberOfRetries" integer DEFAULT 0,
    "ParentID" uuid
);


ALTER TABLE "ProductPurchaseProcessLog" OWNER TO postgres;

--
-- TOC entry 510 (class 1259 OID 42686)
-- Name: ProductPurchaseReference; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductPurchaseReference" (
    "ProductPurchaseReferenceID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductPurchaseReferenceTypeID" integer NOT NULL,
    "ProductPurchaseReferenceValue" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "InvoiceLineItemID" uuid NOT NULL
);


ALTER TABLE "ProductPurchaseReference" OWNER TO postgres;

--
-- TOC entry 511 (class 1259 OID 42692)
-- Name: ProductRelationship; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductRelationship" (
    "ProductRelationshipID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ParentProductID" uuid NOT NULL,
    "ChildProductID" uuid NOT NULL,
    "ProductRelationshipTypeID" integer NOT NULL,
    "IsMandatory" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentProductVersionID" integer NOT NULL,
    "ChildProductVersionID" integer NOT NULL
);


ALTER TABLE "ProductRelationship" OWNER TO postgres;

--
-- TOC entry 512 (class 1259 OID 42699)
-- Name: ProductRelationshipBlueprint; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductRelationshipBlueprint" (
    "ProductRelationshipBlueprintID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductRelationshipID" uuid NOT NULL,
    "DefaultQuantity" integer DEFAULT 0 NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductRelationshipBlueprint" OWNER TO postgres;

--
-- TOC entry 513 (class 1259 OID 42706)
-- Name: ProductRelationshipBlueprintTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductRelationshipBlueprintTemplate" (
    "ProductRelationshipBlueprintTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductRelationshipTemplateID" uuid NOT NULL,
    "DefaultQuantity" integer DEFAULT 0 NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductRelationshipBlueprintTemplate" OWNER TO postgres;

--
-- TOC entry 514 (class 1259 OID 42713)
-- Name: ProductRelationshipTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductRelationshipTemplate" (
    "ProductRelationshipTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ParentProductTemplateID" uuid NOT NULL,
    "ChildProductTemplateID" uuid NOT NULL,
    "ProductRelationshipTypeID" integer NOT NULL,
    "IsMandatory" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentProductVersionID" integer NOT NULL,
    "ChildProductVersionID" integer NOT NULL
);


ALTER TABLE "ProductRelationshipTemplate" OWNER TO postgres;

--
-- TOC entry 515 (class 1259 OID 42720)
-- Name: ProductRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductRole" (
    "ProductRoleID" uuid NOT NULL,
    "RoleName" character varying(300) NOT NULL,
    "RoleDescription" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "RoleSubCategoryID" integer,
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL
);


ALTER TABLE "ProductRole" OWNER TO postgres;

--
-- TOC entry 516 (class 1259 OID 42728)
-- Name: ProductRoleTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductRoleTemplate" (
    "ProductRoleTemplateID" uuid NOT NULL,
    "RoleName" character varying(300) NOT NULL,
    "RoleDescription" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "RoleSubCategoryID" integer,
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL
);


ALTER TABLE "ProductRoleTemplate" OWNER TO postgres;

--
-- TOC entry 517 (class 1259 OID 42736)
-- Name: ProductSpecificationAttribute; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductSpecificationAttribute" (
    "ProductSpecificationAttributeID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductID" uuid NOT NULL,
    "IsMultiSelect" boolean DEFAULT false NOT NULL,
    "DisplayOrder" integer DEFAULT 0 NOT NULL,
    "IsPreSelected" boolean DEFAULT false NOT NULL,
    "MinimumSelectionLimit" integer DEFAULT 0 NOT NULL,
    "MaximumSelectionLimit" integer DEFAULT 0 NOT NULL,
    "IsUserDefined" boolean DEFAULT false NOT NULL,
    "IsPriceDriven" boolean DEFAULT false NOT NULL,
    "SpecificationAttributeID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "IsMandatory" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductSpecificationAttribute" OWNER TO postgres;

--
-- TOC entry 518 (class 1259 OID 42750)
-- Name: ProductSpecificationAttributeOption; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductSpecificationAttributeOption" (
    "ProductSpecificationAttributeOptionID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductSpecificationAttributeID" uuid NOT NULL,
    "SpecficiationAttributeOptionID" uuid NOT NULL,
    "PriceAdjustment" numeric DEFAULT 0 NOT NULL,
    "WeightAdjustment" numeric,
    "Cost" numeric DEFAULT 0 NOT NULL,
    "DefaultValue" numeric DEFAULT 0 NOT NULL,
    "DefaultQuantity" integer DEFAULT 0 NOT NULL,
    "DisplayOrder" integer DEFAULT 0 NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductSpecificationAttributeOption" OWNER TO postgres;

--
-- TOC entry 519 (class 1259 OID 42764)
-- Name: ProductSpecificationAttributeOptionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductSpecificationAttributeOptionTemplate" (
    "SpecificationAttributeOptionTemplateID" uuid NOT NULL,
    "PriceAdjustement" numeric DEFAULT 0 NOT NULL,
    "WeightAdjustment" numeric,
    "Cost" numeric DEFAULT 0 NOT NULL,
    "DefaultValue" numeric DEFAULT 0 NOT NULL,
    "DefaultQuantity" numeric NOT NULL,
    "DisplayOrder" integer DEFAULT 0 NOT NULL,
    "IsActive" boolean DEFAULT false NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ProductSpecificationAttributeTemplateID" uuid NOT NULL,
    "ProductSpecificationAttributeOptionTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL
);


ALTER TABLE "ProductSpecificationAttributeOptionTemplate" OWNER TO postgres;

--
-- TOC entry 520 (class 1259 OID 42777)
-- Name: ProductSpecificationAttributeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductSpecificationAttributeTemplate" (
    "ProductTemplateID" uuid NOT NULL,
    "IsMandatory" boolean DEFAULT false NOT NULL,
    "IsMultiSelect" boolean DEFAULT false NOT NULL,
    "DisplayOrder" integer DEFAULT 0 NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "SpecificationAttributeTemplateID" uuid NOT NULL,
    "IsPreSelected" boolean DEFAULT false NOT NULL,
    "MinimumSelectionLimit" integer DEFAULT 0 NOT NULL,
    "MaximumSelectionLimit" integer DEFAULT 0 NOT NULL,
    "ProductSpecificationAttributeTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "IsUserDefined" boolean DEFAULT false NOT NULL,
    "IsPriceDriven" boolean DEFAULT false NOT NULL,
    "ProductVersionID" integer NOT NULL
);


ALTER TABLE "ProductSpecificationAttributeTemplate" OWNER TO postgres;

--
-- TOC entry 521 (class 1259 OID 42791)
-- Name: ProductSpecificationBlueprint; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductSpecificationBlueprint" (
    "ProductSpecificationBlueprintID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductSpecificationAttributeID" uuid NOT NULL,
    "DefaultProductSpecificationAttributeOptionID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ProductVersionID" integer NOT NULL
);


ALTER TABLE "ProductSpecificationBlueprint" OWNER TO postgres;

--
-- TOC entry 522 (class 1259 OID 42797)
-- Name: ProductSpecificationBlueprintTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductSpecificationBlueprintTemplate" (
    "ProductSpecificationBlueprintTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductSpecificationAttributeTemplateID" uuid NOT NULL,
    "DefaultProductSpecificationAttributeOptionTemplateID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ProductVersionID" integer NOT NULL
);


ALTER TABLE "ProductSpecificationBlueprintTemplate" OWNER TO postgres;

--
-- TOC entry 523 (class 1259 OID 42803)
-- Name: ProductTag; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductTag" (
    "ProductTagID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(400) NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL
);


ALTER TABLE "ProductTag" OWNER TO postgres;

--
-- TOC entry 524 (class 1259 OID 42807)
-- Name: ProductTagTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductTagTemplate" (
    "ProductTagTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(400) NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL
);


ALTER TABLE "ProductTagTemplate" OWNER TO postgres;

--
-- TOC entry 525 (class 1259 OID 42811)
-- Name: ProductTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductTemplate" (
    "ProductTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsPackage" boolean DEFAULT false NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "ParentID" uuid,
    "OwnerOrganisationID" uuid,
    "IsDefaultTemplate" boolean DEFAULT false NOT NULL,
    "CanBeResold" boolean DEFAULT false NOT NULL,
    "IsDeductionProduct" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductTemplate" OWNER TO postgres;

--
-- TOC entry 526 (class 1259 OID 42821)
-- Name: ProductVariantAttributeCombination; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductVariantAttributeCombination" (
    "ProductVariantAttributeCombinationID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductID" uuid NOT NULL,
    "AllowOutOfStockOrders" boolean DEFAULT false NOT NULL,
    "StockQuantity" integer DEFAULT 0 NOT NULL,
    "Sku" character varying(4000),
    "ManufacturerPartNumber" character varying(4000),
    "Gtin" character varying(4000),
    "OverridenPrice" numeric NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ProductVersionID" integer NOT NULL
);


ALTER TABLE "ProductVariantAttributeCombination" OWNER TO postgres;

--
-- TOC entry 527 (class 1259 OID 42832)
-- Name: ProductVariantAttributeCombinationTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductVariantAttributeCombinationTemplate" (
    "ProductVariantAttributeCombinationTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "AllowOutOfStockOrders" boolean DEFAULT false NOT NULL,
    "StockQuantity" integer NOT NULL,
    "Sku" character varying(4000),
    "ManufacturerPartNumber" character varying(4000),
    "Gtin" character varying(4000),
    "OverriddenPrice" numeric DEFAULT 0 NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ProductVersionID" integer NOT NULL
);


ALTER TABLE "ProductVariantAttributeCombinationTemplate" OWNER TO postgres;

--
-- TOC entry 528 (class 1259 OID 42843)
-- Name: ProductVariantAttributeValue; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductVariantAttributeValue" (
    "ProductVariantAttributeValueID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductProductAttributeID" uuid,
    "AttributeValueTypeID" integer,
    "Name" character varying(400) NOT NULL,
    "PriceAdjustment" numeric,
    "WeightAdjustement" numeric DEFAULT 0,
    "Cost" numeric DEFAULT 0 NOT NULL,
    "Quantity" integer DEFAULT 0 NOT NULL,
    "IsPreSelected" boolean DEFAULT false NOT NULL,
    "DisplayOrder" integer DEFAULT 0 NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductVariantAttributeValue" OWNER TO postgres;

--
-- TOC entry 529 (class 1259 OID 42857)
-- Name: ProductVariantAttributeValueTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductVariantAttributeValueTemplate" (
    "ProductVariantAttributeValueTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductProductAttributeTemplateID" uuid NOT NULL,
    "AttributeValueTypeID" integer,
    "Name" character varying(400) NOT NULL,
    "PriceAdjustment" numeric,
    "WeightAdjustment" numeric DEFAULT 0,
    "Cost" numeric NOT NULL,
    "Quantity" integer NOT NULL,
    "IsPreSelected" boolean DEFAULT false NOT NULL,
    "DisplayOrder" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ProductVariantAttributeValueTemplate" OWNER TO postgres;

--
-- TOC entry 530 (class 1259 OID 42868)
-- Name: RelationshipRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "RelationshipRole" (
    "RelationshipRoleID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(100) NOT NULL,
    "Description" character varying,
    "RelationshipRoleStatusID" integer NOT NULL,
    "RelationshipRoleStateID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "RelationshipRole" OWNER TO postgres;

--
-- TOC entry 531 (class 1259 OID 42877)
-- Name: Repository; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Repository" (
    "RepositoryID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "OwnerID" uuid NOT NULL,
    "Name" character varying(256) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "Repository" OWNER TO postgres;

--
-- TOC entry 532 (class 1259 OID 42886)
-- Name: RepositoryStructure; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "RepositoryStructure" (
    "RepositoryStructureID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "RepositoryID" uuid NOT NULL,
    "OwnerID" uuid NOT NULL,
    "ParentRepositoryStructureID" uuid,
    "IsLeafNode" boolean DEFAULT false NOT NULL,
    "Name" character varying(256) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "RepositoryStructure" OWNER TO postgres;

--
-- TOC entry 533 (class 1259 OID 42893)
-- Name: RepositoryStructureGroup; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "RepositoryStructureGroup" (
    "RepositoryStructureID" uuid NOT NULL,
    "OrganisationGroupID" uuid,
    "OrganisationExternalGroupID" uuid,
    "RepositoryStructureGroupID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "RepositoryStructureGroup" OWNER TO postgres;

--
-- TOC entry 534 (class 1259 OID 42898)
-- Name: RepositoryStructureGroup_RepositoryStructureGroupID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "RepositoryStructureGroup_RepositoryStructureGroupID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "RepositoryStructureGroup_RepositoryStructureGroupID_seq" OWNER TO postgres;

--
-- TOC entry 8707 (class 0 OID 0)
-- Dependencies: 534
-- Name: RepositoryStructureGroup_RepositoryStructureGroupID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "RepositoryStructureGroup_RepositoryStructureGroupID_seq" OWNED BY "RepositoryStructureGroup"."RepositoryStructureGroupID";


--
-- TOC entry 535 (class 1259 OID 42900)
-- Name: RepositoryStructureRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "RepositoryStructureRole" (
    "RepositoryStructureID" uuid NOT NULL,
    "OrganisationRoleID" uuid,
    "RepositoryStructureRoleID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "RepositoryStructureRole" OWNER TO postgres;

--
-- TOC entry 536 (class 1259 OID 42905)
-- Name: RepositoryStructureRole_RepositoryStructureRoleID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "RepositoryStructureRole_RepositoryStructureRoleID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "RepositoryStructureRole_RepositoryStructureRoleID_seq" OWNER TO postgres;

--
-- TOC entry 8708 (class 0 OID 0)
-- Dependencies: 536
-- Name: RepositoryStructureRole_RepositoryStructureRoleID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "RepositoryStructureRole_RepositoryStructureRoleID_seq" OWNED BY "RepositoryStructureRole"."RepositoryStructureRoleID";


--
-- TOC entry 537 (class 1259 OID 42907)
-- Name: Resource; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Resource" (
    "ResourceID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ResourceName" character varying(150) NOT NULL,
    "ResourceDescription" character varying(500),
    "SourceID" uuid,
    "ResourceTypeID" integer,
    "ResourceCategoryID" integer,
    "ResourceSubCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentID" uuid
);


ALTER TABLE "Resource" OWNER TO postgres;

--
-- TOC entry 538 (class 1259 OID 42916)
-- Name: ResourceOperation; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ResourceOperation" (
    "ResourceID" uuid NOT NULL,
    "OperationID" uuid NOT NULL
);


ALTER TABLE "ResourceOperation" OWNER TO postgres;

--
-- TOC entry 539 (class 1259 OID 42919)
-- Name: ResourceOperationTarget; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ResourceOperationTarget" (
    "ResourceID" uuid NOT NULL,
    "OperationID" uuid NOT NULL,
    "OrganisationTypeID" integer,
    "UserTypeID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ResourceOperationTarget" OWNER TO postgres;

--
-- TOC entry 540 (class 1259 OID 42924)
-- Name: Role; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Role" (
    "RoleID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "RoleName" character varying(300) NOT NULL,
    "RoleDescription" character varying(500) NOT NULL,
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "RoleSubCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsGlobal" boolean DEFAULT true
);


ALTER TABLE "Role" OWNER TO postgres;

--
-- TOC entry 541 (class 1259 OID 42934)
-- Name: RoleClaim; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "RoleClaim" (
    "RoleClaimID" integer NOT NULL,
    "RoleID" uuid NOT NULL,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsGlobal" boolean DEFAULT true
);


ALTER TABLE "RoleClaim" OWNER TO postgres;

--
-- TOC entry 542 (class 1259 OID 42940)
-- Name: RoleTemplateClaim_RoleTemplateClaimID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "RoleTemplateClaim_RoleTemplateClaimID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "RoleTemplateClaim_RoleTemplateClaimID_seq" OWNER TO postgres;

--
-- TOC entry 8709 (class 0 OID 0)
-- Dependencies: 542
-- Name: RoleTemplateClaim_RoleTemplateClaimID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "RoleTemplateClaim_RoleTemplateClaimID_seq" OWNED BY "RoleClaim"."RoleClaimID";


--
-- TOC entry 543 (class 1259 OID 42942)
-- Name: ServiceDefinition; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ServiceDefinition" (
    "ServiceDefinitionID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ServiceDefinitionTypeID" integer NOT NULL,
    "ServiceDefinitionCategoryID" integer,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "ServiceInterfaceID" uuid NOT NULL,
    "IsPollingService" boolean DEFAULT false NOT NULL,
    "NumberOfRetriesPerCall" integer DEFAULT 1 NOT NULL,
    "ServiceEngineObjectName" character varying(1000),
    "ServiceDefinitionObjectName" character varying(1000),
    "ServiceMutatorObjectName" character varying(1000),
    "RetryPeriodPerCallInMinutes" integer DEFAULT 180,
    "RetryFailedCalls" boolean DEFAULT false
);


ALTER TABLE "ServiceDefinition" OWNER TO postgres;

--
-- TOC entry 544 (class 1259 OID 42953)
-- Name: ServiceDefinitionDetail; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ServiceDefinitionDetail" (
    "ServiceDefinitionDetailID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "EnvironmentName" character varying(50),
    "ServicePartialURL" character varying(500) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ServiceDefinitionID" uuid NOT NULL,
    "ServerURL" character varying(500) NOT NULL
);


ALTER TABLE "ServiceDefinitionDetail" OWNER TO postgres;

--
-- TOC entry 545 (class 1259 OID 42962)
-- Name: ServiceInterface; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ServiceInterface" (
    "ServiceInterfaceID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "ServiceInterfaceTypeID" integer NOT NULL,
    "ServiceInterfaceCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ServiceInterface" OWNER TO postgres;

--
-- TOC entry 546 (class 1259 OID 42971)
-- Name: ServiceInterfaceProcessLog; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ServiceInterfaceProcessLog" (
    "ServiceInterfaceProcessLogID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ProductPurchaseProductTaskID" uuid,
    "CreatedOn" timestamp without time zone NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "IsComplete" boolean DEFAULT false NOT NULL,
    "NumberOfRetries" integer,
    "HasError" boolean DEFAULT false NOT NULL,
    "ServiceDefinitionID" uuid NOT NULL,
    "ParentID" uuid,
    "ProcessDetail" json,
    "ProcessMessage" character varying(2000)
);


ALTER TABLE "ServiceInterfaceProcessLog" OWNER TO postgres;

--
-- TOC entry 547 (class 1259 OID 42980)
-- Name: ServiceProvider; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ServiceProvider" (
    "ServiceProviderID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ServiceProvider" OWNER TO postgres;

--
-- TOC entry 548 (class 1259 OID 42986)
-- Name: Setting; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Setting" (
    "Id" integer NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Value" character varying(2000) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "Setting" OWNER TO postgres;

--
-- TOC entry 549 (class 1259 OID 42994)
-- Name: Setting_Id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "Setting_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "Setting_Id_seq" OWNER TO postgres;

--
-- TOC entry 8710 (class 0 OID 0)
-- Dependencies: 549
-- Name: Setting_Id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "Setting_Id_seq" OWNED BY "Setting"."Id";


--
-- TOC entry 550 (class 1259 OID 42996)
-- Name: ShoppingCart; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ShoppingCart" (
    "ShoppingCartID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "CreatedOn" date NOT NULL,
    "HasBeenConvertedToTransactionOrder" boolean DEFAULT false NOT NULL,
    "HasExpired" boolean DEFAULT false NOT NULL,
    "CurrencyCode" character varying(30) NOT NULL,
    "CurrencyRateDate" date NOT NULL,
    "CurrencyRate" numeric(30,8) DEFAULT 0 NOT NULL,
    "CurrencyRateToGBP" numeric(30,8) NOT NULL,
    "CurrencyRateToUSD" numeric(30,8) NOT NULL,
    "CountryCode" character varying(30),
    "PaymentCardTypeID" integer NOT NULL,
    "PaymentMethodTypeID" integer NOT NULL,
    "GlobalPaymentMethodID" uuid NOT NULL,
    "OrganisationID" uuid,
    "UserAccountOrganisationID" uuid
);


ALTER TABLE "ShoppingCart" OWNER TO postgres;

--
-- TOC entry 551 (class 1259 OID 43004)
-- Name: ShoppingCartBlueprint; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ShoppingCartBlueprint" (
    "ShoppingCartBlueprintID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ParentID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "Name" character varying(400)
);


ALTER TABLE "ShoppingCartBlueprint" OWNER TO postgres;

--
-- TOC entry 552 (class 1259 OID 43010)
-- Name: ShoppingCartBlueprintProduct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ShoppingCartBlueprintProduct" (
    "ShoppingCartBlueprintID" uuid NOT NULL,
    "ProductID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "Quantity" integer DEFAULT 1 NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ShoppingCartBlueprintProduct" OWNER TO postgres;

--
-- TOC entry 553 (class 1259 OID 43016)
-- Name: ShoppingCartBlueprintProductTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ShoppingCartBlueprintProductTemplate" (
    "ShoppingCartBlueprintTemplateID" uuid NOT NULL,
    "ProductTemplateID" uuid NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "Quantity" integer DEFAULT 1 NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "ShoppingCartBlueprintProductTemplate" OWNER TO postgres;

--
-- TOC entry 554 (class 1259 OID 43022)
-- Name: ShoppingCartBlueprintTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ShoppingCartBlueprintTemplate" (
    "ShoppingCartBlueprintTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ParentID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "Name" character varying(400)
);


ALTER TABLE "ShoppingCartBlueprintTemplate" OWNER TO postgres;

--
-- TOC entry 555 (class 1259 OID 43028)
-- Name: ShoppingCartDeduction; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ShoppingCartDeduction" (
    "ShoppingCartID" uuid NOT NULL,
    "CountryDeductionID" uuid NOT NULL,
    "DeductionID" uuid NOT NULL,
    "DeductionVersionNumber" integer NOT NULL
);


ALTER TABLE "ShoppingCartDeduction" OWNER TO postgres;

--
-- TOC entry 556 (class 1259 OID 43031)
-- Name: ShoppingCartItem; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ShoppingCartItem" (
    "ShoppingCartItemID" uuid NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "ProductID" uuid NOT NULL,
    "Quantity" integer NOT NULL,
    "ProductVersionID" integer NOT NULL,
    "ShoppingCartID" uuid NOT NULL,
    "InvoiceLineItemID" uuid,
    "AccountID" uuid
);


ALTER TABLE "ShoppingCartItem" OWNER TO postgres;

--
-- TOC entry 557 (class 1259 OID 43036)
-- Name: ShoppingCartItemProductAttribute; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ShoppingCartItemProductAttribute" (
    "ShoppingCartItemProductAttributeID" uuid NOT NULL,
    "ProductVariantAttributeValueID" uuid,
    "Quantity" numeric(30,8) DEFAULT 0 NOT NULL,
    "ShoppingCartItemID" uuid NOT NULL
);


ALTER TABLE "ShoppingCartItemProductAttribute" OWNER TO postgres;

--
-- TOC entry 558 (class 1259 OID 43040)
-- Name: ShoppingCartItemProductSpecification; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "ShoppingCartItemProductSpecification" (
    "ShoppingCartItemProductSpecificationID" uuid NOT NULL,
    "ProductSpecificationAttributeID" uuid NOT NULL,
    "ProductSpecificationAttributeOptionID" uuid NOT NULL,
    "Quantity" numeric(30,8) DEFAULT 0 NOT NULL,
    "ShoppingCartItemID" uuid NOT NULL
);


ALTER TABLE "ShoppingCartItemProductSpecification" OWNER TO postgres;

--
-- TOC entry 559 (class 1259 OID 43044)
-- Name: SpecificationAttribute; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "SpecificationAttribute" (
    "SpecificationAttributeID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "SpecificationAttributeTemplateID" uuid NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "DisplayOrder" integer DEFAULT 0 NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "SpecificationAttributeTypeID" integer,
    "SpecificationAttributeCategoryID" integer,
    "SpecificationAttributeSubTypeID" integer,
    "SpecificationAttributeSubCategoryID" integer
);


ALTER TABLE "SpecificationAttribute" OWNER TO postgres;

--
-- TOC entry 560 (class 1259 OID 43054)
-- Name: SpecificationAttributeOptionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "SpecificationAttributeOptionTemplate" (
    "SpecificationAttributeOptionTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "SpecificationAttributeTemplateID" uuid NOT NULL,
    "Name" character varying(1000) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "DisplayOrder" integer NOT NULL,
    "Order" integer NOT NULL
);


ALTER TABLE "SpecificationAttributeOptionTemplate" OWNER TO postgres;

--
-- TOC entry 561 (class 1259 OID 43063)
-- Name: SpecificationAttributeRelationship; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "SpecificationAttributeRelationship" (
    "SpecificationAttributeRelationshipID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "SpecificationAttributeID" uuid NOT NULL,
    "ParentSpecificationAttributeID" uuid NOT NULL,
    "IsMandatory" boolean DEFAULT false NOT NULL,
    "IsInverse" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "SpecificationAttributeRelationship" OWNER TO postgres;

--
-- TOC entry 562 (class 1259 OID 43071)
-- Name: SpecificationAttributeRelationshipTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "SpecificationAttributeRelationshipTemplate" (
    "SpecificationAttributeRelationshipTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "SpecificationAttributeTemplateID" uuid NOT NULL,
    "ParentSpecificationAttributeTemplateID" uuid NOT NULL,
    "IsMandatory" boolean DEFAULT false NOT NULL,
    "IsInverse" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "SpecificationAttributeRelationshipTemplate" OWNER TO postgres;

--
-- TOC entry 563 (class 1259 OID 43079)
-- Name: SpecificationAttributeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "SpecificationAttributeTemplate" (
    "SpecificationAttributeTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(1000) NOT NULL,
    "Description" character varying(2000),
    "DisplayOrder" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "SpecificationAttributeTypeID" integer,
    "SpecificationAttributeCategoryID" integer,
    "SpecificationAttributeSubTypeID" integer,
    "SpecificationAttributeSubCategoryID" integer,
    "Order" integer NOT NULL
);


ALTER TABLE "SpecificationAttributeTemplate" OWNER TO postgres;

--
-- TOC entry 564 (class 1259 OID 43088)
-- Name: SpecificiationAttributeOption; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "SpecificiationAttributeOption" (
    "SpecficiationAttributeOptionID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "SpecificationAttributeOptionTemplateID" uuid NOT NULL,
    "SpecificationAttributeID" uuid NOT NULL,
    "DisplayOrder" integer NOT NULL,
    "Name" character varying(1000) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "SpecificiationAttributeOption" OWNER TO postgres;

--
-- TOC entry 565 (class 1259 OID 43097)
-- Name: State; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "State" (
    "StateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "StateName" character varying(150) NOT NULL,
    "StateDescription" character varying(500),
    "StateTypeID" integer,
    "StateCategoryID" integer,
    "StateSubCategoryID" integer,
    "ParentStateID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentID" uuid
);


ALTER TABLE "State" OWNER TO postgres;

--
-- TOC entry 566 (class 1259 OID 43106)
-- Name: StateItem; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "StateItem" (
    "StateItemID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "StateItemName" character varying(150) NOT NULL,
    "StateItemDescription" character varying(500),
    "StateID" uuid NOT NULL,
    "SourceTableName" character varying(50),
    "SourceTableField" character varying(50),
    "SourceTableFieldValue" character varying(50),
    "ParentStateItemID" uuid,
    "StateItemOrder" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StateItem" OWNER TO postgres;

--
-- TOC entry 567 (class 1259 OID 43115)
-- Name: StatusType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "StatusType" (
    "StatusTypeID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "StatusTypeVersionNumber" integer DEFAULT 1 NOT NULL,
    "Name" character varying(300) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "StatusTypeTemplateID" uuid NOT NULL,
    "StatusTypeTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "StatusType" OWNER TO postgres;

--
-- TOC entry 568 (class 1259 OID 43125)
-- Name: StatusTypeClaim; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "StatusTypeClaim" (
    "StatusTypeClaimID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "RoleID" uuid,
    "StatusTypeRoleID" uuid
);


ALTER TABLE "StatusTypeClaim" OWNER TO postgres;

--
-- TOC entry 569 (class 1259 OID 43131)
-- Name: StatusTypeClaimTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "StatusTypeClaimTemplate" (
    "StatusTypeClaimTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "StatusTypeTemplateID" uuid NOT NULL,
    "StatusTypeTemplateVersionNumber" integer NOT NULL,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "RoleID" uuid,
    "StatusTypeRoleTemplateID" uuid
);


ALTER TABLE "StatusTypeClaimTemplate" OWNER TO postgres;

--
-- TOC entry 570 (class 1259 OID 43137)
-- Name: StatusTypeRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "StatusTypeRole" (
    "StatusTypeRoleID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "RoleName" character varying(300) NOT NULL,
    "RoleDescription" character varying(500),
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "RoleSubCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL
);


ALTER TABLE "StatusTypeRole" OWNER TO postgres;

--
-- TOC entry 571 (class 1259 OID 43146)
-- Name: StatusTypeRoleTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "StatusTypeRoleTemplate" (
    "StatusTypeRoleTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "RoleName" character varying(300) NOT NULL,
    "RoleDescription" character varying(500),
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "RoleSubCategoryID" integer,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "StatusTypeTemplateID" uuid NOT NULL,
    "StatusTypeTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "StatusTypeRoleTemplate" OWNER TO postgres;

--
-- TOC entry 572 (class 1259 OID 43155)
-- Name: StatusTypeStructure; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "StatusTypeStructure" (
    "StatusTypeStructureID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid,
    "StatusOrder" integer DEFAULT 0 NOT NULL,
    "IsStart" boolean DEFAULT false NOT NULL,
    "IsEnd" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StatusTypeStructure" OWNER TO postgres;

--
-- TOC entry 573 (class 1259 OID 43162)
-- Name: StatusTypeStructureTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "StatusTypeStructureTemplate" (
    "StatusTypeStructureTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "StatusTypeTemplateID" uuid NOT NULL,
    "StatusTypeTemplateVersionNumber" integer NOT NULL,
    "StatusTypeValueTemplateID" uuid,
    "StatusOrder" integer DEFAULT 0 NOT NULL,
    "IsStart" boolean DEFAULT false NOT NULL,
    "IsEnd" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StatusTypeStructureTemplate" OWNER TO postgres;

--
-- TOC entry 574 (class 1259 OID 43169)
-- Name: StatusTypeStructureTransition; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "StatusTypeStructureTransition" (
    "StatusTypeStructureTransitionID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "CurrentStatusTypeStructureID" uuid NOT NULL,
    "NextStatusTypeStructureID" uuid NOT NULL
);


ALTER TABLE "StatusTypeStructureTransition" OWNER TO postgres;

--
-- TOC entry 575 (class 1259 OID 43173)
-- Name: StatusTypeStructureTransitionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "StatusTypeStructureTransitionTemplate" (
    "StatusTypeStructureTransitionTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "CurrentStatusTypeStructureTemplateID" uuid NOT NULL,
    "NextStatusTypeStructureTemplateID" uuid NOT NULL
);


ALTER TABLE "StatusTypeStructureTransitionTemplate" OWNER TO postgres;

--
-- TOC entry 576 (class 1259 OID 43177)
-- Name: StatusTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "StatusTypeTemplate" (
    "StatusTypeTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "StatusTypeTemplateVersionNumber" integer DEFAULT 1 NOT NULL,
    "Name" character varying(300) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StatusTypeTemplate" OWNER TO postgres;

--
-- TOC entry 577 (class 1259 OID 43187)
-- Name: StatusTypeValue; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "StatusTypeValue" (
    "StatusTypeValueID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StatusTypeValue" OWNER TO postgres;

--
-- TOC entry 578 (class 1259 OID 43196)
-- Name: StatusTypeValueTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "StatusTypeValueTemplate" (
    "StatusTypeValueTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "StatusTypeTemplateID" uuid NOT NULL,
    "StatusTypeTemplateVersionNumber" integer NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StatusTypeValueTemplate" OWNER TO postgres;

--
-- TOC entry 579 (class 1259 OID 43205)
-- Name: Structure; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Structure" (
    "RepositoryMapID" uuid NOT NULL,
    "OrganisationRoleID" uuid,
    "OrganisationExternalRoleID" uuid,
    "StructureID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "Structure" OWNER TO postgres;

--
-- TOC entry 580 (class 1259 OID 43210)
-- Name: Structure_StructureID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "Structure_StructureID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "Structure_StructureID_seq" OWNER TO postgres;

--
-- TOC entry 8711 (class 0 OID 0)
-- Dependencies: 580
-- Name: Structure_StructureID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "Structure_StructureID_seq" OWNED BY "Structure"."StructureID";


--
-- TOC entry 581 (class 1259 OID 43212)
-- Name: TFEvent; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "TFEvent" (
    "TFEventID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "TFEventName" character varying(100) NOT NULL,
    "TFEventDescription" character varying(2000),
    "TFEventTypeID" uuid NOT NULL
);


ALTER TABLE "TFEvent" OWNER TO postgres;

--
-- TOC entry 582 (class 1259 OID 43219)
-- Name: TFEventMessageSubscriber; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "TFEventMessageSubscriber" (
    "TFEventMessageSubscriberID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "ObjectName" character varying(300) NOT NULL,
    "ObjectAssembly" character varying(300),
    "DefaultMessageSubscriberFilter" character varying(1000)
);


ALTER TABLE "TFEventMessageSubscriber" OWNER TO postgres;

--
-- TOC entry 583 (class 1259 OID 43226)
-- Name: TFEventTFEventMessageSubscriber; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "TFEventTFEventMessageSubscriber" (
    "TFEventID" uuid NOT NULL,
    "TFEventMessageSubscriberID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "TFEventMessageSubscriberFilter" character varying(1000)
);


ALTER TABLE "TFEventTFEventMessageSubscriber" OWNER TO postgres;

--
-- TOC entry 584 (class 1259 OID 43234)
-- Name: TFEventType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "TFEventType" (
    "TFEventTypeID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL
);


ALTER TABLE "TFEventType" OWNER TO postgres;

--
-- TOC entry 585 (class 1259 OID 43238)
-- Name: TaxRate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "TaxRate" (
    "OrganisationTaxRateID" uuid NOT NULL,
    "TaxRateTemplateID" uuid NOT NULL,
    "TaxCategoryID" integer NOT NULL,
    "TaxPercentage" numeric NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "TaxRate" OWNER TO postgres;

--
-- TOC entry 586 (class 1259 OID 43246)
-- Name: TaxRateTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "TaxRateTemplate" (
    "TaxRateTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "TaxCategoryID" integer NOT NULL,
    "TaxPercentage" numeric NOT NULL,
    "CountryID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "TaxRateTemplate" OWNER TO postgres;

--
-- TOC entry 587 (class 1259 OID 43255)
-- Name: Tenant; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Tenant" (
    "TenantID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "TenantName" character varying(50) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "Tenant" OWNER TO postgres;

--
-- TOC entry 588 (class 1259 OID 43261)
-- Name: TransactionLevelComponent; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "TransactionLevelComponent" (
    "TransactionLevelComponentID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(400) NOT NULL,
    "Description" character varying(2000),
    "IsFixedFee" boolean DEFAULT false NOT NULL,
    "FixedFee" numeric NOT NULL,
    "PercentageFee" numeric DEFAULT 0 NOT NULL,
    "CountryID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "TransactionLevelComponentTypeID" uuid NOT NULL,
    "TransactionLevelComponentSubTypeID" uuid,
    "TransactionLevelComponentCategoryID" uuid,
    "TransactionLevelComponentSubCategoryID" uuid
);


ALTER TABLE "TransactionLevelComponent" OWNER TO postgres;

--
-- TOC entry 589 (class 1259 OID 43272)
-- Name: TransactionLevelComponentTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "TransactionLevelComponentTemplate" (
    "TransactionLevelComponentTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(400) NOT NULL,
    "Description" character varying(2000),
    "IsFixedFee" boolean DEFAULT false NOT NULL,
    "FixedFee" numeric NOT NULL,
    "PercentageFee" numeric DEFAULT 0 NOT NULL,
    "CountryID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "TransactionLevelComponentTypeID" uuid NOT NULL,
    "TransactionLevelComponentSubTypeID" uuid,
    "TransactionLevelComponentCategoryID" uuid,
    "TransactionLevelComponentSubCategoryID" uuid
);


ALTER TABLE "TransactionLevelComponentTemplate" OWNER TO postgres;

--
-- TOC entry 590 (class 1259 OID 43283)
-- Name: TransactionOrder; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "TransactionOrder" (
    "TransactionOrderID" uuid NOT NULL,
    "CurrencyCode" character varying(100),
    "CurrencyRateToGBP" numeric NOT NULL,
    "VatNumber" character varying(400),
    "OrderSubTotalInclTaxAndDeduct" numeric NOT NULL,
    "OrderSubTotalExclTaxAndDeduct" numeric NOT NULL,
    "OrderSubTotalDiscountsInclTaxAndDeduct" numeric,
    "OrderSubTotalDiscountsExclTaxAndDeduct" numeric,
    "PaymentMethodAdditionalFeesInclTaxAndDeduct" numeric,
    "PaymentMethodAdditionalFeesExclTaxAndDeduct" numeric,
    "OrderTaxTotal" numeric NOT NULL,
    "OrderDiscountTotal" numeric NOT NULL,
    "OrderTotal" numeric NOT NULL,
    "RefundedAmount" numeric DEFAULT 0,
    "PaymentDate" timestamp without time zone,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentID" uuid NOT NULL,
    "CreatedOn" date NOT NULL,
    "CreatedBy" character varying(200),
    "AuthorizationTransactionID" character varying,
    "AuthorizationTransactionCode" character varying,
    "AuthorizationTransactionResult" character varying,
    "CaptureTransactionID" character varying,
    "CaptureTransactionResult" character varying,
    "SubscriptionTransactionID" character varying,
    "CurrencyRateDate" date NOT NULL,
    "CurrencyRate" numeric NOT NULL,
    "CurrencyRateToUSD" numeric,
    "CountryCode" character varying(30) NOT NULL,
    "TransactionTypeID" integer NOT NULL,
    "PaymentMethodTypeID" integer NOT NULL,
    "TransactionGatewayTypeID" integer NOT NULL,
    "InvoiceID" uuid NOT NULL,
    "TransactionOrderReference" character varying(50) NOT NULL,
    "GlobalPaymentMethodID" uuid NOT NULL,
    "OrderDeductionTotal" numeric(30,8),
    "TaxTotalPercentage" numeric(30,8),
    "TaxTotalValue" numeric(30,8),
    "DeductionTotalPercentage" numeric(30,8),
    "DeductionTotalValue" numeric(30,8),
    "DiscountTotalPercentage" numeric(30,8),
    "DiscountTotalValue" numeric(30,8),
    "ParentTransactionOrderID" uuid,
    "IsHierachicalTransactionOrder" boolean DEFAULT false NOT NULL
);


ALTER TABLE "TransactionOrder" OWNER TO postgres;

--
-- TOC entry 591 (class 1259 OID 43293)
-- Name: TransactionOrderItem; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "TransactionOrderItem" (
    "OrderItemID" uuid NOT NULL,
    "Quantity" integer NOT NULL,
    "Price" numeric(30,8) NOT NULL,
    "PriceInclTaxAndDeduct" numeric NOT NULL,
    "PriceExclTaxAndDeduct" numeric NOT NULL,
    "OrderID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "InvoiceLineItemID" uuid,
    "TaxTotal" numeric(30,8),
    "TaxTotalPercentage" numeric(30,8),
    "TaxTotalValue" numeric(30,8),
    "DeductionTotal" numeric(30,8),
    "DeductionTotalPercentage" numeric(30,8),
    "DeductionTotalValue" numeric(30,8),
    "DiscountTotal" numeric(30,8),
    "DiscountTotalPercentage" numeric(30,8),
    "DiscountTotalValue" numeric(30,8)
);


ALTER TABLE "TransactionOrderItem" OWNER TO postgres;

--
-- TOC entry 592 (class 1259 OID 43301)
-- Name: TransactionOrderPayment; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "TransactionOrderPayment" (
    "TransactionOrderPaymentID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "IsPaymentSuccessful" boolean DEFAULT false NOT NULL,
    "PaymentDate" timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    "ResponseData" json,
    "TransactionResult" character varying(500),
    "PaymentType" character varying(200),
    "CardBrand" character varying(200),
    "ApprovalCode" character varying(200),
    "AVSResponseCode" character varying(3),
    "ProcessorResponseCode" character varying(30),
    "ProcessorApprovalCode" character varying(30),
    "ProcessorReceiptCode" character varying(30),
    "ProcessorCCVResponse" character varying(30),
    "ProcessorReferenceNumber" character varying(30),
    "CommercialServiceProvider" character varying(100),
    "ErrorMessage" character varying(1000),
    "CCVCode" character varying(5)
);


ALTER TABLE "TransactionOrderPayment" OWNER TO postgres;

--
-- TOC entry 593 (class 1259 OID 43310)
-- Name: TransactionOrderPaymentError; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "TransactionOrderPaymentError" (
    "TransactionOrderPaymentErrorID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "TransactionOrderPaymentID" uuid,
    "IsMerchantError" boolean DEFAULT false NOT NULL,
    "IsCardIssuerError" boolean DEFAULT false NOT NULL,
    "IsProcessorError" boolean DEFAULT false NOT NULL,
    "CreatedOn" timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    "ErrorMessage" character varying(500) NOT NULL,
    "ErrorCode" character varying(200) NOT NULL,
    "ErrorDetail" character varying(2000)
);


ALTER TABLE "TransactionOrderPaymentError" OWNER TO postgres;

--
-- TOC entry 594 (class 1259 OID 43321)
-- Name: TransactionOrderProcessLog; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "TransactionOrderProcessLog" (
    "TransactionOrderID" uuid NOT NULL,
    "CreatedOn" timestamp without time zone NOT NULL,
    "TransactionOrderStatusDetail" character varying(2000),
    "IsTransactionOrderProcessed" boolean DEFAULT false NOT NULL,
    "PaidOn" timestamp without time zone,
    "IsPaid" boolean DEFAULT false NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "TransactionOrderPaymentID" uuid
);


ALTER TABLE "TransactionOrderProcessLog" OWNER TO postgres;

--
-- TOC entry 595 (class 1259 OID 43329)
-- Name: TwoFactorAuthTokens; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "TwoFactorAuthTokens" (
    "Token" character varying(100) NOT NULL,
    "Issued" timestamp without time zone NOT NULL,
    "UserAccount_ID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "TwoFactorAuthTokens" OWNER TO postgres;

--
-- TOC entry 596 (class 1259 OID 43334)
-- Name: UserAccountArchive; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserAccountArchive" (
    "UserAccountArchiveID" uuid NOT NULL,
    "UserAccountArchiveCreatedOn" date NOT NULL,
    "UserAccountArchiveTypeID" integer NOT NULL,
    "UserAccountArchiveCategoryID" integer NOT NULL,
    "UserAccountArchiveData" character varying,
    "UserAccountArchiveVersionID" integer NOT NULL,
    "UserAccountArchiveStartDate" date NOT NULL,
    "UserAccountArchiveEndDate" date,
    "UserID" uuid NOT NULL
);


ALTER TABLE "UserAccountArchive" OWNER TO postgres;

--
-- TOC entry 597 (class 1259 OID 43340)
-- Name: UserAccountArchive_UserAccountArchiveCategoryID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "UserAccountArchive_UserAccountArchiveCategoryID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "UserAccountArchive_UserAccountArchiveCategoryID_seq" OWNER TO postgres;

--
-- TOC entry 8712 (class 0 OID 0)
-- Dependencies: 597
-- Name: UserAccountArchive_UserAccountArchiveCategoryID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "UserAccountArchive_UserAccountArchiveCategoryID_seq" OWNED BY "UserAccountArchive"."UserAccountArchiveCategoryID";


--
-- TOC entry 598 (class 1259 OID 43342)
-- Name: UserAccountArchive_UserAccountArchiveTypeID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "UserAccountArchive_UserAccountArchiveTypeID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "UserAccountArchive_UserAccountArchiveTypeID_seq" OWNER TO postgres;

--
-- TOC entry 8713 (class 0 OID 0)
-- Dependencies: 598
-- Name: UserAccountArchive_UserAccountArchiveTypeID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "UserAccountArchive_UserAccountArchiveTypeID_seq" OWNED BY "UserAccountArchive"."UserAccountArchiveTypeID";


--
-- TOC entry 599 (class 1259 OID 43344)
-- Name: UserAccountAudit; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserAccountAudit" (
    "UserAccountID" uuid NOT NULL,
    "UserSessionID" character varying(200) NOT NULL,
    "AuditID" uuid NOT NULL,
    "UserIPAddress" character varying(200),
    "URLAccessed" character varying(2000),
    "TimeAccessed" timestamp without time zone,
    "Data" character varying,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "UserAccountAudit" OWNER TO postgres;

--
-- TOC entry 600 (class 1259 OID 43352)
-- Name: UserAccountDetail; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserAccountDetail" (
    "UserDetailID" uuid NOT NULL,
    "UserID" uuid NOT NULL,
    "Salutation" character varying(100),
    "FirstName" character varying(200),
    "MiddleName" character varying(200),
    "LastName" character varying(200),
    "Title" character varying(100),
    "HomePhone" character varying(100),
    "HomeMobile" character varying(100),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "UserAccountDetail" OWNER TO postgres;

--
-- TOC entry 601 (class 1259 OID 43360)
-- Name: UserAccountLedgerAccount; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserAccountLedgerAccount" (
    "UserAccountID" uuid NOT NULL,
    "LedgerAccountID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "UserAccountLedgerAccount" OWNER TO postgres;

--
-- TOC entry 602 (class 1259 OID 43365)
-- Name: UserAccountLoginSession; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserAccountLoginSession" (
    "UserAccountID" uuid NOT NULL,
    "UserSessionID" character varying(50) NOT NULL,
    "UserIPAddress" character varying(50),
    "UserHostAddress" character varying(50),
    "UserLocation" character varying(100),
    "UserLoginDate" timestamp without time zone,
    "UserLogoutDate" timestamp without time zone,
    "UserHasLoggedOut" boolean
);


ALTER TABLE "UserAccountLoginSession" OWNER TO postgres;

--
-- TOC entry 603 (class 1259 OID 43368)
-- Name: UserAccountLoginSessionData; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserAccountLoginSessionData" (
    "UserAccountLoginSessionDataID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "UserAccountID" uuid NOT NULL,
    "UserSessionID" character varying(50) NOT NULL,
    "RequestData" json
);


ALTER TABLE "UserAccountLoginSessionData" OWNER TO postgres;

--
-- TOC entry 604 (class 1259 OID 43375)
-- Name: UserAccountOrganisation; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserAccountOrganisation" (
    "UserID" uuid NOT NULL,
    "OrganisationUnitID" integer,
    "OrganisationID" uuid NOT NULL,
    "JobTitle" character varying(300),
    "NickName" character varying(300),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "UserSubTypeID" integer,
    "UserCategoryID" integer,
    "UserAccountOrganisationID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "UserJobTypeID" integer,
    "UserTypeID" uuid NOT NULL,
    "ParentID" uuid,
    "PrimaryContactID" uuid
);


ALTER TABLE "UserAccountOrganisation" OWNER TO postgres;

--
-- TOC entry 605 (class 1259 OID 43384)
-- Name: UserAccountOrganisationGroup; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserAccountOrganisationGroup" (
    "OrganisationGroupID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "UserAccountOrganisationID" uuid NOT NULL
);


ALTER TABLE "UserAccountOrganisationGroup" OWNER TO postgres;

--
-- TOC entry 606 (class 1259 OID 43389)
-- Name: UserAccountOrganisationRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserAccountOrganisationRole" (
    "OrganisationRoleID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "UserAccountOrganisationID" uuid NOT NULL
);


ALTER TABLE "UserAccountOrganisationRole" OWNER TO postgres;

--
-- TOC entry 607 (class 1259 OID 43394)
-- Name: UserAccountOrganisationSecondaryUserType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserAccountOrganisationSecondaryUserType" (
    "UserAccountOrganisationID" uuid NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "UserAccountOrganisationSecondaryUserType" OWNER TO postgres;

--
-- TOC entry 608 (class 1259 OID 43399)
-- Name: UserAccountOrganisationStatus; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserAccountOrganisationStatus" (
    "UserAccountOrganisationID" uuid NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "StatusChangedOn" timestamp without time zone NOT NULL,
    "StatusChangedBy" character varying(200) NOT NULL,
    "ParentID" uuid
);


ALTER TABLE "UserAccountOrganisationStatus" OWNER TO postgres;

--
-- TOC entry 609 (class 1259 OID 43402)
-- Name: UserAccountOrganisationStructure; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserAccountOrganisationStructure" (
    "OrganisationID" uuid NOT NULL,
    "UserID" uuid NOT NULL,
    "IsActive" boolean,
    "IsDeleted" boolean
);


ALTER TABLE "UserAccountOrganisationStructure" OWNER TO postgres;

--
-- TOC entry 8714 (class 0 OID 0)
-- Dependencies: 609
-- Name: TABLE "UserAccountOrganisationStructure"; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE "UserAccountOrganisationStructure" IS 'This can be used when a user needs access to multiple branches';


--
-- TOC entry 610 (class 1259 OID 43405)
-- Name: UserAccountOrganisationTeam; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserAccountOrganisationTeam" (
    "UserAccountOrganisationID" uuid NOT NULL,
    "OrganisationTeamID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "UserAccountOrganisationTeam" OWNER TO postgres;

--
-- TOC entry 611 (class 1259 OID 43410)
-- Name: UserAccounts; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserAccounts" (
    "ID" uuid NOT NULL,
    "Tenant" character varying(50) NOT NULL,
    "Username" character varying(100) NOT NULL,
    "Email" character varying(100),
    "Created" timestamp without time zone NOT NULL,
    "LastUpdated" timestamp without time zone NOT NULL,
    "PasswordChanged" timestamp without time zone,
    "RequiresPasswordReset" boolean NOT NULL,
    "MobileCode" character varying(100),
    "MobileCodeSent" timestamp without time zone,
    "MobilePhoneNumber" character varying(20),
    "AccountTwoFactorAuthMode" integer NOT NULL,
    "CurrentTwoFactorAuthStatus" integer NOT NULL,
    "IsAccountVerified" boolean NOT NULL,
    "IsLoginAllowed" boolean NOT NULL,
    "IsAccountClosed" boolean NOT NULL,
    "AccountClosed" timestamp without time zone,
    "LastLogin" timestamp without time zone,
    "LastFailedLogin" timestamp without time zone,
    "FailedLoginCount" integer NOT NULL,
    "VerificationKey" character varying(100),
    "VerificationPurpose" integer,
    "VerificationKeySent" timestamp without time zone,
    "HashedPassword" character varying(200),
    "LastFailedPasswordReset" timestamp without time zone,
    "FailedPasswordResetCount" integer DEFAULT 0 NOT NULL,
    "MobilePhoneNumberChanged" timestamp without time zone,
    "VerificationStorage" character varying(100),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsTemporaryAccount" boolean DEFAULT false NOT NULL,
    "CreatedOn" date DEFAULT ('now'::text)::date NOT NULL,
    "CreatedBy" character varying(200),
    "ModifiedOn" date,
    "ModifiedBy" character varying(200),
    "IsApproved" boolean DEFAULT false NOT NULL,
    "IsEmployee" boolean DEFAULT false NOT NULL,
    "FailedForgotUsernameAttempts" integer DEFAULT 0 NOT NULL,
    "FailedForgotPasswordAttempts" integer DEFAULT 0 NOT NULL,
    "IsForgotUsernameRequestAllowed" boolean NOT NULL,
    "IsForgotPasswordRequestAllowed" boolean NOT NULL,
    "LastForgotUsernameFailedAttempt" timestamp without time zone,
    "LastForgotPasswordFailedAttempt" timestamp without time zone
);


ALTER TABLE "UserAccounts" OWNER TO postgres;

--
-- TOC entry 612 (class 1259 OID 43425)
-- Name: UserCertificates; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserCertificates" (
    "UserAccount_ID" uuid NOT NULL,
    "Thumbprint" character varying(150) NOT NULL,
    "Subject" character varying(250),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "UserCertificates" OWNER TO postgres;

--
-- TOC entry 613 (class 1259 OID 43430)
-- Name: UserClaims; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserClaims" (
    "UserAccount_ID" uuid NOT NULL,
    "Type" character varying(150) NOT NULL,
    "Value" character varying(150) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "UserClaims" OWNER TO postgres;

--
-- TOC entry 614 (class 1259 OID 43435)
-- Name: UserType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "UserType" (
    "UserTypeID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsGlobal" boolean DEFAULT false NOT NULL,
    "IsPrincipal" boolean DEFAULT true,
    "IsSecondary" boolean DEFAULT false
);


ALTER TABLE "UserType" OWNER TO postgres;

--
-- TOC entry 615 (class 1259 OID 43447)
-- Name: WorflowParameterTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorflowParameterTemplate" (
    "WorflowParameterTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "IsConfigurable1" boolean DEFAULT false NOT NULL,
    "ParameterName" character varying(100) NOT NULL,
    "ParameterValue" character varying(1000) NOT NULL,
    "ParameterType" character varying(200) NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorflowParameterTemplate" OWNER TO postgres;

--
-- TOC entry 616 (class 1259 OID 43457)
-- Name: Workflow; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "Workflow" (
    "WorkflowID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "WorkflowVersionNumber" integer DEFAULT 0 NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "WorkflowTypeID" integer,
    "WorkflowSubTypeID" integer,
    "WorkflowCategoryID" integer,
    "WorkflowSubCategoryID" integer,
    "WorkflowTemplateID" uuid,
    "WorkflowTemplateVersionNumber" integer
);


ALTER TABLE "Workflow" OWNER TO postgres;

--
-- TOC entry 617 (class 1259 OID 43465)
-- Name: WorkflowAction; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowAction" (
    "WorkflowActionID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "IsTransistionStart" boolean DEFAULT false NOT NULL,
    "IsTransistionEnd" boolean DEFAULT false NOT NULL,
    "WorkflowActionTypeID" uuid,
    "IsManual" boolean DEFAULT false NOT NULL,
    "WorkflowObjectTypeID" uuid NOT NULL
);


ALTER TABLE "WorkflowAction" OWNER TO postgres;

--
-- TOC entry 618 (class 1259 OID 43475)
-- Name: WorkflowActionCompleteCondition; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionCompleteCondition" (
    "WorkflowActionID" uuid NOT NULL,
    "WorkflowConditionID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionCompleteCondition" OWNER TO postgres;

--
-- TOC entry 619 (class 1259 OID 43478)
-- Name: WorkflowActionCompleteConditionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionCompleteConditionTemplate" (
    "WorkflowActionTemplateID" uuid NOT NULL,
    "WorkflowConditionTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionCompleteConditionTemplate" OWNER TO postgres;

--
-- TOC entry 620 (class 1259 OID 43481)
-- Name: WorkflowActionExecuteCommand; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionExecuteCommand" (
    "WorkflowActionID" uuid NOT NULL,
    "WorkflowCommandID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionExecuteCommand" OWNER TO postgres;

--
-- TOC entry 621 (class 1259 OID 43484)
-- Name: WorkflowActionExecuteCommandTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionExecuteCommandTemplate" (
    "WorkflowActionTemplateID" uuid NOT NULL,
    "WorkflowCommandTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionExecuteCommandTemplate" OWNER TO postgres;

--
-- TOC entry 622 (class 1259 OID 43487)
-- Name: WorkflowActionExecutionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionExecutionTemplate" (
    "WorkflowActionExecutionID" uuid NOT NULL,
    "WorkflowActionTemplateID" uuid NOT NULL,
    "Name" character varying(100) NOT NULL,
    "Description" character varying(1000),
    "IsPre" boolean DEFAULT false NOT NULL,
    "IsPost" boolean DEFAULT false NOT NULL,
    "IsCanStart" boolean DEFAULT false NOT NULL,
    "IsCanComplete" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionExecutionTemplate" OWNER TO postgres;

--
-- TOC entry 623 (class 1259 OID 43499)
-- Name: WorkflowActionNotificationTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionNotificationTemplate" (
    "WorkflowActionNotificationTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "WorkflowActionTemplateID" uuid NOT NULL,
    "IsConfigurable" boolean DEFAULT false NOT NULL,
    "Name" character varying(100) NOT NULL,
    "Description" character varying(1000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionNotificationTemplate" OWNER TO postgres;

--
-- TOC entry 624 (class 1259 OID 43509)
-- Name: WorkflowActionParameter; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionParameter" (
    "WorkflowActionID" uuid NOT NULL,
    "WorkflowParameterID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionParameter" OWNER TO postgres;

--
-- TOC entry 625 (class 1259 OID 43512)
-- Name: WorkflowActionParameterNotificationConstruct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionParameterNotificationConstruct" (
    "WorkflowActionParameterNotificationConstructID" uuid NOT NULL,
    "WorkflowActionParameterNotificationConstructTemplateID" uuid NOT NULL,
    "WorkflowActionID" uuid NOT NULL,
    "WorkflowParameterID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "NotificationConstructID" uuid NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "Order" integer NOT NULL,
    "IsActive" boolean,
    "IsDeleted" boolean,
    "WorkflowActionParameterNotificationConstructVersionNumber" integer,
    "WorkflowActionParameterNotificationConstructTemplateVersion" integer NOT NULL,
    "NotificationConstructVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionParameterNotificationConstruct" OWNER TO postgres;

--
-- TOC entry 626 (class 1259 OID 43515)
-- Name: WorkflowActionParameterNotificationConstructTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionParameterNotificationConstructTemplate" (
    "WorkflowActionTemplateID" uuid NOT NULL,
    "WorkflowParameterTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "NotificationConstructTemplateID" uuid NOT NULL,
    "OrganisationTypeID" integer NOT NULL,
    "UserTypeID" uuid NOT NULL,
    "Order" integer NOT NULL,
    "IsActive" boolean,
    "IsDeleted" boolean,
    "WorkflowActionParameterNotificationConstructTemplateID" uuid NOT NULL,
    "WorkflowActionParameterNotificationConstructTemplateVersion" integer NOT NULL,
    "NotificationConstructTemplateVersionNumber" integer NOT NULL
);
ALTER TABLE ONLY "WorkflowActionParameterNotificationConstructTemplate" ALTER COLUMN "WorkflowActionTemplateID" SET STATISTICS 0;
ALTER TABLE ONLY "WorkflowActionParameterNotificationConstructTemplate" ALTER COLUMN "WorkflowParameterTemplateID" SET STATISTICS 0;
ALTER TABLE ONLY "WorkflowActionParameterNotificationConstructTemplate" ALTER COLUMN "WorkflowTemplateID" SET STATISTICS 0;
ALTER TABLE ONLY "WorkflowActionParameterNotificationConstructTemplate" ALTER COLUMN "WorkflowTemplateVersionNumber" SET STATISTICS 0;
ALTER TABLE ONLY "WorkflowActionParameterNotificationConstructTemplate" ALTER COLUMN "NotificationConstructTemplateID" SET STATISTICS 0;
ALTER TABLE ONLY "WorkflowActionParameterNotificationConstructTemplate" ALTER COLUMN "OrganisationTypeID" SET STATISTICS 0;
ALTER TABLE ONLY "WorkflowActionParameterNotificationConstructTemplate" ALTER COLUMN "UserTypeID" SET STATISTICS 0;
ALTER TABLE ONLY "WorkflowActionParameterNotificationConstructTemplate" ALTER COLUMN "Order" SET STATISTICS 0;
ALTER TABLE ONLY "WorkflowActionParameterNotificationConstructTemplate" ALTER COLUMN "IsActive" SET STATISTICS 100;
ALTER TABLE ONLY "WorkflowActionParameterNotificationConstructTemplate" ALTER COLUMN "IsDeleted" SET STATISTICS 100;


ALTER TABLE "WorkflowActionParameterNotificationConstructTemplate" OWNER TO postgres;

--
-- TOC entry 627 (class 1259 OID 43518)
-- Name: WorkflowActionParameterTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionParameterTemplate" (
    "WorkflowActionTemplateID" uuid NOT NULL,
    "WorkflowParameterTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionParameterTemplate" OWNER TO postgres;

--
-- TOC entry 628 (class 1259 OID 43521)
-- Name: WorkflowActionPostCommand; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionPostCommand" (
    "WorkflowActionID" uuid NOT NULL,
    "WorkflowCommandID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionPostCommand" OWNER TO postgres;

--
-- TOC entry 629 (class 1259 OID 43524)
-- Name: WorkflowActionPostCommandTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionPostCommandTemplate" (
    "WorkflowActionTemplateID" uuid NOT NULL,
    "WorkflowCommandTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionPostCommandTemplate" OWNER TO postgres;

--
-- TOC entry 630 (class 1259 OID 43527)
-- Name: WorkflowActionPreCommand; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionPreCommand" (
    "WorkflowActionID" uuid NOT NULL,
    "WorkflowCommandID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionPreCommand" OWNER TO postgres;

--
-- TOC entry 631 (class 1259 OID 43530)
-- Name: WorkflowActionPreCommandTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionPreCommandTemplate" (
    "WorkflowActionTemplateID" uuid NOT NULL,
    "WorkflowCommandTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionPreCommandTemplate" OWNER TO postgres;

--
-- TOC entry 632 (class 1259 OID 43533)
-- Name: WorkflowActionProductPlaceholder; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionProductPlaceholder" (
    "WorkflowActionProductPlaceholderID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "WorkflowActionTemplateID" uuid NOT NULL,
    "ProductTypeID" uuid NOT NULL,
    "Order" integer DEFAULT 0,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionProductPlaceholder" OWNER TO postgres;

--
-- TOC entry 633 (class 1259 OID 43540)
-- Name: WorkflowActionStartCondition; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionStartCondition" (
    "WorkflowActionID" uuid NOT NULL,
    "WorkflowConditionID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionStartCondition" OWNER TO postgres;

--
-- TOC entry 634 (class 1259 OID 43543)
-- Name: WorkflowActionStartConditionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionStartConditionTemplate" (
    "WorkflowActionTemplateID" uuid NOT NULL,
    "WorkflowConditionTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionStartConditionTemplate" OWNER TO postgres;

--
-- TOC entry 635 (class 1259 OID 43546)
-- Name: WorkflowActionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionTemplate" (
    "WorkflowActionTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "IsTransistionStart" boolean DEFAULT false NOT NULL,
    "IsTransistionEnd" boolean DEFAULT false NOT NULL,
    "WorkflowActionTypeTemplateID" uuid,
    "IsManual" boolean DEFAULT false NOT NULL,
    "WorkflowObjectTypeTemplateID" uuid,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionTemplate" OWNER TO postgres;

--
-- TOC entry 636 (class 1259 OID 43556)
-- Name: WorkflowActionValidationTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowActionValidationTemplate" (
    "WorkflowActionValidationTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "WorkflowActionTemplateID" uuid NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowActionValidationTemplate" OWNER TO postgres;

--
-- TOC entry 637 (class 1259 OID 43565)
-- Name: WorkflowClaim; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowClaim" (
    "WorkflowClaimID" uuid NOT NULL,
    "WorkflowRoleID" uuid,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "RoleID" uuid
);


ALTER TABLE "WorkflowClaim" OWNER TO postgres;

--
-- TOC entry 638 (class 1259 OID 43570)
-- Name: WorkflowClaimTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowClaimTemplate" (
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "ResourceID" uuid,
    "OperationID" uuid,
    "StateID" uuid,
    "StateItemID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "WorkflowClaimTemplateID" uuid NOT NULL,
    "WorkflowRoleTemplateID" uuid,
    "RoleID" uuid
);


ALTER TABLE "WorkflowClaimTemplate" OWNER TO postgres;

--
-- TOC entry 639 (class 1259 OID 43575)
-- Name: WorkflowCommand; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowCommand" (
    "WorkflowCommandID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(1000),
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "WorkflowObjectTypeID" uuid NOT NULL
);


ALTER TABLE "WorkflowCommand" OWNER TO postgres;

--
-- TOC entry 640 (class 1259 OID 43582)
-- Name: WorkflowCommandCondition; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowCommandCondition" (
    "WorkflowCommandID" uuid NOT NULL,
    "WorkflowConditionID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowCommandCondition" OWNER TO postgres;

--
-- TOC entry 641 (class 1259 OID 43585)
-- Name: WorkflowCommandConditionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowCommandConditionTemplate" (
    "WorkflowCommandTemplateID" uuid NOT NULL,
    "WorkflowConditionTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowCommandConditionTemplate" OWNER TO postgres;

--
-- TOC entry 642 (class 1259 OID 43588)
-- Name: WorkflowCommandParameter; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowCommandParameter" (
    "WorkflowCommandID" uuid NOT NULL,
    "WorkflowParameterID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowCommandParameter" OWNER TO postgres;

--
-- TOC entry 643 (class 1259 OID 43591)
-- Name: WorkflowCommandParameterTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowCommandParameterTemplate" (
    "WorkflowCommandTemplateID" uuid NOT NULL,
    "WorkflowParameterTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowCommandParameterTemplate" OWNER TO postgres;

--
-- TOC entry 644 (class 1259 OID 43594)
-- Name: WorkflowCommandTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowCommandTemplate" (
    "WorkflowCommandTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(1000),
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer DEFAULT 0 NOT NULL,
    "WorkflowObjectTypeTemplateID" uuid
);


ALTER TABLE "WorkflowCommandTemplate" OWNER TO postgres;

--
-- TOC entry 645 (class 1259 OID 43602)
-- Name: WorkflowCondition; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowCondition" (
    "WorkflowConditionID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(1000),
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "WorkflowObjectTypeID" uuid NOT NULL
);


ALTER TABLE "WorkflowCondition" OWNER TO postgres;

--
-- TOC entry 646 (class 1259 OID 43609)
-- Name: WorkflowConditionParameter; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowConditionParameter" (
    "WorkflowConditionID" uuid NOT NULL,
    "WorkflowParameterID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowConditionParameter" OWNER TO postgres;

--
-- TOC entry 647 (class 1259 OID 43612)
-- Name: WorkflowConditionParameterTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowConditionParameterTemplate" (
    "WorkflowConditionTemplateID" uuid NOT NULL,
    "WorkflowParameterTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowConditionParameterTemplate" OWNER TO postgres;

--
-- TOC entry 648 (class 1259 OID 43615)
-- Name: WorkflowConditionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowConditionTemplate" (
    "WorkflowConditionTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(1000),
    "WorkflowObjectTypeTemplateID" uuid,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer DEFAULT 0 NOT NULL
);


ALTER TABLE "WorkflowConditionTemplate" OWNER TO postgres;

--
-- TOC entry 649 (class 1259 OID 43623)
-- Name: WorkflowDecision; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowDecision" (
    "WorkflowDecisionID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "IsTransistionStart" boolean DEFAULT false NOT NULL,
    "IsTransistionEnd" boolean DEFAULT false NOT NULL,
    "WorkflowDecisionTypeID" uuid,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "WorkflowObjectTypeID" uuid NOT NULL
);


ALTER TABLE "WorkflowDecision" OWNER TO postgres;

--
-- TOC entry 650 (class 1259 OID 43632)
-- Name: WorkflowDecisionError; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowDecisionError" (
    "WorkflowDecisionID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "NextWorkflowActionID" uuid,
    "NextWorkflowDecisionID" uuid,
    "WorkflowDecisionErrorID" uuid DEFAULT uuid_generate_v1() NOT NULL
);


ALTER TABLE "WorkflowDecisionError" OWNER TO postgres;

--
-- TOC entry 651 (class 1259 OID 43636)
-- Name: WorkflowDecisionErrorTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowDecisionErrorTemplate" (
    "WorkflowDecisionTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "NextWorkflowActionTemplateID" uuid,
    "NextWorkflowDecisionTemplateID" uuid,
    "WorkflowDecisionErrorTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL
);


ALTER TABLE "WorkflowDecisionErrorTemplate" OWNER TO postgres;

--
-- TOC entry 652 (class 1259 OID 43640)
-- Name: WorkflowDecisionExecuteCommand; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowDecisionExecuteCommand" (
    "WorkflowDecisionID" uuid NOT NULL,
    "WorkflowCommandID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowDecisionExecuteCommand" OWNER TO postgres;

--
-- TOC entry 653 (class 1259 OID 43643)
-- Name: WorkflowDecisionExecuteCommandTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowDecisionExecuteCommandTemplate" (
    "WorkflowDecisionTemplateID" uuid NOT NULL,
    "WorkflowCommandTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowDecisionExecuteCommandTemplate" OWNER TO postgres;

--
-- TOC entry 654 (class 1259 OID 43646)
-- Name: WorkflowDecisionFailure; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowDecisionFailure" (
    "WorkflowDecisionID" uuid NOT NULL,
    "NextWorkflowActionID" uuid,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "NextWorkflowDecisionID" uuid,
    "WorkflowDecisionFailureID" uuid DEFAULT uuid_generate_v1() NOT NULL
);


ALTER TABLE "WorkflowDecisionFailure" OWNER TO postgres;

--
-- TOC entry 655 (class 1259 OID 43650)
-- Name: WorkflowDecisionFailureTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowDecisionFailureTemplate" (
    "WorkflowDecisionTemplateID" uuid NOT NULL,
    "NextWorkflowActionTemplateID" uuid,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "NextWorkflowDecisionTemplateID" uuid,
    "WorkflowDecisionFailureTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL
);


ALTER TABLE "WorkflowDecisionFailureTemplate" OWNER TO postgres;

--
-- TOC entry 656 (class 1259 OID 43654)
-- Name: WorkflowDecisionParameter; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowDecisionParameter" (
    "WorkflowDecisionID" uuid NOT NULL,
    "WorkflowParameterID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowDecisionParameter" OWNER TO postgres;

--
-- TOC entry 657 (class 1259 OID 43657)
-- Name: WorkflowDecisionParameterTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowDecisionParameterTemplate" (
    "WorkflowDecisionTemplateID" uuid NOT NULL,
    "WorkflowParameterTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowDecisionParameterTemplate" OWNER TO postgres;

--
-- TOC entry 658 (class 1259 OID 43660)
-- Name: WorkflowDecisionSuccess; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowDecisionSuccess" (
    "WorkflowDecisionID" uuid NOT NULL,
    "NextWorkflowActionID" uuid,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "NextWorkflowDecisionID" uuid,
    "WorkflowDecisionSuccessID" uuid DEFAULT uuid_generate_v1() NOT NULL
);


ALTER TABLE "WorkflowDecisionSuccess" OWNER TO postgres;

--
-- TOC entry 659 (class 1259 OID 43664)
-- Name: WorkflowDecisionSuccessTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowDecisionSuccessTemplate" (
    "WorkflowDecisionTemplateID" uuid NOT NULL,
    "NextWorkflowActionTemplateID" uuid,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "NextWorkflowDecisionTemplateID" uuid,
    "WorkflowDecisionSuccessTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL
);


ALTER TABLE "WorkflowDecisionSuccessTemplate" OWNER TO postgres;

--
-- TOC entry 660 (class 1259 OID 43668)
-- Name: WorkflowDecisionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowDecisionTemplate" (
    "WorkflowDecisionTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "IsTransistionStart" boolean DEFAULT false NOT NULL,
    "IsTransistionEnd" boolean DEFAULT false NOT NULL,
    "WorkflowDecisionTypeTemplateID" uuid,
    "WorkflowObjectTypeTemplateID" uuid,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowDecisionTemplate" OWNER TO postgres;

--
-- TOC entry 661 (class 1259 OID 43677)
-- Name: WorkflowExecution; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowExecution" (
    "WorkflowExecutionID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "VersionNumber" integer DEFAULT 0 NOT NULL
);


ALTER TABLE "WorkflowExecution" OWNER TO postgres;

--
-- TOC entry 662 (class 1259 OID 43685)
-- Name: WorkflowExecutionStatus; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowExecutionStatus" (
    "WorkflowExecutionStatusID" integer NOT NULL,
    "Name" character varying(500) NOT NULL,
    "Description" character varying(1000)
);


ALTER TABLE "WorkflowExecutionStatus" OWNER TO postgres;

--
-- TOC entry 663 (class 1259 OID 43691)
-- Name: WorkflowExecutionStatus_WorkflowExecutionStatusID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "WorkflowExecutionStatus_WorkflowExecutionStatusID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "WorkflowExecutionStatus_WorkflowExecutionStatusID_seq" OWNER TO postgres;

--
-- TOC entry 8715 (class 0 OID 0)
-- Dependencies: 663
-- Name: WorkflowExecutionStatus_WorkflowExecutionStatusID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "WorkflowExecutionStatus_WorkflowExecutionStatusID_seq" OWNED BY "WorkflowExecutionStatus"."WorkflowExecutionStatusID";


--
-- TOC entry 664 (class 1259 OID 43693)
-- Name: WorkflowExecutionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowExecutionTemplate" (
    "WorkflowExecutionTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "VersionNumber" integer DEFAULT 0 NOT NULL
);


ALTER TABLE "WorkflowExecutionTemplate" OWNER TO postgres;

--
-- TOC entry 665 (class 1259 OID 43701)
-- Name: WorkflowHierarchy; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowHierarchy" (
    "WorkflowHierarchyID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "ChildComponentID" uuid NOT NULL,
    "ParentComponentID" uuid,
    "IsTransistionStart" boolean,
    "IsTranistionEnd" boolean,
    "WorkflowTransistionID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "IsChildDependentOnParent" boolean DEFAULT false
);


ALTER TABLE "WorkflowHierarchy" OWNER TO postgres;

--
-- TOC entry 666 (class 1259 OID 43706)
-- Name: WorkflowHierarchyTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowHierarchyTemplate" (
    "WorkflowHierarchyTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "WorkflowTransistionTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "ChildComponentID" uuid NOT NULL,
    "ParentComponentID" uuid,
    "IsTransistionStart" boolean,
    "IsTranistionEnd" boolean,
    "IsChildDependentOnParent" boolean DEFAULT false
);


ALTER TABLE "WorkflowHierarchyTemplate" OWNER TO postgres;

--
-- TOC entry 667 (class 1259 OID 43711)
-- Name: WorkflowInstance; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowInstance" (
    "WorkflowInstanceID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "ParentID" uuid NOT NULL,
    "WorkflowInstanceStatusID" integer NOT NULL,
    "WorkflowInstanceTypeID" integer,
    "WorkflowInstanceSubTypeID" integer,
    "WorkflowInstanceCategoryID" integer,
    "WorkflowInstanceSubCategoryID" integer,
    "WorkflowInstanceTempData" character varying
);


ALTER TABLE "WorkflowInstance" OWNER TO postgres;

--
-- TOC entry 668 (class 1259 OID 43717)
-- Name: WorkflowInstanceExecution; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowInstanceExecution" (
    "WorkflowInstanceExecutionID" integer NOT NULL,
    "WorkflowInstanceID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "WorkflowTransistionID" uuid NOT NULL,
    "WorkflowActionID" uuid,
    "WorkflowDecisionID" uuid,
    "WorkflowConditionID" uuid,
    "WorkflowCommandID" uuid,
    "WorkflowInstanceSessionID" uuid NOT NULL,
    "CreatedOn" date,
    "NumberOfRetries" integer DEFAULT 0
);


ALTER TABLE "WorkflowInstanceExecution" OWNER TO postgres;

--
-- TOC entry 669 (class 1259 OID 43721)
-- Name: WorkflowInstanceExecutionDataItem; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowInstanceExecutionDataItem" (
    "WorkflowInstanceExecutionDataItemID" integer NOT NULL,
    "WorkflowInstanceExecutionID" integer NOT NULL,
    "FieldName" character varying(300) NOT NULL,
    "FieldTypeID" integer,
    "DataContent" character varying,
    "DataStr" character varying,
    "DataNotJsonSerialized" boolean DEFAULT false NOT NULL,
    "EventOrder" integer,
    "WorkflowInstanceExecutionStatusEventID" integer NOT NULL
);


ALTER TABLE "WorkflowInstanceExecutionDataItem" OWNER TO postgres;

--
-- TOC entry 670 (class 1259 OID 43728)
-- Name: WorkflowInstanceExecutionData_WorkflowInstanceExecutionData_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "WorkflowInstanceExecutionData_WorkflowInstanceExecutionData_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "WorkflowInstanceExecutionData_WorkflowInstanceExecutionData_seq" OWNER TO postgres;

--
-- TOC entry 8716 (class 0 OID 0)
-- Dependencies: 670
-- Name: WorkflowInstanceExecutionData_WorkflowInstanceExecutionData_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "WorkflowInstanceExecutionData_WorkflowInstanceExecutionData_seq" OWNED BY "WorkflowInstanceExecutionDataItem"."WorkflowInstanceExecutionDataItemID";


--
-- TOC entry 671 (class 1259 OID 43730)
-- Name: WorkflowInstanceExecutionStatusEvent; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowInstanceExecutionStatusEvent" (
    "WorkflowInstanceExecutionStatusEventID" integer NOT NULL,
    "EventDate" timestamp without time zone NOT NULL,
    "EventBy" character varying(200) NOT NULL,
    "WorkflowExecutionStatusID" integer NOT NULL,
    "WorkflowInstanceExecutionID" integer NOT NULL,
    "EventOrder" integer NOT NULL,
    "WorkflowInstanceSessionID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "WorkflowInstanceID" uuid NOT NULL
);


ALTER TABLE "WorkflowInstanceExecutionStatusEvent" OWNER TO postgres;

--
-- TOC entry 672 (class 1259 OID 43733)
-- Name: WorkflowInstanceExecutionStat_WorkflowInstanceExecutionStat_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "WorkflowInstanceExecutionStat_WorkflowInstanceExecutionStat_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "WorkflowInstanceExecutionStat_WorkflowInstanceExecutionStat_seq" OWNER TO postgres;

--
-- TOC entry 8717 (class 0 OID 0)
-- Dependencies: 672
-- Name: WorkflowInstanceExecutionStat_WorkflowInstanceExecutionStat_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "WorkflowInstanceExecutionStat_WorkflowInstanceExecutionStat_seq" OWNED BY "WorkflowInstanceExecutionStatusEvent"."WorkflowInstanceExecutionStatusEventID";


--
-- TOC entry 673 (class 1259 OID 43735)
-- Name: WorkflowInstanceExecutionTrace; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowInstanceExecutionTrace" (
    "WorkflowInstanceExecutionTraceID" uuid NOT NULL,
    "WorkflowInstanceExecutionID" integer NOT NULL,
    "WorkflowInstanceSessionID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "WorkflowInstanceID" uuid,
    "WorkflowTransistionID" uuid,
    "WorkflowActionID" uuid,
    "WorkflowDecisionID" uuid,
    "WorkflowConditionID" uuid,
    "WorkflowCommandID" uuid,
    "TraceDetail" character varying(5000),
    "TraceStackTrace" character varying(5000),
    "HasError" boolean DEFAULT false NOT NULL,
    "ExecutedOn" date NOT NULL,
    "ExecutedBy" character varying(300),
    "AdditionalContent" character varying(5000),
    "NumberOfRetries" integer DEFAULT 0 NOT NULL
);


ALTER TABLE "WorkflowInstanceExecutionTrace" OWNER TO postgres;

--
-- TOC entry 674 (class 1259 OID 43743)
-- Name: WorkflowInstanceExecution_WorkflowInstanceExecutionID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE "WorkflowInstanceExecution_WorkflowInstanceExecutionID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "WorkflowInstanceExecution_WorkflowInstanceExecutionID_seq" OWNER TO postgres;

--
-- TOC entry 8718 (class 0 OID 0)
-- Dependencies: 674
-- Name: WorkflowInstanceExecution_WorkflowInstanceExecutionID_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE "WorkflowInstanceExecution_WorkflowInstanceExecutionID_seq" OWNED BY "WorkflowInstanceExecution"."WorkflowInstanceExecutionID";


--
-- TOC entry 675 (class 1259 OID 43745)
-- Name: WorkflowInstanceRestriction; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowInstanceRestriction" (
    "WorkflowInstanceID" uuid NOT NULL,
    "WorkflowID" uuid,
    "WorkflowVersionNumber" integer,
    "UserAccountOrganisationID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "WorkflowInstanceRestriction" OWNER TO postgres;

--
-- TOC entry 676 (class 1259 OID 43750)
-- Name: WorkflowInstanceSession; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowInstanceSession" (
    "WorkflowInstanceSessionID" uuid NOT NULL,
    "SessionStartedOn" timestamp without time zone NOT NULL,
    "SessionEndedOn" timestamp without time zone NOT NULL,
    "WorkflowInstanceID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowInstanceSession" OWNER TO postgres;

--
-- TOC entry 677 (class 1259 OID 43753)
-- Name: WorkflowMainCompleteCondition; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowMainCompleteCondition" (
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "WorkflowConditionID" uuid NOT NULL
);


ALTER TABLE "WorkflowMainCompleteCondition" OWNER TO postgres;

--
-- TOC entry 678 (class 1259 OID 43756)
-- Name: WorkflowMainCompleteConditionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowMainCompleteConditionTemplate" (
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "WorkflowConditionTemplateID" uuid NOT NULL
);


ALTER TABLE "WorkflowMainCompleteConditionTemplate" OWNER TO postgres;

--
-- TOC entry 679 (class 1259 OID 43759)
-- Name: WorkflowMainExecuteCommand; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowMainExecuteCommand" (
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "WorkflowCommandID" uuid NOT NULL
);


ALTER TABLE "WorkflowMainExecuteCommand" OWNER TO postgres;

--
-- TOC entry 680 (class 1259 OID 43762)
-- Name: WorkflowMainExecuteCommandTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowMainExecuteCommandTemplate" (
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "WorkflowCommandTemplateID" uuid NOT NULL
);


ALTER TABLE "WorkflowMainExecuteCommandTemplate" OWNER TO postgres;

--
-- TOC entry 681 (class 1259 OID 43765)
-- Name: WorkflowMainParameter; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowMainParameter" (
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "WorkflowParameterID" uuid NOT NULL
);


ALTER TABLE "WorkflowMainParameter" OWNER TO postgres;

--
-- TOC entry 682 (class 1259 OID 43768)
-- Name: WorkflowMainParameterTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowMainParameterTemplate" (
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "WorkflowParameterTemplateID" uuid NOT NULL
);


ALTER TABLE "WorkflowMainParameterTemplate" OWNER TO postgres;

--
-- TOC entry 683 (class 1259 OID 43771)
-- Name: WorkflowMainPostCommand; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowMainPostCommand" (
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "WorkflowCommandID" uuid NOT NULL
);


ALTER TABLE "WorkflowMainPostCommand" OWNER TO postgres;

--
-- TOC entry 684 (class 1259 OID 43774)
-- Name: WorkflowMainPostCommandTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowMainPostCommandTemplate" (
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "WorkflowCommandTemplateID" uuid NOT NULL
);


ALTER TABLE "WorkflowMainPostCommandTemplate" OWNER TO postgres;

--
-- TOC entry 685 (class 1259 OID 43777)
-- Name: WorkflowMainPreCommand; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowMainPreCommand" (
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "WorkflowCommandID" uuid NOT NULL
);


ALTER TABLE "WorkflowMainPreCommand" OWNER TO postgres;

--
-- TOC entry 686 (class 1259 OID 43780)
-- Name: WorkflowMainPreCommandTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowMainPreCommandTemplate" (
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "WorkflowCommandTemplateID" uuid NOT NULL
);


ALTER TABLE "WorkflowMainPreCommandTemplate" OWNER TO postgres;

--
-- TOC entry 687 (class 1259 OID 43783)
-- Name: WorkflowMainStartCondition; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowMainStartCondition" (
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "WorkflowConditionID" uuid NOT NULL
);


ALTER TABLE "WorkflowMainStartCondition" OWNER TO postgres;

--
-- TOC entry 688 (class 1259 OID 43786)
-- Name: WorkflowMainStartConditionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowMainStartConditionTemplate" (
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "WorkflowConditionTemplateID" uuid NOT NULL
);


ALTER TABLE "WorkflowMainStartConditionTemplate" OWNER TO postgres;

--
-- TOC entry 689 (class 1259 OID 43789)
-- Name: WorkflowNotificationConstruct; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowNotificationConstruct" (
    "WorkflowNotificationConstructID" uuid NOT NULL,
    "NotificationConstructID" uuid NOT NULL,
    "NotificationConstructVersionNumber" integer NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "WorkflowNotificationConstruct" OWNER TO postgres;

--
-- TOC entry 690 (class 1259 OID 43794)
-- Name: WorkflowNotificationConstructTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowNotificationConstructTemplate" (
    "WorkflowNotificationConstructTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "NotificationConstructTemplateID" uuid NOT NULL,
    "NotificationConstructTemplateVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "WorkflowNotificationConstructTemplate" OWNER TO postgres;

--
-- TOC entry 691 (class 1259 OID 43799)
-- Name: WorkflowObjectType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowObjectType" (
    "WorkflowObjectTypeID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(1000),
    "ObjectTypeName" character varying(1000) NOT NULL,
    "ObjectTypeNameSpace" character varying(1000) NOT NULL,
    "ObjectTypeAssembly" character varying(1000) NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowObjectType" OWNER TO postgres;

--
-- TOC entry 692 (class 1259 OID 43806)
-- Name: WorkflowObjectTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowObjectTypeTemplate" (
    "WorkflowObjectTypeTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(1000),
    "ObjectTypeName" character varying(1000) NOT NULL,
    "ObjectTypeNameSpace" character varying(1000) NOT NULL,
    "ObjectTypeAssembly" character varying(1000) NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowObjectTypeTemplate" OWNER TO postgres;

--
-- TOC entry 693 (class 1259 OID 43813)
-- Name: WorkflowParameter; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowParameter" (
    "WorkflowParameterID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(1000),
    "ObjectType" character varying(1000) NOT NULL,
    "ObjectValue" character varying(2000) NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowParameter" OWNER TO postgres;

--
-- TOC entry 694 (class 1259 OID 43820)
-- Name: WorkflowParameterTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowParameterTemplate" (
    "WorkflowParameterTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(1000),
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "ObjectType" character varying(1000) NOT NULL,
    "ObjectValue" character varying(2000) NOT NULL
);


ALTER TABLE "WorkflowParameterTemplate" OWNER TO postgres;

--
-- TOC entry 695 (class 1259 OID 43827)
-- Name: WorkflowRole; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowRole" (
    "WorkflowRoleID" uuid NOT NULL,
    "RoleName" character varying(300) NOT NULL,
    "RoleDescription" character varying(2000),
    "IsActive" boolean NOT NULL,
    "IsDeleted" boolean NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "RoleSubCategoryID" integer
);


ALTER TABLE "WorkflowRole" OWNER TO postgres;

--
-- TOC entry 696 (class 1259 OID 43833)
-- Name: WorkflowRoleTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowRoleTemplate" (
    "WorkflowRoleTemplateID" uuid NOT NULL,
    "RoleName" character varying(300) NOT NULL,
    "RoleDescription" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "RoleTypeID" integer,
    "RoleSubTypeID" integer,
    "RoleCategoryID" integer,
    "RoleSubCategoryID" integer
);


ALTER TABLE "WorkflowRoleTemplate" OWNER TO postgres;

--
-- TOC entry 697 (class 1259 OID 43841)
-- Name: WorkflowStatusType; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowStatusType" (
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "WorkflowStatusType" OWNER TO postgres;

--
-- TOC entry 698 (class 1259 OID 43846)
-- Name: WorkflowStatusTypeTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowStatusTypeTemplate" (
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "StatusTypeTemplateID" uuid NOT NULL,
    "StatusTypeTemplateVersionNumber" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "WorkflowStatusTypeTemplate" OWNER TO postgres;

--
-- TOC entry 699 (class 1259 OID 43851)
-- Name: WorkflowTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTemplate" (
    "WorkflowTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "WorkflowTemplateVersionNumber" integer DEFAULT 0 NOT NULL,
    "Name" character varying(300) NOT NULL,
    "Description" character varying(2000),
    "WorkflowTypeID" integer,
    "WorkflowSubTypeID" integer,
    "WorkflowCategoryID" integer,
    "WorkflowSubCategoryID" integer
);


ALTER TABLE "WorkflowTemplate" OWNER TO postgres;

--
-- TOC entry 700 (class 1259 OID 43859)
-- Name: WorkflowTransistion; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTransistion" (
    "WorkflowTransistionID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "IsWorkflowStart" boolean DEFAULT false NOT NULL,
    "IsWorkflowEnd" boolean DEFAULT false NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowTransistion" OWNER TO postgres;

--
-- TOC entry 701 (class 1259 OID 43868)
-- Name: WorkflowTransistionCompleteCondition; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTransistionCompleteCondition" (
    "WorkflowTransistionID" uuid NOT NULL,
    "WorkflowConditionID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowTransistionCompleteCondition" OWNER TO postgres;

--
-- TOC entry 702 (class 1259 OID 43871)
-- Name: WorkflowTransistionCompleteConditionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTransistionCompleteConditionTemplate" (
    "WorkflowTransistionTemplateID" uuid NOT NULL,
    "WorkflowConditionTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowTransistionCompleteConditionTemplate" OWNER TO postgres;

--
-- TOC entry 703 (class 1259 OID 43874)
-- Name: WorkflowTransistionHierarchy; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTransistionHierarchy" (
    "WorkflowTransistionHierarchyID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "ChildComponentID" uuid NOT NULL,
    "ParentComponentID" uuid,
    "IsWorkflowStart" boolean DEFAULT false NOT NULL,
    "IsWorkflowEnd" boolean NOT NULL
);


ALTER TABLE "WorkflowTransistionHierarchy" OWNER TO postgres;

--
-- TOC entry 704 (class 1259 OID 43879)
-- Name: WorkflowTransistionHierarchyTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTransistionHierarchyTemplate" (
    "WorkflowTransistionHierarchyTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "ChildComponentID" uuid NOT NULL,
    "ParentComponentID" uuid,
    "IsWorkflowStart" boolean DEFAULT false NOT NULL,
    "IsWorkflowEnd" boolean DEFAULT false NOT NULL
);


ALTER TABLE "WorkflowTransistionHierarchyTemplate" OWNER TO postgres;

--
-- TOC entry 705 (class 1259 OID 43885)
-- Name: WorkflowTransistionParameter; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTransistionParameter" (
    "WorkflowTransistionID" uuid NOT NULL,
    "WorkflowParameterID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowTransistionParameter" OWNER TO postgres;

--
-- TOC entry 706 (class 1259 OID 43888)
-- Name: WorkflowTransistionParameterTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTransistionParameterTemplate" (
    "WorkflowTransistionTemplateID" uuid NOT NULL,
    "WorkflowParameterTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowTransistionParameterTemplate" OWNER TO postgres;

--
-- TOC entry 707 (class 1259 OID 43891)
-- Name: WorkflowTransistionStartCondition; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTransistionStartCondition" (
    "WorkflowTransistionID" uuid NOT NULL,
    "WorkflowConditionID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowTransistionStartCondition" OWNER TO postgres;

--
-- TOC entry 708 (class 1259 OID 43894)
-- Name: WorkflowTransistionStartConditionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTransistionStartConditionTemplate" (
    "WorkflowTransistionTemplateID" uuid NOT NULL,
    "WorkflowConditionTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowTransistionStartConditionTemplate" OWNER TO postgres;

--
-- TOC entry 709 (class 1259 OID 43897)
-- Name: WorkflowTransistionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTransistionTemplate" (
    "WorkflowTransistionTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer DEFAULT 0 NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "IsWorkflowStart" boolean DEFAULT false NOT NULL,
    "IsWorkflowEnd" boolean DEFAULT false NOT NULL
);


ALTER TABLE "WorkflowTransistionTemplate" OWNER TO postgres;

--
-- TOC entry 710 (class 1259 OID 43907)
-- Name: WorkflowTransistionWorkflowAction; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTransistionWorkflowAction" (
    "WorkflowTransistionID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "WorkflowActionID" uuid NOT NULL
);


ALTER TABLE "WorkflowTransistionWorkflowAction" OWNER TO postgres;

--
-- TOC entry 711 (class 1259 OID 43910)
-- Name: WorkflowTransistionWorkflowActionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTransistionWorkflowActionTemplate" (
    "WorkflowTransistionTemplateID" uuid NOT NULL,
    "WorkflowActionTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowTransistionWorkflowActionTemplate" OWNER TO postgres;

--
-- TOC entry 712 (class 1259 OID 43913)
-- Name: WorkflowTransistionWorkflowDecision; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTransistionWorkflowDecision" (
    "WorkflowTransistionID" uuid NOT NULL,
    "WorkflowDecisionID" uuid NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowTransistionWorkflowDecision" OWNER TO postgres;

--
-- TOC entry 713 (class 1259 OID 43916)
-- Name: WorkflowTransistionWorkflowDecisionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTransistionWorkflowDecisionTemplate" (
    "WorkflowTransistionTemplateID" uuid NOT NULL,
    "WorkflowDecisionTemplateID" uuid NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL
);


ALTER TABLE "WorkflowTransistionWorkflowDecisionTemplate" OWNER TO postgres;

--
-- TOC entry 714 (class 1259 OID 43919)
-- Name: WorkflowTreeStructure; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTreeStructure" (
    "WorkflowTreeStructureID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "WorkflowID" uuid NOT NULL,
    "WorkflowVersionNumber" integer NOT NULL,
    "Name" character varying(300) NOT NULL,
    "Description" character varying(2000),
    "ItemOrder" integer NOT NULL,
    "IsLeafNode" bit(1) DEFAULT B'0'::"bit" NOT NULL,
    "IsActive" bit(1) DEFAULT B'1'::"bit" NOT NULL,
    "IsDeleted" bit(1) DEFAULT B'0'::"bit" NOT NULL,
    "ParentID" uuid,
    "InterfacePanelID" uuid,
    "InterfacePanelVersionNumber" integer,
    "Level" integer
);
ALTER TABLE ONLY "WorkflowTreeStructure" ALTER COLUMN "WorkflowTreeStructureID" SET STATISTICS 0;


ALTER TABLE "WorkflowTreeStructure" OWNER TO postgres;

--
-- TOC entry 715 (class 1259 OID 43929)
-- Name: WorkflowTreeStructureAction; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTreeStructureAction" (
    "WorkflowTreeStructureActionID" uuid NOT NULL,
    "WorkflowTreeStructureID" uuid,
    "WorkflowActionID" uuid,
    "IsVisible" boolean DEFAULT true,
    "IsActive" boolean DEFAULT true,
    "IsDeleted" boolean DEFAULT false,
    "ConditionString" character varying(1000)
);
ALTER TABLE ONLY "WorkflowTreeStructureAction" ALTER COLUMN "WorkflowTreeStructureID" SET STATISTICS 0;
ALTER TABLE ONLY "WorkflowTreeStructureAction" ALTER COLUMN "WorkflowActionID" SET STATISTICS 0;


ALTER TABLE "WorkflowTreeStructureAction" OWNER TO postgres;

--
-- TOC entry 716 (class 1259 OID 43938)
-- Name: WorkflowTreeStructureActionTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTreeStructureActionTemplate" (
    "WorkflowTreeStructureActionTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "WorkflowTreeStructureTemplateID" uuid,
    "WorkflowActionTemplateID" uuid,
    "IsVisible" boolean DEFAULT true,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ConditionString" character varying(1000)
);
ALTER TABLE ONLY "WorkflowTreeStructureActionTemplate" ALTER COLUMN "WorkflowTreeStructureTemplateID" SET STATISTICS 0;
ALTER TABLE ONLY "WorkflowTreeStructureActionTemplate" ALTER COLUMN "WorkflowActionTemplateID" SET STATISTICS 0;


ALTER TABLE "WorkflowTreeStructureActionTemplate" OWNER TO postgres;

--
-- TOC entry 717 (class 1259 OID 43948)
-- Name: WorkflowTreeStructureTemplate; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE "WorkflowTreeStructureTemplate" (
    "WorkflowTreeStructureTemplateID" uuid DEFAULT uuid_generate_v1() NOT NULL,
    "WorkflowTemplateID" uuid NOT NULL,
    "WorkflowTemplateVersionNumber" integer NOT NULL,
    "Name" character varying(300) NOT NULL,
    "Description" character varying(2000),
    "Level" integer NOT NULL,
    "IsLeafNode" bit(1) DEFAULT B'0'::"bit" NOT NULL,
    "IsActive" bit(1),
    "IsDeleted" bit(1),
    "ParentID" uuid,
    "InterfacePanelTemplateID" uuid,
    "InterfacePanelTemplateVersionNumber" integer,
    "ItemOrder" integer
);


ALTER TABLE "WorkflowTreeStructureTemplate" OWNER TO postgres;

--
-- TOC entry 718 (class 1259 OID 43956)
-- Name: appmanager; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE appmanager (
    psize integer NOT NULL
);


ALTER TABLE appmanager OWNER TO postgres;

--
-- TOC entry 719 (class 1259 OID 43959)
-- Name: busmessagecontent_busmessagecontentid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE busmessagecontent_busmessagecontentid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE busmessagecontent_busmessagecontentid_seq OWNER TO postgres;

--
-- TOC entry 720 (class 1259 OID 43961)
-- Name: contactregulator_regulatorid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE contactregulator_regulatorid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE contactregulator_regulatorid_seq OWNER TO postgres;

--
-- TOC entry 721 (class 1259 OID 43963)
-- Name: containsagadata; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE containsagadata (
    id uuid NOT NULL,
    originator character varying(255),
    originalmessageid character varying(255)
);


ALTER TABLE containsagadata OWNER TO postgres;

--
-- TOC entry 722 (class 1259 OID 43969)
-- Name: currencyrate_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE currencyrate_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE currencyrate_seq OWNER TO postgres;

--
-- TOC entry 723 (class 1259 OID 43971)
-- Name: elmah_error_sequence; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE elmah_error_sequence
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE elmah_error_sequence OWNER TO postgres;

--
-- TOC entry 724 (class 1259 OID 43973)
-- Name: globalaccountingperiod_globalaccountingperiodid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE globalaccountingperiod_globalaccountingperiodid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE globalaccountingperiod_globalaccountingperiodid_seq OWNER TO postgres;

--
-- TOC entry 725 (class 1259 OID 43975)
-- Name: organisationaccountingperiod_organisationaccountingperiodid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE organisationaccountingperiod_organisationaccountingperiodid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE organisationaccountingperiod_organisationaccountingperiodid_seq OWNER TO postgres;

--
-- TOC entry 726 (class 1259 OID 43977)
-- Name: organisationtype_organisationtypeid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE organisationtype_organisationtypeid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE organisationtype_organisationtypeid_seq OWNER TO postgres;

--
-- TOC entry 727 (class 1259 OID 43979)
-- Name: plangroup_plangroupid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE plangroup_plangroupid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE plangroup_plangroupid_seq OWNER TO postgres;

--
-- TOC entry 728 (class 1259 OID 43981)
-- Name: subscription; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE subscription (
    subscriberendpoint character varying(450) NOT NULL,
    messagetype character varying(450) NOT NULL,
    version character varying(450),
    typename character varying(450)
);


ALTER TABLE subscription OWNER TO postgres;

--
-- TOC entry 729 (class 1259 OID 43987)
-- Name: timeoutentity; Type: TABLE; Schema: public; Owner: postgres; Tablespace:
--

CREATE TABLE timeoutentity (
    id uuid NOT NULL,
    destination character varying(1024),
    sagaid uuid,
    state bytea,
    "time" timestamp without time zone,
    correlationid character varying(1024),
    headers text,
    endpoint character varying(440)
);


ALTER TABLE timeoutentity OWNER TO postgres;

--
-- TOC entry 730 (class 1259 OID 43993)
-- Name: vAttachment; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vAttachment" AS
 SELECT "AttachmentDetail"."AttachmentDetailID",
    "AttachmentDetail"."OrganisationID",
    "AttachmentDetail"."IsActive",
    "AttachmentDetail"."IsDeleted",
    "Attachment"."FileName",
    "AttachmentDetail"."RepositoryStructureID",
    "Attachment"."Subject",
    "Attachment"."MimeType",
    "Attachment"."Body",
    "Attachment"."FileSize",
    "Repository"."Name" AS "RepositoryName",
    "Attachment"."AttachmentID"
   FROM (((("Attachment"
     JOIN "AttachmentDetail" ON (("Attachment"."AttachmentDetailID" = "AttachmentDetail"."AttachmentDetailID")))
     JOIN "RepositoryStructure" ON (("AttachmentDetail"."RepositoryStructureID" = "RepositoryStructure"."RepositoryStructureID")))
     JOIN "Repository" ON ((("RepositoryStructure"."RepositoryID" = "Repository"."RepositoryID") AND ("RepositoryStructure"."RepositoryID" = "Repository"."RepositoryID"))))
     JOIN "OrganisationDetail" ON (("OrganisationDetail"."OrganisationDefaultLogoID" = "AttachmentDetail"."AttachmentDetailID")))
  WHERE ("AttachmentDetail"."IsDeleted" = true);


ALTER TABLE "vAttachment" OWNER TO postgres;

--
-- TOC entry 731 (class 1259 OID 43998)
-- Name: vBranch; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vBranch" AS
 SELECT os."OrganisationID" AS "ParentOrganisationID",
    org."OrganisationID" AS "BranchOrganisationID",
    org."IsHeadOffice",
    contact."ContactID",
    branch."Name" AS "BranchName",
    contact."ContactName",
    contact."EmailAddress1",
    contact."Telephone1",
    contact."IsPrimaryContact",
    org."IsDeleted",
    contact."Telephone2",
    contact."MobileNumber1",
    contact."MobileNumber2",
    contact."EmailAddress2",
    contact."WebSiteURL",
    contact."ContactCategoryID",
    contact."ContactTypeID"
   FROM (((("OrganisationStructure" os
     JOIN "OrganisationStructure" branch ON ((os."OrganisationStructureID" = branch."ParentOrganisationStructureID")))
     JOIN "OrganisationDetail" od ON ((branch."OrganisationID" = od."OrganisationID")))
     JOIN "Organisation" org ON ((branch."OrganisationID" = org."OrganisationID")))
     JOIN "Contact" contact ON ((org."OrganisationID" = contact."ParentID")));


ALTER TABLE "vBranch" OWNER TO postgres;

--
-- TOC entry 732 (class 1259 OID 44003)
-- Name: vBusTaskSchedule; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vBusTaskSchedule" AS
 SELECT bts."BusTaskScheduleID",
    bt."BusTaskID",
    bts."IntervalInMinutes",
    bt."CreatedOn",
    bt."Name",
    bt."Description",
    bt."IsActive",
    bt."IsDeleted",
    bth."BusTaskHandlerID",
    bth."ObjectTypeName",
    bth."ObjectTypeAssembly",
    bth."MessageTypeName",
    bth."MessageTypeAssembly"
   FROM (("BusTaskSchedule" bts
     LEFT JOIN "BusTask" bt ON ((((bt."BusTaskID" = bts."BusTaskID") AND (bt."IsActive" = true)) AND (bt."IsDeleted" = false))))
     LEFT JOIN "BusTaskHandler" bth ON ((((bth."BusTaskHandlerID" = bt."BusTaskHandlerID") AND (bth."IsActive" = true)) AND (bth."IsDeleted" = false))))
  WHERE ((bts."IsActive" = true) AND (bts."IsDeleted" = false));


ALTER TABLE "vBusTaskSchedule" OWNER TO postgres;

--
-- TOC entry 733 (class 1259 OID 44008)
-- Name: vClaimSource; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vClaimSource" AS
 SELECT uuid_generate_v1() AS "ID",
    'Resource'::text AS "ClaimType",
    res."ResourceID" AS "ClaimID",
    res."ResourceName" AS "ClaimName",
    'Operation'::text AS "ClaimSubType",
    op."OperationID" AS "ClaimSubID",
    op."OperationName" AS "ClaimSubName"
   FROM (("Resource" res
     JOIN "ResourceOperation" ro ON ((ro."ResourceID" = res."ResourceID")))
     LEFT JOIN "Operation" op ON ((op."OperationID" = ro."OperationID")))
UNION
 SELECT uuid_generate_v1() AS "ID",
    'State'::text AS "ClaimType",
    sat."StateID" AS "ClaimID",
    sat."StateName" AS "ClaimName",
    'StateItem'::text AS "ClaimSubType",
    si."StateItemID" AS "ClaimSubID",
        CASE
            WHEN (psi."StateItemName" IS NULL) THEN (si."StateItemName")::text
            ELSE (((psi."StateItemName")::text || '_'::text) || (si."StateItemName")::text)
        END AS "ClaimSubName"
   FROM (("State" sat
     JOIN "StateItem" si ON ((si."StateID" = sat."StateID")))
     LEFT JOIN "StateItem" psi ON ((psi."StateItemID" = si."ParentStateItemID")));


ALTER TABLE "vClaimSource" OWNER TO postgres;

--
-- TOC entry 734 (class 1259 OID 44013)
-- Name: vClassification; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vClassification" AS
 SELECT ct."ClassificationTypeID" AS classificationtypeid,
    ct."Name" AS name,
    ctc."ClassificationTypeCategoryID",
    ctc."Name" AS categoryname
   FROM ("ClassificationType" ct
     LEFT JOIN "ClassificationTypeCategory" ctc ON ((ctc."ClassificationTypeCategoryID" = ct."ClassificationTypeCategoryID")));


ALTER TABLE "vClassification" OWNER TO postgres;

--
-- TOC entry 735 (class 1259 OID 44017)
-- Name: vCompany; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vCompany" AS
 SELECT o."OrganisationID" AS "CompanyId",
    od."Name" AS "CompanyName",
    o."CreatedOn" AS "CompanyRecordCreated",
    o."IsCompanyVerified",
    o."IsCompanyPinCreated",
    o."CompanyPinCode",
    o."CompanyPinCreated",
    c."Salutation" AS "SystemAdminTitle",
    c."FirstName" AS "SystemAdminFirstName",
    c."LastName" AS "SystemAdminLastName",
    c."Telephone1" AS "SystemAdminTel",
    c."EmailAddress1" AS "SystemAdminEmail",
    cr."RegulatorName" AS "CompanyRegulator",
    cr."RegulatorOtherName" AS "CompanyOtherRegulator",
    a."Line1" AS "CompanyAddress1",
    a."Line2" AS "CompanyAddress2",
    a."Town" AS "CompanyTownCity",
    a."County" AS "CompanyCounty",
    a."PostalCode" AS "CompanyPostCode",
    a."AdditionalAddressInformation",
    o."ReturnUrl"
   FROM (((("Organisation" o
     LEFT JOIN "OrganisationDetail" od ON ((o."OrganisationID" = od."OrganisationID")))
     LEFT JOIN "Contact" c ON ((o."OrganisationID" = c."ParentID")))
     LEFT JOIN "ContactRegulator" cr ON ((c."ContactID" = cr."ContactID")))
     LEFT JOIN "Address" a ON ((a."ParentID" = cr."ContactID")));


ALTER TABLE "vCompany" OWNER TO postgres;

--
-- TOC entry 736 (class 1259 OID 44022)
-- Name: vCountryAndCurrency; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vCountryAndCurrency" AS
 SELECT cc."CountryCode",
    cc."CountryName",
    cc."CurrencyCode",
    curr."CurrencyName",
    curate."CurrencyRateDate",
    curate."CurrencyRate",
    curate."CurrencyRateToGBP",
    curate."CurrencyRateToUSD"
   FROM (("CountryCode" cc
     LEFT JOIN "CurrencyCode" curr ON (((curr."CurrencyCode")::text = (cc."CurrencyCode")::text)))
     LEFT JOIN "CurrencyRate" curate ON ((((curate."CurrencyCode")::text = (cc."CurrencyCode")::text) AND (curate."CurrencyRateDate" = ( SELECT max(rr."CurrencyRateDate") AS max
           FROM "CurrencyRate" rr
          WHERE ((rr."CurrencyCode")::text = (cc."CurrencyCode")::text))))))
  WHERE (curate."CurrencyRateDate" IS NOT NULL);


ALTER TABLE "vCountryAndCurrency" OWNER TO postgres;

--
-- TOC entry 737 (class 1259 OID 44027)
-- Name: vCountryDeduction; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vCountryDeduction" AS
 SELECT cd."CountryDeductionID",
    cd."CountryCode",
    cd."DeductionID",
    cd."DeductionVersionNumber",
    cd."DeductionPercentage",
    cd."DeductionValue",
    cd."IsActive",
    cd."IsDeleted",
    cd."IsAppliedToAllOrders",
    de."Name",
    de."Description",
    de."IsPercentageBased",
        CASE
            WHEN (EXISTS ( SELECT dp_1."DeductionID",
                dp_1."DeductionVersionNumber",
                dp_1."ProductID",
                dp_1."ProductVersionID"
               FROM "DeductionProduct" dp_1
              WHERE ((dp_1."DeductionID" = cd."DeductionID") AND (dp_1."DeductionVersionNumber" = cd."DeductionVersionNumber"))
             LIMIT 1)) THEN true
            ELSE false
        END AS "IsProductDeduction",
    dp."ProductID",
    dp."ProductVersionID"
   FROM (("CountryDeduction" cd
     LEFT JOIN "Deduction" de ON (((((de."DeductionID" = cd."DeductionID") AND (de."IsActive" = true)) AND (de."IsDeleted" = false)) AND (de."DeductionVersionNumber" = cd."DeductionVersionNumber"))))
     LEFT JOIN "DeductionProduct" dp ON (((dp."DeductionID" = cd."DeductionID") AND (dp."DeductionVersionNumber" = cd."DeductionVersionNumber"))))
  WHERE ((cd."IsActive" = true) AND (cd."IsDeleted" = false));


ALTER TABLE "vCountryDeduction" OWNER TO postgres;

--
-- TOC entry 738 (class 1259 OID 44032)
-- Name: vDefaultEmailAddress; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vDefaultEmailAddress" AS
 SELECT ua."ID" AS "UserID",
    ua."Username",
    ua."Email",
    uao."UserAccountOrganisationID",
    uao."OrganisationID" AS "BranchOrganisationID",
    con."EmailAddress1" AS "BranchEmailAddress",
    COALESCE(porg."OrganisationID", uao."OrganisationID") AS "OrganisationID",
    pcon."EmailAddress1"
   FROM ((((((("UserAccounts" ua
     JOIN "UserAccountOrganisation" uao ON ((uao."UserID" = ua."ID")))
     LEFT JOIN "Organisation" org ON ((org."OrganisationID" = uao."OrganisationID")))
     LEFT JOIN "Contact" con ON (((con."ParentID" = uao."OrganisationID") AND (con."IsPrimaryContact" = true))))
     LEFT JOIN "Address" addr ON (((addr."ParentID" = con."ContactID") AND (addr."IsPrimaryAddress" = true))))
     LEFT JOIN "Organisation" porg ON ((porg."OrganisationID" = org."ParentOrganisationID")))
     LEFT JOIN "Contact" pcon ON (((pcon."ParentID" = org."OrganisationID") AND (pcon."IsPrimaryContact" = true))))
     LEFT JOIN "Address" paddr ON (((paddr."ParentID" = pcon."ContactID") AND (paddr."IsPrimaryAddress" = true))));


ALTER TABLE "vDefaultEmailAddress" OWNER TO postgres;

--
-- TOC entry 739 (class 1259 OID 44037)
-- Name: vStatusType; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vStatusType" AS
 SELECT stv."StatusTypeValueID",
    stv."StatusTypeID",
    stv."StatusTypeVersionNumber",
    stv."Name",
    st."Name" AS "StatusTypeName",
    sts."StatusOrder",
    sts."IsStart",
    sts."IsEnd"
   FROM (("StatusTypeValue" stv
     LEFT JOIN "StatusType" st ON (((st."StatusTypeID" = stv."StatusTypeID") AND (st."StatusTypeVersionNumber" = stv."StatusTypeVersionNumber"))))
     LEFT JOIN "StatusTypeStructure" sts ON ((((sts."StatusTypeID" = stv."StatusTypeID") AND (sts."StatusTypeVersionNumber" = stv."StatusTypeVersionNumber")) AND (sts."StatusTypeValueID" = stv."StatusTypeValueID"))));


ALTER TABLE "vStatusType" OWNER TO postgres;

--
-- TOC entry 740 (class 1259 OID 44042)
-- Name: vDefaultOrganisationStatus; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vDefaultOrganisationStatus" AS
 SELECT od."DefaultOrganisationID",
    od."DefaultOrganisationVersionNumber",
    od."DefaultOrganisationTemplateID",
    od."DefaultOrganisationTemplateVersionNumber",
    od."Name",
    od."IsActive",
    od."IsDeleted",
    od."OrganisationTypeID" AS "RootOrganisationTypeID",
    ot."Name" AS "OrganisationTypeName",
    dot."OrganisationTypeID",
    NULL::uuid AS "UserTypeID",
    true AS "IsDefault",
    dot."StatusTypeID",
    dot."StatusTypeVersionNumber",
    vsst."StatusTypeName",
    vsst."Name" AS "StatusTypeValueName",
    vsst."StatusTypeValueID",
    vsst."StatusOrder",
    vsst."IsStart",
    vsst."IsEnd"
   FROM ((("DefaultOrganisation" od
     LEFT JOIN "OrganisationType" ot ON ((ot."OrganisationTypeID" = od."OrganisationTypeID")))
     JOIN "DefaultOrganisationTarget" dot ON (((dot."DefaultOrganisationID" = od."DefaultOrganisationID") AND (dot."DefaultOrganisationVersionNumber" = od."DefaultOrganisationVersionNumber"))))
     LEFT JOIN "vStatusType" vsst ON ((((vsst."StatusTypeID" = dot."StatusTypeID") AND (vsst."StatusTypeVersionNumber" = dot."StatusTypeVersionNumber")) AND (vsst."IsStart" = true))))
UNION
 SELECT od."DefaultOrganisationID",
    od."DefaultOrganisationVersionNumber",
    od."DefaultOrganisationTemplateID",
    od."DefaultOrganisationTemplateVersionNumber",
    od."Name",
    od."IsActive",
    od."IsDeleted",
    od."OrganisationTypeID" AS "RootOrganisationTypeID",
    ot."Name" AS "OrganisationTypeName",
    NULL::integer AS "OrganisationTypeID",
    dout."UserTypeID",
    dout."IsDefault",
    dout."StatusTypeID",
    dout."StatusTypeVersionNumber",
    vsst."StatusTypeName",
    vsst."Name" AS "StatusTypeValueName",
    vsst."StatusTypeValueID",
    vsst."StatusOrder",
    vsst."IsStart",
    vsst."IsEnd"
   FROM ((("DefaultOrganisation" od
     LEFT JOIN "OrganisationType" ot ON ((ot."OrganisationTypeID" = od."OrganisationTypeID")))
     JOIN "DefaultOrganisationUserTarget" dout ON (((dout."DefaultOrganisationID" = od."DefaultOrganisationID") AND (dout."DefaultOrganisationVersionNumber" = od."DefaultOrganisationVersionNumber"))))
     LEFT JOIN "vStatusType" vsst ON ((((vsst."StatusTypeID" = dout."StatusTypeID") AND (vsst."StatusTypeVersionNumber" = dout."StatusTypeVersionNumber")) AND (vsst."IsStart" = true))));


ALTER TABLE "vDefaultOrganisationStatus" OWNER TO postgres;

--
-- TOC entry 741 (class 1259 OID 44047)
-- Name: vDefaultOrganisationUserTypeOrganisationType; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vDefaultOrganisationUserTypeOrganisationType" AS
 SELECT dout."DefaultOrganisationID",
    dout."DefaultOrganisationVersionNumber",
    dorg."Name" AS "DefaultOrganisationName",
    dout."UserTypeID",
    ut."Name" AS "UserTypeName",
    ot."OrganisationTypeID",
    ot."Name" AS "OrganisationTypeName"
   FROM ((("DefaultOrganisationUserTarget" dout
     LEFT JOIN "DefaultOrganisation" dorg ON (((dout."DefaultOrganisationID" = dorg."DefaultOrganisationID") AND (dout."DefaultOrganisationVersionNumber" = dorg."DefaultOrganisationVersionNumber"))))
     LEFT JOIN "OrganisationType" ot ON ((dorg."OrganisationTypeID" = ot."OrganisationTypeID")))
     LEFT JOIN "UserType" ut ON ((dout."UserTypeID" = ut."UserTypeID")))
  WHERE (((dout."IsActive" = true) AND (dout."IsDeleted" = false)) AND (dout."IsDefault" = true));


ALTER TABLE "vDefaultOrganisationUserTypeOrganisationType" OWNER TO postgres;

--
-- TOC entry 742 (class 1259 OID 44052)
-- Name: vFieldDetailForUI; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vFieldDetailForUI" AS
 SELECT ''::character varying AS "InterfacePanelName",
    fd."FieldDetailID",
    fd."Name",
    fd."Description",
    fd."FieldLabelValue" AS "OverrideFieldLabelValue",
    fd."DefaultValue" AS "OverrideDefaultValue",
    fd."IsActive",
    fd."IsDeleted",
    fd."ToolTipValue" AS "OverrideToolTipValue",
    fd."ToolTipHTML" AS "OverrideToolTipHTML",
    fd."ToolTipIsHTML" AS "OverrideToolTipIsHTML",
    fd."InformationValue" AS "OverrideInformationValue",
    fd."InformationHTML" AS "OverrideInformationHTML",
    fd."InformationIsHTML" AS "OverrideInformationIsHTML",
    fd."HelpValue" AS "OverrideHelpValue",
    fd."HelpHTML" AS "OverrideHelpHTML",
    fd."HelpIsHTML" AS "OverrideHelpIsHTML",
    fd."IsSecuredByClaim",
    fd."IsGlobal",
    fd."FieldDetailTemplateID",
    fd."FieldTypeID",
    ct."Name" AS "IconAlignment",
    fd."IconFileName",
    fd."IsGridColumn",
    fd."FieldMask",
    false AS "IsVisible",
    false AS "IsMandatory",
    false AS "IsFilterable",
    NULL::integer AS "OrganisationTypeID",
    NULL::uuid AS "UserTypeID",
    uuid_generate_v1() AS "ID"
   FROM ("FieldDetail" fd
     LEFT JOIN "ClassificationType" ct ON ((ct."ClassificationTypeID" = fd."IconAlignmentTypeID")))
UNION ALL
 SELECT ip."Name" AS "InterfacePanelName",
    ipfd."FieldDetailID",
    fd."Name",
    fd."Description",
    COALESCE(ipfd."OverrideFieldLabelValue", fd."FieldLabelValue") AS "OverrideFieldLabelValue",
    COALESCE(ipfd."OverrideDefaultValue", fd."DefaultValue") AS "OverrideDefaultValue",
    COALESCE(ipfd."IsActive", fd."IsActive") AS "IsActive",
    COALESCE(ipfd."IsDeleted", fd."IsDeleted") AS "IsDeleted",
    COALESCE(ipfd."OverrideToolTipValue", fd."ToolTipValue") AS "OverrideToolTipValue",
    COALESCE(ipfd."OverrideToolTipHTML", fd."ToolTipHTML") AS "OverrideToolTipHTML",
    COALESCE(ipfd."OverrideToolTipIsHTML", fd."ToolTipIsHTML") AS "OverrideToolTipIsHTML",
    COALESCE(ipfd."OverrideInformationValue", fd."InformationValue") AS "OverrideInformationValue",
    COALESCE(ipfd."OverrideInformationHTML", fd."InformationHTML") AS "OverrideInformationHTML",
    COALESCE(ipfd."OverrideInformationIsHTML", fd."InformationIsHTML") AS "OverrideInformationIsHTML",
    COALESCE(ipfd."OverrideHelpValue", fd."HelpValue") AS "OverrideHelpValue",
    COALESCE(ipfd."OverrideHelpHTML", fd."HelpHTML") AS "OverrideHelpHTML",
    COALESCE(ipfd."OverrideHelpIsHTML", fd."HelpIsHTML") AS "OverrideHelpIsHTML",
    fd."IsSecuredByClaim",
    fd."IsGlobal",
    fd."FieldDetailTemplateID",
    fd."FieldTypeID",
    ct."Name" AS "IconAlignment",
    fd."IconFileName",
    fd."IsGridColumn",
    fd."FieldMask",
    ipfd."IsVisible",
    ipfd."IsMandatory",
    ipfd."IsFilterable",
    NULL::integer AS "OrganisationTypeID",
    NULL::uuid AS "UserTypeID",
    uuid_generate_v1() AS "ID"
   FROM ((("InterfacePanelFieldDetail" ipfd
     LEFT JOIN "FieldDetail" fd ON ((ipfd."FieldDetailID" = fd."FieldDetailID")))
     LEFT JOIN "InterfacePanel" ip ON (((ip."InterfacePanelID" = ipfd."InterfacePanelID") AND (ip."InterfacePanelVersionNumber" = ipfd."InterfacePanelVersionNumber"))))
     LEFT JOIN "ClassificationType" ct ON ((ct."ClassificationTypeID" = fd."IconAlignmentTypeID")))
UNION ALL
 SELECT ip."Name" AS "InterfacePanelName",
    ipfd."FieldDetailID",
    fd."Name",
    fd."Description",
    COALESCE(ipfd."OverrideFieldLabelValue", fd."FieldLabelValue") AS "OverrideFieldLabelValue",
    COALESCE(ipfd."OverrideDefaultValue", fd."DefaultValue") AS "OverrideDefaultValue",
    COALESCE(ipfd."IsActive", fd."IsActive") AS "IsActive",
    COALESCE(ipfd."IsDeleted", fd."IsDeleted") AS "IsDeleted",
    COALESCE(ipfd."OverrideToolTipValue", fd."ToolTipValue") AS "OverrideToolTipValue",
    COALESCE(ipfd."OverrideToolTipHTML", fd."ToolTipHTML") AS "OverrideToolTipHTML",
    COALESCE(ipfd."OverrideToolTipIsHTML", fd."ToolTipIsHTML") AS "OverrideToolTipIsHTML",
    COALESCE(ipfd."OverrideInformationValue", fd."InformationValue") AS "OverrideInformationValue",
    COALESCE(ipfd."OverrideInformationHTML", fd."InformationHTML") AS "OverrideInformationHTML",
    COALESCE(ipfd."OverrideInformationIsHTML", fd."InformationIsHTML") AS "OverrideInformationIsHTML",
    COALESCE(ipfd."OverrideHelpValue", fd."HelpValue") AS "OverrideHelpValue",
    COALESCE(ipfd."OverrideHelpHTML", fd."HelpHTML") AS "OverrideHelpHTML",
    COALESCE(ipfd."OverrideHelpIsHTML", fd."HelpIsHTML") AS "OverrideHelpIsHTML",
    fd."IsSecuredByClaim",
    fd."IsGlobal",
    fd."FieldDetailTemplateID",
    fd."FieldTypeID",
    ct."Name" AS "IconAlignment",
    fd."IconFileName",
    fd."IsGridColumn",
    fd."FieldMask",
    ipfd."IsVisible",
    ipfd."IsMandatory",
    ipfd."IsFilterable",
    COALESCE(ipfd."OrganisationTypeID", NULL::integer) AS "OrganisationTypeID",
    NULL::uuid AS "UserTypeID",
    uuid_generate_v1() AS "ID"
   FROM ((("InterfacePanelFieldDetailOrganisationType" ipfd
     LEFT JOIN "FieldDetail" fd ON ((ipfd."FieldDetailID" = fd."FieldDetailID")))
     LEFT JOIN "InterfacePanel" ip ON (((ip."InterfacePanelID" = ipfd."InterfacePanelID") AND (ip."InterfacePanelVersionNumber" = ipfd."InterfacePanelVersionNumber"))))
     LEFT JOIN "ClassificationType" ct ON ((ct."ClassificationTypeID" = fd."IconAlignmentTypeID")))
UNION ALL
 SELECT ip."Name" AS "InterfacePanelName",
    ipfd."FieldDetailID",
    fd."Name",
    fd."Description",
    COALESCE(ipfd."OverrideFieldLabelValue", fd."FieldLabelValue") AS "OverrideFieldLabelValue",
    COALESCE(ipfd."OverrideDefaultValue", fd."DefaultValue") AS "OverrideDefaultValue",
    COALESCE(ipfd."IsActive", fd."IsActive") AS "IsActive",
    COALESCE(ipfd."IsDeleted", fd."IsDeleted") AS "IsDeleted",
    COALESCE(ipfd."OverrideToolTipValue", fd."ToolTipValue") AS "OverrideToolTipValue",
    COALESCE(ipfd."OverrideToolTipHTML", fd."ToolTipHTML") AS "OverrideToolTipHTML",
    COALESCE(ipfd."OverrideToolTipIsHTML", fd."ToolTipIsHTML") AS "OverrideToolTipIsHTML",
    COALESCE(ipfd."OverrideInformationValue", fd."InformationValue") AS "OverrideInformationValue",
    COALESCE(ipfd."OverrideInformationHTML", fd."InformationHTML") AS "OverrideInformationHTML",
    COALESCE(ipfd."OverrideInformationIsHTML", fd."InformationIsHTML") AS "OverrideInformationIsHTML",
    COALESCE(ipfd."OverrideHelpValue", fd."HelpValue") AS "OverrideHelpValue",
    COALESCE(ipfd."OverrideHelpHTML", fd."HelpHTML") AS "OverrideHelpHTML",
    COALESCE(ipfd."OverrideHelpIsHTML", fd."HelpIsHTML") AS "OverrideHelpIsHTML",
    fd."IsSecuredByClaim",
    fd."IsGlobal",
    fd."FieldDetailTemplateID",
    fd."FieldTypeID",
    ct."Name" AS "IconAlignment",
    fd."IconFileName",
    fd."IsGridColumn",
    fd."FieldMask",
    ipfd."IsVisible",
    ipfd."IsMandatory",
    ipfd."IsFilterable",
    COALESCE(ipfd."OrganisationTypeID", NULL::integer) AS "OrganisationTypeID",
    COALESCE(ipfd."UserTypeID", NULL::uuid) AS "UserTypeID",
    uuid_generate_v1() AS "ID"
   FROM ((("InterfacePanelFDOrganisationTypeUserType" ipfd
     LEFT JOIN "FieldDetail" fd ON ((ipfd."FieldDetailID" = fd."FieldDetailID")))
     LEFT JOIN "InterfacePanel" ip ON (((ip."InterfacePanelID" = ipfd."InterfacePanelID") AND (ip."InterfacePanelVersionNumber" = ipfd."InterfacePanelVersionNumber"))))
     LEFT JOIN "ClassificationType" ct ON ((ct."ClassificationTypeID" = fd."IconAlignmentTypeID")));


ALTER TABLE "vFieldDetailForUI" OWNER TO postgres;

--
-- TOC entry 743 (class 1259 OID 44057)
-- Name: vFieldDetailValidationForUI; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vFieldDetailValidationForUI" AS
 SELECT d."InterfacePanelID",
    d."InterfacePanelVersionNumber",
    ip."Name",
    ipfd."FieldDetailID",
    COALESCE(d."OverrideValidationMessage", ipfd."OverrideValidationMessage") AS "OverrideValidationMessage",
    COALESCE(d."OverrideValidationMessageHTML", ipfd."OverrideValidationMessageHTML") AS "OverrideValidationMessageHTML",
    COALESCE(d."OverrideValidationIsHTML", ipfd."OverrideValidationIsHTML") AS "OverrideValidationIsHTML",
    COALESCE(d."ValidationType", ipfd."ValidationType") AS "ValidationType",
    COALESCE(d."ValidationSubType", ipfd."ValidationSubType") AS "ValidationSubType",
    COALESCE(d."ValidationCategory", ipfd."ValidationCategory") AS "ValidationCategory",
    COALESCE(d."ValidationSubCategory", ipfd."ValidationSubCategory") AS "ValidationSubCategory",
    COALESCE(d."SourceErrorCodes", ipfd."SourceErrorCodes") AS "SourceErrorCodes",
    d."IsActive",
    d."IsDeleted",
    ipfd."InterfacePanelFieldDetailValidationName",
    d."OrganisationTypeID",
    d."UserTypeID",
    uuid_generate_v1() AS "ID"
   FROM (("InterfacePanelFDValidationOrganisationTypeUserType" d
     LEFT JOIN "InterfacePanelFieldDetailValidation" ipfd ON ((((ipfd."FieldDetailID" = d."FieldDetailID") AND (ipfd."InterfacePanelID" = d."InterfacePanelID")) AND (ipfd."InterfacePanelVersionNumber" = d."InterfacePanelVersionNumber"))))
     LEFT JOIN "InterfacePanel" ip ON (((ip."InterfacePanelID" = d."InterfacePanelID") AND (ip."InterfacePanelVersionNumber" = d."InterfacePanelVersionNumber"))))
UNION ALL
 SELECT d."InterfacePanelID",
    d."InterfacePanelVersionNumber",
    ip."Name",
    ipfd."FieldDetailID",
    COALESCE(d."OverrideValidationMessage", ipfd."OverrideValidationMessage") AS "OverrideValidationMessage",
    COALESCE(d."OverrideValidationMessageHTML", ipfd."OverrideValidationMessageHTML") AS "OverrideValidationMessageHTML",
    COALESCE(d."OverrideValidationIsHTML", ipfd."OverrideValidationIsHTML") AS "OverrideValidationIsHTML",
    COALESCE(d."ValidationType", ipfd."ValidationType") AS "ValidationType",
    COALESCE(d."ValidationSubType", ipfd."ValidationSubType") AS "ValidationSubType",
    COALESCE(d."ValidationCategory", ipfd."ValidationCategory") AS "ValidationCategory",
    COALESCE(d."ValidationSubCategory", ipfd."ValidationSubCategory") AS "ValidationSubCategory",
    COALESCE(d."SourceErrorCodes", ipfd."SourceErrorCodes") AS "SourceErrorCodes",
    d."IsActive",
    d."IsDeleted",
    ipfd."InterfacePanelFieldDetailValidationName",
    d."OrganisationTypeID",
    NULL::uuid AS "UserTypeID",
    uuid_generate_v1() AS "ID"
   FROM (("InterfacePanelFieldDetailValidationOrganisationType" d
     LEFT JOIN "InterfacePanelFieldDetailValidation" ipfd ON ((((ipfd."FieldDetailID" = d."FieldDetailID") AND (ipfd."InterfacePanelID" = d."InterfacePanelID")) AND (ipfd."InterfacePanelVersionNumber" = d."InterfacePanelVersionNumber"))))
     LEFT JOIN "InterfacePanel" ip ON (((ip."InterfacePanelID" = d."InterfacePanelID") AND (ip."InterfacePanelVersionNumber" = d."InterfacePanelVersionNumber"))))
UNION ALL
 SELECT d."InterfacePanelID",
    d."InterfacePanelVersionNumber",
    ip."Name",
    d."FieldDetailID",
    COALESCE(d."OverrideValidationMessage", d."OverrideValidationMessage") AS "OverrideValidationMessage",
    COALESCE(d."OverrideValidationMessageHTML", d."OverrideValidationMessageHTML") AS "OverrideValidationMessageHTML",
    COALESCE(d."OverrideValidationIsHTML", d."OverrideValidationIsHTML") AS "OverrideValidationIsHTML",
    COALESCE(d."ValidationType", d."ValidationType") AS "ValidationType",
    COALESCE(d."ValidationSubType", d."ValidationSubType") AS "ValidationSubType",
    COALESCE(d."ValidationCategory", d."ValidationCategory") AS "ValidationCategory",
    COALESCE(d."ValidationSubCategory", d."ValidationSubCategory") AS "ValidationSubCategory",
    COALESCE(d."SourceErrorCodes", d."SourceErrorCodes") AS "SourceErrorCodes",
    d."IsActive",
    d."IsDeleted",
    d."InterfacePanelFieldDetailValidationName",
    NULL::integer AS "OrganisationTypeID",
    NULL::uuid AS "UserTypeID",
    uuid_generate_v1() AS "ID"
   FROM ("InterfacePanelFieldDetailValidation" d
     LEFT JOIN "InterfacePanel" ip ON (((ip."InterfacePanelID" = d."InterfacePanelID") AND (ip."InterfacePanelVersionNumber" = d."InterfacePanelVersionNumber"))));


ALTER TABLE "vFieldDetailValidationForUI" OWNER TO postgres;

--
-- TOC entry 744 (class 1259 OID 44062)
-- Name: vGlobalAccountingCurrentPeriod; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vGlobalAccountingCurrentPeriod" AS
 SELECT gap."GlobalAccountingPeriodID",
    to_date(((((((((((gap."Year" || '-'::text) || gap."Month") || '-'::text) || gap."StartDay") || ' '::text) || 0) || ':'::text) || 0) || ':'::text) || 0), 'YYYY-MM-DD HH24:MI:SS'::text) AS "AccountingPeriodStart",
    to_date(((((((((((gap."Year" || '-'::text) || gap."Month") || '-'::text) || gap."EndDay") || ' '::text) || 0) || ':'::text) || 0) || ':'::text) || 0), 'YYYY-MM-DD HH24:MI:SS'::text) AS "AccountingPeriodEnd",
    gap."IsFinancialClosePeriod" AS "AccountingPeriodFinancialClose",
    gdd."IsManuallyDrivenOnly" AS "DDIsManuallyDrivenOnly",
    gdd."GlobalDirectDebitCollectionPeriodID",
    gdd."CollectionDay" AS "DDCollectionDay",
    gdd."CollectionMonth" AS "DDCollectionMonth",
    gdd."CollectionYear" AS "DDCollectionYear",
    gap."PeriodNumber" AS "AccountingPeriodNumber",
    gdd."PeriodNumber" AS "DDPeriodNumber"
   FROM ("GlobalAccountingPeriod" gap
     JOIN "GlobalDirectDebitCollectionPeriod" gdd ON (((((((gdd."IsCurrentPeriod" = true) AND (gdd."IsActive" = true)) AND (gdd."CollectionMonth" = gap."Month")) AND (gdd."CollectionYear" = gap."Year")) AND (gdd."IsClosed" = false)) AND (gdd."CollectionDay" = ( SELECT period."CollectionDay"
           FROM "GlobalDirectDebitCollectionPeriod" period
          WHERE (((((period."IsCurrentPeriod" = true) AND (period."IsActive" = true)) AND (period."CollectionMonth" = gap."Month")) AND (period."CollectionYear" = gap."Year")) AND (period."IsClosed" = false))
          ORDER BY period."CollectionDay" DESC
         LIMIT 1)))))
  WHERE ((gap."IsCurrentPeriod" = true) AND (gap."IsClosed" = false));


ALTER TABLE "vGlobalAccountingCurrentPeriod" OWNER TO postgres;

--
-- TOC entry 745 (class 1259 OID 44067)
-- Name: vGroup; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vGroup" AS
 SELECT DISTINCT gt."GroupID",
    gt."GroupName",
    gt."GroupDescription",
    gt."GroupTypeID",
    gt."GroupSubTypeID",
    gt."GroupCategoryID",
    gt."IsActive",
    gt."IsDeleted",
        CASE (orggrp."OrganisationGroupID" IS NOT NULL)
            WHEN true THEN true
            ELSE false
        END AS "IsDisabled"
   FROM ("Group" gt
     LEFT JOIN "OrganisationGroup" orggrp ON ((gt."GroupID" = orggrp."OrganisationGroupID")));


ALTER TABLE "vGroup" OWNER TO postgres;

--
-- TOC entry 746 (class 1259 OID 44072)
-- Name: vInterfacePanelFieldDetails; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vInterfacePanelFieldDetails" AS
 SELECT ipfdv."InterfacePanelID",
    ip."Name" AS panelname,
    ipfdv."FieldDetailID",
    fd."Name" AS fieldname,
    ipfdv."OverrideValidationMessage"
   FROM (("InterfacePanelFieldDetailValidation" ipfdv
     LEFT JOIN "InterfacePanel" ip ON ((ipfdv."InterfacePanelID" = ip."InterfacePanelID")))
     LEFT JOIN "FieldDetail" fd ON ((ipfdv."FieldDetailID" = fd."FieldDetailID")));


ALTER TABLE "vInterfacePanelFieldDetails" OWNER TO postgres;

--
-- TOC entry 8720 (class 0 OID 0)
-- Dependencies: 746
-- Name: VIEW "vInterfacePanelFieldDetails"; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON VIEW "vInterfacePanelFieldDetails" IS 'This needs more modifications';


--
-- TOC entry 747 (class 1259 OID 44077)
-- Name: vInterfacePanelForUI; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vInterfacePanelForUI" AS
 SELECT ipotut."InterfacePanelID",
    ipotut."InterfacePanelVersionNumber",
    ip."Name",
    ip."Description",
    ip."InterfacePanelTypeID",
    ip."InterfacePanelSubTypeID",
    ip."InterfacePanelCategoryID",
    ip."InterfacePanelSubCategoryID",
    ipotut."IsActive",
    ipotut."IsDeleted",
    ipotut."IsVisible",
    ipotut."ParentID",
    ip."ParentIPID",
    ip."ParentIPVersionNumber",
    ip."IsSecuredByClaim",
    ip."IsGridPanel",
    ip."IsGlobal",
    COALESCE(ipotut."InterfacePanelOrganisationTypeUserTypeLabel", ip."InterfacePanelLabel") AS "InterfacePanelLabel",
    ipotut."OrganisationTypeID",
    ipotut."UserTypeID"
   FROM ("InterfacePanelOrganisationTypeUserType" ipotut
     LEFT JOIN "InterfacePanel" ip ON (((ipotut."InterfacePanelID" = ip."InterfacePanelID") AND (ipotut."InterfacePanelVersionNumber" = ip."InterfacePanelVersionNumber"))))
UNION ALL
 SELECT ipot."InterfacePanelID",
    ipot."InterfacePanelVersionNumber",
    ip."Name",
    ip."Description",
    ip."InterfacePanelTypeID",
    ip."InterfacePanelSubTypeID",
    ip."InterfacePanelCategoryID",
    ip."InterfacePanelSubCategoryID",
    ipot."IsActive",
    ipot."IsDeleted",
    ipot."IsVisible",
    ipot."ParentID",
    ip."ParentIPID",
    ip."ParentIPVersionNumber",
    ip."IsSecuredByClaim",
    ip."IsGridPanel",
    ip."IsGlobal",
    COALESCE(ipot."InterfacePanelOrganisationTypeLabel", ip."InterfacePanelLabel") AS "InterfacePanelLabel",
    ipot."OrganisationTypeID",
    NULL::uuid AS "UserTypeID"
   FROM ("InterfacePanelOrganisationType" ipot
     LEFT JOIN "InterfacePanel" ip ON (((ipot."InterfacePanelID" = ip."InterfacePanelID") AND (ipot."InterfacePanelVersionNumber" = ip."InterfacePanelVersionNumber"))))
UNION ALL
 SELECT ip."InterfacePanelID",
    ip."InterfacePanelVersionNumber",
    ip."Name",
    ip."Description",
    ip."InterfacePanelTypeID",
    ip."InterfacePanelSubTypeID",
    ip."InterfacePanelCategoryID",
    ip."InterfacePanelSubCategoryID",
    ip."IsActive",
    ip."IsDeleted",
    true AS "IsVisible",
    NULL::uuid AS "ParentID",
    ip."ParentIPID",
    ip."ParentIPVersionNumber",
    ip."IsSecuredByClaim",
    ip."IsGridPanel",
    ip."IsGlobal",
    ip."InterfacePanelLabel",
    NULL::integer AS "OrganisationTypeID",
    NULL::uuid AS "UserTypeID"
   FROM "InterfacePanel" ip;


ALTER TABLE "vInterfacePanelForUI" OWNER TO postgres;

--
-- TOC entry 748 (class 1259 OID 44082)
-- Name: vInterfacePanelValidationForUI; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vInterfacePanelValidationForUI" AS
 SELECT ipvotut."InterfacePanelID",
    ipvotut."InterfacePanelVersionNumber",
    ip."Name",
    ipvotut."OrganisationTypeID",
    ipvotut."UserTypeID",
    COALESCE(ipvotut."OverrideValidationMessage", ipv."OverrideValidationMessage") AS "OverrideValidationMessage",
    COALESCE(ipvotut."OverrideValidationMessageHTML", ipv."OverrideValidationMessageHTML") AS "OverrideValidationMessageHTML",
    COALESCE(ipvotut."OverrideValidationIsHTML", ipv."OverrideValidationIsHTML") AS "OverrideValidationIsHTML",
    COALESCE(ipvotut."ValidationType", ipv."ValidationType") AS "ValidationType",
    COALESCE(ipvotut."ValidationSubType", ipv."ValidationSubType") AS "ValidationSubType",
    COALESCE(ipvotut."ValidationCategory", ipv."ValidationCategory") AS "ValidationCategory",
    COALESCE(ipvotut."ValidationSubCategory", ipv."ValidationSubCategory") AS "ValidationSubCategory",
    COALESCE(ipvotut."SourceErrorCodes", ipv."SourceErrorCodes") AS "SourceErrorCodes",
    ipvotut."IsActive",
    ipvotut."IsDeleted",
    ipv."InterfacePanelValidationName" AS "ValidationName",
    uuid_generate_v1() AS "ID"
   FROM (("InterfacePanelValidationOrganisationTypeUserType" ipvotut
     LEFT JOIN "InterfacePanelValidation" ipv ON (((ipvotut."InterfacePanelID" = ipv."InterfacePanelID") AND (ipvotut."InterfacePanelVersionNumber" = ipv."InterfacePanelVersionNumber"))))
     LEFT JOIN "InterfacePanel" ip ON (((ip."InterfacePanelID" = ipvotut."InterfacePanelID") AND (ip."InterfacePanelVersionNumber" = ipvotut."InterfacePanelVersionNumber"))))
UNION ALL
 SELECT ipvot."InterfacePanelID",
    ipvot."InterfacePanelVersionNumber",
    ip."Name",
    ipvot."OrganisationTypeID",
    NULL::uuid AS "UserTypeID",
    COALESCE(ipvot."OverrideValidationMessage", ipv."OverrideValidationMessage") AS "OverrideValidationMessage",
    COALESCE(ipvot."OverrideValidationMessageHTML", ipv."OverrideValidationMessageHTML") AS "OverrideValidationMessageHTML",
    COALESCE(ipvot."OverrideValidationIsHTML", ipv."OverrideValidationIsHTML") AS "OverrideValidationIsHTML",
    COALESCE(ipvot."ValidationType", ipv."ValidationType") AS "ValidationType",
    COALESCE(ipvot."ValidationSubType", ipv."ValidationSubType") AS "ValidationSubType",
    COALESCE(ipvot."ValidationCategory", ipv."ValidationCategory") AS "ValidationCategory",
    COALESCE(ipvot."ValidationSubCategory", ipv."ValidationSubCategory") AS "ValidationSubCategory",
    COALESCE(ipvot."SourceErrorCodes", ipv."SourceErrorCodes") AS "SourceErrorCodes",
    ipvot."IsActive",
    ipvot."IsDeleted",
    ipv."InterfacePanelValidationName" AS "ValidationName",
    uuid_generate_v1() AS "ID"
   FROM (("InterfacePanelValidationOrganisationType" ipvot
     LEFT JOIN "InterfacePanelValidation" ipv ON (((ipvot."InterfacePanelID" = ipv."InterfacePanelID") AND (ipvot."InterfacePanelVersionNumber" = ipv."InterfacePanelVersionNumber"))))
     LEFT JOIN "InterfacePanel" ip ON (((ip."InterfacePanelID" = ipvot."InterfacePanelID") AND (ip."InterfacePanelVersionNumber" = ipvot."InterfacePanelVersionNumber"))))
UNION ALL
 SELECT ipv."InterfacePanelID",
    ipv."InterfacePanelVersionNumber",
    ip."Name",
    NULL::integer AS "OrganisationTypeID",
    NULL::uuid AS "UserTypeID",
    COALESCE(ipv."OverrideValidationMessage", ipv."OverrideValidationMessage") AS "OverrideValidationMessage",
    COALESCE(ipv."OverrideValidationMessageHTML", ipv."OverrideValidationMessageHTML") AS "OverrideValidationMessageHTML",
    COALESCE(ipv."OverrideValidationIsHTML", ipv."OverrideValidationIsHTML") AS "OverrideValidationIsHTML",
    COALESCE(ipv."ValidationType", ipv."ValidationType") AS "ValidationType",
    COALESCE(ipv."ValidationSubType", ipv."ValidationSubType") AS "ValidationSubType",
    COALESCE(ipv."ValidationCategory", ipv."ValidationCategory") AS "ValidationCategory",
    COALESCE(ipv."ValidationSubCategory", ipv."ValidationSubCategory") AS "ValidationSubCategory",
    COALESCE(ipv."SourceErrorCodes", ipv."SourceErrorCodes") AS "SourceErrorCodes",
    ipv."IsActive",
    ipv."IsDeleted",
    ipv."InterfacePanelValidationName" AS "ValidationName",
    uuid_generate_v1() AS "ID"
   FROM ("InterfacePanelValidation" ipv
     LEFT JOIN "InterfacePanel" ip ON (((ip."InterfacePanelID" = ipv."InterfacePanelID") AND (ip."InterfacePanelVersionNumber" = ipv."InterfacePanelVersionNumber"))));


ALTER TABLE "vInterfacePanelValidationForUI" OWNER TO postgres;

--
-- TOC entry 749 (class 1259 OID 44087)
-- Name: vInvoiceWithCurrentTransactionOrderStatus; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vInvoiceWithCurrentTransactionOrderStatus" AS
 SELECT inv."InvoiceID",
    inv."VatNumber",
    inv."StartDate",
    inv."EndDate",
    inv."Total",
    inv."LastReminder",
    inv."Balance",
    inv."ParentID",
    inv."DueDate",
    inv."CountryCode",
    inv."NumberOfPaymentAttempts",
    inv."CarriedBalance",
    inv."InvoiceTypeID",
    inv."InvoiceNumber",
    inv."InvoiceName",
    inv."CreatedOn",
    inv."CurrencyCode",
    inv."CurrencyRateDate",
    inv."CurrencyRate",
    inv."CurrencyRateToGBP",
    inv."CurrencyRateToUSD",
    inv."InvoiceSubTotalInclTaxAndDeduct",
    inv."InvoiceSubTotalExclTaxAndDeduct",
    inv."InvoiceSubTotalDiscountsInclTaxAndDeduct",
    inv."InvoiceSubTotalDiscountsExclTaxAndDeduct",
    inv."OrganisationID",
    inv."ShoppingCartID",
    inv."OrganisationAccountingPeriodID",
    inv."InvoiceReference",
    inv."IsActive",
    inv."IsDeleted",
    inv."IsClosed",
    inv."IsFrozenPendingPayment",
    st."Name" AS "InvoiceStatus",
    tst."Name" AS "TransactionOrderStatus",
    st."StatusTypeValueID" AS "InvoiceStatusTypeValueID",
    tst."StatusTypeValueID" AS "TransactionOrderStatusTypeValueID",
    tt."TransactionOrderID",
    tt."OrderSubTotalInclTaxAndDeduct",
    tt."OrderSubTotalExclTaxAndDeduct",
    tt."OrderSubTotalDiscountsInclTaxAndDeduct",
    tt."OrderSubTotalDiscountsExclTaxAndDeduct",
    tt."PaymentMethodAdditionalFeesInclTaxAndDeduct",
    tt."PaymentMethodAdditionalFeesExclTaxAndDeduct",
    tt."OrderTaxTotal",
    tt."OrderDiscountTotal",
    tt."OrderTotal",
    tt."RefundedAmount",
    tt."PaymentDate",
    tt."AuthorizationTransactionID",
    tt."AuthorizationTransactionCode",
    tt."AuthorizationTransactionResult",
    tt."CaptureTransactionID",
    tt."CaptureTransactionResult",
    tt."SubscriptionTransactionID",
    tt."TransactionTypeID",
    tt."PaymentMethodTypeID",
    tt."TransactionGatewayTypeID",
    tt."TransactionOrderReference",
    tt."GlobalPaymentMethodID",
    tt."OrderDeductionTotal",
    tt."TaxTotalPercentage",
    tt."TaxTotalValue",
    tt."DeductionTotalPercentage",
    tt."DeductionTotalValue",
    tt."DiscountTotalPercentage",
    tt."DiscountTotalValue",
    gap."IsCurrentPeriod" AS "AccountPeriodIsCurrent",
    gap."IsClosed" AS "AccountingPeriodIsClosed",
    gap."PeriodNumber" AS "AccountingPeriodNumber",
    gap."StartDay" AS "AccountingPeriodStartDay",
    gap."EndDay" AS "AccountingPeriodEndDay",
    gap."Month" AS "AccountingPeriodMonth",
    gap."Year" AS "AccountingPeriodYear"
   FROM ((((((("Invoice" inv
     LEFT JOIN "OrganisationAccountingPeriod" oap ON ((oap."OrganisationAccountingPeriodID" = inv."OrganisationAccountingPeriodID")))
     LEFT JOIN "GlobalAccountingPeriod" gap ON ((gap."GlobalAccountingPeriodID" = oap."GlobalAccountingPeriodID")))
     LEFT JOIN "TransactionOrder" tt ON ((tt."InvoiceID" = inv."InvoiceID")))
     LEFT JOIN "InvoiceProcessLog" ipl ON (((ipl."InvoiceID" = inv."InvoiceID") AND (ipl."CreatedOn" = ( SELECT max(ipt."CreatedOn") AS max
           FROM "InvoiceProcessLog" ipt
          WHERE (ipt."InvoiceID" = inv."InvoiceID")
         LIMIT 1)))))
     LEFT JOIN "TransactionOrderProcessLog" topl ON (((topl."TransactionOrderID" = tt."TransactionOrderID") AND (topl."CreatedOn" = ( SELECT max(topt."CreatedOn") AS max
           FROM "TransactionOrderProcessLog" topt
          WHERE (topt."TransactionOrderID" = tt."TransactionOrderID")
         LIMIT 1)))))
     LEFT JOIN "vStatusType" st ON ((((st."StatusTypeID" = ipl."StatusTypeID") AND (st."StatusTypeVersionNumber" = ipl."StatusTypeVersionNumber")) AND (st."StatusTypeValueID" = ipl."StatusTypeValueID"))))
     LEFT JOIN "vStatusType" tst ON ((((tst."StatusTypeID" = topl."StatusTypeID") AND (tst."StatusTypeVersionNumber" = topl."StatusTypeVersionNumber")) AND (tst."StatusTypeValueID" = topl."StatusTypeValueID"))));


ALTER TABLE "vInvoiceWithCurrentTransactionOrderStatus" OWNER TO postgres;

--
-- TOC entry 750 (class 1259 OID 44092)
-- Name: vNotificationConstruct; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vNotificationConstruct" AS
 SELECT nc."NotificationConstructID",
    nc."NotificationConstructVersionNumber",
    nc."DefaultNotificationDeliveryMethodID",
    nc."DefaultNotificationExportFormatID",
    nc."Name",
    nc."Description",
    nc."NotificationTitle",
    nc."NotificationSubject",
    nc."NotificationDetails",
    nc."NotificationReference",
    nc."NotificationAdditionalDetails",
    nc."CanBeIncludedInBatchNotification",
    nc."IsActive",
    nc."IsDeleted",
    nc."NotificationConstructTypeID",
    nc."NotificationConstructCategoryID",
    ct1."Name" AS "TypeName",
    ct2."Name" AS "CategoryName",
    ct4."Name" AS "ExportFormatName",
    ct5."Name" AS "DeliveryMethodName",
    nc."ExternalRelatedNotificationConstructID",
    nc."ExternalRelatedNotificationConstructVersionNumber"
   FROM (((("NotificationConstruct" nc
     LEFT JOIN "ClassificationType" ct1 ON ((ct1."ClassificationTypeID" = nc."NotificationConstructTypeID")))
     LEFT JOIN "ClassificationType" ct2 ON ((ct2."ClassificationTypeID" = nc."NotificationConstructCategoryID")))
     LEFT JOIN "ClassificationType" ct4 ON ((ct4."ClassificationTypeID" = nc."DefaultNotificationExportFormatID")))
     LEFT JOIN "ClassificationType" ct5 ON ((ct5."ClassificationTypeID" = nc."DefaultNotificationDeliveryMethodID")));


ALTER TABLE "vNotificationConstruct" OWNER TO postgres;

--
-- TOC entry 751 (class 1259 OID 44097)
-- Name: vNotificationConstructGroup; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vNotificationConstructGroup" AS
 SELECT ncg."NotificationConstructGroupNotificationConstructID",
    ncg."NotificationConstructGroupNotificationConstructVersion",
    ng."NotificationConstructGroupID",
    ng."NotificationConstructGroupVersion",
    ng."Name" AS "GroupName",
    ng."Description" AS "GroupDescription",
    ng."IsActive" AS "GroupIsActive",
    ng."IsDeleted" AS "GroupIsDeleted",
    ncg."UserTypeID",
    ncg."NotificationConstructID",
    ncg."NotificationConstructVersionNumber",
    ncg."WorkflowID",
    ncg."WorkflowVersionNumber",
    ncg."IsActive",
    ncg."IsDeleted",
    ncg."ConditionString",
    ncg."OrganisationTypeID",
    nc."Name" AS "NotificationConstructName",
    nc."Description" AS "NotificationConstructDescription",
    nc."IsActive" AS "NotificationConstructIsActive",
    nc."IsDeleted" AS "NotificationConstructIsDeleted",
    nc."NotificationSubject" AS "NotificationConstructSubject",
    nc."NotificationTitle" AS "NotificationConstructTitle"
   FROM (("NotificationConstructGroupNotificationConstruct" ncg
     LEFT JOIN "NotificationConstructGroup" ng ON (((ng."NotificationConstructGroupID" = ncg."NotificationConstructGroupID") AND (ng."NotificationConstructGroupVersion" = ncg."NotificationConstructGroupVersion"))))
     LEFT JOIN "NotificationConstruct" nc ON (((nc."NotificationConstructID" = ncg."NotificationConstructID") AND (nc."NotificationConstructVersionNumber" = ncg."NotificationConstructVersionNumber"))));


ALTER TABLE "vNotificationConstructGroup" OWNER TO postgres;

--
-- TOC entry 752 (class 1259 OID 44102)
-- Name: vNotificationConstructGroupNotificationConstruct; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vNotificationConstructGroupNotificationConstruct" AS
 SELECT ncgnc."NotificationConstructID",
    ncgnc."NotificationConstructVersionNumber",
    ncgnc."NotificationConstructGroupID",
    ncgnc."NotificationConstructGroupVersion",
    ncg."Name",
    ncgnc."OrganisationTypeID",
    ot."Name" AS "OrganisationType",
    ncgnc."UserTypeID",
    ut."Name" AS "UserType",
    wf."WorkflowID",
    wf."WorkflowVersionNumber",
    wf."Name" AS "WorkflowName",
    ncgnc."ConditionString"
   FROM (((("NotificationConstructGroupNotificationConstruct" ncgnc
     LEFT JOIN "NotificationConstructGroup" ncg ON (((ncgnc."NotificationConstructGroupID" = ncg."NotificationConstructGroupID") AND (ncgnc."NotificationConstructGroupVersion" = ncg."NotificationConstructGroupVersion"))))
     LEFT JOIN "Workflow" wf ON (((wf."WorkflowID" = ncgnc."WorkflowID") AND (wf."WorkflowVersionNumber" = ncgnc."WorkflowVersionNumber"))))
     LEFT JOIN "UserType" ut ON ((ncgnc."UserTypeID" = ut."UserTypeID")))
     LEFT JOIN "OrganisationType" ot ON ((ncgnc."OrganisationTypeID" = ot."OrganisationTypeID")))
  WHERE ((ncgnc."IsActive" = true) AND (ncgnc."IsDeleted" = false));


ALTER TABLE "vNotificationConstructGroupNotificationConstruct" OWNER TO postgres;

--
-- TOC entry 753 (class 1259 OID 44107)
-- Name: vUserAccountOrganisationUserTypeOrganisationType; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vUserAccountOrganisationUserTypeOrganisationType" AS
 SELECT uao."UserAccountOrganisationID",
    uao."UserID",
    uao."UserTypeID",
    ut."Name" AS "UserType",
    uao."OrganisationID",
    ot."OrganisationTypeID",
    ot."Name" AS "OrganisationType"
   FROM (((("UserAccountOrganisation" uao
     LEFT JOIN "Organisation" org ON ((uao."OrganisationID" = org."OrganisationID")))
     LEFT JOIN "Organisation" parentorg ON ((org."ParentOrganisationID" = parentorg."OrganisationID")))
     LEFT JOIN "OrganisationType" ot ON ((parentorg."OrganisationTypeID" = ot."OrganisationTypeID")))
     LEFT JOIN "UserType" ut ON ((uao."UserTypeID" = ut."UserTypeID")))
  WHERE ((uao."IsActive" = true) AND (uao."IsDeleted" = false));


ALTER TABLE "vUserAccountOrganisationUserTypeOrganisationType" OWNER TO postgres;

--
-- TOC entry 754 (class 1259 OID 44112)
-- Name: vNotificationRecipientStatus; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vNotificationRecipientStatus" AS
 SELECT uao."UserAccountOrganisationID",
    nr."NotificationID",
    n."NotificationStatusID",
    n."NotificationConstructID",
    n."NotificationConstructVersionNumber",
    nrl."NotificationDeliveryMethodID",
    nrl."NotificationExportFormatID",
    n."DateSent",
    n."IsSent",
    n."IsActive",
    n."IsDeleted",
    nr."IsAccepted",
    nr."AcceptedDate",
    nrl."IsRead",
    nrl."CreatedOn",
    nrl."ErrorOccured",
    nrl."SentOn",
    (((n."NotificationData" -> 'NotificationDictionary'::text) -> 'TermsConditionsDataDTO'::text) -> 'VerificationCode'::text) AS "NotificationVerificationCode",
    nrl."NotificationRecipientID",
    nrl."NotificationRecipientLogID",
    nr."OrganisationID",
    nr."ParentID" AS "RecipientParent",
    nr."ToParentID" AS "RecipientToParent",
    n."ParentID",
    n."FromParentID"
   FROM (((("Notification" n
     JOIN "NotificationRecipient" nr ON ((nr."NotificationID" = n."NotificationID")))
     JOIN "UserAccountOrganisation" uao ON ((uao."UserAccountOrganisationID" = nr."UserAccountOrganisationID")))
     JOIN "vUserAccountOrganisationUserTypeOrganisationType" uatt ON ((uatt."UserAccountOrganisationID" = uao."UserAccountOrganisationID")))
     JOIN "NotificationRecipientLog" nrl ON (((nrl."NotificationRecipientID" = nr."NotificationRecipientID") AND (nrl."CreatedOn" = ( SELECT nrl2."CreatedOn"
           FROM "NotificationRecipientLog" nrl2
          WHERE (nrl2."NotificationRecipientID" = nr."NotificationRecipientID")
          ORDER BY nrl2."CreatedOn" DESC
         LIMIT 1)))));


ALTER TABLE "vNotificationRecipientStatus" OWNER TO postgres;

--
-- TOC entry 755 (class 1259 OID 44117)
-- Name: vNotificationWithUAOVerificationCode; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vNotificationWithUAOVerificationCode" AS
 SELECT nr."UserAccountOrganisationID",
    nr."NotificationID",
    n."NotificationConstructID",
    n."NotificationConstructVersionNumber",
    ncg."GroupName",
    ncg."GroupDescription",
    ncg."NotificationConstructName",
    ncg."NotificationConstructSubject",
    ncg."NotificationConstructTitle",
    n."DateSent",
    n."IsSent",
    n."IsActive",
    n."IsDeleted",
    nr."IsAccepted",
    nr."AcceptedDate",
    ncg."UserTypeID",
    ncg."OrganisationTypeID",
    nrl."IsRead",
    nrl."CreatedOn",
    nrl."ErrorOccured",
    nrl."SentOn",
    (((n."NotificationData" -> 'NotificationDictionary'::text) -> 'TermsConditionsDataDTO'::text) -> 'VerificationCode'::text) AS "NotificationVerificationCode"
   FROM ((("Notification" n
     JOIN "NotificationRecipient" nr ON ((nr."NotificationID" = n."NotificationID")))
     JOIN "NotificationRecipientLog" nrl ON (((nrl."NotificationRecipientID" = nr."NotificationRecipientID") AND (nrl."CreatedOn" = ( SELECT nrl2."CreatedOn"
           FROM "NotificationRecipientLog" nrl2
          WHERE (nrl2."NotificationRecipientID" = nr."NotificationRecipientID")
          ORDER BY nrl2."CreatedOn" DESC
         LIMIT 1)))))
     JOIN "vNotificationConstructGroup" ncg ON (((ncg."NotificationConstructID" = n."NotificationConstructID") AND (ncg."NotificationConstructVersionNumber" = n."NotificationConstructVersionNumber"))));


ALTER TABLE "vNotificationWithUAOVerificationCode" OWNER TO postgres;

--
-- TOC entry 756 (class 1259 OID 44122)
-- Name: vOrganisation; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vOrganisation" AS
 SELECT o."OrganisationID",
    otype."Name" AS "TypeName",
    otype."OrganisationTypeID",
    od."Name",
    od."Description",
    o."IsBranch",
    o."IsHeadOffice",
    o."IsActive",
    o."IsDeleted"
   FROM (("OrganisationDetail" od
     LEFT JOIN "Organisation" o ON ((o."OrganisationID" = od."OrganisationID")))
     LEFT JOIN "OrganisationType" otype ON ((o."OrganisationTypeID" = otype."OrganisationTypeID")))
  WHERE ((o."IsBranch" = false) AND (o."IsHeadOffice" = false));


ALTER TABLE "vOrganisation" OWNER TO postgres;

--
-- TOC entry 757 (class 1259 OID 44127)
-- Name: vOrganisationCheckoutDiscount; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vOrganisationCheckoutDiscount" AS
 SELECT d."ParentID",
    o."OrganisationID",
    d."CreatedOn",
    d."DiscountAmount",
    d."DiscountApplyOnID",
    d."Description",
    d."DiscountID",
    d."DiscountPercentage",
    d."DiscountPeriod",
    d."DiscountQuantity",
    d."DiscountStatusID",
    d."DiscountTypeID",
    d."DiscountVersionNumber",
    d."DisocuntPeriodUnitID",
    d."InvoiceName",
    d."IsPercentage",
    d."IsRecurring",
    d."MaxRedemptions",
    d."Name",
    d."ValidTill",
    ct."Name" AS "DiscountStatus",
    ct1."Name" AS "DiscountType",
    ct2."Name" AS "DiscountApplyIn",
    ct3."Name" AS "PeriodUnit",
    d."IsSingleProductDiscount",
    d."IsCheckoutDiscount",
    d."IsSingleProductQuantityDiscount",
    d."SingleProductQuantityDiscountDivisor",
    d."IsSingleProductQuantityDiscountPercentageBased",
    d."IsSingleProductQuantityDiscountAdditionalQuantityBased",
    d."SingleProductQuantityDiscountAdditionalQuantity",
    d."IsMultipleProductCombinationDiscount",
    d."IsMultipleProductCombinationDiscountPercentageBased",
    d."IsMultipleProductCombinationDiscountCheapestFreeBased"
   FROM (((((("Organisation" o
     LEFT JOIN "OrganisationDiscount" pd ON ((((pd."IsActive" = true) AND (pd."IsDeleted" = false)) AND (pd."OrganisationID" = o."OrganisationID"))))
     LEFT JOIN "Discount" d ON (((((d."DiscountID" = pd."DiscountID") AND (d."DiscountVersionNumber" = pd."DiscountVersionNumber")) AND (d."IsActive" = true)) AND (d."IsDeleted" = false))))
     LEFT JOIN "ClassificationType" ct ON (((ct."ClassificationTypeID" = d."DiscountStatusID") AND (ct."ClassificationTypeCategoryID" = 8010))))
     LEFT JOIN "ClassificationType" ct1 ON (((ct1."ClassificationTypeID" = d."DiscountTypeID") AND (ct1."ClassificationTypeCategoryID" = 8008))))
     LEFT JOIN "ClassificationType" ct2 ON (((ct2."ClassificationTypeID" = d."DiscountApplyOnID") AND (ct2."ClassificationTypeCategoryID" = 8011))))
     LEFT JOIN "ClassificationType" ct3 ON (((ct3."ClassificationTypeID" = d."DisocuntPeriodUnitID") AND (ct3."ClassificationTypeCategoryID" = 8006))))
  WHERE (d."IsCheckoutDiscount" = true);


ALTER TABLE "vOrganisationCheckoutDiscount" OWNER TO postgres;

--
-- TOC entry 758 (class 1259 OID 44132)
-- Name: vOrganisationDetail; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vOrganisationDetail" AS
 SELECT org."OrganisationID",
    org."OrganisationTypeID",
    org."OrganisationSubTypeID",
    org."OrganisationCategoryID",
    org."IsBranch",
    org."IsHeadOffice",
    org."IsActive",
    org."IsDeleted",
    org."IsUserOrganisation",
    org."CreatedOn",
    org."CreatedBy",
    org."ModifiedOn",
    org."ModifiedBy",
    org."OrganisationSubCategoryID",
    org."DefaultOrganisationID",
    org."DefaultOrganisationVersionNumber",
    org."ParentID",
    org."ParentOrganisationID",
    org."IsPaymentProvider",
    ct."ContactID",
    ct."ContactName",
    ct."MasterContactID",
    ct."OwnerID",
    ct."CustomerTypeID",
    ct."PreferredContactMethodID",
    ct."IsBackOfficeCustomer",
    ct."Salutation",
    ct."JobTitle",
    ct."FirstName",
    ct."Department",
    ct."NickName",
    ct."MiddleName",
    ct."LastName",
    ct."BirthDate",
    ct."Description",
    ct."GenderTypeID",
    ct."HasChildren",
    ct."EducationTypeID",
    ct."WebSiteURL",
    ct."EmailAddress1",
    ct."EmailAddress2",
    ct."EmailAddress3",
    ct."AssistantName",
    ct."AssistantPhone",
    ct."ManagerName",
    ct."ManagerPhone",
    ct."CountryTypeID",
    ct."DoNotFax",
    ct."DoNotEmail",
    ct."DoNotTelephone",
    ct."IsPrivate",
    ct."Telephone1",
    ct."Telephone2",
    ct."Telephone3",
    ct."Fax",
    ct."MobileNumber1",
    ct."MobileNumber2",
    ct."MobileNumber3",
    ct."OrganisationUnitID",
    ct."ParentContactID",
    ct."IsPrimaryContact",
    ct."ContactTypeID",
    ct."ContactSubTypeID",
    ct."ContactCategoryID",
    ct."FirmName",
    add."AddressID",
    add."Name",
    add."PrimaryContactName",
    add."Line1",
    add."Line2",
    add."Line3",
    add."City",
    add."StateOrProvince",
    add."County",
    add."Country",
    add."PostOfficeBox",
    add."PostalCode",
    add."UTCOffSet",
    add."Latitude",
    add."Longitude",
    add."AddressTypeID",
    add."AddressNumber",
    add."IsPrimaryAddress",
    add."AddressCategoryID",
    add."AddressSubTypeID",
    add."BuildingName",
    add."Order",
    add."CountryCode",
    add."AdditionalAddressInformation",
    add."Town",
    lod."IsVATRegistered",
    lod."VATNumber",
    lod."IsCompanyHouseRegistered",
    lod."RegisteredCompanyNumber",
    lod."PartnersCount",
    lod."RegisteredPractitionersCount",
    lod."StaffCount",
    lod."MonthlyCompletionsCount"
   FROM (((("Organisation" org
     JOIN "OrganisationDetail" od ON ((od."OrganisationID" = org."OrganisationID")))
     JOIN "Contact" ct ON ((ct."ParentID" = org."OrganisationID")))
     JOIN "Address" add ON ((add."ParentID" = ct."ContactID")))
     LEFT JOIN legal."LegalOrganisationDetails" lod ON ((lod."OrganisationID" = org."OrganisationID")));


ALTER TABLE "vOrganisationDetail" OWNER TO postgres;

--
-- TOC entry 759 (class 1259 OID 44137)
-- Name: vOrganisationFinancialStatus; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vOrganisationFinancialStatus" AS
 SELECT ofd."OrganisationFinancialDetailID",
    ofd."FinancialStatusTypeID",
    ofd."FinancialStatusTypeVersionNumber",
    ofd."FinancialStatusTypeValueID",
    ofd."HasACreditLimit",
    ofd."CreditLimit",
    ofd."NumberOfLatePayments",
    ofd."HasLatePayments",
    org."OrganisationID",
    org."Name",
    st."Name" AS "FinancialStatus"
   FROM (("OrganisationFinancialDetail" ofd
     LEFT JOIN "vOrganisation" org ON ((org."OrganisationID" = ofd."OrganisationID")))
     LEFT JOIN "vStatusType" st ON ((((st."StatusTypeID" = ofd."FinancialStatusTypeID") AND (st."StatusTypeVersionNumber" = ofd."FinancialStatusTypeVersionNumber")) AND (st."StatusTypeValueID" = ofd."FinancialStatusTypeValueID"))));


ALTER TABLE "vOrganisationFinancialStatus" OWNER TO postgres;

--
-- TOC entry 760 (class 1259 OID 44142)
-- Name: vOrganisationPaymentMethodStatus; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vOrganisationPaymentMethodStatus" AS
 SELECT bb."OrganisationID",
    bb."GlobalPaymentMethodID",
    bb."OrganisationBankAccountId",
    bb."IsActive",
    bb."IsDeleted",
    bb."IsDirectDebit",
    bb."IsBACS",
    bb."OrganisationDirectDebitMandateID",
    bb."IsPrimary",
    bb."StatusTypeID",
    bb."StatusTypeVersionNumber",
    bb."StatusTypeValueID",
    st."Name" AS "PaymentMethodStatus",
    org."Name" AS "OrganisationName"
   FROM (("OrganisationPaymentMethod" bb
     LEFT JOIN "vOrganisation" org ON ((org."OrganisationID" = bb."OrganisationID")))
     LEFT JOIN "vStatusType" st ON ((((st."StatusTypeID" = bb."StatusTypeID") AND (st."StatusTypeVersionNumber" = bb."StatusTypeVersionNumber")) AND (st."StatusTypeValueID" = bb."StatusTypeValueID"))));


ALTER TABLE "vOrganisationPaymentMethodStatus" OWNER TO postgres;

--
-- TOC entry 761 (class 1259 OID 44147)
-- Name: vOrganisationStatus; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vOrganisationStatus" AS
 SELECT os."OrganisationID",
    org."IsBranch",
    org."IsActive",
    org."IsDeleted",
    org."IsHeadOffice",
    org."IsUserOrganisation",
    st."Name" AS "StatusTypeName",
    st."StatusTypeID",
    st."StatusTypeVersionNumber",
    st."StatusTypeTemplateID",
    st."StatusTypeTemplateVersionNumber",
    stv."StatusTypeValueID",
    stv."Name" AS "StatusValueName",
    os."StatusChangedOn",
    os."StatusChangedBy",
    stt."StatusOrder",
    stt."IsStart",
    stt."IsEnd",
    stt1."StatusTypeValueID" AS "NextStatusTypeValueID",
    stt1."Name" AS "NextStatusTypeName",
    stt1."StatusOrder" AS "NextStatusOrder",
    stt1."IsStart" AS "NextStatusStart",
    stt1."IsEnd" AS "NextStatusEnd"
   FROM ((((("OrganisationStatus" os
     LEFT JOIN "Organisation" org ON ((org."OrganisationID" = os."OrganisationID")))
     LEFT JOIN "StatusType" st ON (((st."StatusTypeID" = os."StatusTypeID") AND (st."StatusTypeVersionNumber" = os."StatusTypeVersionNumber"))))
     LEFT JOIN "StatusTypeValue" stv ON ((stv."StatusTypeValueID" = os."StatusTypeValueID")))
     LEFT JOIN "vStatusType" stt ON ((((stt."StatusTypeID" = os."StatusTypeID") AND (stt."StatusTypeVersionNumber" = os."StatusTypeVersionNumber")) AND (stt."StatusTypeValueID" = os."StatusTypeValueID"))))
     LEFT JOIN "vStatusType" stt1 ON ((((stt1."StatusTypeID" = os."StatusTypeID") AND (stt1."StatusTypeVersionNumber" = os."StatusTypeVersionNumber")) AND (stt1."StatusOrder" = (stt."StatusOrder" + 1)))));


ALTER TABLE "vOrganisationStatus" OWNER TO postgres;

--
-- TOC entry 762 (class 1259 OID 44152)
-- Name: vOrganisationUserType; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vOrganisationUserType" AS
 SELECT org."OrganisationID",
    branch."OrganisationID" AS organisationbranchid,
    dout."DefaultOrganisationID",
    ut."Name",
    ut."UserTypeID"
   FROM ((("UserType" ut
     LEFT JOIN "DefaultOrganisationUserTarget" dout ON (((ut."UserTypeID" = dout."UserTypeID") AND (dout."IsDefault" = true))))
     LEFT JOIN "Organisation" org ON (((dout."DefaultOrganisationID" = org."DefaultOrganisationID") AND (org."IsBranch" = false))))
     LEFT JOIN "Organisation" branch ON ((((dout."DefaultOrganisationID" = branch."DefaultOrganisationID") AND (branch."IsBranch" = true)) AND (branch."ParentOrganisationID" = org."OrganisationID"))));


ALTER TABLE "vOrganisationUserType" OWNER TO postgres;

--
-- TOC entry 763 (class 1259 OID 44157)
-- Name: vOrganisationWithStatusAndAdmin; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vOrganisationWithStatusAndAdmin" AS
 SELECT org."OrganisationID",
    orgd."Name",
    org."CreatedOn",
        CASE
            WHEN ((vst."Name")::text = 'Verified'::text) THEN true
            ELSE false
        END AS "OrganisationVerified",
    org."CompanyPinCreated" AS "OrganisationPinCreated",
    org."CompanyPinCreated" AS "OrganisationPinCode",
    uaoc."Salutation" AS "OrganisationAdminSalutation",
    uaoc."FirstName" AS "OrganisationAdminFirstName",
    uaoc."LastName" AS "OrganisationAdminLastName",
    uaoc."Telephone1" AS "OrganisationAdminTelephone",
    ua."Email" AS "OrganisationAdminEmail",
    conreg."RegulatorName" AS "Regulator",
    conreg."RegulatorOtherName" AS "RegulatorOther",
    addr."Line1",
    addr."Line2",
    addr."Town",
    addr."County",
    addr."PostalCode",
    addr."AdditionalAddressInformation",
    orgs."StatusTypeID",
    orgs."StatusTypeValueID",
    orgs."StatusTypeVersionNumber",
    ua."ID" AS "OrganisationAdminUserID"
   FROM (((((((((("Organisation" org
     LEFT JOIN "OrganisationDetail" orgd ON ((orgd."OrganisationID" = org."OrganisationID")))
     LEFT JOIN "OrganisationType" orgt ON ((orgt."OrganisationTypeID" = org."OrganisationTypeID")))
     LEFT JOIN "OrganisationStatus" orgs ON ((orgs."OrganisationID" = org."OrganisationID")))
     LEFT JOIN "vStatusType" vst ON ((((vst."StatusTypeID" = orgs."StatusTypeID") AND (vst."StatusTypeValueID" = orgs."StatusTypeValueID")) AND (vst."StatusTypeVersionNumber" = orgs."StatusTypeVersionNumber"))))
     LEFT JOIN "UserAccountOrganisation" uao ON (((uao."OrganisationID" = org."OrganisationID") AND (uao."UserTypeID" = ( SELECT ut."UserTypeID"
           FROM "UserType" ut
          WHERE ((ut."Name")::text = 'Organisation Administrator'::text)
         LIMIT 1)))))
     LEFT JOIN "Contact" orgc ON (((orgc."ParentID" = org."OrganisationID") AND (orgc."IsPrimaryContact" = true))))
     LEFT JOIN "Contact" uaoc ON (((uaoc."ParentID" = uao."UserAccountOrganisationID") AND (uaoc."IsPrimaryContact" = true))))
     LEFT JOIN "UserAccounts" ua ON ((ua."ID" = uao."UserID")))
     LEFT JOIN "Address" addr ON (((addr."ParentID" = orgc."ContactID") AND (addr."IsPrimaryAddress" = true))))
     LEFT JOIN "ContactRegulator" conreg ON ((conreg."ContactID" = orgc."ContactID")));


ALTER TABLE "vOrganisationWithStatusAndAdmin" OWNER TO postgres;

--
-- TOC entry 764 (class 1259 OID 44162)
-- Name: vOrgansiationClaim; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vOrgansiationClaim" AS
 SELECT orc."OrganisationID",
    orc."OrganisationRoleID",
    orgr."RoleName",
    orgr."RoleDescription",
        CASE
            WHEN (re."ResourceID" IS NULL) THEN 'State'::text
            ELSE 'Resource'::text
        END AS "ClaimType",
    COALESCE(re."ResourceID", s."StateID") AS "ClaimID",
    COALESCE(re."ResourceName", s."StateName") AS "ClaimName",
    COALESCE(re."ResourceDescription", s."StateDescription") AS "ClaimDescription",
        CASE
            WHEN (op."OperationID" IS NULL) THEN 'StateItem'::text
            ELSE 'Operation'::text
        END AS "ClaimSubType",
    COALESCE(op."OperationID", si."StateItemID") AS "ClaimSubID",
        CASE
            WHEN (op."OperationName" IS NULL) THEN (
            CASE
                WHEN (psi."StateItemName" IS NULL) THEN (si."StateItemName")::text
                ELSE (((psi."StateItemName")::text || '_'::text) || (si."StateItemName")::text)
            END)::character varying
            ELSE op."OperationName"
        END AS "ClaimSubName",
        CASE
            WHEN (op."OperationDescription" IS NULL) THEN (
            CASE
                WHEN (psi."StateItemDescription" IS NULL) THEN (si."StateItemDescription")::text
                ELSE (((psi."StateItemDescription")::text || '_'::text) || (si."StateItemDescription")::text)
            END)::character varying
            ELSE op."OperationDescription"
        END AS "ClaimSubDescription",
    orgr."ParentID",
        CASE
            WHEN (orgr."ParentID" IS NOT NULL) THEN
            CASE
                WHEN (wr."WorkflowRoleID" IS NOT NULL) THEN 'Workflow'::text
                WHEN (mr."ModuleID" IS NOT NULL) THEN (('Module'::text || ' '::text) || (mr."Name")::text)
                WHEN (ar."ArtefactID" IS NOT NULL) THEN (('Artefact'::text || ' '::text) || (ar."Name")::text)
                WHEN (dor."DefaultOrganisationID" IS NOT NULL) THEN (('Organisation Template'::text || ' '::text) || (dor."Name")::text)
                WHEN (str."StatusTypeID" IS NOT NULL) THEN (('Status Type'::text || ' '::text) || (str."Name")::text)
                WHEN (ro."RoleID" IS NOT NULL) THEN 'Global Role'::text
                WHEN (ncr."NotificationConstructID" IS NOT NULL) THEN (('Notification Construct'::text || ' '::text) || (ncr."Name")::text)
                ELSE NULL::text
            END
            ELSE NULL::text
        END AS "RoleSource",
    COALESCE(ctr."Name", cts."Name") AS "ClaimTypeName"
   FROM ((((((((((((((("OrganisationRoleClaim" orc
     LEFT JOIN "OrganisationRole" orgr ON ((orc."OrganisationRoleID" = orgr."OrganisationRoleID")))
     LEFT JOIN "Resource" re ON ((re."ResourceID" = orc."ResourceID")))
     LEFT JOIN "Operation" op ON ((op."OperationID" = orc."OperationID")))
     LEFT JOIN "State" s ON ((s."StateID" = orc."StateID")))
     LEFT JOIN "StateItem" si ON ((si."StateItemID" = orc."StateItemID")))
     LEFT JOIN "StateItem" psi ON ((psi."StateItemID" = si."ParentStateItemID")))
     LEFT JOIN "WorkflowRole" wr ON ((wr."WorkflowRoleID" = orgr."ParentID")))
     LEFT JOIN "Module" mr ON ((mr."ModuleID" = ( SELECT "ModuleRole"."ModuleID"
           FROM "ModuleRole"
          WHERE ("ModuleRole"."RoleID" = orgr."ParentID")
         LIMIT 1))))
     LEFT JOIN "Artefact" ar ON ((ar."ArtefactID" = ( SELECT "ArtefactRole"."ArtefactID"
           FROM "ArtefactRole"
          WHERE ("ArtefactRole"."ArtefactRoleID" = orgr."ParentID")
         LIMIT 1))))
     LEFT JOIN "StatusType" str ON (((str."StatusTypeID" = ( SELECT "StatusTypeRole"."StatusTypeID"
           FROM "StatusTypeRole"
          WHERE ("StatusTypeRole"."StatusTypeRoleID" = orgr."ParentID")
          ORDER BY "StatusTypeRole"."StatusTypeVersionNumber" DESC
         LIMIT 1)) AND (str."StatusTypeVersionNumber" = ( SELECT "StatusTypeRole"."StatusTypeVersionNumber"
           FROM "StatusTypeRole"
          WHERE ("StatusTypeRole"."StatusTypeRoleID" = orgr."ParentID")
          ORDER BY "StatusTypeRole"."StatusTypeVersionNumber" DESC
         LIMIT 1)))))
     LEFT JOIN "NotificationConstruct" ncr ON ((ncr."NotificationConstructID" = ( SELECT "NotificationConstructRole"."NotificationConstructID"
           FROM "NotificationConstructRole"
          WHERE ("NotificationConstructRole"."NotificationRoleConstructID" = orgr."ParentID")
         LIMIT 1))))
     LEFT JOIN "DefaultOrganisation" dor ON ((dor."DefaultOrganisationID" = ( SELECT "DefaultOrganisationRole"."DefaultOrganisationID"
           FROM "DefaultOrganisationRole"
          WHERE ("DefaultOrganisationRole"."DefaultOrganisationRoleID" = orgr."ParentID")
         LIMIT 1))))
     LEFT JOIN "Role" ro ON ((ro."RoleID" = orgr."ParentID")))
     LEFT JOIN "ClassificationType" ctr ON ((ctr."ClassificationTypeID" = re."ResourceTypeID")))
     LEFT JOIN "ClassificationType" cts ON ((cts."ClassificationTypeID" = s."StateTypeID")))
  WHERE ((orgr."IsActive" = true) AND (orgr."IsDeleted" = false));


ALTER TABLE "vOrgansiationClaim" OWNER TO postgres;

--
-- TOC entry 765 (class 1259 OID 44167)
-- Name: vPlanSubscriptionStatusWithBillingAndPaymentMethodStatus; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vPlanSubscriptionStatusWithBillingAndPaymentMethodStatus" AS
 SELECT "PlanSubscription"."PlanSubscriptionID",
    "PlanSubscription"."PlanSubscriptionVersionNumber",
    "PlanSubscription"."HasInfinitePeriods",
    "PlanSubscription"."PlanQuantity",
    "PlanSubscription"."CreatedOn",
    "PlanSubscription"."CreatedBy",
    "PlanSubscription"."ActivatedOn",
    "PlanSubscription"."CancelledOn",
    "PlanSubscription"."CancelReasonID",
    "PlanSubscription"."DueInvoicesCount",
    "PlanSubscription"."DueSince",
    "PlanSubscription"."DueAmount",
    "PlanSubscription"."IsActive",
    "PlanSubscription"."IsDeleted",
    "PlanSubscription"."IsFree",
    "PlanSubscription"."OrganisationID",
    "PlanSubscription"."IsRenewal",
    "PlanSubscription"."RenewedOn",
    "PlanSubscription"."PlanSubscriptionReference",
    "Plan"."Name" AS "PlanName",
    "Plan"."InvoiceName",
    "Plan"."Price",
    "Plan"."Period",
    "Plan"."PlanID",
    "Plan"."PlanVersionNumber",
    "Plan"."TrialPeriod",
    "Plan"."PeriodUnitID",
    "Plan"."TrialPeriodUnitID",
    "Plan"."FreeQuantity",
    "Plan"."SetupCost",
    "Plan"."DowngradePenalty",
    "Plan"."CountryCode",
    "Plan"."CurrencyCode",
    "Plan"."CancellationPeriod",
    "Plan"."CancellationPeriodUnitID",
    "Plan"."PlanStatusID",
    "Plan"."IsTransactionBased",
    "Plan"."CoolOffPeriod",
    "Plan"."CoolOffPeriodUnitID",
    "Plan"."RenewalPrice",
    "Plan"."RenewalPercentage",
    "Plan"."RenewalIsPercentageOfOriginalPrice",
    "Plan"."HasForwardCycleFee",
    "Plan"."ForwardCycleFee",
    "Plan"."ForwardCycleFreeIsSameAsPrice",
    "Plan"."RenewalOfferPeriod",
    "Plan"."RenewalOfferPeriodUnitID",
    "Plan"."ForwardCycleFeePeriod",
    "Plan"."ForwardCycleFeePeriodUnitID",
    "Plan"."HasRenewalOffer",
    "Plan"."PriceDailyProRata",
    "Plan"."IsAutoRenew",
    "Plan"."AutoRenewDecisionPeriod",
    "Plan"."AutoRenewDecisionUnitID",
    "Plan"."AutoRenewPeriod",
    "Plan"."AutoRenewPeriodUnitID",
    "Plan"."PlanGroupID",
    "Plan"."PlanTypeID",
    "Plan"."PlanCategoryID",
    "PlanSubscriptionPaymentPlan"."BillingID",
    "PlanSubscriptionPaymentPlan"."GlobalPaymentMethodID",
    "vStatusType"."Name" AS "PlanSubscriptionStatus",
    "vStatusType"."StatusTypeName" AS "PlanSubscriptionStatusTypeName",
    "vStatusType"."StatusOrder" AS "PlanSubscriptionStatusOrder",
    "vStatusType"."StatusTypeValueID" AS "PlanSubscriptionStatusTypeValueID",
    "vStatusType"."StatusTypeID" AS "PlanSubscriptionStatusTypeID",
    "vStatusType"."StatusTypeVersionNumber" AS "PlanSubscriptionStatusTypeVersionNumber",
    "vStatusType"."IsStart" AS "PlanSubscriptionStatusIsStart",
    "vStatusType"."IsEnd" AS "PlanSubscriptionStatusIsEnd",
    "PlanSubscriptionProcessLog"."IsCancelled",
    "PlanSubscriptionProcessLog"."IsRenewed",
    "PlanSubscriptionProcessLog"."CreatedOn" AS "PlanSubscriptionStatusCreatedOn",
    "PlanSubscriptionProcessLog"."PlanSubscriptionStatusDetail",
    "PlanGroup"."Name",
    "OrganisationPaymentMethod"."OrganisationBankAccountId",
    "OrganisationPaymentMethod"."IsDirectDebit",
    "OrganisationPaymentMethod"."IsBACS",
    "OrganisationPaymentMethod"."OrganisationDirectDebitMandateID",
    "OrganisationPaymentMethod"."IsPrimary",
    "OrganisationPaymentMethod"."DirectDebitMonthCollectionPeriodNumber",
    "OrganisationPaymentMethod"."BACSMonthPaymentDay",
    "OrganisationPaymentMethod"."DirectDebitNumberOfNotificationDaysBeforeCollection",
    "OrganisationPaymentMethod"."BACSNumberOfNotificationDaysBeforeExpectationOfPayment",
    "vStatusType1"."Name" AS "OrganisationPaymentMethodStatus",
    "vStatusType1"."StatusTypeName" AS "OrganisationPaymentMethodStatusTypeName",
    "vStatusType1"."StatusOrder" AS "OrganisationPaymentMethodStatusOrder",
    "vStatusType1"."StatusTypeValueID" AS "OrganisationPaymentMethodStatusTypeValueID",
    "vStatusType1"."StatusTypeID" AS "OrganisationPaymentMethodStatusTypeID",
    "vStatusType1"."StatusTypeVersionNumber" AS "OrganisationPaymentMethodStatusTypeVersionNumber",
    "vStatusType1"."IsStart" AS "OrganisationPaymentMethodStatusIsStart",
    "vStatusType1"."IsEnd" AS "OrganisationPaymentMethodStatusIsEnd",
    "Billing"."BillingPeriod",
    "Billing"."BillingPeriodUnitID",
    "Billing"."BillingLagPeriod",
    "Billing"."BillingLagPeriodUnitID",
    "Billing"."BillingPeriodDayOfMonth",
    "Billing"."DelayedBillingPeriod",
    "Billing"."DelayedBillingPeriodUnitID",
    "Billing"."HasDelayedBilling",
    "Billing"."NumberOfBillingPeriods",
    "Billing"."InvoiceToProcessingDelayPeriod",
    "Billing"."InvoiceToProcessingDelayPeriodUnitID",
    "Billing"."InvoiceNotificationConstructID",
    "Billing"."InvoiceNotificationConstructVersionNumber",
    "Billing"."EstimatedProcessingPeriod",
    "Billing"."EstimatedProcessingPeriodUnitID"
   FROM (((((((("PlanSubscription"
     JOIN "Plan" ON ((("PlanSubscription"."PlanID" = "Plan"."PlanID") AND ("PlanSubscription"."PlanVersionNumber" = "Plan"."PlanVersionNumber"))))
     JOIN "PlanSubscriptionPaymentPlan" ON ((("PlanSubscription"."PlanSubscriptionID" = "PlanSubscriptionPaymentPlan"."PlanSubscriptionID") AND ("PlanSubscription"."PlanSubscriptionVersionNumber" = "PlanSubscriptionPaymentPlan"."PlanSubscriptionVersionNumber"))))
     JOIN "PlanSubscriptionProcessLog" ON ((("PlanSubscription"."PlanSubscriptionID" = "PlanSubscriptionProcessLog"."PlanSubscriptionID") AND ("PlanSubscription"."PlanSubscriptionVersionNumber" = "PlanSubscriptionProcessLog"."PlanSubscriptionVersionNumber"))))
     JOIN "vStatusType" ON (((("PlanSubscriptionProcessLog"."StatusTypeValueID" = "vStatusType"."StatusTypeValueID") AND ("PlanSubscriptionProcessLog"."StatusTypeID" = "vStatusType"."StatusTypeID")) AND ("PlanSubscriptionProcessLog"."StatusTypeVersionNumber" = "vStatusType"."StatusTypeVersionNumber"))))
     JOIN "PlanGroup" ON (("Plan"."PlanGroupID" = "PlanGroup"."PlanGroupID")))
     JOIN "OrganisationPaymentMethod" ON ((("PlanSubscription"."OrganisationID" = "OrganisationPaymentMethod"."OrganisationID") AND ("PlanSubscriptionPaymentPlan"."GlobalPaymentMethodID" = "OrganisationPaymentMethod"."GlobalPaymentMethodID"))))
     JOIN "vStatusType" "vStatusType1" ON (((("OrganisationPaymentMethod"."StatusTypeID" = "vStatusType1"."StatusTypeID") AND ("OrganisationPaymentMethod"."StatusTypeVersionNumber" = "vStatusType1"."StatusTypeVersionNumber")) AND ("OrganisationPaymentMethod"."StatusTypeValueID" = "vStatusType1"."StatusTypeValueID"))))
     LEFT JOIN "Billing" ON (("PlanSubscriptionPaymentPlan"."BillingID" = "Billing"."BillingID")));


ALTER TABLE "vPlanSubscriptionStatusWithBillingAndPaymentMethodStatus" OWNER TO postgres;

--
-- TOC entry 766 (class 1259 OID 44172)
-- Name: vProductAttribute; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vProductAttribute" AS
 SELECT p."ProductID",
    p."ProductVersionID",
    pa."Name" AS "ProductAttributeName",
    pa."Description" AS "ProductAttributeDescription",
    ppa."IsRequired" AS "IsProductAttributeRequired",
    ppa."DisplayOrder" AS "ProductAttributeDisplayOrder",
    ppav."PriceAdjustment",
    ppav."WeightAdjustement",
    ppav."Cost",
    ppav."Quantity",
    ppav."IsPreSelected",
    ppav."ProductVariantAttributeValueID",
    ppav."Name" AS "AttributeName",
    ppav."ProductProductAttributeID",
    ppa."ProductAttributeID"
   FROM ((("Product" p
     JOIN "ProductProductAttribute" ppa ON ((((ppa."ProductID" = p."ProductID") AND (ppa."ProductVersionID" = p."ProductVersionID")) AND (ppa."IsActive" = true))))
     LEFT JOIN "ProductVariantAttributeValue" ppav ON (((ppav."ProductProductAttributeID" = ppa."ProductProductAttributeID") AND (ppav."IsActive" = true))))
     LEFT JOIN "ProductAttribute" pa ON (((pa."ProductAttributeID" = ppa."ProductAttributeID") AND (pa."IsActive" = true))))
  WHERE ((p."IsActive" = true) AND (p."IsDeleted" = false));


ALTER TABLE "vProductAttribute" OWNER TO postgres;

--
-- TOC entry 767 (class 1259 OID 44177)
-- Name: vProductDeduction; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vProductDeduction" AS
 SELECT cd."ProductDeductionID",
    cd."ProductID",
    cd."ProductVersionID",
    cd."DeductionID",
    cd."DeductionPercentage",
    cd."DeductionValue",
    cd."IsActive",
    cd."IsDeleted",
    de."Name",
    de."Description",
    de."IsPercentageBased",
    cd."DeductionVersionNumber"
   FROM ("ProductDeduction" cd
     LEFT JOIN "Deduction" de ON ((((de."DeductionID" = cd."DeductionID") AND (de."IsActive" = true)) AND (de."IsDeleted" = false))))
  WHERE ((cd."IsActive" = true) AND (cd."IsDeleted" = false));


ALTER TABLE "vProductDeduction" OWNER TO postgres;

--
-- TOC entry 768 (class 1259 OID 44182)
-- Name: vProductDiscount; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vProductDiscount" AS
 SELECT p."ParentID",
    p."ProductID",
    p."ProductVersionID",
    p."IsPackage",
    d."CreatedOn",
    d."DiscountAmount",
    d."DiscountApplyOnID",
    d."Description",
    d."DiscountID",
    d."DiscountPercentage",
    d."DiscountPeriod",
    d."DiscountQuantity",
    d."DiscountStatusID",
    d."DiscountTypeID",
    d."DiscountVersionNumber",
    d."DisocuntPeriodUnitID",
    d."InvoiceName",
    d."IsPercentage",
    d."IsRecurring",
    d."MaxRedemptions",
    d."Name",
    d."ValidTill",
    ct."Name" AS "DiscountStatus",
    ct1."Name" AS "DiscountType",
    ct2."Name" AS "DiscountApplyIn",
    ct3."Name" AS "PeriodUnit",
    d."IsSingleProductDiscount",
    d."IsCheckoutDiscount",
    d."IsSingleProductQuantityDiscount",
    d."SingleProductQuantityDiscountDivisor",
    d."IsSingleProductQuantityDiscountPercentageBased",
    d."IsSingleProductQuantityDiscountAdditionalQuantityBased",
    d."SingleProductQuantityDiscountAdditionalQuantity",
    d."IsMultipleProductCombinationDiscount",
    d."IsMultipleProductCombinationDiscountPercentageBased",
    d."IsMultipleProductCombinationDiscountCheapestFreeBased"
   FROM (((((("Product" p
     JOIN "ProductDiscount" pd ON (((((pd."IsActive" = true) AND (pd."IsDeleted" = false)) AND (pd."ProductID" = p."ProductID")) AND (pd."ProductVersionID" = p."ProductVersionID"))))
     JOIN "Discount" d ON (((((d."DiscountID" = pd."DiscountID") AND (d."DiscountVersionNumber" = pd."DiscountVersionNumber")) AND (d."IsActive" = true)) AND (d."IsDeleted" = false))))
     LEFT JOIN "ClassificationType" ct ON (((ct."ClassificationTypeID" = d."DiscountStatusID") AND (ct."ClassificationTypeCategoryID" = 8010))))
     LEFT JOIN "ClassificationType" ct1 ON (((ct1."ClassificationTypeID" = d."DiscountTypeID") AND (ct1."ClassificationTypeCategoryID" = 8008))))
     LEFT JOIN "ClassificationType" ct2 ON (((ct2."ClassificationTypeID" = d."DiscountApplyOnID") AND (ct2."ClassificationTypeCategoryID" = 8011))))
     LEFT JOIN "ClassificationType" ct3 ON (((ct3."ClassificationTypeID" = d."DisocuntPeriodUnitID") AND (ct3."ClassificationTypeCategoryID" = 8006))));


ALTER TABLE "vProductDiscount" OWNER TO postgres;

--
-- TOC entry 769 (class 1259 OID 44187)
-- Name: vProductSpecification; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vProductSpecification" AS
 SELECT p."ProductID",
    p."ProductVersionID",
    sa."Name" AS "SpecificationName",
    sa."Description" AS "SpecificationDescription",
    sa."DisplayOrder" AS "SpecificationDisplayOrder",
    psa."IsMandatory",
    psa."IsMultiSelect",
    psa."IsPreSelected",
    psa."MinimumSelectionLimit",
    psa."MaximumSelectionLimit",
    psa."IsUserDefined",
    psa."IsPriceDriven",
    psao."ProductSpecificationAttributeOptionID",
    psao."PriceAdjustment" AS "SpecDefaultOptionPriceAdjustement",
    psao."Cost" AS "SpecDefaultOptionCost",
    psao."DefaultValue" AS "SpecDefaultOptionDefaultValue",
    psao."DefaultQuantity" AS "SpecDefaultOptionDefaultQuantity"
   FROM (((("Product" p
     JOIN "ProductSpecificationAttribute" psa ON (((((psa."ProductID" = p."ProductID") AND (psa."ProductVersionID" = p."ProductVersionID")) AND (psa."IsActive" = true)) AND (psa."IsDeleted" = false))))
     LEFT JOIN "SpecificationAttribute" sa ON ((((sa."SpecificationAttributeID" = psa."SpecificationAttributeID") AND (sa."IsActive" = true)) AND (sa."IsDeleted" = false))))
     LEFT JOIN "ProductSpecificationBlueprint" psb ON ((((((psb."ProductID" = p."ProductID") AND (psb."ProductVersionID" = p."ProductVersionID")) AND (psb."IsActive" = true)) AND (psb."IsDeleted" = false)) AND (psb."ProductSpecificationAttributeID" = psa."ProductSpecificationAttributeID"))))
     LEFT JOIN "ProductSpecificationAttributeOption" psao ON ((((psao."IsActive" = true) AND (psao."IsDeleted" = false)) AND (psao."ProductSpecificationAttributeOptionID" = psb."DefaultProductSpecificationAttributeOptionID"))))
  WHERE ((p."IsActive" = true) AND (p."IsDeleted" = false));


ALTER TABLE "vProductSpecification" OWNER TO postgres;

--
-- TOC entry 770 (class 1259 OID 44192)
-- Name: vProductSpecificationOption; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vProductSpecificationOption" AS
 SELECT p."ProductID",
    p."ProductVersionID",
    psb."ProductSpecificationAttributeID",
    psb."IsMandatory",
    psb."IsMultiSelect",
    psb."IsPreSelected",
    psb."MinimumSelectionLimit",
    psb."MaximumSelectionLimit",
    psb."IsUserDefined",
    psb."IsPriceDriven",
    psb."SpecificationAttributeID",
    psao."ProductSpecificationAttributeOptionID",
    psao."PriceAdjustment",
    psao."WeightAdjustment",
    psao."Cost",
    psao."DefaultValue",
    psao."DefaultQuantity",
    psao."IsActive",
    psao."IsDeleted",
    psao."DisplayOrder",
    sao."Name" AS "OptionName",
    sao."Description" AS "OptionDescription"
   FROM ((("Product" p
     JOIN "ProductSpecificationAttribute" psb ON (((((psb."ProductID" = p."ProductID") AND (psb."ProductVersionID" = p."ProductVersionID")) AND (psb."IsActive" = true)) AND (psb."IsDeleted" = false))))
     JOIN "ProductSpecificationAttributeOption" psao ON ((((psao."ProductSpecificationAttributeID" = psb."ProductSpecificationAttributeID") AND (psao."IsActive" = true)) AND (psao."IsDeleted" = false))))
     JOIN "SpecificiationAttributeOption" sao ON ((((sao."SpecficiationAttributeOptionID" = psao."SpecficiationAttributeOptionID") AND (sao."IsActive" = true)) AND (sao."IsDeleted" = false))))
  WHERE ((p."IsActive" = true) AND (p."IsDeleted" = false));


ALTER TABLE "vProductSpecificationOption" OWNER TO postgres;

--
-- TOC entry 771 (class 1259 OID 44197)
-- Name: vResource; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vResource" AS
 SELECT DISTINCT r."ResourceID",
    r."ResourceName",
    r."ResourceDescription",
    r."SourceID",
    r."ResourceTypeID",
    r."ResourceCategoryID",
    r."ResourceSubCategoryID",
    r."IsActive",
    r."IsDeleted"
   FROM ((("Resource" r
     LEFT JOIN "Resource" ro ON ((r."ResourceID" = ro."ResourceID")))
     LEFT JOIN "RoleClaim" rc ON ((rc."ResourceID" = r."ResourceID")))
     LEFT JOIN "OrganisationRoleClaim" orgroleclaim ON ((orgroleclaim."ResourceID" = r."ResourceID")));


ALTER TABLE "vResource" OWNER TO postgres;

--
-- TOC entry 772 (class 1259 OID 44202)
-- Name: vRole; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vRole" AS
 SELECT DISTINCT rt."RoleID",
    rt."RoleName",
    rt."RoleDescription",
    rt."RoleTypeID",
    rt."RoleSubTypeID",
    rt."RoleCategoryID",
    rt."IsActive",
    rt."IsDeleted",
        CASE ((grt."RoleID" IS NOT NULL) OR (orgr."OrganisationRoleID" IS NOT NULL))
            WHEN true THEN true
            ELSE false
        END AS "IsDisabled"
   FROM (("Role" rt
     LEFT JOIN "OrganisationRole" orgr ON ((rt."RoleID" = orgr."OrganisationRoleID")))
     LEFT JOIN "GroupRole" grt ON ((rt."RoleID" = grt."RoleID")));


ALTER TABLE "vRole" OWNER TO postgres;

--
-- TOC entry 773 (class 1259 OID 44207)
-- Name: vState; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vState" AS
 SELECT s."StateID",
    s."ParentStateID",
    si."StateItemID",
    si."ParentStateItemID",
    s."StateName",
    si."StateItemName",
    si."StateItemOrder",
    psi."StateItemName" AS parentstateitemname
   FROM (("State" s
     LEFT JOIN "StateItem" si ON ((si."StateID" = s."StateID")))
     LEFT JOIN "StateItem" psi ON ((psi."StateItemID" = si."ParentStateItemID")))
  WHERE (si."StateItemID" IS NOT NULL);


ALTER TABLE "vState" OWNER TO postgres;

--
-- TOC entry 774 (class 1259 OID 44212)
-- Name: vStatusTypeTemplate; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vStatusTypeTemplate" AS
 SELECT stv."StatusTypeValueTemplateID",
    stv."StatusTypeTemplateID",
    stv."StatusTypeTemplateVersionNumber",
    stv."Name",
    st."Name" AS "TemplateName",
    sts."StatusOrder",
    sts."IsStart",
    sts."IsEnd"
   FROM (("StatusTypeValueTemplate" stv
     LEFT JOIN "StatusTypeTemplate" st ON (((st."StatusTypeTemplateID" = stv."StatusTypeTemplateID") AND (st."StatusTypeTemplateVersionNumber" = stv."StatusTypeTemplateVersionNumber"))))
     LEFT JOIN "StatusTypeStructureTemplate" sts ON ((((sts."StatusTypeTemplateID" = stv."StatusTypeTemplateID") AND (sts."StatusTypeTemplateVersionNumber" = stv."StatusTypeTemplateVersionNumber")) AND (sts."StatusTypeValueTemplateID" = stv."StatusTypeValueTemplateID"))));


ALTER TABLE "vStatusTypeTemplate" OWNER TO postgres;

--
-- TOC entry 775 (class 1259 OID 44217)
-- Name: vTemporaryUsersNotLoggedIn; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vTemporaryUsersNotLoggedIn" AS
 SELECT ua."Created",
    ua."AccountClosed",
    ua."Email",
    ua."FailedLoginCount",
    ua."FailedPasswordResetCount",
    ua."ID",
    ua."IsAccountClosed",
    ua."IsAccountVerified",
    ua."IsActive",
    ua."LastLogin",
    ua."LastFailedPasswordReset",
    ua."LastUpdated"
   FROM "UserAccounts" ua
  WHERE (((ua."IsTemporaryAccount" = true) AND (ua."IsActive" = true)) AND (ua."IsDeleted" = false));


ALTER TABLE "vTemporaryUsersNotLoggedIn" OWNER TO postgres;

--
-- TOC entry 776 (class 1259 OID 44221)
-- Name: vUserAccountNotLoggedIn; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vUserAccountNotLoggedIn" AS
 SELECT ua."ID",
    ua."Username",
    ua."Email",
    ua."IsTemporaryAccount",
    ua."Created",
    date_part('day'::text, (now() - (ua."Created")::timestamp with time zone)) AS "DaysSinceCreation",
    date_part('hour'::text, (now() - (ua."Created")::timestamp with time zone)) AS "HoursSinceCreation",
        CASE
            WHEN ((date_part('day'::text, (now() - (ua."Created")::timestamp with time zone)) >= (7)::double precision) AND (date_part('day'::text, (now() - (ua."Created")::timestamp with time zone)) <= (14)::double precision)) THEN true
            ELSE false
        END AS "Between7and14DaysNotLoggedIn",
        CASE
            WHEN ((date_part('day'::text, (now() - (ua."Created")::timestamp with time zone)) >= (14)::double precision) AND (date_part('day'::text, (now() - (ua."Created")::timestamp with time zone)) <= (21)::double precision)) THEN true
            ELSE false
        END AS "Between14and21DaysNotLoggedIn",
        CASE
            WHEN ((date_part('day'::text, (now() - (ua."Created")::timestamp with time zone)) >= (0)::double precision) AND (date_part('day'::text, (now() - (ua."Created")::timestamp with time zone)) <= (7)::double precision)) THEN true
            ELSE false
        END AS "Between0and7DaysNotLoggedIn",
        CASE
            WHEN (date_part('day'::text, (now() - (ua."Created")::timestamp with time zone)) >= (21)::double precision) THEN true
            ELSE false
        END AS "GreaterThan21DaysNotLoggedIn",
        CASE
            WHEN (ua."LastLogin" IS NULL) THEN true
            ELSE false
        END AS "NotLoggedIn",
    ( SELECT count(*) AS count
           FROM ((("NotificationRecipientLog" nrl
             LEFT JOIN "NotificationRecipient" nr ON ((nr."NotificationRecipientID" = nrl."NotificationRecipientID")))
             LEFT JOIN "Notification" note ON ((note."NotificationID" = nr."NotificationID")))
             LEFT JOIN "NotificationConstruct" nc ON (((nc."NotificationConstructID" = note."NotificationConstructID") AND (nc."NotificationConstructVersionNumber" = note."NotificationConstructVersionNumber"))))
          WHERE ((((nr."UserAccountOrganisationID" = ua."ID") AND ((nc."Name")::text = 'COLPRegistrationReminder'::text)) AND (nrl."IsSent" = true)) AND (nrl."IsRead" = false))) AS "COLPRemindersNotReadEver",
    ( SELECT count(*) AS count
           FROM ((("NotificationRecipientLog" nrl
             LEFT JOIN "NotificationRecipient" nr ON ((nr."NotificationRecipientID" = nrl."NotificationRecipientID")))
             LEFT JOIN "Notification" note ON ((note."NotificationID" = nr."NotificationID")))
             LEFT JOIN "NotificationConstruct" nc ON (((nc."NotificationConstructID" = note."NotificationConstructID") AND (nc."NotificationConstructVersionNumber" = note."NotificationConstructVersionNumber"))))
          WHERE ((((nr."UserAccountOrganisationID" = ua."ID") AND ((nc."Name")::text = 'COLPRegistrationSummary'::text)) AND (nrl."IsSent" = true)) AND (nrl."IsRead" = false))) AS "COLPRegistrationsNotReadEver",
    ( SELECT count(*) AS count
           FROM ((("NotificationRecipientLog" nrl
             LEFT JOIN "NotificationRecipient" nr ON ((nr."NotificationRecipientID" = nrl."NotificationRecipientID")))
             LEFT JOIN "Notification" note ON ((note."NotificationID" = nr."NotificationID")))
             LEFT JOIN "NotificationConstruct" nc ON (((nc."NotificationConstructID" = note."NotificationConstructID") AND (nc."NotificationConstructVersionNumber" = note."NotificationConstructVersionNumber"))))
          WHERE ((((((nr."UserAccountOrganisationID" = ua."ID") AND ((nc."Name")::text = 'COLPRegistrationReminder'::text)) AND (nrl."IsSent" = true)) AND (nrl."IsRead" = false)) AND (date_part('day'::text, (now() - (ua."Created")::timestamp with time zone)) >= (7)::double precision)) AND (date_part('day'::text, (now() - (ua."Created")::timestamp with time zone)) <= (14)::double precision))) AS "COLPRemindersNotReadBetween7and14Days",
    ( SELECT count(*) AS count
           FROM ((("NotificationRecipientLog" nrl
             LEFT JOIN "NotificationRecipient" nr ON ((nr."NotificationRecipientID" = nrl."NotificationRecipientID")))
             LEFT JOIN "Notification" note ON ((note."NotificationID" = nr."NotificationID")))
             LEFT JOIN "NotificationConstruct" nc ON (((nc."NotificationConstructID" = note."NotificationConstructID") AND (nc."NotificationConstructVersionNumber" = note."NotificationConstructVersionNumber"))))
          WHERE ((((((nr."UserAccountOrganisationID" = ua."ID") AND ((nc."Name")::text = 'COLPRegistrationReminder'::text)) AND (nrl."IsSent" = true)) AND (nrl."IsRead" = false)) AND (date_part('day'::text, (now() - (ua."Created")::timestamp with time zone)) >= (14)::double precision)) AND (date_part('day'::text, (now() - (ua."Created")::timestamp with time zone)) <= (21)::double precision))) AS "COLPRemindersNotReadBetween14and21Days",
    ( SELECT count(*) AS count
           FROM ((("NotificationRecipientLog" nrl
             LEFT JOIN "NotificationRecipient" nr ON ((nr."NotificationRecipientID" = nrl."NotificationRecipientID")))
             LEFT JOIN "Notification" note ON ((note."NotificationID" = nr."NotificationID")))
             LEFT JOIN "NotificationConstruct" nc ON (((nc."NotificationConstructID" = note."NotificationConstructID") AND (nc."NotificationConstructVersionNumber" = note."NotificationConstructVersionNumber"))))
          WHERE ((((((nr."UserAccountOrganisationID" = ua."ID") AND ((nc."Name")::text = 'COLPRegistrationReminder'::text)) AND (nrl."IsSent" = true)) AND (nrl."IsRead" = false)) AND (date_part('day'::text, (now() - (ua."Created")::timestamp with time zone)) >= (0)::double precision)) AND (date_part('day'::text, (now() - (ua."Created")::timestamp with time zone)) <= (7)::double precision))) AS "COLPRemindersNotReadBetween0and7Days",
    ( SELECT wdi."DataContent"
           FROM (((("WorkflowInstance" wi
             JOIN "Workflow" wf ON ((((wf."WorkflowID" = wi."WorkflowID") AND (wf."WorkflowVersionNumber" = wi."WorkflowVersionNumber")) AND ((wf."Name")::text = 'Login'::text))))
             JOIN "WorkflowInstanceExecution" wie ON (((((wie."WorkflowID" = wf."WorkflowID") AND (wie."WorkflowVersionNumber" = wf."WorkflowVersionNumber")) AND (wie."WorkflowInstanceID" = wi."WorkflowInstanceID")) AND (wie."WorkflowInstanceExecutionID" = ( SELECT wie2."WorkflowInstanceExecutionID"
                   FROM "WorkflowInstanceExecution" wie2
                  WHERE (((wie2."WorkflowID" = wf."WorkflowID") AND (wie2."WorkflowVersionNumber" = wf."WorkflowVersionNumber")) AND (wie2."WorkflowInstanceID" = wi."WorkflowInstanceID"))
                  ORDER BY wie2."CreatedOn" DESC
                 LIMIT 1)))))
             JOIN "WorkflowInstanceExecutionStatusEvent" wied ON (((wied."WorkflowInstanceExecutionID" = wie."WorkflowInstanceExecutionID") AND (wied."WorkflowInstanceExecutionStatusEventID" = ( SELECT wied2."WorkflowInstanceExecutionStatusEventID"
                   FROM "WorkflowInstanceExecutionStatusEvent" wied2
                  WHERE (wied2."WorkflowInstanceExecutionID" = wie."WorkflowInstanceExecutionID")
                  ORDER BY wied2."EventDate" DESC
                 LIMIT 1)))))
             JOIN "WorkflowInstanceExecutionDataItem" wdi ON (((wdi."WorkflowInstanceExecutionStatusEventID" = wied."WorkflowInstanceExecutionStatusEventID") AND (wdi."WorkflowInstanceExecutionDataItemID" = ( SELECT wdi2."WorkflowInstanceExecutionDataItemID"
                   FROM "WorkflowInstanceExecutionDataItem" wdi2
                  WHERE (wdi2."WorkflowInstanceExecutionStatusEventID" = wied."WorkflowInstanceExecutionStatusEventID")
                  ORDER BY wdi2."WorkflowInstanceExecutionDataItemID" DESC
                 LIMIT 1)))))
          WHERE (wi."ParentID" = ua."ID")) AS "LoginWorkflowDataContent"
   FROM ("UserAccountOrganisation" uao
     JOIN "UserAccounts" ua ON ((ua."ID" = uao."UserID")))
  WHERE (ua."LastLogin" IS NULL);


ALTER TABLE "vUserAccountNotLoggedIn" OWNER TO postgres;

--
-- TOC entry 777 (class 1259 OID 44226)
-- Name: vUserAccountOrganisation; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vUserAccountOrganisation" AS
 SELECT ua."ID",
    ua."IsTemporaryAccount",
    uao."UserAccountOrganisationID",
    uao."UserTypeID",
    uao."OrganisationID" AS "OrganisationBranchID",
    od1."OrganisationID",
    od1."Name",
    org."IsBranch",
    org."IsHeadOffice",
    org."IsUserOrganisation",
    org."IsPaymentProvider",
    org."OrganisationTypeID",
    ot."Name" AS "OrganisationTypeName",
    ut."Name" AS "UserTypeName",
    lod."VATNumber",
    lod."IsVATRegistered",
    ct."BirthDate",
    ct."EmailAddress1",
    ct."FirstName",
    ct."LastName",
    ct."MiddleName",
    ua."Username",
    ua."Email",
    ct."ContactID",
    ad."AddressID",
    ad."BuildingName",
    ad."City",
    ad."CountryCode",
    ad."County",
    ad."Line1",
    ad."Line2",
    ad."Line3",
    ad."PostalCode",
    ad."Town",
    ad."IsPrimaryAddress"
   FROM (((((((("UserAccounts" ua
     LEFT JOIN "Contact" ct ON (((ct."IsPrimaryContact" = true) AND (ct."ParentID" = ua."ID"))))
     LEFT JOIN "Address" ad ON ((ad."ParentID" = ct."ContactID")))
     JOIN "UserAccountOrganisation" uao ON ((uao."UserID" = ua."ID")))
     JOIN "OrganisationDetail" od1 ON ((od1."OrganisationID" = ( SELECT "Organisation"."ParentOrganisationID"
           FROM "Organisation"
          WHERE ("Organisation"."OrganisationID" = uao."OrganisationID")
         LIMIT 1))))
     JOIN "Organisation" org ON ((org."OrganisationID" = od1."OrganisationID")))
     LEFT JOIN "OrganisationType" ot ON ((ot."OrganisationTypeID" = org."OrganisationTypeID")))
     LEFT JOIN "UserType" ut ON ((ut."UserTypeID" = uao."UserTypeID")))
     LEFT JOIN legal."LegalOrganisationDetails" lod ON ((lod."OrganisationID" = od1."OrganisationID")))
  WHERE (ua."IsTemporaryAccount" = false);


ALTER TABLE "vUserAccountOrganisation" OWNER TO postgres;

--
-- TOC entry 778 (class 1259 OID 44231)
-- Name: vUserRoleRegulatorDetail; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vUserRoleRegulatorDetail" AS
 SELECT uac."ID",
    uac."Email",
    con."LastName",
    con."FirstName",
    "ContactRegulator"."RegulatorID",
    "ClassificationType"."Name" AS "Regulator",
    "ContactRegulator"."RegulatorNumber",
    "UserType"."Name" AS "UserRole",
    "OrganisationTradingName"."Name" AS "TradingName",
    "OrganisationDetail"."Name" AS "CompanyName",
    uac."IsActive",
    uac."IsDeleted"
   FROM (((((((("UserAccounts" uac
     LEFT JOIN "Contact" con ON ((uac."ID" = con."ParentID")))
     LEFT JOIN "ContactRegulator" ON ((con."ContactID" = "ContactRegulator"."ContactID")))
     LEFT JOIN "ClassificationType" ON (("ClassificationType"."ClassificationTypeID" = "ContactRegulator"."RegulatorID")))
     LEFT JOIN "UserAccountOrganisation" ON ((uac."ID" = "UserAccountOrganisation"."UserID")))
     LEFT JOIN "UserType" ON (("UserAccountOrganisation"."UserTypeID" = "UserType"."UserTypeID")))
     LEFT JOIN "Organisation" ON (("UserAccountOrganisation"."OrganisationID" = "Organisation"."OrganisationID")))
     LEFT JOIN "OrganisationDetail" ON (("Organisation"."OrganisationID" = "OrganisationDetail"."OrganisationID")))
     JOIN "OrganisationTradingName" ON (("OrganisationTradingName"."OrganisationID" = "Organisation"."OrganisationID")))
  WHERE (uac."IsApproved" = true);


ALTER TABLE "vUserRoleRegulatorDetail" OWNER TO postgres;

--
-- TOC entry 779 (class 1259 OID 44236)
-- Name: vUserStatus; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vUserStatus" AS
 SELECT os."UserAccountOrganisationID",
    org."OrganisationID",
    org."UserID",
    org."IsActive",
    org."IsDeleted",
    org."UserTypeID",
    st."Name" AS "StatusTypeName",
    st."StatusTypeID",
    st."StatusTypeVersionNumber",
    st."StatusTypeTemplateID",
    st."StatusTypeTemplateVersionNumber",
    stv."StatusTypeValueID",
    stv."Name" AS "StatusValueName",
    os."StatusChangedOn",
    os."StatusChangedBy",
    stt."StatusOrder",
    stt."IsStart",
    stt."IsEnd",
    stt1."StatusTypeValueID" AS "NextStatusTypeValueID",
    stt1."Name" AS "NextStatusTypeName",
    stt1."StatusOrder" AS "NextStatusOrder",
    stt1."IsStart" AS "NextStatusStart",
    stt1."IsEnd" AS "NextStatusEnd"
   FROM (((((("UserAccountOrganisationStatus" os
     LEFT JOIN "UserAccountOrganisation" org ON ((org."UserAccountOrganisationID" = os."UserAccountOrganisationID")))
     LEFT JOIN "Organisation" og ON ((og."OrganisationID" = org."OrganisationID")))
     LEFT JOIN "StatusType" st ON (((st."StatusTypeID" = os."StatusTypeID") AND (st."StatusTypeVersionNumber" = os."StatusTypeVersionNumber"))))
     LEFT JOIN "StatusTypeValue" stv ON ((stv."StatusTypeValueID" = os."StatusTypeValueID")))
     LEFT JOIN "vStatusType" stt ON ((((stt."StatusTypeID" = os."StatusTypeID") AND (stt."StatusTypeVersionNumber" = os."StatusTypeVersionNumber")) AND (stt."StatusTypeValueID" = os."StatusTypeValueID"))))
     LEFT JOIN "vStatusType" stt1 ON ((((stt1."StatusTypeID" = os."StatusTypeID") AND (stt1."StatusTypeVersionNumber" = os."StatusTypeVersionNumber")) AND (stt1."StatusOrder" = (stt."StatusOrder" + 1)))))
  WHERE (stt."StatusTypeValueID" IS NOT NULL);


ALTER TABLE "vUserStatus" OWNER TO postgres;

--
-- TOC entry 780 (class 1259 OID 44241)
-- Name: vUserWorkflowInstanceStatus; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vUserWorkflowInstanceStatus" AS
 SELECT wfi."ParentID",
    COALESCE(ua."ID", ua1."ID") AS "UserID",
    uao."UserAccountOrganisationID",
    wfi."WorkflowID",
    wfi."WorkflowInstanceID",
    wfi."WorkflowInstanceStatusID",
    ct."Name" AS instancestatus,
    wftct."Name" AS workflowtype
   FROM (((((("WorkflowInstance" wfi
     LEFT JOIN "ClassificationType" ct ON ((ct."ClassificationTypeID" = wfi."WorkflowInstanceStatusID")))
     LEFT JOIN "Workflow" wf ON ((wf."WorkflowID" = wfi."WorkflowID")))
     LEFT JOIN "ClassificationType" wftct ON ((wf."WorkflowTypeID" = wftct."ClassificationTypeID")))
     LEFT JOIN "UserAccountOrganisation" uao ON ((wfi."ParentID" = uao."UserAccountOrganisationID")))
     LEFT JOIN "UserAccounts" ua ON ((uao."UserID" = ua."ID")))
     LEFT JOIN "UserAccounts" ua1 ON ((wfi."ParentID" = ua1."ID")))
  WHERE (((wftct."Name")::text = 'Startup'::text) AND ((ct."Name")::text <> 'Complete'::text));


ALTER TABLE "vUserWorkflowInstanceStatus" OWNER TO postgres;

--
-- TOC entry 781 (class 1259 OID 44246)
-- Name: vWorkflowActionParameter; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vWorkflowActionParameter" AS
 SELECT wap."WorkflowActionID",
    wp."WorkflowParameterID",
    wp."Name",
    wp."Description",
    wp."ObjectType",
    wp."ObjectValue",
    wp."WorkflowID",
    wp."WorkflowVersionNumber"
   FROM ("WorkflowParameter" wp
     JOIN "WorkflowActionParameter" wap ON ((((wap."WorkflowParameterID" = wp."WorkflowParameterID") AND (wap."WorkflowID" = wp."WorkflowID")) AND (wap."WorkflowVersionNumber" = wp."WorkflowVersionNumber"))));


ALTER TABLE "vWorkflowActionParameter" OWNER TO postgres;

--
-- TOC entry 782 (class 1259 OID 44250)
-- Name: vWorkflowInstanceProgress; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vWorkflowInstanceProgress" AS
 SELECT COALESCE(dis."Name", act."Name") AS "StepName",
    COALESCE(dis."WorkflowDecisionID", act."WorkflowActionID") AS "StepID",
    ss."Name" AS "StepStatus",
    se."EventDate" AS "StepDate",
    se."EventBy" AS "StepExecutedBy",
    se."EventOrder" AS "StepOrder",
        CASE
            WHEN (act."WorkflowActionID" IS NULL) THEN 'Decision'::text
            ELSE 'Action'::text
        END AS "StepType",
        CASE
            WHEN (act."IsManual" = true) THEN 1
            ELSE 0
        END AS "StepIsManual",
    COALESCE(dis."IsTransistionStart", act."IsTransistionStart") AS "StepIsStart",
    COALESCE(dis."IsTransistionEnd", act."IsTransistionEnd") AS "StepIsEnd",
    wit."Name" AS "TransistionName",
    wit."IsWorkflowStart",
    wit."IsWorkflowEnd",
    wie."WorkflowTransistionID",
    wi."WorkflowInstanceID",
    se."WorkflowInstanceExecutionStatusEventID",
    se."WorkflowExecutionStatusID",
    se."WorkflowInstanceExecutionID",
    wie."WorkflowInstanceSessionID",
    wap."ObjectValue" AS actionarea,
    wap1."ObjectValue" AS actionaction,
    wap2."ObjectValue" AS actioncontroller,
    wf."WorkflowTypeID",
    wftct."Name" AS workflowtypename,
    wf."WorkflowCategoryID",
    wfcct."Name" AS workflowcategoryname,
    wfi."WorkflowInstanceStatusID",
    wfict."Name" AS workflowinstancestatusname
   FROM (((((((((((((("WorkflowInstanceExecutionStatusEvent" se
     LEFT JOIN "WorkflowExecutionStatus" ss ON ((se."WorkflowExecutionStatusID" = ss."WorkflowExecutionStatusID")))
     LEFT JOIN "Workflow" wf ON (((se."WorkflowID" = wf."WorkflowID") AND (se."WorkflowVersionNumber" = wf."WorkflowVersionNumber"))))
     LEFT JOIN "ClassificationType" wftct ON ((wf."WorkflowTypeID" = wftct."ClassificationTypeID")))
     LEFT JOIN "ClassificationType" wfcct ON ((wf."WorkflowCategoryID" = wfcct."ClassificationTypeID")))
     LEFT JOIN "WorkflowInstance" wfi ON ((se."WorkflowInstanceID" = wfi."WorkflowInstanceID")))
     LEFT JOIN "ClassificationType" wfict ON ((wfi."WorkflowInstanceStatusID" = wfict."ClassificationTypeID")))
     LEFT JOIN "WorkflowInstanceExecution" wie ON ((wie."WorkflowInstanceExecutionID" = se."WorkflowInstanceExecutionID")))
     LEFT JOIN "WorkflowAction" act ON ((((act."WorkflowActionID" = wie."WorkflowActionID") AND (act."WorkflowID" = wie."WorkflowID")) AND (act."WorkflowVersionNumber" = wie."WorkflowVersionNumber"))))
     LEFT JOIN "WorkflowDecision" dis ON ((((dis."WorkflowDecisionID" = wie."WorkflowDecisionID") AND (dis."WorkflowID" = wie."WorkflowID")) AND (dis."WorkflowVersionNumber" = wie."WorkflowVersionNumber"))))
     LEFT JOIN "WorkflowInstance" wi ON ((wi."WorkflowInstanceID" = wie."WorkflowInstanceID")))
     LEFT JOIN "WorkflowTransistion" wit ON (((wit."WorkflowID" = wi."WorkflowID") AND (wit."WorkflowVersionNumber" = wi."WorkflowVersionNumber"))))
     LEFT JOIN "vWorkflowActionParameter" wap ON (((wap."WorkflowActionID" = act."WorkflowActionID") AND ((wap."Name")::text = 'Area'::text))))
     LEFT JOIN "vWorkflowActionParameter" wap1 ON (((wap1."WorkflowActionID" = act."WorkflowActionID") AND ((wap1."Name")::text = 'Action'::text))))
     LEFT JOIN "vWorkflowActionParameter" wap2 ON (((wap2."WorkflowActionID" = act."WorkflowActionID") AND ((wap2."Name")::text = 'Controller'::text))));


ALTER TABLE "vWorkflowInstanceProgress" OWNER TO postgres;

--
-- TOC entry 783 (class 1259 OID 44255)
-- Name: vWorkflowInstanceExecutionNotCompleted; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vWorkflowInstanceExecutionNotCompleted" AS
 SELECT ip."StepName",
    ip."StepStatus",
    ip."StepDate",
    ip."StepExecutedBy",
    ip."StepOrder",
    ip."StepType",
    ip."StepIsManual",
    ip."StepIsStart",
    ip."StepIsEnd",
    ip."TransistionName",
    ip."IsWorkflowStart",
    ip."IsWorkflowEnd",
    ip."WorkflowTransistionID",
    ip."WorkflowInstanceID",
    ip."WorkflowInstanceExecutionStatusEventID",
    ip."WorkflowExecutionStatusID",
    ip."WorkflowInstanceExecutionID",
    ip."WorkflowInstanceSessionID",
    wis."SessionStartedOn",
    wis."SessionEndedOn",
    ip."StepID",
    ip.actionaction AS "ActionAction",
    ip.actionarea AS "ActionArea",
    ip.actioncontroller AS "ActionController",
    wis."WorkflowID",
    wis."WorkflowVersionNumber",
    di."DataContent" AS "JsonContent",
    ip."WorkflowTypeID",
    ip.workflowtypename,
    ip."WorkflowCategoryID",
    ip.workflowcategoryname,
    ip."WorkflowInstanceStatusID",
    ip.workflowinstancestatusname
   FROM (("WorkflowInstanceSession" wis
     JOIN "vWorkflowInstanceProgress" ip ON ((ip."WorkflowInstanceSessionID" = wis."WorkflowInstanceSessionID")))
     LEFT JOIN "WorkflowInstanceExecutionDataItem" di ON (((di."WorkflowInstanceExecutionStatusEventID" = ip."WorkflowInstanceExecutionStatusEventID") AND (di."WorkflowInstanceExecutionID" = ip."WorkflowInstanceExecutionID"))))
  WHERE (((((wis."SessionStartedOn" = ( SELECT max(wis2."SessionStartedOn") AS max
           FROM "WorkflowInstanceSession" wis2
          WHERE (wis2."WorkflowInstanceID" = wis."WorkflowInstanceID"))) AND (ip."StepOrder" = ( SELECT max(wse2."EventOrder") AS max
           FROM "WorkflowInstanceExecutionStatusEvent" wse2
          WHERE (wse2."WorkflowInstanceSessionID" = wis."WorkflowInstanceSessionID")))) AND (ip."WorkflowInstanceExecutionStatusEventID" IS NOT NULL)) AND ((ip."StepStatus")::text <> 'Closed'::text)) AND (ip."StepType" = 'Action'::text));


ALTER TABLE "vWorkflowInstanceExecutionNotCompleted" OWNER TO postgres;

--
-- TOC entry 784 (class 1259 OID 44260)
-- Name: vWorkflowInstanceExecutionStatusEvent; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vWorkflowInstanceExecutionStatusEvent" AS
 SELECT se."WorkflowInstanceExecutionStatusEventID",
    se."EventDate",
    se."EventBy",
    se."WorkflowExecutionStatusID",
    se."WorkflowInstanceExecutionID",
    se."EventOrder",
    ss."Name",
    COALESCE(dis."Name", act."Name") AS "ActionDecision"
   FROM (((("WorkflowInstanceExecutionStatusEvent" se
     LEFT JOIN "WorkflowExecutionStatus" ss ON ((se."WorkflowExecutionStatusID" = ss."WorkflowExecutionStatusID")))
     LEFT JOIN "WorkflowInstanceExecution" wie ON ((wie."WorkflowInstanceExecutionID" = se."WorkflowInstanceExecutionID")))
     LEFT JOIN "WorkflowAction" act ON ((((act."WorkflowActionID" = wie."WorkflowActionID") AND (act."WorkflowID" = wie."WorkflowID")) AND (act."WorkflowVersionNumber" = wie."WorkflowVersionNumber"))))
     LEFT JOIN "WorkflowDecision" dis ON ((((dis."WorkflowDecisionID" = wie."WorkflowDecisionID") AND (dis."WorkflowID" = wie."WorkflowID")) AND (dis."WorkflowVersionNumber" = wie."WorkflowVersionNumber"))));


ALTER TABLE "vWorkflowInstanceExecutionStatusEvent" OWNER TO postgres;

--
-- TOC entry 785 (class 1259 OID 44265)
-- Name: vWorkflowInstanceNotStarted; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vWorkflowInstanceNotStarted" AS
 SELECT wfi."WorkflowID",
    wfi."WorkflowVersionNumber",
    wfi."WorkflowInstanceID",
    wfi."WorkflowInstanceStatusID",
    ct."Name",
    wfi."ParentID"
   FROM ("WorkflowInstance" wfi
     LEFT JOIN "ClassificationType" ct ON ((ct."ClassificationTypeID" = wfi."WorkflowInstanceStatusID")))
  WHERE ((ct."Name")::text = 'New'::text);


ALTER TABLE "vWorkflowInstanceNotStarted" OWNER TO postgres;

--
-- TOC entry 786 (class 1259 OID 44269)
-- Name: vWorkflowInstanceRetry; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vWorkflowInstanceRetry" AS
 SELECT wie."WorkflowID",
    wie."WorkflowVersionNumber",
    w."Name",
    wie."WorkflowInstanceID",
    wie."WorkflowInstanceSessionID",
    COALESCE(pwie."WorkflowActionID", pwie."WorkflowDecisionID") AS "PreviousStepID",
    COALESCE(pwd."Name", pwa."Name") AS "PreviousStepName",
    COALESCE(wie."WorkflowActionID", wie."WorkflowDecisionID") AS "StepID",
    COALESCE(wd."Name", wa."Name") AS "StepName",
    wis."SessionStartedOn",
    count(wie."WorkflowInstanceID") AS count
   FROM ((((((((("WorkflowInstanceExecution" wie
     LEFT JOIN "WorkflowDecision" wd ON ((wd."WorkflowDecisionID" = wie."WorkflowDecisionID")))
     LEFT JOIN "WorkflowAction" wa ON ((wa."WorkflowActionID" = wie."WorkflowActionID")))
     LEFT JOIN "WorkflowInstanceSession" wis ON ((wis."WorkflowInstanceSessionID" = wie."WorkflowInstanceSessionID")))
     LEFT JOIN "Workflow" w ON (((w."WorkflowID" = wie."WorkflowID") AND (w."WorkflowVersionNumber" = wie."WorkflowVersionNumber"))))
     LEFT JOIN "WorkflowInstanceExecutionStatusEvent" wise ON ((((wise."WorkflowInstanceExecutionID" = wie."WorkflowInstanceExecutionID") AND (wise."WorkflowInstanceSessionID" = wie."WorkflowInstanceSessionID")) AND (wise."EventOrder" = 0))))
     LEFT JOIN "WorkflowInstanceExecutionStatusEvent" pwise ON ((((pwise."WorkflowInstanceExecutionStatusEventID" < wise."WorkflowInstanceExecutionStatusEventID") AND (pwise."WorkflowInstanceSessionID" = wise."WorkflowInstanceSessionID")) AND (pwise."WorkflowInstanceExecutionStatusEventID" = ( SELECT max(pp."WorkflowInstanceExecutionStatusEventID") AS max
           FROM "WorkflowInstanceExecutionStatusEvent" pp
          WHERE ((pp."WorkflowInstanceSessionID" = wise."WorkflowInstanceSessionID") AND (pp."WorkflowInstanceExecutionStatusEventID" < wise."WorkflowInstanceExecutionStatusEventID")))))))
     LEFT JOIN "WorkflowInstanceExecution" pwie ON (((pwie."WorkflowInstanceSessionID" = wie."WorkflowInstanceSessionID") AND (pwie."WorkflowInstanceExecutionID" = pwise."WorkflowInstanceExecutionID"))))
     LEFT JOIN "WorkflowDecision" pwd ON ((pwd."WorkflowDecisionID" = pwie."WorkflowDecisionID")))
     LEFT JOIN "WorkflowAction" pwa ON ((pwa."WorkflowActionID" = pwie."WorkflowActionID")))
  GROUP BY wie."WorkflowID", wie."WorkflowVersionNumber", w."Name", wie."WorkflowInstanceID", wie."WorkflowInstanceSessionID", COALESCE(pwie."WorkflowActionID", pwie."WorkflowDecisionID"), COALESCE(pwd."Name", pwa."Name"), COALESCE(wie."WorkflowActionID", wie."WorkflowDecisionID"), COALESCE(wd."Name", wa."Name"), wis."SessionStartedOn"
  ORDER BY wie."WorkflowID", wie."WorkflowVersionNumber", wie."WorkflowInstanceID", wis."SessionStartedOn";


ALTER TABLE "vWorkflowInstanceRetry" OWNER TO postgres;

--
-- TOC entry 787 (class 1259 OID 44274)
-- Name: vWorkflowInstanceStatus; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vWorkflowInstanceStatus" AS
 SELECT p."StepName",
    p."StepStatus",
    p."WorkflowInstanceID",
    p."WorkflowInstanceExecutionStatusEventID"
   FROM "vWorkflowInstanceProgress" p
  WHERE ((((p."StepDate" = ( SELECT max(se."EventDate") AS max
           FROM "WorkflowInstanceExecutionStatusEvent" se
          WHERE (se."WorkflowInstanceExecutionID" = p."WorkflowInstanceExecutionID"))) AND (p."WorkflowInstanceSessionID" = ( SELECT k."WorkflowInstanceSessionID"
           FROM "WorkflowInstanceSession" k
          WHERE (k."WorkflowInstanceID" = p."WorkflowInstanceID")
          ORDER BY k."SessionStartedOn" DESC
         LIMIT 1))) AND (p."StepType" = 'Action'::text)) AND ((p."StepStatus")::text <> 'Closed'::text))
  GROUP BY p."StepName", p."StepStatus", p."WorkflowInstanceID", p."WorkflowInstanceExecutionStatusEventID";


ALTER TABLE "vWorkflowInstanceStatus" OWNER TO postgres;

--
-- TOC entry 788 (class 1259 OID 44279)
-- Name: vWorkflowInstanceStepTrace; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vWorkflowInstanceStepTrace" AS
 SELECT wie."WorkflowID",
    wie."WorkflowVersionNumber",
    w."Name",
    wie."WorkflowInstanceID",
    wie."WorkflowInstanceSessionID",
    COALESCE(pwie."WorkflowActionID", pwie."WorkflowDecisionID") AS "PreviousStepID",
    COALESCE(pwd."Name", pwa."Name") AS "PreviousStepName",
    COALESCE(wie."WorkflowActionID", wie."WorkflowDecisionID") AS "StepID",
    COALESCE(wd."Name", wa."Name") AS "StepName",
    wis."SessionStartedOn"
   FROM ((((((((("WorkflowInstanceExecution" wie
     LEFT JOIN "WorkflowDecision" wd ON ((wd."WorkflowDecisionID" = wie."WorkflowDecisionID")))
     LEFT JOIN "WorkflowAction" wa ON ((wa."WorkflowActionID" = wie."WorkflowActionID")))
     LEFT JOIN "WorkflowInstanceSession" wis ON ((wis."WorkflowInstanceSessionID" = wie."WorkflowInstanceSessionID")))
     LEFT JOIN "Workflow" w ON (((w."WorkflowID" = wie."WorkflowID") AND (w."WorkflowVersionNumber" = wie."WorkflowVersionNumber"))))
     LEFT JOIN "WorkflowInstanceExecutionStatusEvent" wise ON ((((wise."WorkflowInstanceExecutionID" = wie."WorkflowInstanceExecutionID") AND (wise."WorkflowInstanceSessionID" = wie."WorkflowInstanceSessionID")) AND (wise."EventOrder" = 0))))
     LEFT JOIN "WorkflowInstanceExecutionStatusEvent" pwise ON ((((pwise."WorkflowInstanceExecutionStatusEventID" < wise."WorkflowInstanceExecutionStatusEventID") AND (pwise."WorkflowInstanceSessionID" = wise."WorkflowInstanceSessionID")) AND (pwise."WorkflowInstanceExecutionStatusEventID" = ( SELECT max(pp."WorkflowInstanceExecutionStatusEventID") AS max
           FROM "WorkflowInstanceExecutionStatusEvent" pp
          WHERE ((pp."WorkflowInstanceSessionID" = wise."WorkflowInstanceSessionID") AND (pp."WorkflowInstanceExecutionStatusEventID" < wise."WorkflowInstanceExecutionStatusEventID")))))))
     LEFT JOIN "WorkflowInstanceExecution" pwie ON (((pwie."WorkflowInstanceSessionID" = wie."WorkflowInstanceSessionID") AND (pwie."WorkflowInstanceExecutionID" = pwise."WorkflowInstanceExecutionID"))))
     LEFT JOIN "WorkflowDecision" pwd ON ((pwd."WorkflowDecisionID" = pwie."WorkflowDecisionID")))
     LEFT JOIN "WorkflowAction" pwa ON ((pwa."WorkflowActionID" = pwie."WorkflowActionID")))
  GROUP BY wie."WorkflowID", wie."WorkflowVersionNumber", w."Name", wie."WorkflowInstanceID", wie."WorkflowInstanceSessionID", COALESCE(pwie."WorkflowActionID", pwie."WorkflowDecisionID"), COALESCE(pwd."Name", pwa."Name"), COALESCE(wie."WorkflowActionID", wie."WorkflowDecisionID"), COALESCE(wd."Name", wa."Name"), wis."SessionStartedOn", wise."WorkflowInstanceExecutionStatusEventID"
  ORDER BY wie."WorkflowID", wie."WorkflowVersionNumber", wie."WorkflowInstanceID", wis."SessionStartedOn", wise."WorkflowInstanceExecutionStatusEventID";


ALTER TABLE "vWorkflowInstanceStepTrace" OWNER TO postgres;

--
-- TOC entry 789 (class 1259 OID 44284)
-- Name: vWorkflowTree; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW "vWorkflowTree" AS
 SELECT uuid_generate_v1() AS "ID",
    wts."Name",
    wts."WorkflowID",
    wts."WorkflowVersionNumber",
    wts."WorkflowTreeStructureID",
    wts."InterfacePanelID",
    wts."InterfacePanelVersionNumber",
    wts."Level",
    wts."ParentID",
    wts."ItemOrder",
    wtsa."WorkflowActionID",
    COALESCE(wtsa."IsVisible", true) AS "IsVisible",
    wtsa."ConditionString"
   FROM ("WorkflowTreeStructure" wts
     LEFT JOIN "WorkflowTreeStructureAction" wtsa ON ((((wts."WorkflowTreeStructureID" = wtsa."WorkflowTreeStructureID") AND (wtsa."IsActive" = true)) AND (wtsa."IsDeleted" = false))))
  WHERE ((wts."ParentID" IS NULL) AND (wts."Level" = 1))
UNION ALL
 SELECT uuid_generate_v1() AS "ID",
    wts."Name",
    wts."WorkflowID",
    wts."WorkflowVersionNumber",
    wts."WorkflowTreeStructureID",
    wts."InterfacePanelID",
    wts."InterfacePanelVersionNumber",
    wts."Level",
    wts."ParentID",
    wts."ItemOrder",
    wtsa."WorkflowActionID",
    COALESCE(wtsa."IsVisible", true) AS "IsVisible",
    wtsa."ConditionString"
   FROM ("WorkflowTreeStructure" wts
     LEFT JOIN "WorkflowTreeStructureAction" wtsa ON ((((wts."WorkflowTreeStructureID" = wtsa."WorkflowTreeStructureID") AND (wtsa."IsActive" = true)) AND (wtsa."IsDeleted" = false))))
  WHERE ((wts."ParentID" IS NOT NULL) AND (wts."Level" = 2))
UNION ALL
 SELECT uuid_generate_v1() AS "ID",
    wts."Name",
    wts."WorkflowID",
    wts."WorkflowVersionNumber",
    wts."WorkflowTreeStructureID",
    wts."InterfacePanelID",
    wts."InterfacePanelVersionNumber",
    wts."Level",
    wts."ParentID",
    wts."ItemOrder",
    wtsa."WorkflowActionID",
    COALESCE(wtsa."IsVisible", true) AS "IsVisible",
    wtsa."ConditionString"
   FROM ("WorkflowTreeStructure" wts
     LEFT JOIN "WorkflowTreeStructureAction" wtsa ON ((((wts."WorkflowTreeStructureID" = wtsa."WorkflowTreeStructureID") AND (wtsa."IsActive" = true)) AND (wtsa."IsDeleted" = false))))
  WHERE ((wts."ParentID" IS NOT NULL) AND (wts."Level" = 3))
UNION ALL
 SELECT uuid_generate_v1() AS "ID",
    wts."Name",
    wts."WorkflowID",
    wts."WorkflowVersionNumber",
    wts."WorkflowTreeStructureID",
    wts."InterfacePanelID",
    wts."InterfacePanelVersionNumber",
    wts."Level",
    wts."ParentID",
    wts."ItemOrder",
    wtsa."WorkflowActionID",
    COALESCE(wtsa."IsVisible", true) AS "IsVisible",
    wtsa."ConditionString"
   FROM ("WorkflowTreeStructure" wts
     LEFT JOIN "WorkflowTreeStructureAction" wtsa ON ((((wts."WorkflowTreeStructureID" = wtsa."WorkflowTreeStructureID") AND (wtsa."IsActive" = true)) AND (wtsa."IsDeleted" = false))))
  WHERE ((wts."ParentID" IS NOT NULL) AND (wts."Level" = 4));


ALTER TABLE "vWorkflowTree" OWNER TO postgres;

SET search_path = public_audit, pg_catalog;

--
-- TOC entry 790 (class 1259 OID 44289)
-- Name: Plan; Type: TABLE; Schema: public_audit; Owner: postgres; Tablespace:
--

CREATE TABLE "Plan" (
    "PlanID" uuid,
    "PlanVersionNumber" integer,
    "Name" character varying(200),
    "Description" character varying(2000),
    "InvoiceName" character varying(200),
    "Price" numeric(30,8),
    "Period" integer,
    "TrialPeriod" integer,
    "PeriodUnitID" integer,
    "TrialPeriodUnitID" integer,
    "FreeQuantity" integer,
    "SetupCost" numeric(30,8),
    "DowngradePenalty" numeric(30,8),
    "CreatedOn" timestamp without time zone,
    "CreatedBy" character varying(200),
    "IsActive" boolean,
    "IsDeleted" boolean,
    "CountryCode" character varying(300),
    "CurrencyCode" character varying(150),
    "CancellationPeriod" integer,
    "CancellationPeriodUnitID" integer,
    "IsFree" boolean,
    "HasInfinitePeriods" boolean,
    "ParentID" uuid,
    "PlanTemplateID" uuid,
    "PlanTemplateVersionNumber" integer,
    "PlanStatusID" integer,
    "IsTransactionBased" boolean,
    "CoolOffPeriod" integer,
    "CoolOffPeriodUnitID" integer,
    "RenewalPrice" numeric(30,8),
    "RenewalPercentage" numeric(30,8),
    "RenewalIsPercentageOfOriginalPrice" boolean,
    "HasForwardCycleFee" boolean,
    "ForwardCycleFee" numeric(30,8),
    "ForwardCycleFreeIsSameAsPrice" numeric(30,8),
    "RenewalOfferPeriod" integer,
    "RenewalOfferPeriodUnitID" integer,
    "ForwardCycleFeePeriod" integer,
    "ForwardCycleFeePeriodUnitID" integer,
    "HasRenewalOffer" boolean,
    "PriceDailyProRata" numeric(30,8),
    "IsAutoRenew" boolean,
    "AutoRenewDecisionPeriod" integer,
    "AutoRenewDecisionUnitID" integer,
    "AutoRenewPeriod" integer,
    "AutoRenewPeriodUnitID" integer,
    "PlanGroupID" integer,
    "PlanTypeID" integer,
    "PlanCategoryID" integer,
    "ModifiedOn" date,
    "ModifiedBy" character varying(200),
    stamp timestamp with time zone DEFAULT now() NOT NULL,
    "current_user" text DEFAULT "current_user"() NOT NULL,
    "session_user" text DEFAULT "session_user"() NOT NULL,
    operation text NOT NULL
);


ALTER TABLE "Plan" OWNER TO postgres;

--
-- TOC entry 791 (class 1259 OID 44298)
-- Name: ProductDetail; Type: TABLE; Schema: public_audit; Owner: postgres; Tablespace:
--

CREATE TABLE "ProductDetail" (
    "ProductDetailID" uuid,
    "Name" character varying(1000),
    "Description" character varying(2000),
    "ProductID" uuid,
    "IsActive" boolean,
    "IsDeleted" boolean,
    "ShortDescription" character varying,
    "LongDescription" character varying,
    "MetaKeywords" character varying(400),
    "MetaDescription" character varying,
    "MetaTitle" character varying(400),
    "RequireOtherProducts" boolean,
    "AutomaticallyAddRequiredProducts" boolean,
    "HasUserAgreement" boolean,
    "UserAgreementText" character varying,
    "IsRecurring" boolean,
    "RecurringCycleLength" integer,
    "RecurringCyclePeriodID" integer,
    "RecurringTotalCycle" integer,
    "IsTaxExempt" boolean,
    "TaxCategoryID" integer,
    "OrderMinimumQuantity" integer,
    "OrderMaximumQuantity" integer,
    "CallForPrice" boolean,
    "Price" numeric,
    "ProductCost" numeric,
    "CustomerEntersPrice" boolean,
    "HasTierPrices" boolean,
    "HasDiscountsApplied" boolean,
    "MinimumCustomerEnteredPrice" numeric,
    "MaximumCustomerEnteredPrice" numeric,
    "DisplayOrder" integer,
    "AvailableStartDate" timestamp without time zone,
    "AvailableEndDate" timestamp without time zone,
    "ProductTypeID" integer,
    "ProductSubTypeID" integer,
    "ProductCategoryID" integer,
    "ProductSubCategoryID" integer,
    "ProductVersionID" integer,
    "CurrencyCode" character varying(30),
    "CurrencyRate" numeric,
    "CurrencyRateDate" date,
    "CurrencyRateToGBP" numeric,
    "CurrencyRateToUSD" numeric,
    "InvoiceName" character varying(2000),
    "IsDepositProduct" boolean,
    stamp timestamp with time zone DEFAULT now() NOT NULL,
    "current_user" text DEFAULT "current_user"() NOT NULL,
    "session_user" text DEFAULT "session_user"() NOT NULL,
    operation text NOT NULL
);


ALTER TABLE "ProductDetail" OWNER TO postgres;

SET search_path = sts, pg_catalog;

--
-- TOC entry 792 (class 1259 OID 44307)
-- Name: LRDocument; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "LRDocument" (
    "LRDocumentID" uuid DEFAULT public.uuid_generate_v1() NOT NULL,
    "LRTitleID" uuid NOT NULL,
    "AttachmentID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ProductPurchaseProductTaskID" uuid
);


ALTER TABLE "LRDocument" OWNER TO postgres;

--
-- TOC entry 793 (class 1259 OID 44313)
-- Name: LRRegisterExtract; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "LRRegisterExtract" (
    "LRRegisterExtractID" uuid DEFAULT public.uuid_generate_v1() NOT NULL,
    "LRTitleID" uuid NOT NULL,
    "RegisterExtractData" json,
    "CreatedOn" timestamp without time zone NOT NULL,
    "CreatedBy" character varying(200),
    "ProductPurchaseProductTaskID" uuid
);


ALTER TABLE "LRRegisterExtract" OWNER TO postgres;

--
-- TOC entry 794 (class 1259 OID 44320)
-- Name: LRTitle; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "LRTitle" (
    "LRTitleID" uuid DEFAULT public.uuid_generate_v1() NOT NULL,
    "TitleNumber" character varying(50) NOT NULL,
    "StsPropertyID" uuid NOT NULL,
    "Description" character varying(2000),
    "CreatedOn" timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    "CreatedBy" character varying(200),
    "ParentID" uuid,
    "ProductPurchaseProductTaskID" uuid NOT NULL,
    "StsSearchPropertyID" uuid,
    "LRPropertyTenureTypeID" integer NOT NULL,
    "AddressID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "LRTitle" OWNER TO postgres;

--
-- TOC entry 795 (class 1259 OID 44330)
-- Name: PropertyDetail; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "PropertyDetail" (
    "PropertyDetailID" uuid DEFAULT public.uuid_generate_v1() NOT NULL,
    "PropertyDetailAddressID" uuid NOT NULL,
    "PropertyDetailTypeID" integer,
    "PropertyDetailSubTypeID" integer,
    "PropertyDetailCategoryID" integer
);


ALTER TABLE "PropertyDetail" OWNER TO postgres;

--
-- TOC entry 796 (class 1259 OID 44334)
-- Name: StsAccountDocument; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsAccountDocument" (
    "AccountID" uuid NOT NULL,
    "StsDocumentID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "StsAccountDocument" uuid DEFAULT public.uuid_generate_v1() NOT NULL
);


ALTER TABLE "StsAccountDocument" OWNER TO postgres;

--
-- TOC entry 797 (class 1259 OID 44340)
-- Name: StsActor; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsActor" (
    "OrganisationID" uuid,
    "ActorID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ActorUserAccountOrganisationID" uuid,
    "StsActorID" uuid NOT NULL,
    "StsInviteID" uuid,
    "IsActorOrganisatonPersonal" boolean DEFAULT false NOT NULL,
    "CreatedBy" uuid NOT NULL,
    "CreatedOn" timestamp without time zone NOT NULL,
    "ActorAccountID" uuid,
    "ActorContactID" uuid,
    "ContactDrivenActor" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StsActor" OWNER TO postgres;

--
-- TOC entry 798 (class 1259 OID 44347)
-- Name: StsActorAuthority; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsActorAuthority" (
    "StsActorAuthorityID" uuid DEFAULT public.uuid_generate_v1() NOT NULL,
    "StsActorID" uuid NOT NULL,
    "WillBeARegisteredOwner" boolean DEFAULT false NOT NULL,
    "IsARegisteredOwner" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "HasAuthorityToSellOnBelhalfOf" boolean DEFAULT false NOT NULL,
    "HasAuthorityToByOnTheBehalfOf" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StsActorAuthority" OWNER TO postgres;

--
-- TOC entry 799 (class 1259 OID 44357)
-- Name: StsActorProcessLog; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsActorProcessLog" (
    "StsActorProcessLogID" oid NOT NULL,
    "CreatedOn" timestamp without time zone NOT NULL,
    "StsActorID" uuid,
    "StatusTypeID" uuid,
    "StatusTypeVersionNumber" integer,
    "StatusTypeValueID" uuid
);


ALTER TABLE "StsActorProcessLog" OWNER TO postgres;

--
-- TOC entry 800 (class 1259 OID 44360)
-- Name: StsActorPurchase; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsActorPurchase" (
    "StsActorPurchaseID" uuid NOT NULL,
    "StsActorID" uuid NOT NULL,
    "IsShareOfPropertyPercentageDriven" boolean DEFAULT false NOT NULL,
    "ShareOfPropertyPricePercentage" numeric(30,8),
    "ShareOfPropertyPriceValue" numeric(30,8),
    "IsUsingAMortgage" boolean DEFAULT false NOT NULL,
    "MortgageFirstApplicant" boolean DEFAULT false NOT NULL,
    "MortgagePercentage" numeric(30,8) DEFAULT 0 NOT NULL,
    "MortgageAmount" numeric(30,8) NOT NULL,
    "MortgageValue" numeric(30,8),
    "MortgageLenderID" integer,
    "MortgageApplicationNumber" character varying(50),
    "MortgageTypeID" integer,
    "IsUsingAMortgageBroker" boolean DEFAULT false NOT NULL,
    "MortgageBrokerStsActorStructureID" uuid,
    "MortgageApplicantStsActorStructureID" uuid,
    "IsSharedOwnership" boolean DEFAULT false,
    "ShareOfPropertyPriceIsCashBuy" boolean DEFAULT false,
    "IsUsingADeposit" boolean DEFAULT false
);


ALTER TABLE "StsActorPurchase" OWNER TO postgres;

--
-- TOC entry 801 (class 1259 OID 44371)
-- Name: StsActorStructure; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsActorStructure" (
    "StsActorStructureID" uuid NOT NULL,
    "PrimaryStsActorID" uuid NOT NULL,
    "SecondaryStsActorID" uuid NOT NULL,
    "ActorPrimarySecondaryRelationshipTypeID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "HasSeenSecondaryFaceToFace" boolean DEFAULT false NOT NULL,
    "DateSeenSecondaryFaceToFace" timestamp without time zone,
    "PlaceSeenSecondaryFaceToFaceID" integer,
    "PlaceSeenSecondaryFaceToFaceDesc" character varying(2000),
    "SecondaryStsActorAccountID" uuid,
    "HasActedForSecondaryOnPrevious" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StsActorStructure" OWNER TO postgres;

--
-- TOC entry 802 (class 1259 OID 44381)
-- Name: StsActorStsSearch; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsActorStsSearch" (
    "StsActorID" uuid NOT NULL,
    "StsSearchID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "StatusTypeID" uuid,
    "StatusTypeVersionNumber" integer,
    "StatusTypeValueID" uuid,
    "StsActorStructureID" uuid,
    "IsPrimary" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StsActorStsSearch" OWNER TO postgres;

--
-- TOC entry 803 (class 1259 OID 44387)
-- Name: StsActorStsTransaction; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsActorStsTransaction" (
    "StsActorID" uuid NOT NULL,
    "StsTransactionID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "StatusTypeID" uuid,
    "StatusTypeVersionNumber" integer,
    "StatusTypeValueID" uuid,
    "StsActorStructureID" uuid,
    "IsPrimary" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StsActorStsTransaction" OWNER TO postgres;

--
-- TOC entry 804 (class 1259 OID 44393)
-- Name: StsAuthority; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsAuthority" (
    "StsAuthorityID" uuid NOT NULL,
    "StsActorAuthorityID" uuid,
    "RegisteredProprietorTypeID" integer,
    "StsAuthorityStsActorStructureID" uuid,
    "ContactID" uuid,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StsAuthority" OWNER TO postgres;

--
-- TOC entry 805 (class 1259 OID 44398)
-- Name: StsAuthorityStsDocument; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsAuthorityStsDocument" (
    "StsAuthorityID" uuid NOT NULL,
    "StsDocumentID" uuid NOT NULL
);


ALTER TABLE "StsAuthorityStsDocument" OWNER TO postgres;

--
-- TOC entry 806 (class 1259 OID 44401)
-- Name: StsDocument; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsDocument" (
    "StsDocumentID" uuid DEFAULT public.uuid_generate_v1() NOT NULL,
    "Name" character varying(200) NOT NULL,
    "Description" character varying(2000),
    "DocumentTypeID" integer,
    "DocumentSubTypeID" integer,
    "DocumentCategoryID" integer,
    "DocumentSubCategoryID" integer NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "AttachmentID" uuid,
    "DocumentHasExpiry" boolean DEFAULT false NOT NULL,
    "DocumentExpiryDate" timestamp without time zone,
    "DocumentTypeValue" character varying(1000),
    "DocumentCertificationTypeID" integer,
    "DocumentCertificationNameOnStamp" character varying(300),
    "DocumentCertificationBy" character varying(500)
);


ALTER TABLE "StsDocument" OWNER TO postgres;

--
-- TOC entry 807 (class 1259 OID 44411)
-- Name: StsDocumentProcessLog; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsDocumentProcessLog" (
    "CreatedOn" timestamp without time zone NOT NULL,
    "StsDocumentID" uuid NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "StatusChangedOn" timestamp without time zone,
    "StatusChangedBy" uuid,
    "StsDocumentProcessLog" uuid DEFAULT public.uuid_generate_v1() NOT NULL,
    "StatusChangedByContactID" uuid
);


ALTER TABLE "StsDocumentProcessLog" OWNER TO postgres;

--
-- TOC entry 808 (class 1259 OID 44417)
-- Name: StsInvite; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsInvite" (
    "StsInviteID" uuid NOT NULL,
    "NotificationID" uuid,
    "CreatedOn" timestamp without time zone NOT NULL,
    "InviteTypeID" integer,
    "InviteDetail" json,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "InviteSubTypeID" integer,
    "InviteCategoryID" integer,
    "InviteSubCategoryID" integer,
    "InviteIsExistingUser" boolean DEFAULT false NOT NULL,
    "CreatedBy" uuid NOT NULL
);


ALTER TABLE "StsInvite" OWNER TO postgres;

--
-- TOC entry 809 (class 1259 OID 44426)
-- Name: StsInviteProcessLog; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsInviteProcessLog" (
    "StsInviteID" uuid NOT NULL,
    "CreatedOn" timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "IsCancelled" boolean DEFAULT false NOT NULL,
    "IsClosed" boolean DEFAULT false NOT NULL,
    "IsRejected" boolean DEFAULT false NOT NULL,
    "RejectReasonTypeID" integer,
    "RejectReasonComments" character varying(2000)
);


ALTER TABLE "StsInviteProcessLog" OWNER TO postgres;

--
-- TOC entry 810 (class 1259 OID 44436)
-- Name: StsSearch; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsSearch" (
    "StsSearchID" uuid DEFAULT public.uuid_generate_v1() NOT NULL,
    "StsSearchTypeID" integer,
    "StsSearchSubTypeID" integer,
    "StsSearchCategoryID" integer,
    "StsSearchSubCategoryID" integer,
    "InternalReferenceNumber" character varying(200),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "AssignedToUserAccountOrganisationID" uuid NOT NULL,
    "CreatedOn" timestamp without time zone NOT NULL
);


ALTER TABLE "StsSearch" OWNER TO postgres;

--
-- TOC entry 811 (class 1259 OID 44442)
-- Name: StsSearchDetail; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsSearchDetail" (
    "StsSearchDetailID" uuid NOT NULL,
    "StsSearchID" uuid NOT NULL
);


ALTER TABLE "StsSearchDetail" OWNER TO postgres;

--
-- TOC entry 812 (class 1259 OID 44445)
-- Name: StsSearchProcessLog; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsSearchProcessLog" (
    "StsSearchID" uuid NOT NULL,
    "CreatedOn" timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "IsCancelled" boolean DEFAULT false NOT NULL,
    "IsClosed" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StsSearchProcessLog" OWNER TO postgres;

--
-- TOC entry 813 (class 1259 OID 44451)
-- Name: StsSearchPropertyDetail; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsSearchPropertyDetail" (
    "StsSearchID" uuid NOT NULL,
    "PropertyDetailID" uuid NOT NULL,
    "PropertyPrice" numeric(30,8) NOT NULL,
    "PropertyTenureID" integer,
    "StsSearchPropertyDetailID" uuid DEFAULT public.uuid_generate_v1() NOT NULL
);


ALTER TABLE "StsSearchPropertyDetail" OWNER TO postgres;

--
-- TOC entry 814 (class 1259 OID 44455)
-- Name: StsSearchRelation; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsSearchRelation" (
    "BuyerStsSearchID" uuid NOT NULL,
    "SellerStsSearchID" uuid NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "IsCancelled" boolean DEFAULT false NOT NULL,
    "IsClosed" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StsSearchRelation" OWNER TO postgres;

--
-- TOC entry 815 (class 1259 OID 44460)
-- Name: StsSourceOfFunds; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsSourceOfFunds" (
    "StsSourceOfFunds" uuid NOT NULL,
    "SourceOfFundsTypeID" integer NOT NULL,
    "SourceOfFundsProvider" character varying(400),
    "StsActorPurchaseID" uuid NOT NULL,
    "SourceOfFundsPercentage" numeric(30,8),
    "SourceOfFundsAmount" numeric(30,8),
    "SourceOfFundsIsPercentageBased" boolean DEFAULT false NOT NULL,
    "SourceOfFundsInterestRate" numeric(30,8) NOT NULL,
    "SourceOfFundsCurrentBalance" numeric(30,8),
    "SourceOfFundsMonthlyRepaymentAmount" numeric(30,8),
    "SourceOfFundsProviderMaintainsInterestInProperty" boolean DEFAULT false NOT NULL,
    "SourceOfFundsStsActorStructureID" uuid,
    "IsSourceOfFundsPersonal" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StsSourceOfFunds" OWNER TO postgres;

--
-- TOC entry 816 (class 1259 OID 44466)
-- Name: StsSourceOfFundsStsDocument; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsSourceOfFundsStsDocument" (
    "StsSourceOfFunds" uuid NOT NULL,
    "StsDocumentID" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "StsSourceOfFundsStsDocumentID" uuid DEFAULT public.uuid_generate_v1() NOT NULL
);


ALTER TABLE "StsSourceOfFundsStsDocument" OWNER TO postgres;

--
-- TOC entry 817 (class 1259 OID 44472)
-- Name: StsTransaction; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsTransaction" (
    "StsTransactionID" uuid DEFAULT public.uuid_generate_v1() NOT NULL,
    "TransactionTypeID" integer,
    "TransactionCategoryID" integer,
    "Name" character varying(500) NOT NULL,
    "Description" character varying(2000),
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ParentID" uuid,
    "InternalReferenceNumber" character varying(200),
    "OrganisationID" uuid
);


ALTER TABLE "StsTransaction" OWNER TO postgres;

--
-- TOC entry 818 (class 1259 OID 44481)
-- Name: StsTransactionComponent; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsTransactionComponent" (
    "StsTransactionComponentID" uuid NOT NULL,
    "StsTransactionComponentTypeID" integer NOT NULL,
    "StsTransactionComponentValue" uuid NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "ArtefactID" uuid,
    "ArtefactVersionNumber" integer,
    "StsTransactionID" uuid NOT NULL
);


ALTER TABLE "StsTransactionComponent" OWNER TO postgres;

--
-- TOC entry 819 (class 1259 OID 44486)
-- Name: StsTransactionProcessLog; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsTransactionProcessLog" (
    "StsTransactionID" uuid NOT NULL,
    "CreatedOn" timestamp without time zone NOT NULL,
    "StatusTypeID" uuid NOT NULL,
    "StatusTypeVersionNumber" integer NOT NULL,
    "StatusTypeValueID" uuid NOT NULL,
    "IsArchived" boolean DEFAULT false NOT NULL,
    "IsActive" boolean DEFAULT true NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "IsClosed" boolean DEFAULT false NOT NULL
);


ALTER TABLE "StsTransactionProcessLog" OWNER TO postgres;

--
-- TOC entry 820 (class 1259 OID 44493)
-- Name: StsTransactionPropertyDetail; Type: TABLE; Schema: sts; Owner: postgres; Tablespace:
--

CREATE TABLE "StsTransactionPropertyDetail" (
    "StsTransactionPropertyDetailID" uuid NOT NULL,
    "StsTransactionID" uuid NOT NULL,
    "PropertyDetailID" uuid NOT NULL
);


ALTER TABLE "StsTransactionPropertyDetail" OWNER TO postgres;

SET search_path = audit, pg_catalog;

--
-- TOC entry 4735 (class 2604 OID 44496)
-- Name: event_id; Type: DEFAULT; Schema: audit; Owner: postgres
--

ALTER TABLE ONLY logged_actions ALTER COLUMN event_id SET DEFAULT nextval('logged_actions_event_id_seq'::regclass);


SET search_path = hangfire, pg_catalog;

--
-- TOC entry 4737 (class 2604 OID 44497)
-- Name: id; Type: DEFAULT; Schema: hangfire; Owner: postgres
--

ALTER TABLE ONLY counter ALTER COLUMN id SET DEFAULT nextval('counter_id_seq'::regclass);


--
-- TOC entry 4739 (class 2604 OID 44498)
-- Name: id; Type: DEFAULT; Schema: hangfire; Owner: postgres
--

ALTER TABLE ONLY hash ALTER COLUMN id SET DEFAULT nextval('hash_id_seq'::regclass);


--
-- TOC entry 4741 (class 2604 OID 44499)
-- Name: id; Type: DEFAULT; Schema: hangfire; Owner: postgres
--

ALTER TABLE ONLY job ALTER COLUMN id SET DEFAULT nextval('job_id_seq'::regclass);


--
-- TOC entry 4743 (class 2604 OID 44500)
-- Name: id; Type: DEFAULT; Schema: hangfire; Owner: postgres
--

ALTER TABLE ONLY jobparameter ALTER COLUMN id SET DEFAULT nextval('jobparameter_id_seq'::regclass);


--
-- TOC entry 4745 (class 2604 OID 44501)
-- Name: id; Type: DEFAULT; Schema: hangfire; Owner: postgres
--

ALTER TABLE ONLY jobqueue ALTER COLUMN id SET DEFAULT nextval('jobqueue_id_seq'::regclass);


--
-- TOC entry 4747 (class 2604 OID 44502)
-- Name: id; Type: DEFAULT; Schema: hangfire; Owner: postgres
--

ALTER TABLE ONLY list ALTER COLUMN id SET DEFAULT nextval('list_id_seq'::regclass);


--
-- TOC entry 4751 (class 2604 OID 44503)
-- Name: id; Type: DEFAULT; Schema: hangfire; Owner: postgres
--

ALTER TABLE ONLY set ALTER COLUMN id SET DEFAULT nextval('set_id_seq'::regclass);


--
-- TOC entry 4753 (class 2604 OID 44504)
-- Name: id; Type: DEFAULT; Schema: hangfire; Owner: postgres
--

ALTER TABLE ONLY state ALTER COLUMN id SET DEFAULT nextval('state_id_seq'::regclass);


SET search_path = public, pg_catalog;

--
-- TOC entry 4837 (class 2604 OID 44505)
-- Name: AttachmentDetailGroupID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "AttachmentDetailGroup" ALTER COLUMN "AttachmentDetailGroupID" SET DEFAULT nextval('"AttachmentDetailGroup_AttachmentDetailGroupID_seq"'::regclass);


--
-- TOC entry 4840 (class 2604 OID 44506)
-- Name: AttachmentDetailRoleID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "AttachmentDetailRole" ALTER COLUMN "AttachmentDetailRoleID" SET DEFAULT nextval('"AttachmentDetailRole_AttachmentDetailRoleID_seq"'::regclass);


--
-- TOC entry 4881 (class 2604 OID 44507)
-- Name: ClassificationTypeID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ClassificationType" ALTER COLUMN "ClassificationTypeID" SET DEFAULT nextval('"ClassificationType_ClassificationTypeID_seq"'::regclass);


--
-- TOC entry 4884 (class 2604 OID 44508)
-- Name: ClassificationTypeCategoryID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ClassificationTypeCategory" ALTER COLUMN "ClassificationTypeCategoryID" SET DEFAULT nextval('"ClassificationTypeCategory_ClassificationTypeCategoryID_seq"'::regclass);


--
-- TOC entry 4925 (class 2604 OID 44509)
-- Name: CurrencyRateID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "CurrencyRate" ALTER COLUMN "CurrencyRateID" SET DEFAULT nextval('"CurrencyRate_currencyrateid_seq"'::regclass);


--
-- TOC entry 4995 (class 2604 OID 44510)
-- Name: DefaultOrganisationRoleClaimID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleClaim" ALTER COLUMN "DefaultOrganisationRoleClaimID" SET DEFAULT nextval('"DefaultOrganisationRoleClaim_DefaultOrganisationRoleClaimID_seq"'::regclass);


--
-- TOC entry 4998 (class 2604 OID 44511)
-- Name: DefaultOrganisationRoleClaimTemplateID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleClaimTemplate" ALTER COLUMN "DefaultOrganisationRoleClaimTemplateID" SET DEFAULT nextval('"DefaultOrganisationRoleClaimT_DefaultOrganisationRoleClaimT_seq"'::regclass);


--
-- TOC entry 5462 (class 2604 OID 44512)
-- Name: OrganisationRoleClaimID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationRoleClaim" ALTER COLUMN "OrganisationRoleClaimID" SET DEFAULT nextval('"OrganisationRoleClaim_OrganisationRoleClaimID_seq"'::regclass);


--
-- TOC entry 5491 (class 2604 OID 44513)
-- Name: OrganisationUnitID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationUnit" ALTER COLUMN "OrganisationUnitID" SET DEFAULT nextval('"OrganisationUnit_OrganisationUnitID_seq"'::regclass);


--
-- TOC entry 5498 (class 2604 OID 44514)
-- Name: OrganisationUnitStructureID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationUnitStructure" ALTER COLUMN "OrganisationUnitStructureID" SET DEFAULT nextval('"OrganisationUnitStructure_OrganisationUnitStructureID_seq"'::regclass);


--
-- TOC entry 5856 (class 2604 OID 44515)
-- Name: RepositoryStructureGroupID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "RepositoryStructureGroup" ALTER COLUMN "RepositoryStructureGroupID" SET DEFAULT nextval('"RepositoryStructureGroup_RepositoryStructureGroupID_seq"'::regclass);


--
-- TOC entry 5859 (class 2604 OID 44516)
-- Name: RepositoryStructureRoleID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "RepositoryStructureRole" ALTER COLUMN "RepositoryStructureRoleID" SET DEFAULT nextval('"RepositoryStructureRole_RepositoryStructureRoleID_seq"'::regclass);


--
-- TOC entry 5871 (class 2604 OID 44517)
-- Name: RoleClaimID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "RoleClaim" ALTER COLUMN "RoleClaimID" SET DEFAULT nextval('"RoleTemplateClaim_RoleTemplateClaimID_seq"'::regclass);


--
-- TOC entry 5892 (class 2604 OID 44518)
-- Name: Id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Setting" ALTER COLUMN "Id" SET DEFAULT nextval('"Setting_Id_seq"'::regclass);


--
-- TOC entry 5981 (class 2604 OID 44519)
-- Name: StructureID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Structure" ALTER COLUMN "StructureID" SET DEFAULT nextval('"Structure_StructureID_seq"'::regclass);


--
-- TOC entry 6025 (class 2604 OID 44520)
-- Name: UserAccountArchiveTypeID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountArchive" ALTER COLUMN "UserAccountArchiveTypeID" SET DEFAULT nextval('"UserAccountArchive_UserAccountArchiveTypeID_seq"'::regclass);


--
-- TOC entry 6026 (class 2604 OID 44521)
-- Name: UserAccountArchiveCategoryID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountArchive" ALTER COLUMN "UserAccountArchiveCategoryID" SET DEFAULT nextval('"UserAccountArchive_UserAccountArchiveCategoryID_seq"'::regclass);


--
-- TOC entry 6119 (class 2604 OID 44522)
-- Name: WorkflowExecutionStatusID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowExecutionStatus" ALTER COLUMN "WorkflowExecutionStatusID" SET DEFAULT nextval('"WorkflowExecutionStatus_WorkflowExecutionStatusID_seq"'::regclass);


--
-- TOC entry 6126 (class 2604 OID 44523)
-- Name: WorkflowInstanceExecutionID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowInstanceExecution" ALTER COLUMN "WorkflowInstanceExecutionID" SET DEFAULT nextval('"WorkflowInstanceExecution_WorkflowInstanceExecutionID_seq"'::regclass);


--
-- TOC entry 6128 (class 2604 OID 44524)
-- Name: WorkflowInstanceExecutionDataItemID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowInstanceExecutionDataItem" ALTER COLUMN "WorkflowInstanceExecutionDataItemID" SET DEFAULT nextval('"WorkflowInstanceExecutionData_WorkflowInstanceExecutionData_seq"'::regclass);


--
-- TOC entry 6130 (class 2604 OID 44525)
-- Name: WorkflowInstanceExecutionStatusEventID; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowInstanceExecutionStatusEvent" ALTER COLUMN "WorkflowInstanceExecutionStatusEventID" SET DEFAULT nextval('"WorkflowInstanceExecutionStat_WorkflowInstanceExecutionStat_seq"'::regclass);


SET search_path = audit, pg_catalog;

--
-- TOC entry 6266 (class 2606 OID 45430)
-- Name: logged_actions_pkey; Type: CONSTRAINT; Schema: audit; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY logged_actions
    ADD CONSTRAINT logged_actions_pkey PRIMARY KEY (event_id);


SET search_path = hangfire, pg_catalog;

--
-- TOC entry 6269 (class 2606 OID 45432)
-- Name: counter_pkey; Type: CONSTRAINT; Schema: hangfire; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY counter
    ADD CONSTRAINT counter_pkey PRIMARY KEY (id);


--
-- TOC entry 6272 (class 2606 OID 45434)
-- Name: hash_key_field_key; Type: CONSTRAINT; Schema: hangfire; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY hash
    ADD CONSTRAINT hash_key_field_key UNIQUE (key, field);


--
-- TOC entry 6274 (class 2606 OID 45436)
-- Name: hash_pkey; Type: CONSTRAINT; Schema: hangfire; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY hash
    ADD CONSTRAINT hash_pkey PRIMARY KEY (id);


--
-- TOC entry 6277 (class 2606 OID 45438)
-- Name: job_pkey; Type: CONSTRAINT; Schema: hangfire; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY job
    ADD CONSTRAINT job_pkey PRIMARY KEY (id);


--
-- TOC entry 6280 (class 2606 OID 45440)
-- Name: jobparameter_pkey; Type: CONSTRAINT; Schema: hangfire; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY jobparameter
    ADD CONSTRAINT jobparameter_pkey PRIMARY KEY (id);


--
-- TOC entry 6283 (class 2606 OID 45442)
-- Name: jobqueue_pkey; Type: CONSTRAINT; Schema: hangfire; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY jobqueue
    ADD CONSTRAINT jobqueue_pkey PRIMARY KEY (id);


--
-- TOC entry 6285 (class 2606 OID 45444)
-- Name: list_pkey; Type: CONSTRAINT; Schema: hangfire; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY list
    ADD CONSTRAINT list_pkey PRIMARY KEY (id);


--
-- TOC entry 6287 (class 2606 OID 45446)
-- Name: lock_resource_key; Type: CONSTRAINT; Schema: hangfire; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY lock
    ADD CONSTRAINT lock_resource_key UNIQUE (resource);


--
-- TOC entry 6289 (class 2606 OID 45448)
-- Name: schema_pkey; Type: CONSTRAINT; Schema: hangfire; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY schema
    ADD CONSTRAINT schema_pkey PRIMARY KEY (version);


--
-- TOC entry 6291 (class 2606 OID 45450)
-- Name: server_pkey; Type: CONSTRAINT; Schema: hangfire; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY server
    ADD CONSTRAINT server_pkey PRIMARY KEY (id);


--
-- TOC entry 6293 (class 2606 OID 45452)
-- Name: set_key_value_key; Type: CONSTRAINT; Schema: hangfire; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY set
    ADD CONSTRAINT set_key_value_key UNIQUE (key, value);


--
-- TOC entry 6295 (class 2606 OID 45454)
-- Name: set_pkey; Type: CONSTRAINT; Schema: hangfire; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY set
    ADD CONSTRAINT set_pkey PRIMARY KEY (id);


--
-- TOC entry 6298 (class 2606 OID 45456)
-- Name: state_pkey; Type: CONSTRAINT; Schema: hangfire; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY state
    ADD CONSTRAINT state_pkey PRIMARY KEY (id);


SET search_path = legal, pg_catalog;

--
-- TOC entry 6300 (class 2606 OID 45458)
-- Name: pkLegalOrganisationDetails; Type: CONSTRAINT; Schema: legal; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "LegalOrganisationDetails"
    ADD CONSTRAINT "pkLegalOrganisationDetails" PRIMARY KEY ("OrganisationID");


SET search_path = public, pg_catalog;

--
-- TOC entry 6302 (class 2606 OID 45460)
-- Name: Account_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Account"
    ADD CONSTRAINT "Account_pkey" PRIMARY KEY ("AccountID");


--
-- TOC entry 6313 (class 2606 OID 45462)
-- Name: AddressChronology_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "AddressChronology"
    ADD CONSTRAINT "AddressChronology_pkey" PRIMARY KEY ("AddressChronologyID");


--
-- TOC entry 6310 (class 2606 OID 45464)
-- Name: Address_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Address"
    ADD CONSTRAINT "Address_pkey" PRIMARY KEY ("AddressID");


--
-- TOC entry 6317 (class 2606 OID 45466)
-- Name: ApplicationStageWorkflow_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ApplicationStageWorkflow"
    ADD CONSTRAINT "ApplicationStageWorkflow_pkey" PRIMARY KEY ("ApplicationStageWorkflowID");


--
-- TOC entry 6315 (class 2606 OID 45468)
-- Name: ApplicationStage_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ApplicationStage"
    ADD CONSTRAINT "ApplicationStage_pkey" PRIMARY KEY ("ApplicationStageID");


--
-- TOC entry 6366 (class 2606 OID 45470)
-- Name: AttachmentDetailGroup_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "AttachmentDetailGroup"
    ADD CONSTRAINT "AttachmentDetailGroup_pkey" PRIMARY KEY ("AttachmentDetailGroupID");


--
-- TOC entry 6374 (class 2606 OID 45472)
-- Name: AttachmentDetailRole_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "AttachmentDetailRole"
    ADD CONSTRAINT "AttachmentDetailRole_pkey" PRIMARY KEY ("AttachmentDetailRoleID");


--
-- TOC entry 6362 (class 2606 OID 45474)
-- Name: AttachmentDetail_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "AttachmentDetail"
    ADD CONSTRAINT "AttachmentDetail_pkey" PRIMARY KEY ("AttachmentDetailID");


--
-- TOC entry 6359 (class 2606 OID 45476)
-- Name: Attachment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Attachment"
    ADD CONSTRAINT "Attachment_pkey" PRIMARY KEY ("AttachmentID");


--
-- TOC entry 6376 (class 2606 OID 45478)
-- Name: BankSortCode_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "BankSortCode"
    ADD CONSTRAINT "BankSortCode_pkey" PRIMARY KEY ("SortCode", "BankName");


--
-- TOC entry 6388 (class 2606 OID 45480)
-- Name: BusMessageContent_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "BusMessageContent"
    ADD CONSTRAINT "BusMessageContent_pkey" PRIMARY KEY ("BusMessageContentID");


--
-- TOC entry 6386 (class 2606 OID 45482)
-- Name: BusMessage_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "BusMessage"
    ADD CONSTRAINT "BusMessage_pkey" PRIMARY KEY ("BusMessageID");


--
-- TOC entry 6404 (class 2606 OID 45484)
-- Name: ClassificationTypeCategory_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ClassificationTypeCategory"
    ADD CONSTRAINT "ClassificationTypeCategory_pkey" PRIMARY KEY ("ClassificationTypeCategoryID");


--
-- TOC entry 6400 (class 2606 OID 45486)
-- Name: ClassificationType_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ClassificationType"
    ADD CONSTRAINT "ClassificationType_pkey" PRIMARY KEY ("ClassificationTypeID");


--
-- TOC entry 6406 (class 2606 OID 45488)
-- Name: CompanyHouse_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "CompanyHouse"
    ADD CONSTRAINT "CompanyHouse_pkey" PRIMARY KEY (companyname);

ALTER TABLE "CompanyHouse" CLUSTER ON "CompanyHouse_pkey";


--
-- TOC entry 6413 (class 2606 OID 45490)
-- Name: Contact_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Contact"
    ADD CONSTRAINT "Contact_pkey" PRIMARY KEY ("ContactID");


--
-- TOC entry 6429 (class 2606 OID 45492)
-- Name: CurrencyRate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "CurrencyRate"
    ADD CONSTRAINT "CurrencyRate_pkey" PRIMARY KEY ("CurrencyRateID");


--
-- TOC entry 6449 (class 2606 OID 45494)
-- Name: DefaultOrganisationBranch_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationBranch"
    ADD CONSTRAINT "DefaultOrganisationBranch_pkey" PRIMARY KEY ("DefaultOrganisationBranchID");


--
-- TOC entry 6451 (class 2606 OID 45496)
-- Name: DefaultOrganisationBranch_pkeyT; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationBranchTemplate"
    ADD CONSTRAINT "DefaultOrganisationBranch_pkeyT" PRIMARY KEY ("DefaultOrganisationBranchTemplateID");


--
-- TOC entry 6459 (class 2606 OID 45498)
-- Name: DefaultOrganisationGroupDefaultOrganisationRole_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationGroupRole"
    ADD CONSTRAINT "DefaultOrganisationGroupDefaultOrganisationRole_pkey" PRIMARY KEY ("DefaultOrganisationGroupID", "DefaultOrganisationRoleID");


--
-- TOC entry 6461 (class 2606 OID 45500)
-- Name: DefaultOrganisationGroupDefaultOrganisationRole_pkeyT; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationGroupRoleTemplate"
    ADD CONSTRAINT "DefaultOrganisationGroupDefaultOrganisationRole_pkeyT" PRIMARY KEY ("DefaultOrganisationGroupTemplateID", "DefaultOrganisationRoleTemplateID");


--
-- TOC entry 6457 (class 2606 OID 45502)
-- Name: DefaultOrganisationGroup_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationGroup"
    ADD CONSTRAINT "DefaultOrganisationGroup_pkey" PRIMARY KEY ("DefaultOrganisationGroupID");


--
-- TOC entry 6467 (class 2606 OID 45504)
-- Name: DefaultOrganisationGroup_pkeyT; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationGroupTemplate"
    ADD CONSTRAINT "DefaultOrganisationGroup_pkeyT" PRIMARY KEY ("DefaultOrganisationGroupTemplateID");


--
-- TOC entry 6491 (class 2606 OID 45506)
-- Name: DefaultOrganisationRoleClaim_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationRoleClaim"
    ADD CONSTRAINT "DefaultOrganisationRoleClaim_pkey" PRIMARY KEY ("DefaultOrganisationRoleClaimID");


--
-- TOC entry 6493 (class 2606 OID 45508)
-- Name: DefaultOrganisationRoleClaim_pkeyT; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationRoleClaimTemplate"
    ADD CONSTRAINT "DefaultOrganisationRoleClaim_pkeyT" PRIMARY KEY ("DefaultOrganisationRoleClaimTemplateID");


--
-- TOC entry 6489 (class 2606 OID 45510)
-- Name: DefaultOrganisationRole_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationRole"
    ADD CONSTRAINT "DefaultOrganisationRole_pkey" PRIMARY KEY ("DefaultOrganisationRoleID");


--
-- TOC entry 6499 (class 2606 OID 45512)
-- Name: DefaultOrganisationRole_pkeyT; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationRoleTemplate"
    ADD CONSTRAINT "DefaultOrganisationRole_pkeyT" PRIMARY KEY ("DefaultOrganisationRoleTemplateID");


--
-- TOC entry 6509 (class 2606 OID 45514)
-- Name: DefaultOrganisationTarget_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationTarget"
    ADD CONSTRAINT "DefaultOrganisationTarget_pkey" PRIMARY KEY ("DefaultOrganisationTargetID");


--
-- TOC entry 6511 (class 2606 OID 45516)
-- Name: DefaultOrganisationTarget_pkeyT; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationTargetTemplate"
    ADD CONSTRAINT "DefaultOrganisationTarget_pkeyT" PRIMARY KEY ("DefaultOrganisationTargetTemplateID");


--
-- TOC entry 6545 (class 2606 OID 45518)
-- Name: ErrorCode_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ErrorCode"
    ADD CONSTRAINT "ErrorCode_pkey" PRIMARY KEY ("ErrorCodeID");


--
-- TOC entry 6559 (class 2606 OID 45520)
-- Name: GroupTemplateRole_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "GroupRole"
    ADD CONSTRAINT "GroupTemplateRole_pkey" PRIMARY KEY ("GroupID", "RoleID");


--
-- TOC entry 6571 (class 2606 OID 45522)
-- Name: InterfacePanelFDValidationOrgTypeUserTypeTemplate_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelFDValidationOrgTypeUserTypeTemplate"
    ADD CONSTRAINT "InterfacePanelFDValidationOrgTypeUserTypeTemplate_idx" PRIMARY KEY ("InterfacePanelFDValidationOrgTypeUserTypeTemplateID", "InterfacePanelFDValidationOrgTypeUserTypeTemplateVersion", "OrganisationTypeID", "FieldDetailTemplateID");


--
-- TOC entry 6573 (class 2606 OID 45524)
-- Name: InterfacePanelFDValidationOrganisationTypeUserType_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelFDValidationOrganisationTypeUserType"
    ADD CONSTRAINT "InterfacePanelFDValidationOrganisationTypeUserType_idx" PRIMARY KEY ("InterfacePanelFDValidationOrganisationTypeUserTypeID", "InterfacePanelFDValidationOrganisationTypeUserTypeVersion", "FieldDetailID", "OrganisationTypeID", "UserTypeID");


--
-- TOC entry 6587 (class 2606 OID 45526)
-- Name: InterfacePanelFieldDetailValidationOrganisationTypeTemplate_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelFieldDetailValidationOrganisationTypeTemplate"
    ADD CONSTRAINT "InterfacePanelFieldDetailValidationOrganisationTypeTemplate_idx" PRIMARY KEY ("InterfacePanelFieldDetailValidationOrganisationTypeTemplateID", "InterfacePanelFieldDetailValidationOrganisationTypeTemplateVers", "FieldDetailTemplateID", "OrganisationTypeID");


--
-- TOC entry 6585 (class 2606 OID 45528)
-- Name: InterfacePanelFieldDetailValidationOrganisationType_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelFieldDetailValidationOrganisationType"
    ADD CONSTRAINT "InterfacePanelFieldDetailValidationOrganisationType_idx" PRIMARY KEY ("InterfacePanelFieldDetailValidationOrganisationTypeID", "InterfacePanelFieldDetailValidationOrganisationTypeVersion", "FieldDetailID", "OrganisationTypeID");


--
-- TOC entry 6589 (class 2606 OID 45530)
-- Name: InterfacePanelFieldDetailValidationTemplate_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelFieldDetailValidationTemplate"
    ADD CONSTRAINT "InterfacePanelFieldDetailValidationTemplate_idx" PRIMARY KEY ("InterfacePanelFieldDetailValidationTemplateID", "InterfacePanelFieldDetailValidationTemplateVersion", "FieldDetailTemplateID", "InterfacePanelFieldDetailValidationTemplateName");


--
-- TOC entry 6583 (class 2606 OID 45532)
-- Name: InterfacePanelFieldDetailValidation_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelFieldDetailValidation"
    ADD CONSTRAINT "InterfacePanelFieldDetailValidation_idx" PRIMARY KEY ("InterfacePanelFieldDetailValidationID", "InterfacePanelFieldDetailValidationVersion", "FieldDetailID", "InterfacePanelFieldDetailValidationName");


--
-- TOC entry 6565 (class 2606 OID 45534)
-- Name: InterfacePanelRoleClaimTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelClaimTemplate"
    ADD CONSTRAINT "InterfacePanelRoleClaimTemplate_pkey" PRIMARY KEY ("ClaimID");


--
-- TOC entry 6563 (class 2606 OID 45536)
-- Name: InterfacePanelRoleClaim_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelClaim"
    ADD CONSTRAINT "InterfacePanelRoleClaim_pkey" PRIMARY KEY ("ClaimID");


--
-- TOC entry 6601 (class 2606 OID 45538)
-- Name: InterfacePanelRoleTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelRoleTemplate"
    ADD CONSTRAINT "InterfacePanelRoleTemplate_pkey" PRIMARY KEY ("InterfacePanelRoleTemplateID");


--
-- TOC entry 6599 (class 2606 OID 45540)
-- Name: InterfacePanelRole_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelRole"
    ADD CONSTRAINT "InterfacePanelRole_pkey" PRIMARY KEY ("InterfacePanelRoleID");


--
-- TOC entry 6613 (class 2606 OID 45542)
-- Name: InterfacePanelValidationOrganisationTypeTemplate_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelValidationOrganisationTypeTemplate"
    ADD CONSTRAINT "InterfacePanelValidationOrganisationTypeTemplate_idx" PRIMARY KEY ("InterfacePanelValidationOrganisationTypeTemplateID", "InterfacePanelValidationOrganisationTypeTemplateVers", "OrganisationTypeID");


--
-- TOC entry 6615 (class 2606 OID 45544)
-- Name: InterfacePanelValidationOrganisationTypeUserType_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelValidationOrganisationTypeUserType"
    ADD CONSTRAINT "InterfacePanelValidationOrganisationTypeUserType_idx" PRIMARY KEY ("InterfacePanelValidationOrganisationTypeUserTypeID", "InterfacePanelValidationOrganisationTypeUserTypeVersion", "OrganisationTypeID", "UserTypeID");


--
-- TOC entry 6611 (class 2606 OID 45546)
-- Name: InterfacePanelValidationOrganisationType_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelValidationOrganisationType"
    ADD CONSTRAINT "InterfacePanelValidationOrganisationType_idx" PRIMARY KEY ("InterfacePanelValidationOrganisationTypeID", "InterfacePanelValidationOrganisationTypeVersion", "OrganisationTypeID");


--
-- TOC entry 6618 (class 2606 OID 45548)
-- Name: InterfacePanelValidationTemplate_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelValidationTemplate"
    ADD CONSTRAINT "InterfacePanelValidationTemplate_idx" PRIMARY KEY ("InterfacePanelValidationTemplateID", "InterfacePanelValidationTemplateVersionNumber", "InterfacePanelValidationTemplateName");


--
-- TOC entry 6609 (class 2606 OID 45550)
-- Name: InterfacePanelValidation_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelValidation"
    ADD CONSTRAINT "InterfacePanelValidation_idx" PRIMARY KEY ("InterfacePanelValidationID", "InterfacePanelVersionNumber");


--
-- TOC entry 6631 (class 2606 OID 45552)
-- Name: LinkedAccountClaims_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "LinkedAccountClaims"
    ADD CONSTRAINT "LinkedAccountClaims_pkey" PRIMARY KEY ("Type", "Value");


--
-- TOC entry 6634 (class 2606 OID 45554)
-- Name: LinkedAccounts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "LinkedAccounts"
    ADD CONSTRAINT "LinkedAccounts_pkey" PRIMARY KEY ("ProviderName", "ProviderAccountID");


--
-- TOC entry 6656 (class 2606 OID 45556)
-- Name: ModulePluginTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModulePluginTemplate"
    ADD CONSTRAINT "ModulePluginTemplate_pkey" PRIMARY KEY ("ModulePluginTemplateID");


--
-- TOC entry 6654 (class 2606 OID 45558)
-- Name: ModulePlugin_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModulePlugin"
    ADD CONSTRAINT "ModulePlugin_pkey" PRIMARY KEY ("ModulePluginID");


--
-- TOC entry 6644 (class 2606 OID 45560)
-- Name: ModuleRoleClaimTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleClaimTemplate"
    ADD CONSTRAINT "ModuleRoleClaimTemplate_pkey" PRIMARY KEY ("ClaimID");


--
-- TOC entry 6642 (class 2606 OID 45562)
-- Name: ModuleRoleClaim_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleClaim"
    ADD CONSTRAINT "ModuleRoleClaim_pkey" PRIMARY KEY ("ClaimID");


--
-- TOC entry 6664 (class 2606 OID 45564)
-- Name: ModuleRoleTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleRoleTemplate"
    ADD CONSTRAINT "ModuleRoleTemplate_pkey" PRIMARY KEY ("RoleID");


--
-- TOC entry 6662 (class 2606 OID 45566)
-- Name: ModuleRole_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleRole"
    ADD CONSTRAINT "ModuleRole_pkey" PRIMARY KEY ("RoleID");


--
-- TOC entry 6668 (class 2606 OID 45568)
-- Name: ModuleSettingTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleSettingTemplate"
    ADD CONSTRAINT "ModuleSettingTemplate_pkey" PRIMARY KEY ("ModuleSettingTemplateID");


--
-- TOC entry 6666 (class 2606 OID 45570)
-- Name: ModuleSetting_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleSetting"
    ADD CONSTRAINT "ModuleSetting_pkey" PRIMARY KEY ("ModuleSettingID");


--
-- TOC entry 6676 (class 2606 OID 45572)
-- Name: ModuleSubscriptionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleSubscriptionTemplate"
    ADD CONSTRAINT "ModuleSubscriptionTemplate_pkey" PRIMARY KEY ("ModuleSubscriptionTemplateID");


--
-- TOC entry 6674 (class 2606 OID 45574)
-- Name: ModuleSubscription_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleSubscription"
    ADD CONSTRAINT "ModuleSubscription_pkey" PRIMARY KEY ("ModuleSubscriptionID");


--
-- TOC entry 6678 (class 2606 OID 45576)
-- Name: ModuleTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleTemplate"
    ADD CONSTRAINT "ModuleTemplate_pkey" PRIMARY KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 6684 (class 2606 OID 45578)
-- Name: ModuleWorkflowTargetTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleWorkflowTargetTemplate"
    ADD CONSTRAINT "ModuleWorkflowTargetTemplate_pkey" PRIMARY KEY ("ModuleWorkflowTargetTemplateID");


--
-- TOC entry 6682 (class 2606 OID 45580)
-- Name: ModuleWorkflowTarget_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleWorkflowTarget"
    ADD CONSTRAINT "ModuleWorkflowTarget_pkey" PRIMARY KEY ("ModuleWorkflowTargetID");


--
-- TOC entry 6686 (class 2606 OID 45582)
-- Name: ModuleWorkflowTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleWorkflowTemplate"
    ADD CONSTRAINT "ModuleWorkflowTemplate_pkey" PRIMARY KEY ("ModuleWorkflowTemplateID");


--
-- TOC entry 6680 (class 2606 OID 45584)
-- Name: ModuleWorkflow_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleWorkflow"
    ADD CONSTRAINT "ModuleWorkflow_pkey" PRIMARY KEY ("ModuleWorkflowID");


--
-- TOC entry 6636 (class 2606 OID 45586)
-- Name: Module_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Module"
    ADD CONSTRAINT "Module_pkey" PRIMARY KEY ("ModuleID", "ModuleVersionNumber");


--
-- TOC entry 6704 (class 2606 OID 45588)
-- Name: NotificationConstructGroupNotificationConstructTemplate_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstructGroupNotificationConstructTemplate"
    ADD CONSTRAINT "NotificationConstructGroupNotificationConstructTemplate_idx" PRIMARY KEY ("NotificationConstructGroupNotificationConstructTemplateID", "NotificationConstructGroupNotificationConstructTemplateVersion");


--
-- TOC entry 6702 (class 2606 OID 45590)
-- Name: NotificationConstructGroupNotificationConstruct_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstructGroupNotificationConstruct"
    ADD CONSTRAINT "NotificationConstructGroupNotificationConstruct_idx" PRIMARY KEY ("NotificationConstructGroupNotificationConstructID", "NotificationConstructGroupNotificationConstructVersion");


--
-- TOC entry 6706 (class 2606 OID 45592)
-- Name: NotificationConstructGroupTemplate_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstructGroupTemplate"
    ADD CONSTRAINT "NotificationConstructGroupTemplate_idx" PRIMARY KEY ("NotificationConstructGroupTemplateID", "NotificationConstructGroupTemplateVersion");


--
-- TOC entry 6700 (class 2606 OID 45594)
-- Name: NotificationConstructGroup_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstructGroup"
    ADD CONSTRAINT "NotificationConstructGroup_idx" PRIMARY KEY ("NotificationConstructGroupID", "NotificationConstructGroupVersion");


--
-- TOC entry 6690 (class 2606 OID 45596)
-- Name: NotificationConstruct_idx; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstruct"
    ADD CONSTRAINT "NotificationConstruct_idx" PRIMARY KEY ("NotificationConstructID", "NotificationConstructVersionNumber");


--
-- TOC entry 6724 (class 2606 OID 45598)
-- Name: NotificationRecipientLog_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationRecipientLog"
    ADD CONSTRAINT "NotificationRecipientLog_pkey" PRIMARY KEY ("NotificationRecipientLogID");


--
-- TOC entry 6726 (class 2606 OID 45600)
-- Name: Operation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Operation"
    ADD CONSTRAINT "Operation_pkey" PRIMARY KEY ("OperationID");


--
-- TOC entry 6730 (class 2606 OID 45602)
-- Name: OrganisationAccountingPeriod_OrganisationAccountingPeriodID_key; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationAccountingPeriod"
    ADD CONSTRAINT "OrganisationAccountingPeriod_OrganisationAccountingPeriodID_key" UNIQUE ("OrganisationAccountingPeriodID");


--
-- TOC entry 6738 (class 2606 OID 45604)
-- Name: OrganisationDetail_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationDetail"
    ADD CONSTRAINT "OrganisationDetail_pkey" PRIMARY KEY ("OrganisationDetailID");


--
-- TOC entry 6755 (class 2606 OID 45606)
-- Name: OrganisationGroupOrganisationRole_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationGroupRole"
    ADD CONSTRAINT "OrganisationGroupOrganisationRole_pkey" PRIMARY KEY ("OrganisationGroupID", "OrganisationRoleID");


--
-- TOC entry 6753 (class 2606 OID 45608)
-- Name: OrganisationGroup_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationGroup"
    ADD CONSTRAINT "OrganisationGroup_pkey" PRIMARY KEY ("OrganisationGroupID");


--
-- TOC entry 6768 (class 2606 OID 45610)
-- Name: OrganisationRoleClaim_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationRoleClaim"
    ADD CONSTRAINT "OrganisationRoleClaim_pkey" PRIMARY KEY ("OrganisationRoleClaimID");


--
-- TOC entry 6766 (class 2606 OID 45612)
-- Name: OrganisationRole_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationRole"
    ADD CONSTRAINT "OrganisationRole_pkey" PRIMARY KEY ("OrganisationRoleID");


--
-- TOC entry 6780 (class 2606 OID 45614)
-- Name: OrganisationStructure_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationStructure"
    ADD CONSTRAINT "OrganisationStructure_pkey" PRIMARY KEY ("OrganisationStructureID");


--
-- TOC entry 6782 (class 2606 OID 45616)
-- Name: OrganisationTeam_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationTeam"
    ADD CONSTRAINT "OrganisationTeam_pkey" PRIMARY KEY ("OrganisationTeamID");


--
-- TOC entry 6795 (class 2606 OID 45618)
-- Name: OrganisationUnitOrganisationGroup_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationUnitOrganisationGroup"
    ADD CONSTRAINT "OrganisationUnitOrganisationGroup_pkey" PRIMARY KEY ("OrganisationUnitID", "OrganisationGroupID");


--
-- TOC entry 6798 (class 2606 OID 45620)
-- Name: OrganisationUnitOrganisationRole_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationUnitOrganisationRole"
    ADD CONSTRAINT "OrganisationUnitOrganisationRole_pkey" PRIMARY KEY ("OrganisationUnitID", "OrganisationRoleID");


--
-- TOC entry 6803 (class 2606 OID 45622)
-- Name: OrganisationUnitStructure_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationUnitStructure"
    ADD CONSTRAINT "OrganisationUnitStructure_pkey" PRIMARY KEY ("OrganisationUnitStructureID", "OrganisationUnitID");


--
-- TOC entry 6793 (class 2606 OID 45624)
-- Name: OrganisationUnit_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationUnit"
    ADD CONSTRAINT "OrganisationUnit_pkey" PRIMARY KEY ("OrganisationUnitID");


--
-- TOC entry 6807 (class 2606 OID 45626)
-- Name: OrganisationWorkflow_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationWorkflow"
    ADD CONSTRAINT "OrganisationWorkflow_pkey" PRIMARY KEY ("OrganisationWorkflowID");


--
-- TOC entry 6728 (class 2606 OID 45628)
-- Name: Organisation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Organisation"
    ADD CONSTRAINT "Organisation_pkey" PRIMARY KEY ("OrganisationID");


--
-- TOC entry 6817 (class 2606 OID 45630)
-- Name: PackageProductRelationshipBlueprintTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PackageProductRelationshipBlueprintTemplate"
    ADD CONSTRAINT "PackageProductRelationshipBlueprintTemplate_pkey" PRIMARY KEY ("PackageProductRelationshipBlueprintTemplateID");


--
-- TOC entry 6815 (class 2606 OID 45632)
-- Name: PackageProductRelationshipBlueprint_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PackageProductRelationshipBlueprint"
    ADD CONSTRAINT "PackageProductRelationshipBlueprint_pkey" PRIMARY KEY ("PackageProductRelationshipBlueprintID");


--
-- TOC entry 6819 (class 2606 OID 45634)
-- Name: PackageProductRelationshipTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PackageProductRelationshipTemplate"
    ADD CONSTRAINT "PackageProductRelationshipTemplate_pkey" PRIMARY KEY ("PackageProductRelationshipTemplateID");


--
-- TOC entry 6813 (class 2606 OID 45636)
-- Name: PackageProductRelationship_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PackageProductRelationship"
    ADD CONSTRAINT "PackageProductRelationship_pkey" PRIMARY KEY ("PackageProductRelationshipID");


--
-- TOC entry 6823 (class 2606 OID 45638)
-- Name: PackageProductSpecificationBlueprintTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PackageProductSpecificationBlueprintTemplate"
    ADD CONSTRAINT "PackageProductSpecificationBlueprintTemplate_pkey" PRIMARY KEY ("PackageProductSpecificationBlueprintTemplateID");


--
-- TOC entry 6821 (class 2606 OID 45640)
-- Name: PackageProductSpecificationBlueprint_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PackageProductSpecificationBlueprint"
    ADD CONSTRAINT "PackageProductSpecificationBlueprint_pkey" PRIMARY KEY ("PackageProductSpecificationBlueprintID");


--
-- TOC entry 6830 (class 2606 OID 45642)
-- Name: PasswordResetSecrets_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PasswordResetSecrets"
    ADD CONSTRAINT "PasswordResetSecrets_pkey" PRIMARY KEY ("PasswordResetSecretID");


--
-- TOC entry 6874 (class 2606 OID 45644)
-- Name: PluginTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PluginTemplate"
    ADD CONSTRAINT "PluginTemplate_pkey" PRIMARY KEY ("PluginTemplateID", "PluginTemplateVersionNumber");


--
-- TOC entry 6872 (class 2606 OID 45646)
-- Name: Plugin_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Plugin"
    ADD CONSTRAINT "Plugin_pkey" PRIMARY KEY ("PluginID", "PluginVersionNumber");


--
-- TOC entry 6880 (class 2606 OID 45648)
-- Name: ProductAttributeTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductAttributeTemplate"
    ADD CONSTRAINT "ProductAttributeTemplate_pkey" PRIMARY KEY ("ProductAttributeTemplateID");


--
-- TOC entry 6878 (class 2606 OID 45650)
-- Name: ProductAttribute_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductAttribute"
    ADD CONSTRAINT "ProductAttribute_pkey" PRIMARY KEY ("ProductAttributeID");


--
-- TOC entry 6900 (class 2606 OID 45652)
-- Name: ProductDetailTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductDetailTemplate"
    ADD CONSTRAINT "ProductDetailTemplate_pkey" PRIMARY KEY ("ProductDetailTemplateID");


--
-- TOC entry 6898 (class 2606 OID 45654)
-- Name: ProductDetail_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductDetail"
    ADD CONSTRAINT "ProductDetail_pkey" PRIMARY KEY ("ProductDetailID");


--
-- TOC entry 6910 (class 2606 OID 45656)
-- Name: ProductFamilyProductPackageTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductFamilyProductPackageTemplate"
    ADD CONSTRAINT "ProductFamilyProductPackageTemplate_pkey" PRIMARY KEY ("ProductFamilyProductPackageTemplateID");


--
-- TOC entry 6908 (class 2606 OID 45658)
-- Name: ProductFamilyProductPackage_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductFamilyProductPackage"
    ADD CONSTRAINT "ProductFamilyProductPackage_pkey" PRIMARY KEY ("ProductFamilyProductPackageID");


--
-- TOC entry 6912 (class 2606 OID 45660)
-- Name: ProductFamilyTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductFamilyTemplate"
    ADD CONSTRAINT "ProductFamilyTemplate_pkey" PRIMARY KEY ("ProductFamilyTemplateID");


--
-- TOC entry 6906 (class 2606 OID 45662)
-- Name: ProductFamily_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductFamily"
    ADD CONSTRAINT "ProductFamily_pkey" PRIMARY KEY ("ProductFamilyID");


--
-- TOC entry 6920 (class 2606 OID 45664)
-- Name: ProductProductAttributeTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductProductAttributeTemplate"
    ADD CONSTRAINT "ProductProductAttributeTemplate_pkey" PRIMARY KEY ("ProductProductAttributeTemplateID");


--
-- TOC entry 6918 (class 2606 OID 45666)
-- Name: ProductProductAttribute_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductProductAttribute"
    ADD CONSTRAINT "ProductProductAttribute_pkey" PRIMARY KEY ("ProductProductAttributeID");


--
-- TOC entry 6936 (class 2606 OID 45668)
-- Name: ProductRelationshipBlueprintTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductRelationshipBlueprintTemplate"
    ADD CONSTRAINT "ProductRelationshipBlueprintTemplate_pkey" PRIMARY KEY ("ProductRelationshipBlueprintTemplateID");


--
-- TOC entry 6934 (class 2606 OID 45670)
-- Name: ProductRelationshipBlueprint_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductRelationshipBlueprint"
    ADD CONSTRAINT "ProductRelationshipBlueprint_pkey" PRIMARY KEY ("ProductRelationshipBlueprintID");


--
-- TOC entry 6938 (class 2606 OID 45672)
-- Name: ProductRelationshipTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductRelationshipTemplate"
    ADD CONSTRAINT "ProductRelationshipTemplate_pkey" PRIMARY KEY ("ProductRelationshipTemplateID");


--
-- TOC entry 6932 (class 2606 OID 45674)
-- Name: ProductRelationship_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductRelationship"
    ADD CONSTRAINT "ProductRelationship_pkey" PRIMARY KEY ("ProductRelationshipID");


--
-- TOC entry 6948 (class 2606 OID 45676)
-- Name: ProductSpecificationAttributeOptionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductSpecificationAttributeOptionTemplate"
    ADD CONSTRAINT "ProductSpecificationAttributeOptionTemplate_pkey" PRIMARY KEY ("ProductSpecificationAttributeOptionTemplateID");


--
-- TOC entry 6946 (class 2606 OID 45678)
-- Name: ProductSpecificationAttributeOption_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductSpecificationAttributeOption"
    ADD CONSTRAINT "ProductSpecificationAttributeOption_pkey" PRIMARY KEY ("ProductSpecificationAttributeOptionID");


--
-- TOC entry 6950 (class 2606 OID 45680)
-- Name: ProductSpecificationAttributeTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductSpecificationAttributeTemplate"
    ADD CONSTRAINT "ProductSpecificationAttributeTemplate_pkey" PRIMARY KEY ("ProductSpecificationAttributeTemplateID");


--
-- TOC entry 6944 (class 2606 OID 45682)
-- Name: ProductSpecificationAttribute_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductSpecificationAttribute"
    ADD CONSTRAINT "ProductSpecificationAttribute_pkey" PRIMARY KEY ("ProductSpecificationAttributeID");


--
-- TOC entry 6954 (class 2606 OID 45684)
-- Name: ProductSpecificationBlueprintTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductSpecificationBlueprintTemplate"
    ADD CONSTRAINT "ProductSpecificationBlueprintTemplate_pkey" PRIMARY KEY ("ProductSpecificationBlueprintTemplateID");


--
-- TOC entry 6952 (class 2606 OID 45686)
-- Name: ProductSpecificationBlueprint_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductSpecificationBlueprint"
    ADD CONSTRAINT "ProductSpecificationBlueprint_pkey" PRIMARY KEY ("ProductSpecificationBlueprintID");


--
-- TOC entry 6958 (class 2606 OID 45688)
-- Name: ProductTagTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductTagTemplate"
    ADD CONSTRAINT "ProductTagTemplate_pkey" PRIMARY KEY ("ProductTagTemplateID");


--
-- TOC entry 6956 (class 2606 OID 45690)
-- Name: ProductTag_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductTag"
    ADD CONSTRAINT "ProductTag_pkey" PRIMARY KEY ("ProductTagID");


--
-- TOC entry 6964 (class 2606 OID 45692)
-- Name: ProductVariantAttributeCombinationTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductVariantAttributeCombinationTemplate"
    ADD CONSTRAINT "ProductVariantAttributeCombinationTemplate_pkey" PRIMARY KEY ("ProductVariantAttributeCombinationTemplateID");


--
-- TOC entry 6962 (class 2606 OID 45694)
-- Name: ProductVariantAttributeCombination_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductVariantAttributeCombination"
    ADD CONSTRAINT "ProductVariantAttributeCombination_pkey" PRIMARY KEY ("ProductVariantAttributeCombinationID");


--
-- TOC entry 6968 (class 2606 OID 45696)
-- Name: ProductVariantAttributeValueTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductVariantAttributeValueTemplate"
    ADD CONSTRAINT "ProductVariantAttributeValueTemplate_pkey" PRIMARY KEY ("ProductVariantAttributeValueTemplateID");


--
-- TOC entry 6966 (class 2606 OID 45698)
-- Name: ProductVariantAttributeValue_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductVariantAttributeValue"
    ADD CONSTRAINT "ProductVariantAttributeValue_pkey" PRIMARY KEY ("ProductVariantAttributeValueID");


--
-- TOC entry 6970 (class 2606 OID 45700)
-- Name: RelationshipRoleTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "RelationshipRole"
    ADD CONSTRAINT "RelationshipRoleTemplate_pkey" PRIMARY KEY ("RelationshipRoleID");


--
-- TOC entry 6981 (class 2606 OID 45702)
-- Name: RepositoryStructureGroup_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "RepositoryStructureGroup"
    ADD CONSTRAINT "RepositoryStructureGroup_pkey" PRIMARY KEY ("RepositoryStructureGroupID");


--
-- TOC entry 6985 (class 2606 OID 45704)
-- Name: RepositoryStructureRole_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "RepositoryStructureRole"
    ADD CONSTRAINT "RepositoryStructureRole_pkey" PRIMARY KEY ("RepositoryStructureRoleID");


--
-- TOC entry 6975 (class 2606 OID 45706)
-- Name: RepositoryStructure_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "RepositoryStructure"
    ADD CONSTRAINT "RepositoryStructure_pkey" PRIMARY KEY ("RepositoryStructureID");


--
-- TOC entry 6972 (class 2606 OID 45708)
-- Name: Repository_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Repository"
    ADD CONSTRAINT "Repository_pkey" PRIMARY KEY ("RepositoryID");


--
-- TOC entry 6987 (class 2606 OID 45710)
-- Name: Resource_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Resource"
    ADD CONSTRAINT "Resource_pkey" PRIMARY KEY ("ResourceID");


--
-- TOC entry 6991 (class 2606 OID 45712)
-- Name: RoleTemplateClaim_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "RoleClaim"
    ADD CONSTRAINT "RoleTemplateClaim_pkey" PRIMARY KEY ("RoleClaimID");


--
-- TOC entry 7006 (class 2606 OID 45714)
-- Name: ServiceProvider_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ServiceProvider"
    ADD CONSTRAINT "ServiceProvider_pkey" PRIMARY KEY ("ServiceProviderID");


--
-- TOC entry 7008 (class 2606 OID 45716)
-- Name: Setting_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Setting"
    ADD CONSTRAINT "Setting_pkey" PRIMARY KEY ("Id");


--
-- TOC entry 7030 (class 2606 OID 45718)
-- Name: SpecificationAttributeOptionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "SpecificationAttributeOptionTemplate"
    ADD CONSTRAINT "SpecificationAttributeOptionTemplate_pkey" PRIMARY KEY ("SpecificationAttributeOptionTemplateID");


--
-- TOC entry 7034 (class 2606 OID 45720)
-- Name: SpecificationAttributeRelationshipTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "SpecificationAttributeRelationshipTemplate"
    ADD CONSTRAINT "SpecificationAttributeRelationshipTemplate_pkey" PRIMARY KEY ("SpecificationAttributeRelationshipTemplateID", "SpecificationAttributeTemplateID", "ParentSpecificationAttributeTemplateID");


--
-- TOC entry 7032 (class 2606 OID 45722)
-- Name: SpecificationAttributeRelationship_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "SpecificationAttributeRelationship"
    ADD CONSTRAINT "SpecificationAttributeRelationship_pkey" PRIMARY KEY ("SpecificationAttributeRelationshipID");


--
-- TOC entry 7036 (class 2606 OID 45724)
-- Name: SpecificationAttributeTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "SpecificationAttributeTemplate"
    ADD CONSTRAINT "SpecificationAttributeTemplate_pkey" PRIMARY KEY ("SpecificationAttributeTemplateID");


--
-- TOC entry 7028 (class 2606 OID 45726)
-- Name: SpecificationAttribute_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "SpecificationAttribute"
    ADD CONSTRAINT "SpecificationAttribute_pkey" PRIMARY KEY ("SpecificationAttributeID");


--
-- TOC entry 7038 (class 2606 OID 45728)
-- Name: SpecificiationAttributeOption_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "SpecificiationAttributeOption"
    ADD CONSTRAINT "SpecificiationAttributeOption_pkey" PRIMARY KEY ("SpecficiationAttributeOptionID");


--
-- TOC entry 7043 (class 2606 OID 45730)
-- Name: StateItem_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StateItem"
    ADD CONSTRAINT "StateItem_pkey" PRIMARY KEY ("StateItemID");


--
-- TOC entry 7040 (class 2606 OID 45732)
-- Name: State_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "State"
    ADD CONSTRAINT "State_pkey" PRIMARY KEY ("StateID");


--
-- TOC entry 7055 (class 2606 OID 45734)
-- Name: StatusTypeStructure_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StatusTypeStructure"
    ADD CONSTRAINT "StatusTypeStructure_pkey" PRIMARY KEY ("StatusTypeStructureID");


--
-- TOC entry 7065 (class 2606 OID 45736)
-- Name: StatusTypeValue_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StatusTypeValue"
    ADD CONSTRAINT "StatusTypeValue_pkey" PRIMARY KEY ("StatusTypeValueID");


--
-- TOC entry 7069 (class 2606 OID 45738)
-- Name: Structure_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Structure"
    ADD CONSTRAINT "Structure_pkey" PRIMARY KEY ("StructureID");


--
-- TOC entry 7073 (class 2606 OID 45740)
-- Name: TFEventMessageSubscriber_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "TFEventMessageSubscriber"
    ADD CONSTRAINT "TFEventMessageSubscriber_pkey" PRIMARY KEY ("TFEventMessageSubscriberID");


--
-- TOC entry 7075 (class 2606 OID 45742)
-- Name: TFEventTFEventMessageSubscriber_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "TFEventTFEventMessageSubscriber"
    ADD CONSTRAINT "TFEventTFEventMessageSubscriber_pkey" PRIMARY KEY ("TFEventID", "TFEventMessageSubscriberID");


--
-- TOC entry 7071 (class 2606 OID 45744)
-- Name: TFEventType_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "TFEvent"
    ADD CONSTRAINT "TFEventType_pkey" PRIMARY KEY ("TFEventID");


--
-- TOC entry 7077 (class 2606 OID 45746)
-- Name: TFEventType_pkey1; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "TFEventType"
    ADD CONSTRAINT "TFEventType_pkey1" PRIMARY KEY ("TFEventTypeID");


--
-- TOC entry 7081 (class 2606 OID 45748)
-- Name: TaxRateTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "TaxRateTemplate"
    ADD CONSTRAINT "TaxRateTemplate_pkey" PRIMARY KEY ("TaxRateTemplateID");


--
-- TOC entry 7079 (class 2606 OID 45750)
-- Name: TaxRate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "TaxRate"
    ADD CONSTRAINT "TaxRate_pkey" PRIMARY KEY ("OrganisationTaxRateID");


--
-- TOC entry 7083 (class 2606 OID 45752)
-- Name: Tenant_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Tenant"
    ADD CONSTRAINT "Tenant_pkey" PRIMARY KEY ("TenantID");


--
-- TOC entry 7087 (class 2606 OID 45754)
-- Name: TransactionLevelComponentTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "TransactionLevelComponentTemplate"
    ADD CONSTRAINT "TransactionLevelComponentTemplate_pkey" PRIMARY KEY ("TransactionLevelComponentTemplateID");


--
-- TOC entry 7085 (class 2606 OID 45756)
-- Name: TransactionLevelComponent_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "TransactionLevelComponent"
    ADD CONSTRAINT "TransactionLevelComponent_pkey" PRIMARY KEY ("TransactionLevelComponentID");


--
-- TOC entry 7091 (class 2606 OID 45758)
-- Name: TransactionOrderItem_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "TransactionOrderItem"
    ADD CONSTRAINT "TransactionOrderItem_pkey" PRIMARY KEY ("OrderItemID");


--
-- TOC entry 7089 (class 2606 OID 45760)
-- Name: TransactionOrder_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "TransactionOrder"
    ADD CONSTRAINT "TransactionOrder_pkey" PRIMARY KEY ("TransactionOrderID");


--
-- TOC entry 7100 (class 2606 OID 45762)
-- Name: TwoFactorAuthTokens_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "TwoFactorAuthTokens"
    ADD CONSTRAINT "TwoFactorAuthTokens_pkey" PRIMARY KEY ("Token");


--
-- TOC entry 7102 (class 2606 OID 45764)
-- Name: UserAccountArchive_UserAccountArchiveID_key; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserAccountArchive"
    ADD CONSTRAINT "UserAccountArchive_UserAccountArchiveID_key" UNIQUE ("UserAccountArchiveID");


--
-- TOC entry 7104 (class 2606 OID 45766)
-- Name: UserAccountArchive_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserAccountArchive"
    ADD CONSTRAINT "UserAccountArchive_pkey" PRIMARY KEY ("UserAccountArchiveID", "UserAccountArchiveCreatedOn", "UserAccountArchiveTypeID", "UserAccountArchiveCategoryID");


--
-- TOC entry 7106 (class 2606 OID 45768)
-- Name: UserAccountAudit_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserAccountAudit"
    ADD CONSTRAINT "UserAccountAudit_pkey" PRIMARY KEY ("UserAccountID", "UserSessionID", "AuditID");


--
-- TOC entry 7109 (class 2606 OID 45770)
-- Name: UserAccountDetail_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserAccountDetail"
    ADD CONSTRAINT "UserAccountDetail_pkey" PRIMARY KEY ("UserDetailID");


--
-- TOC entry 7113 (class 2606 OID 45772)
-- Name: UserAccountLoginSession_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserAccountLoginSession"
    ADD CONSTRAINT "UserAccountLoginSession_pkey" PRIMARY KEY ("UserAccountID", "UserSessionID");


--
-- TOC entry 7127 (class 2606 OID 45774)
-- Name: UserAccountOrganisationStructure_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserAccountOrganisationStructure"
    ADD CONSTRAINT "UserAccountOrganisationStructure_pkey" PRIMARY KEY ("OrganisationID", "UserID");


--
-- TOC entry 7117 (class 2606 OID 45776)
-- Name: UserAccountOrganisationUnit_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserAccountOrganisation"
    ADD CONSTRAINT "UserAccountOrganisationUnit_pkey" PRIMARY KEY ("UserAccountOrganisationID");


--
-- TOC entry 7131 (class 2606 OID 45778)
-- Name: UserAccounts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserAccounts"
    ADD CONSTRAINT "UserAccounts_pkey" PRIMARY KEY ("ID");


--
-- TOC entry 7134 (class 2606 OID 45780)
-- Name: UserCertificates_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserCertificates"
    ADD CONSTRAINT "UserCertificates_pkey" PRIMARY KEY ("Thumbprint");


--
-- TOC entry 7137 (class 2606 OID 45782)
-- Name: UserClaims_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserClaims"
    ADD CONSTRAINT "UserClaims_pkey" PRIMARY KEY ("Type", "Value");


--
-- TOC entry 7022 (class 2606 OID 45784)
-- Name: UserShoppingCartItem_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ShoppingCartItem"
    ADD CONSTRAINT "UserShoppingCartItem_pkey" PRIMARY KEY ("ShoppingCartItemID");


--
-- TOC entry 7141 (class 2606 OID 45786)
-- Name: WorflowParameterTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorflowParameterTemplate"
    ADD CONSTRAINT "WorflowParameterTemplate_pkey" PRIMARY KEY ("WorflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7417 (class 2606 OID 45788)
-- Name: Workflow TemplateTreeStructur_WorkflowTemplateTreeStructure_key; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTreeStructureTemplate"
    ADD CONSTRAINT "Workflow TemplateTreeStructur_WorkflowTemplateTreeStructure_key" UNIQUE ("WorkflowTreeStructureTemplateID");


--
-- TOC entry 7419 (class 2606 OID 45790)
-- Name: Workflow TemplateTreeStructure_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTreeStructureTemplate"
    ADD CONSTRAINT "Workflow TemplateTreeStructure_pkey" PRIMARY KEY ("WorkflowTreeStructureTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7151 (class 2606 OID 45792)
-- Name: WorkflowActionCompleteConditionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionCompleteConditionTemplate"
    ADD CONSTRAINT "WorkflowActionCompleteConditionTemplate_pkey" PRIMARY KEY ("WorkflowActionTemplateID", "WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7149 (class 2606 OID 45794)
-- Name: WorkflowActionCompleteCondition_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionCompleteCondition"
    ADD CONSTRAINT "WorkflowActionCompleteCondition_pkey" PRIMARY KEY ("WorkflowActionID", "WorkflowConditionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7158 (class 2606 OID 45796)
-- Name: WorkflowActionExecuteCommandTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionExecuteCommandTemplate"
    ADD CONSTRAINT "WorkflowActionExecuteCommandTemplate_pkey" PRIMARY KEY ("WorkflowActionTemplateID", "WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7154 (class 2606 OID 45798)
-- Name: WorkflowActionExecuteCommand_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionExecuteCommand"
    ADD CONSTRAINT "WorkflowActionExecuteCommand_pkey" PRIMARY KEY ("WorkflowActionID", "WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7161 (class 2606 OID 45800)
-- Name: WorkflowActionExecutionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionExecutionTemplate"
    ADD CONSTRAINT "WorkflowActionExecutionTemplate_pkey" PRIMARY KEY ("WorkflowActionExecutionID", "WorkflowTemplateVersionNumber", "WorkflowTemplateID");


--
-- TOC entry 7163 (class 2606 OID 45802)
-- Name: WorkflowActionNotificationTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionNotificationTemplate"
    ADD CONSTRAINT "WorkflowActionNotificationTemplate_pkey" PRIMARY KEY ("WorkflowActionNotificationTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7173 (class 2606 OID 45804)
-- Name: WorkflowActionParameterTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionParameterTemplate"
    ADD CONSTRAINT "WorkflowActionParameterTemplate_pkey" PRIMARY KEY ("WorkflowActionTemplateID", "WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7165 (class 2606 OID 45806)
-- Name: WorkflowActionParameter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionParameter"
    ADD CONSTRAINT "WorkflowActionParameter_pkey" PRIMARY KEY ("WorkflowParameterID", "WorkflowActionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7177 (class 2606 OID 45808)
-- Name: WorkflowActionPostCommandTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionPostCommandTemplate"
    ADD CONSTRAINT "WorkflowActionPostCommandTemplate_pkey" PRIMARY KEY ("WorkflowCommandTemplateID", "WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7175 (class 2606 OID 45810)
-- Name: WorkflowActionPostCommand_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionPostCommand"
    ADD CONSTRAINT "WorkflowActionPostCommand_pkey" PRIMARY KEY ("WorkflowVersionNumber", "WorkflowID", "WorkflowCommandID", "WorkflowActionID");


--
-- TOC entry 7182 (class 2606 OID 45812)
-- Name: WorkflowActionPreCommandTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionPreCommandTemplate"
    ADD CONSTRAINT "WorkflowActionPreCommandTemplate_pkey" PRIMARY KEY ("WorkflowActionTemplateID", "WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7180 (class 2606 OID 45814)
-- Name: WorkflowActionPreCommand_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionPreCommand"
    ADD CONSTRAINT "WorkflowActionPreCommand_pkey" PRIMARY KEY ("WorkflowCommandID", "WorkflowActionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7185 (class 2606 OID 45816)
-- Name: WorkflowActionProductPlaceholder_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionProductPlaceholder"
    ADD CONSTRAINT "WorkflowActionProductPlaceholder_pkey" PRIMARY KEY ("WorkflowActionProductPlaceholderID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7189 (class 2606 OID 45818)
-- Name: WorkflowActionStartConditionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionStartConditionTemplate"
    ADD CONSTRAINT "WorkflowActionStartConditionTemplate_pkey" PRIMARY KEY ("WorkflowActionTemplateID", "WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7187 (class 2606 OID 45820)
-- Name: WorkflowActionStartCondition_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionStartCondition"
    ADD CONSTRAINT "WorkflowActionStartCondition_pkey" PRIMARY KEY ("WorkflowActionID", "WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7193 (class 2606 OID 45822)
-- Name: WorkflowActionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionTemplate"
    ADD CONSTRAINT "WorkflowActionTemplate_pkey" PRIMARY KEY ("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7196 (class 2606 OID 45824)
-- Name: WorkflowActionValidationTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionValidationTemplate"
    ADD CONSTRAINT "WorkflowActionValidationTemplate_pkey" PRIMARY KEY ("WorkflowActionValidationTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7147 (class 2606 OID 45826)
-- Name: WorkflowAction_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowAction"
    ADD CONSTRAINT "WorkflowAction_pkey" PRIMARY KEY ("WorkflowActionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7208 (class 2606 OID 45828)
-- Name: WorkflowCommandConditionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowCommandConditionTemplate"
    ADD CONSTRAINT "WorkflowCommandConditionTemplate_pkey" PRIMARY KEY ("WorkflowConditionTemplateID", "WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7206 (class 2606 OID 45830)
-- Name: WorkflowCommandCondition_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowCommandCondition"
    ADD CONSTRAINT "WorkflowCommandCondition_pkey" PRIMARY KEY ("WorkflowCommandID", "WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7213 (class 2606 OID 45832)
-- Name: WorkflowCommandParameterTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowCommandParameterTemplate"
    ADD CONSTRAINT "WorkflowCommandParameterTemplate_pkey" PRIMARY KEY ("WorkflowCommandTemplateID", "WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7211 (class 2606 OID 45834)
-- Name: WorkflowCommandParameter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowCommandParameter"
    ADD CONSTRAINT "WorkflowCommandParameter_pkey" PRIMARY KEY ("WorkflowCommandID", "WorkflowParameterID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7216 (class 2606 OID 45836)
-- Name: WorkflowCommandTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowCommandTemplate"
    ADD CONSTRAINT "WorkflowCommandTemplate_pkey" PRIMARY KEY ("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7202 (class 2606 OID 45838)
-- Name: WorkflowCommand_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowCommand"
    ADD CONSTRAINT "WorkflowCommand_pkey" PRIMARY KEY ("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7227 (class 2606 OID 45840)
-- Name: WorkflowConditionParameterTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowConditionParameterTemplate"
    ADD CONSTRAINT "WorkflowConditionParameterTemplate_pkey" PRIMARY KEY ("WorkflowConditionTemplateID", "WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7224 (class 2606 OID 45842)
-- Name: WorkflowConditionParameter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowConditionParameter"
    ADD CONSTRAINT "WorkflowConditionParameter_pkey" PRIMARY KEY ("WorkflowConditionID", "WorkflowParameterID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7229 (class 2606 OID 45844)
-- Name: WorkflowConditionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowConditionTemplate"
    ADD CONSTRAINT "WorkflowConditionTemplate_pkey" PRIMARY KEY ("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7220 (class 2606 OID 45846)
-- Name: WorkflowCondition_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowCondition"
    ADD CONSTRAINT "WorkflowCondition_pkey" PRIMARY KEY ("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7240 (class 2606 OID 45848)
-- Name: WorkflowDecisionErrorTemplate_WorkflowDecisionErrorTemplate_key; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionErrorTemplate"
    ADD CONSTRAINT "WorkflowDecisionErrorTemplate_WorkflowDecisionErrorTemplate_key" UNIQUE ("WorkflowDecisionErrorTemplateID");


--
-- TOC entry 7236 (class 2606 OID 45850)
-- Name: WorkflowDecisionError_WorkflowDecisionErrorID_key; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionError"
    ADD CONSTRAINT "WorkflowDecisionError_WorkflowDecisionErrorID_key" UNIQUE ("WorkflowDecisionErrorID");


--
-- TOC entry 7246 (class 2606 OID 45852)
-- Name: WorkflowDecisionExecuteCommandTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionExecuteCommandTemplate"
    ADD CONSTRAINT "WorkflowDecisionExecuteCommandTemplate_pkey" PRIMARY KEY ("WorkflowDecisionTemplateID", "WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7244 (class 2606 OID 45854)
-- Name: WorkflowDecisionExecuteCommand_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionExecuteCommand"
    ADD CONSTRAINT "WorkflowDecisionExecuteCommand_pkey" PRIMARY KEY ("WorkflowDecisionID", "WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7249 (class 2606 OID 45856)
-- Name: WorkflowDecisionFailure_WorkflowDecisionFailureID_key; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionFailure"
    ADD CONSTRAINT "WorkflowDecisionFailure_WorkflowDecisionFailureID_key" UNIQUE ("WorkflowDecisionFailureID");


--
-- TOC entry 7257 (class 2606 OID 45858)
-- Name: WorkflowDecisionParameterTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionParameterTemplate"
    ADD CONSTRAINT "WorkflowDecisionParameterTemplate_pkey" PRIMARY KEY ("WorkflowDecisionTemplateID", "WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7255 (class 2606 OID 45860)
-- Name: WorkflowDecisionParameter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionParameter"
    ADD CONSTRAINT "WorkflowDecisionParameter_pkey" PRIMARY KEY ("WorkflowDecisionID", "WorkflowParameterID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7264 (class 2606 OID 45862)
-- Name: WorkflowDecisionSuccessTempla_WorkflowDecisionSuccessTempla_key; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionSuccessTemplate"
    ADD CONSTRAINT "WorkflowDecisionSuccessTempla_WorkflowDecisionSuccessTempla_key" UNIQUE ("WorkflowDecisionSuccessTemplateID");


--
-- TOC entry 7260 (class 2606 OID 45864)
-- Name: WorkflowDecisionSuccess_WorkflowDecisionSuccessID_key; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionSuccess"
    ADD CONSTRAINT "WorkflowDecisionSuccess_WorkflowDecisionSuccessID_key" UNIQUE ("WorkflowDecisionSuccessID");


--
-- TOC entry 7268 (class 2606 OID 45866)
-- Name: WorkflowDecisionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionTemplate"
    ADD CONSTRAINT "WorkflowDecisionTemplate_pkey" PRIMARY KEY ("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7232 (class 2606 OID 45868)
-- Name: WorkflowDecision_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecision"
    ADD CONSTRAINT "WorkflowDecision_pkey" PRIMARY KEY ("WorkflowDecisionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7273 (class 2606 OID 45870)
-- Name: WorkflowExecutionStatus_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowExecutionStatus"
    ADD CONSTRAINT "WorkflowExecutionStatus_pkey" PRIMARY KEY ("WorkflowExecutionStatusID");


--
-- TOC entry 7275 (class 2606 OID 45872)
-- Name: WorkflowExecutionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowExecutionTemplate"
    ADD CONSTRAINT "WorkflowExecutionTemplate_pkey" PRIMARY KEY ("WorkflowExecutionTemplateID");


--
-- TOC entry 7271 (class 2606 OID 45874)
-- Name: WorkflowExecution_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowExecution"
    ADD CONSTRAINT "WorkflowExecution_pkey" PRIMARY KEY ("WorkflowExecutionID", "VersionNumber");


--
-- TOC entry 7283 (class 2606 OID 45876)
-- Name: WorkflowHierarchyTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowHierarchyTemplate"
    ADD CONSTRAINT "WorkflowHierarchyTemplate_pkey" PRIMARY KEY ("WorkflowHierarchyTemplateID", "WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7277 (class 2606 OID 45878)
-- Name: WorkflowHierarchy_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowHierarchy"
    ADD CONSTRAINT "WorkflowHierarchy_pkey" PRIMARY KEY ("WorkflowHierarchyID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7292 (class 2606 OID 45880)
-- Name: WorkflowInstanceExecutionDataItem_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowInstanceExecutionDataItem"
    ADD CONSTRAINT "WorkflowInstanceExecutionDataItem_pkey" PRIMARY KEY ("WorkflowInstanceExecutionDataItemID");


--
-- TOC entry 7296 (class 2606 OID 45882)
-- Name: WorkflowInstanceExecutionStatusEvent_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowInstanceExecutionStatusEvent"
    ADD CONSTRAINT "WorkflowInstanceExecutionStatusEvent_pkey" PRIMARY KEY ("WorkflowInstanceExecutionStatusEventID");


--
-- TOC entry 7290 (class 2606 OID 45884)
-- Name: WorkflowInstanceExecution_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowInstanceExecution"
    ADD CONSTRAINT "WorkflowInstanceExecution_pkey" PRIMARY KEY ("WorkflowInstanceExecutionID", "WorkflowInstanceSessionID", "WorkflowID", "WorkflowVersionNumber", "WorkflowInstanceID");


--
-- TOC entry 7302 (class 2606 OID 45886)
-- Name: WorkflowInstanceSession_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowInstanceSession"
    ADD CONSTRAINT "WorkflowInstanceSession_pkey" PRIMARY KEY ("WorkflowInstanceSessionID", "WorkflowID", "WorkflowVersionNumber", "WorkflowInstanceID");


--
-- TOC entry 7286 (class 2606 OID 45888)
-- Name: WorkflowInstance_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowInstance"
    ADD CONSTRAINT "WorkflowInstance_pkey" PRIMARY KEY ("WorkflowInstanceID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7309 (class 2606 OID 45890)
-- Name: WorkflowMainCompleteConditionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowMainCompleteConditionTemplate"
    ADD CONSTRAINT "WorkflowMainCompleteConditionTemplate_pkey" PRIMARY KEY ("WorkflowTemplateID", "WorkflowConditionTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7305 (class 2606 OID 45892)
-- Name: WorkflowMainCompleteCondition_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowMainCompleteCondition"
    ADD CONSTRAINT "WorkflowMainCompleteCondition_pkey" PRIMARY KEY ("WorkflowID", "WorkflowVersionNumber", "WorkflowConditionID");


--
-- TOC entry 7316 (class 2606 OID 45894)
-- Name: WorkflowMainExecuteCommandTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowMainExecuteCommandTemplate"
    ADD CONSTRAINT "WorkflowMainExecuteCommandTemplate_pkey" PRIMARY KEY ("WorkflowTemplateID", "WorkflowCommandTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7312 (class 2606 OID 45896)
-- Name: WorkflowMainExecuteCommand_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowMainExecuteCommand"
    ADD CONSTRAINT "WorkflowMainExecuteCommand_pkey" PRIMARY KEY ("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7323 (class 2606 OID 45898)
-- Name: WorkflowMainParameterTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowMainParameterTemplate"
    ADD CONSTRAINT "WorkflowMainParameterTemplate_pkey" PRIMARY KEY ("WorkflowTemplateID", "WorkflowParameterTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7319 (class 2606 OID 45900)
-- Name: WorkflowMainParameter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowMainParameter"
    ADD CONSTRAINT "WorkflowMainParameter_pkey" PRIMARY KEY ("WorkflowID", "WorkflowVersionNumber", "WorkflowParameterID");


--
-- TOC entry 7330 (class 2606 OID 45902)
-- Name: WorkflowMainPostCommandTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowMainPostCommandTemplate"
    ADD CONSTRAINT "WorkflowMainPostCommandTemplate_pkey" PRIMARY KEY ("WorkflowTemplateID", "WorkflowCommandTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7326 (class 2606 OID 45904)
-- Name: WorkflowMainPostCommand_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowMainPostCommand"
    ADD CONSTRAINT "WorkflowMainPostCommand_pkey" PRIMARY KEY ("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7337 (class 2606 OID 45906)
-- Name: WorkflowMainPreCommandTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowMainPreCommandTemplate"
    ADD CONSTRAINT "WorkflowMainPreCommandTemplate_pkey" PRIMARY KEY ("WorkflowTemplateID", "WorkflowCommandTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7333 (class 2606 OID 45908)
-- Name: WorkflowMainPreCommand_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowMainPreCommand"
    ADD CONSTRAINT "WorkflowMainPreCommand_pkey" PRIMARY KEY ("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7344 (class 2606 OID 45910)
-- Name: WorkflowMainStartConditionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowMainStartConditionTemplate"
    ADD CONSTRAINT "WorkflowMainStartConditionTemplate_pkey" PRIMARY KEY ("WorkflowTemplateID", "WorkflowConditionTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7340 (class 2606 OID 45912)
-- Name: WorkflowMainStartCondition_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowMainStartCondition"
    ADD CONSTRAINT "WorkflowMainStartCondition_pkey" PRIMARY KEY ("WorkflowID", "WorkflowVersionNumber", "WorkflowConditionID");


--
-- TOC entry 7354 (class 2606 OID 45914)
-- Name: WorkflowObjectTypeTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowObjectTypeTemplate"
    ADD CONSTRAINT "WorkflowObjectTypeTemplate_pkey" PRIMARY KEY ("WorkflowObjectTypeTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7351 (class 2606 OID 45916)
-- Name: WorkflowObjectType_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowObjectType"
    ADD CONSTRAINT "WorkflowObjectType_pkey" PRIMARY KEY ("WorkflowObjectTypeID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7358 (class 2606 OID 45918)
-- Name: WorkflowParameterTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowParameterTemplate"
    ADD CONSTRAINT "WorkflowParameterTemplate_pkey" PRIMARY KEY ("WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7356 (class 2606 OID 45920)
-- Name: WorkflowParameter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowParameter"
    ADD CONSTRAINT "WorkflowParameter_pkey" PRIMARY KEY ("WorkflowParameterID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7368 (class 2606 OID 45922)
-- Name: WorkflowTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTemplate"
    ADD CONSTRAINT "WorkflowTemplate_pkey" PRIMARY KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7375 (class 2606 OID 45924)
-- Name: WorkflowTransistionCompleteConditionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTransistionCompleteConditionTemplate"
    ADD CONSTRAINT "WorkflowTransistionCompleteConditionTemplate_pkey" PRIMARY KEY ("WorkflowConditionTemplateID", "WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7373 (class 2606 OID 45926)
-- Name: WorkflowTransistionCompleteCondition_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTransistionCompleteCondition"
    ADD CONSTRAINT "WorkflowTransistionCompleteCondition_pkey" PRIMARY KEY ("WorkflowTransistionID", "WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7383 (class 2606 OID 45928)
-- Name: WorkflowTransistionHierarchyTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTransistionHierarchyTemplate"
    ADD CONSTRAINT "WorkflowTransistionHierarchyTemplate_pkey" PRIMARY KEY ("WorkflowTransistionHierarchyTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7379 (class 2606 OID 45930)
-- Name: WorkflowTransistionHierarchy_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTransistionHierarchy"
    ADD CONSTRAINT "WorkflowTransistionHierarchy_pkey" PRIMARY KEY ("WorkflowTransistionHierarchyID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7390 (class 2606 OID 45932)
-- Name: WorkflowTransistionParameterTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTransistionParameterTemplate"
    ADD CONSTRAINT "WorkflowTransistionParameterTemplate_pkey" PRIMARY KEY ("WorkflowTransistionTemplateID", "WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7388 (class 2606 OID 45934)
-- Name: WorkflowTransistionParameter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTransistionParameter"
    ADD CONSTRAINT "WorkflowTransistionParameter_pkey" PRIMARY KEY ("WorkflowTransistionID", "WorkflowParameterID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7395 (class 2606 OID 45936)
-- Name: WorkflowTransistionStartConditionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTransistionStartConditionTemplate"
    ADD CONSTRAINT "WorkflowTransistionStartConditionTemplate_pkey" PRIMARY KEY ("WorkflowConditionTemplateID", "WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7393 (class 2606 OID 45938)
-- Name: WorkflowTransistionStartCondition_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTransistionStartCondition"
    ADD CONSTRAINT "WorkflowTransistionStartCondition_pkey" PRIMARY KEY ("WorkflowTransistionID", "WorkflowConditionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7399 (class 2606 OID 45940)
-- Name: WorkflowTransistionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTransistionTemplate"
    ADD CONSTRAINT "WorkflowTransistionTemplate_pkey" PRIMARY KEY ("WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7403 (class 2606 OID 45942)
-- Name: WorkflowTransistionWorkflowActionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTransistionWorkflowActionTemplate"
    ADD CONSTRAINT "WorkflowTransistionWorkflowActionTemplate_pkey" PRIMARY KEY ("WorkflowTransistionTemplateID", "WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7401 (class 2606 OID 45944)
-- Name: WorkflowTransistionWorkflowAction_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTransistionWorkflowAction"
    ADD CONSTRAINT "WorkflowTransistionWorkflowAction_pkey" PRIMARY KEY ("WorkflowTransistionID", "WorkflowActionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7408 (class 2606 OID 45946)
-- Name: WorkflowTransistionWorkflowDecisionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTransistionWorkflowDecisionTemplate"
    ADD CONSTRAINT "WorkflowTransistionWorkflowDecisionTemplate_pkey" PRIMARY KEY ("WorkflowTransistionTemplateID", "WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7406 (class 2606 OID 45948)
-- Name: WorkflowTransistionWorkflowDecision_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTransistionWorkflowDecision"
    ADD CONSTRAINT "WorkflowTransistionWorkflowDecision_pkey" PRIMARY KEY ("WorkflowTransistionID", "WorkflowDecisionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 7370 (class 2606 OID 45950)
-- Name: WorkflowTransistion_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTransistion"
    ADD CONSTRAINT "WorkflowTransistion_pkey" PRIMARY KEY ("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7415 (class 2606 OID 45952)
-- Name: WorkflowTreeStructureActionTemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTreeStructureActionTemplate"
    ADD CONSTRAINT "WorkflowTreeStructureActionTemplate_pkey" PRIMARY KEY ("WorkflowTreeStructureActionTemplateID");


--
-- TOC entry 7413 (class 2606 OID 45954)
-- Name: WorkflowTreeStructureAction_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTreeStructureAction"
    ADD CONSTRAINT "WorkflowTreeStructureAction_pkey" PRIMARY KEY ("WorkflowTreeStructureActionID");


--
-- TOC entry 7411 (class 2606 OID 45956)
-- Name: WorkflowTreeStructure_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowTreeStructure"
    ADD CONSTRAINT "WorkflowTreeStructure_pkey" PRIMARY KEY ("WorkflowID", "WorkflowTreeStructureID", "WorkflowVersionNumber");


--
-- TOC entry 7143 (class 2606 OID 45958)
-- Name: Workflow_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Workflow"
    ADD CONSTRAINT "Workflow_pkey" PRIMARY KEY ("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7421 (class 2606 OID 45960)
-- Name: containsagadata_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY containsagadata
    ADD CONSTRAINT containsagadata_pkey PRIMARY KEY (id);


--
-- TOC entry 6421 (class 2606 OID 45962)
-- Name: countrycode_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "CountryCode"
    ADD CONSTRAINT countrycode_pkey PRIMARY KEY ("CountryCode");


--
-- TOC entry 6306 (class 2606 OID 45964)
-- Name: pkActor; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Actor"
    ADD CONSTRAINT "pkActor" PRIMARY KEY ("ActorID");


--
-- TOC entry 6308 (class 2606 OID 45966)
-- Name: pkActorClaimRoleMapping; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ActorClaimRoleMapping"
    ADD CONSTRAINT "pkActorClaimRoleMapping" PRIMARY KEY ("ActorClaimRoleMappingID");


--
-- TOC entry 6319 (class 2606 OID 45968)
-- Name: pkArtefact; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Artefact"
    ADD CONSTRAINT "pkArtefact" PRIMARY KEY ("ArtefactID", "ArtefactVersionNumber");


--
-- TOC entry 6321 (class 2606 OID 45970)
-- Name: pkArtefactClaim; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactClaim"
    ADD CONSTRAINT "pkArtefactClaim" PRIMARY KEY ("ArtefactClaimID");


--
-- TOC entry 6323 (class 2606 OID 45972)
-- Name: pkArtefactClaimTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactClaimTemplate"
    ADD CONSTRAINT "pkArtefactClaimTemplate" PRIMARY KEY ("ArtefactClaimTemplateID");


--
-- TOC entry 6325 (class 2606 OID 45974)
-- Name: pkArtefactDependency; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactDependency"
    ADD CONSTRAINT "pkArtefactDependency" PRIMARY KEY ("ArtefactDependencyID");


--
-- TOC entry 6327 (class 2606 OID 45976)
-- Name: pkArtefactDependencyStatusType; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactDependencyStatusType"
    ADD CONSTRAINT "pkArtefactDependencyStatusType" PRIMARY KEY ("ArtefactDependencyStatusTypeID");


--
-- TOC entry 6329 (class 2606 OID 45978)
-- Name: pkArtefactDependencyStatusTypeTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactDependencyStatusTypeTemplate"
    ADD CONSTRAINT "pkArtefactDependencyStatusTypeTemplate" PRIMARY KEY ("ArtefactDependencyStatusTypeTemplate");


--
-- TOC entry 6331 (class 2606 OID 45980)
-- Name: pkArtefactDependencyTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactDependencyTemplate"
    ADD CONSTRAINT "pkArtefactDependencyTemplate" PRIMARY KEY ("ArtefactDependencyTemplateID");


--
-- TOC entry 6333 (class 2606 OID 45982)
-- Name: pkArtefactNotificationConstruct; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactNotificationConstruct"
    ADD CONSTRAINT "pkArtefactNotificationConstruct" PRIMARY KEY ("ArtefactNotificationConstructID");


--
-- TOC entry 6335 (class 2606 OID 45984)
-- Name: pkArtefactNotificationConstructTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactNotificationConstructTemplate"
    ADD CONSTRAINT "pkArtefactNotificationConstructTemplate" PRIMARY KEY ("ArtefactNotificationConstructTemplateID");


--
-- TOC entry 6337 (class 2606 OID 45986)
-- Name: pkArtefactProduct; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactProduct"
    ADD CONSTRAINT "pkArtefactProduct" PRIMARY KEY ("ProductID", "ProductVersionID", "ArtefactVersionNumber", "ArtefactID");


--
-- TOC entry 6339 (class 2606 OID 45988)
-- Name: pkArtefactProductTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactProductTemplate"
    ADD CONSTRAINT "pkArtefactProductTemplate" PRIMARY KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber", "ProductTemplateID", "ProductVersionID");


--
-- TOC entry 6341 (class 2606 OID 45990)
-- Name: pkArtefactRole; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactRole"
    ADD CONSTRAINT "pkArtefactRole" PRIMARY KEY ("ArtefactRoleID");


--
-- TOC entry 6343 (class 2606 OID 45992)
-- Name: pkArtefactRoleTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactRoleTemplate"
    ADD CONSTRAINT "pkArtefactRoleTemplate" PRIMARY KEY ("ArtefactRoleTemplateID");


--
-- TOC entry 6345 (class 2606 OID 45994)
-- Name: pkArtefactStatusType; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactStatusType"
    ADD CONSTRAINT "pkArtefactStatusType" PRIMARY KEY ("ArtefactID", "ArtefactVersionNumber", "StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 6347 (class 2606 OID 45996)
-- Name: pkArtefactStatusTypeTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactStatusTypeTemplate"
    ADD CONSTRAINT "pkArtefactStatusTypeTemplate" PRIMARY KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber", "StatusTypeTemplateID", "StatusTypeTemplateVersionNumber");


--
-- TOC entry 6349 (class 2606 OID 45998)
-- Name: pkArtefactSubscription; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactSubscription"
    ADD CONSTRAINT "pkArtefactSubscription" PRIMARY KEY ("ArtefactSubscriptionID");


--
-- TOC entry 6351 (class 2606 OID 46000)
-- Name: pkArtefactSubscriptionTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactSubscriptionTemplate"
    ADD CONSTRAINT "pkArtefactSubscriptionTemplate" PRIMARY KEY ("ArtefactSubscriptionTemplateID");


--
-- TOC entry 6353 (class 2606 OID 46002)
-- Name: pkArtefactTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactTemplate"
    ADD CONSTRAINT "pkArtefactTemplate" PRIMARY KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber");


--
-- TOC entry 6355 (class 2606 OID 46004)
-- Name: pkArtefactWorkflow; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactWorkflow"
    ADD CONSTRAINT "pkArtefactWorkflow" PRIMARY KEY ("ArtefactWorkflowID");


--
-- TOC entry 6357 (class 2606 OID 46006)
-- Name: pkArtefactWorkflowTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ArtefactWorkflowTemplate"
    ADD CONSTRAINT "pkArtefactWorkflowTemplate" PRIMARY KEY ("ArtefactWorkflowTemplateID");


--
-- TOC entry 6378 (class 2606 OID 46008)
-- Name: pkBilling; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Billing"
    ADD CONSTRAINT "pkBilling" PRIMARY KEY ("BillingID");


--
-- TOC entry 6380 (class 2606 OID 46010)
-- Name: pkBillingTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "BillingTemplate"
    ADD CONSTRAINT "pkBillingTemplate" PRIMARY KEY ("BillingTemplateID");


--
-- TOC entry 6382 (class 2606 OID 46012)
-- Name: pkBucket; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Bucket"
    ADD CONSTRAINT "pkBucket" PRIMARY KEY ("BucketID");


--
-- TOC entry 6384 (class 2606 OID 46014)
-- Name: pkBucketTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "BucketTemplate"
    ADD CONSTRAINT "pkBucketTemplate" PRIMARY KEY ("BucketTemplateID");


--
-- TOC entry 6390 (class 2606 OID 46016)
-- Name: pkBusMessageProcessLog; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "BusMessageProcessLog"
    ADD CONSTRAINT "pkBusMessageProcessLog" PRIMARY KEY ("BusMessageProcessLogID");


--
-- TOC entry 6392 (class 2606 OID 46018)
-- Name: pkBusTask; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "BusTask"
    ADD CONSTRAINT "pkBusTask" PRIMARY KEY ("BusTaskID", "BusTaskVersionNumber");


--
-- TOC entry 6394 (class 2606 OID 46020)
-- Name: pkBusTaskHandler; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "BusTaskHandler"
    ADD CONSTRAINT "pkBusTaskHandler" PRIMARY KEY ("BusTaskHandlerID");


--
-- TOC entry 6396 (class 2606 OID 46022)
-- Name: pkBusTaskSchedule; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "BusTaskSchedule"
    ADD CONSTRAINT "pkBusTaskSchedule" PRIMARY KEY ("BusTaskScheduleID");


--
-- TOC entry 6398 (class 2606 OID 46024)
-- Name: pkBusTaskScheduleProcessLog; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "BusTaskScheduleProcessLog"
    ADD CONSTRAINT "pkBusTaskScheduleProcessLog" PRIMARY KEY ("BusTaskScheduleProcessLogID");


--
-- TOC entry 6409 (class 2606 OID 46026)
-- Name: pkComponentTier; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ComponentTier"
    ADD CONSTRAINT "pkComponentTier" PRIMARY KEY ("ComponentTierID");


--
-- TOC entry 6411 (class 2606 OID 46028)
-- Name: pkComponentTierTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ComponentTierTemplate"
    ADD CONSTRAINT "pkComponentTierTemplate" PRIMARY KEY ("ComponentTierTemplateID");


--
-- TOC entry 6415 (class 2606 OID 46030)
-- Name: pkContactName; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ContactName"
    ADD CONSTRAINT "pkContactName" PRIMARY KEY ("ContactNameID");


--
-- TOC entry 6417 (class 2606 OID 46032)
-- Name: pkContactPhone; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ContactPhone"
    ADD CONSTRAINT "pkContactPhone" PRIMARY KEY ("ContactPhoneId");


--
-- TOC entry 6419 (class 2606 OID 46034)
-- Name: pkContactRegulator; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ContactRegulator"
    ADD CONSTRAINT "pkContactRegulator" PRIMARY KEY ("ContactID", "RegulatorID");


--
-- TOC entry 6423 (class 2606 OID 46036)
-- Name: pkCountryDeduction; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "CountryDeduction"
    ADD CONSTRAINT "pkCountryDeduction" PRIMARY KEY ("CountryDeductionID", "DeductionID", "DeductionVersionNumber");


--
-- TOC entry 6425 (class 2606 OID 46038)
-- Name: pkCountryDeductionTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "CountryDeductionTemplate"
    ADD CONSTRAINT "pkCountryDeductionTemplate" PRIMARY KEY ("CountryDeductionTemplateID", "DeductionTemplateID", "DeductionTemplateVersionNumber");


--
-- TOC entry 6427 (class 2606 OID 46040)
-- Name: pkCurrencyCode; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "CurrencyCode"
    ADD CONSTRAINT "pkCurrencyCode" PRIMARY KEY ("CurrencyCode");


--
-- TOC entry 6431 (class 2606 OID 46042)
-- Name: pkDeduction; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Deduction"
    ADD CONSTRAINT "pkDeduction" PRIMARY KEY ("DeductionID", "DeductionVersionNumber");


--
-- TOC entry 6433 (class 2606 OID 46044)
-- Name: pkDeductionComponentTier; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DeductionComponentTier"
    ADD CONSTRAINT "pkDeductionComponentTier" PRIMARY KEY ("DeductionID", "DeductionVersionNumber", "ComponentTierID");


--
-- TOC entry 6435 (class 2606 OID 46046)
-- Name: pkDeductionComponentTierTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DeductionComponentTierTemplate"
    ADD CONSTRAINT "pkDeductionComponentTierTemplate" PRIMARY KEY ("DeductionTemplateID", "DeductionTemplateVersionNumber", "ComponentTierTemplateID");


--
-- TOC entry 6437 (class 2606 OID 46048)
-- Name: pkDeductionProduct; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DeductionProduct"
    ADD CONSTRAINT "pkDeductionProduct" PRIMARY KEY ("DeductionID", "ProductID", "ProductVersionID", "DeductionVersionNumber");


--
-- TOC entry 6439 (class 2606 OID 46050)
-- Name: pkDeductionProductTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DeductionProductTemplate"
    ADD CONSTRAINT "pkDeductionProductTemplate" PRIMARY KEY ("DeductionTemplateID", "DeductionTemplateVersionNumber", "ProductTemplateID", "ProductVersionID");


--
-- TOC entry 6441 (class 2606 OID 46052)
-- Name: pkDeductionTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DeductionTemplate"
    ADD CONSTRAINT "pkDeductionTemplate" PRIMARY KEY ("DeductionTemplateID", "DeductionTemplateVersionNumber");


--
-- TOC entry 6443 (class 2606 OID 46054)
-- Name: pkDefaultOrganisation; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisation"
    ADD CONSTRAINT "pkDefaultOrganisation" PRIMARY KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 6445 (class 2606 OID 46056)
-- Name: pkDefaultOrganisationArtefact; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationArtefact"
    ADD CONSTRAINT "pkDefaultOrganisationArtefact" PRIMARY KEY ("ArtefactID", "ArtefactVersionNumber", "DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 6447 (class 2606 OID 46058)
-- Name: pkDefaultOrganisationArtefactT; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationArtefactTemplate"
    ADD CONSTRAINT "pkDefaultOrganisationArtefactT" PRIMARY KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber", "DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 6453 (class 2606 OID 46060)
-- Name: pkDefaultOrganisationBucket; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationBucket"
    ADD CONSTRAINT "pkDefaultOrganisationBucket" PRIMARY KEY ("BucketTemplateID", "DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 6455 (class 2606 OID 46062)
-- Name: pkDefaultOrganisationBucketT; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationBucketTemplate"
    ADD CONSTRAINT "pkDefaultOrganisationBucketT" PRIMARY KEY ("BucketTemplateID", "DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 6463 (class 2606 OID 46064)
-- Name: pkDefaultOrganisationGroupTarget; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationGroupTarget"
    ADD CONSTRAINT "pkDefaultOrganisationGroupTarget" PRIMARY KEY ("DefaultOrganisationUserTargetID", "DefaultOrganisationGroupID");


--
-- TOC entry 6465 (class 2606 OID 46066)
-- Name: pkDefaultOrganisationGroupTargetTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationGroupTargetTemplate"
    ADD CONSTRAINT "pkDefaultOrganisationGroupTargetTemplate" PRIMARY KEY ("DefaultOrganisationGroupTemplateID", "DefaultOrganisationUserTargetTemplateID");


--
-- TOC entry 6469 (class 2606 OID 46068)
-- Name: pkDefaultOrganisationLedger; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationLedger"
    ADD CONSTRAINT "pkDefaultOrganisationLedger" PRIMARY KEY ("DefaultOrganisationLedgerID");


--
-- TOC entry 6471 (class 2606 OID 46070)
-- Name: pkDefaultOrganisationLedgerTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationLedgerTemplate"
    ADD CONSTRAINT "pkDefaultOrganisationLedgerTemplate" PRIMARY KEY ("DefaultOrganisationLedgerTemplateID");


--
-- TOC entry 6473 (class 2606 OID 46072)
-- Name: pkDefaultOrganisationModule; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationModule"
    ADD CONSTRAINT "pkDefaultOrganisationModule" PRIMARY KEY ("ModuleID", "ModuleVersionNumber", "DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 6475 (class 2606 OID 46074)
-- Name: pkDefaultOrganisationModuleT; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationModuleTemplate"
    ADD CONSTRAINT "pkDefaultOrganisationModuleT" PRIMARY KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber", "DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 6477 (class 2606 OID 46076)
-- Name: pkDefaultOrganisationNotificationConstruct; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationNotificationConstruct"
    ADD CONSTRAINT "pkDefaultOrganisationNotificationConstruct" PRIMARY KEY ("DefaultOrganisationNotificationConstructID");


--
-- TOC entry 6481 (class 2606 OID 46078)
-- Name: pkDefaultOrganisationPaymentMethod; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationPaymentMethod"
    ADD CONSTRAINT "pkDefaultOrganisationPaymentMethod" PRIMARY KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber", "GlobalPaymentMethodID");


--
-- TOC entry 6483 (class 2606 OID 46080)
-- Name: pkDefaultOrganisationPaymentMethodTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationPaymentMethodTemplate"
    ADD CONSTRAINT "pkDefaultOrganisationPaymentMethodTemplate" PRIMARY KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber", "GlobalPaymentMethodID");


--
-- TOC entry 6485 (class 2606 OID 46082)
-- Name: pkDefaultOrganisationProduct; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationProduct"
    ADD CONSTRAINT "pkDefaultOrganisationProduct" PRIMARY KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber", "ProductID", "ProductVersionID");


--
-- TOC entry 6487 (class 2606 OID 46084)
-- Name: pkDefaultOrganisationProductTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationProductTemplate"
    ADD CONSTRAINT "pkDefaultOrganisationProductTemplate" PRIMARY KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber", "ProductTemplateID", "ProductVersionID");


--
-- TOC entry 6495 (class 2606 OID 46086)
-- Name: pkDefaultOrganisationRoleTarget; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationRoleTarget"
    ADD CONSTRAINT "pkDefaultOrganisationRoleTarget" PRIMARY KEY ("DefaultOrganisationRoleID", "DefaultOrganisationUserTargetID");


--
-- TOC entry 6497 (class 2606 OID 46088)
-- Name: pkDefaultOrganisationRoleTargetTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationRoleTargetTemplate"
    ADD CONSTRAINT "pkDefaultOrganisationRoleTargetTemplate" PRIMARY KEY ("DefaultOrganisationRoleTemplateID", "DefaultOrganisationUserTargetTemplateID");


--
-- TOC entry 6501 (class 2606 OID 46090)
-- Name: pkDefaultOrganisationShoppingCartBlueprint; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationShoppingCartBlueprint"
    ADD CONSTRAINT "pkDefaultOrganisationShoppingCartBlueprint" PRIMARY KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber", "ShoppingCartBlueprintID");


--
-- TOC entry 6503 (class 2606 OID 46092)
-- Name: pkDefaultOrganisationShoppingCartBlueprintTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationShoppingCartBlueprintTemplate"
    ADD CONSTRAINT "pkDefaultOrganisationShoppingCartBlueprintTemplate" PRIMARY KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber", "ShoppingCartBlueprintTemplateID");


--
-- TOC entry 6505 (class 2606 OID 46094)
-- Name: pkDefaultOrganisationStatusType; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationStatusType"
    ADD CONSTRAINT "pkDefaultOrganisationStatusType" PRIMARY KEY ("StatusTypeID", "StatusTypeVersionNumber", "DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 6507 (class 2606 OID 46096)
-- Name: pkDefaultOrganisationStatusTypeTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationStatusTypeTemplate"
    ADD CONSTRAINT "pkDefaultOrganisationStatusTypeTemplate" PRIMARY KEY ("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber", "DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 6513 (class 2606 OID 46098)
-- Name: pkDefaultOrganisationTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationTemplate"
    ADD CONSTRAINT "pkDefaultOrganisationTemplate" PRIMARY KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 6515 (class 2606 OID 46100)
-- Name: pkDefaultOrganisationUserTarget; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationUserTarget"
    ADD CONSTRAINT "pkDefaultOrganisationUserTarget" PRIMARY KEY ("DefaultOrganisationUserTargetID");


--
-- TOC entry 6517 (class 2606 OID 46102)
-- Name: pkDefaultOrganisationUserTargetTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationUserTargetTemplate"
    ADD CONSTRAINT "pkDefaultOrganisationUserTargetTemplate" PRIMARY KEY ("DefaultOrganisationUserTargetTemplateID");


--
-- TOC entry 6519 (class 2606 OID 46104)
-- Name: pkDefaultOrganisationUserType; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationUserType"
    ADD CONSTRAINT "pkDefaultOrganisationUserType" PRIMARY KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber", "UserTypeID");


--
-- TOC entry 6521 (class 2606 OID 46106)
-- Name: pkDefaultOrganisationUserTypeTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationUserTypeTemplate"
    ADD CONSTRAINT "pkDefaultOrganisationUserTypeTemplate" PRIMARY KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber", "UserTypeID");


--
-- TOC entry 6523 (class 2606 OID 46108)
-- Name: pkDefaultOrganisationWorkflow; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationWorkflow"
    ADD CONSTRAINT "pkDefaultOrganisationWorkflow" PRIMARY KEY ("WorkflowVersionNumber", "WorkflowID", "DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 6525 (class 2606 OID 46110)
-- Name: pkDefaultOrganisationWorkflowT; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationWorkflowTemplate"
    ADD CONSTRAINT "pkDefaultOrganisationWorkflowT" PRIMARY KEY ("WorkflowTemplateVersionNumber", "WorkflowTemplateID", "DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 6479 (class 2606 OID 46112)
-- Name: pkDefaultOrgantionNotificationConstructT; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DefaultOrganisationNotificationConstructTemplate"
    ADD CONSTRAINT "pkDefaultOrgantionNotificationConstructT" PRIMARY KEY ("DefaultOrganisationNotificationConstructTemplateID");


--
-- TOC entry 6527 (class 2606 OID 46114)
-- Name: pkDirectDebitMandate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DirectDebitMandate"
    ADD CONSTRAINT "pkDirectDebitMandate" PRIMARY KEY ("DirectDebitMandateID", "DirectDebitMandateVersionNumber");


--
-- TOC entry 6529 (class 2606 OID 46116)
-- Name: pkDirectDebitMandateTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DirectDebitMandateTemplate"
    ADD CONSTRAINT "pkDirectDebitMandateTemplate" PRIMARY KEY ("DirectDebitMandateTemplateID", "DirectDebitMandateTemplateVersionNumber");


--
-- TOC entry 6531 (class 2606 OID 46118)
-- Name: pkDirectDebitSchedule; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DirectDebitSchedule"
    ADD CONSTRAINT "pkDirectDebitSchedule" PRIMARY KEY ("DirectDebitScheduleID");


--
-- TOC entry 6533 (class 2606 OID 46120)
-- Name: pkDiscount; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Discount"
    ADD CONSTRAINT "pkDiscount" PRIMARY KEY ("DiscountID", "DiscountVersionNumber");


--
-- TOC entry 6535 (class 2606 OID 46122)
-- Name: pkDiscountComponentTier; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DiscountComponentTier"
    ADD CONSTRAINT "pkDiscountComponentTier" PRIMARY KEY ("DiscountID", "DiscountVersionNumber", "ComponentTierID");


--
-- TOC entry 6537 (class 2606 OID 46124)
-- Name: pkDiscountComponentTierTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DiscountComponentTierTemplate"
    ADD CONSTRAINT "pkDiscountComponentTierTemplate" PRIMARY KEY ("DiscountTemplateID", "DiscountTemplateVersionNumber", "ComponentTierTemplateID");


--
-- TOC entry 6539 (class 2606 OID 46126)
-- Name: pkDiscountRelatedProduct; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DiscountRelatedProduct"
    ADD CONSTRAINT "pkDiscountRelatedProduct" PRIMARY KEY ("DiscountRelatedProductID");


--
-- TOC entry 6541 (class 2606 OID 46128)
-- Name: pkDiscountRelatedProductTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DiscountRelatedProductTemplate"
    ADD CONSTRAINT "pkDiscountRelatedProductTemplate" PRIMARY KEY ("DiscountRelatedProductTemplateID");


--
-- TOC entry 6543 (class 2606 OID 46130)
-- Name: pkDiscountTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "DiscountTemplate"
    ADD CONSTRAINT "pkDiscountTemplate" PRIMARY KEY ("DiscountTemplateID", "DiscountTemplateVersionNumber");


--
-- TOC entry 6547 (class 2606 OID 46132)
-- Name: pkFieldDetail; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "FieldDetail"
    ADD CONSTRAINT "pkFieldDetail" PRIMARY KEY ("FieldDetailID");


--
-- TOC entry 6549 (class 2606 OID 46134)
-- Name: pkFieldDetailTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "FieldDetailTemplate"
    ADD CONSTRAINT "pkFieldDetailTemplate" PRIMARY KEY ("FieldDetailTemplateID");


--
-- TOC entry 6551 (class 2606 OID 46136)
-- Name: pkGlobalAccountingPeriod; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "GlobalAccountingPeriod"
    ADD CONSTRAINT "pkGlobalAccountingPeriod" PRIMARY KEY ("GlobalAccountingPeriodID");


--
-- TOC entry 6553 (class 2606 OID 46138)
-- Name: pkGlobalDirectDebitCollectionPeriod; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "GlobalDirectDebitCollectionPeriod"
    ADD CONSTRAINT "pkGlobalDirectDebitCollectionPeriod" PRIMARY KEY ("GlobalDirectDebitCollectionPeriodID");


--
-- TOC entry 6555 (class 2606 OID 46140)
-- Name: pkGlobalPaymentMethod; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "GlobalPaymentMethod"
    ADD CONSTRAINT "pkGlobalPaymentMethod" PRIMARY KEY ("GlobalPaymentMethodID");


--
-- TOC entry 6557 (class 2606 OID 46142)
-- Name: pkGroup; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Group"
    ADD CONSTRAINT "pkGroup" PRIMARY KEY ("GroupID");


--
-- TOC entry 6561 (class 2606 OID 46144)
-- Name: pkInterfacePanel; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanel"
    ADD CONSTRAINT "pkInterfacePanel" PRIMARY KEY ("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 6575 (class 2606 OID 46146)
-- Name: pkInterfacePanelFieldDetail; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelFieldDetail"
    ADD CONSTRAINT "pkInterfacePanelFieldDetail" PRIMARY KEY ("InterfacePanelID", "InterfacePanelVersionNumber", "FieldDetailID");


--
-- TOC entry 6567 (class 2606 OID 46148)
-- Name: pkInterfacePanelFieldDetailOrg123aisationType; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelFDOrganisationTypeUserType"
    ADD CONSTRAINT "pkInterfacePanelFieldDetailOrg123aisationType" PRIMARY KEY ("InterfacePanelID", "InterfacePanelVersionNumber", "FieldDetailID", "OrganisationTypeID");


--
-- TOC entry 6569 (class 2606 OID 46150)
-- Name: pkInterfacePanelFieldDetailOrg123aisationTypeTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelFDOrganisationTypeUserTypeTemplate"
    ADD CONSTRAINT "pkInterfacePanelFieldDetailOrg123aisationTypeTemplate" PRIMARY KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber", "FieldDetailTemplateID", "OrganisationTypeID");


--
-- TOC entry 6577 (class 2606 OID 46152)
-- Name: pkInterfacePanelFieldDetailOrganaisationType; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelFieldDetailOrganisationType"
    ADD CONSTRAINT "pkInterfacePanelFieldDetailOrganaisationType" PRIMARY KEY ("InterfacePanelID", "InterfacePanelVersionNumber", "FieldDetailID", "OrganisationTypeID");


--
-- TOC entry 6579 (class 2606 OID 46154)
-- Name: pkInterfacePanelFieldDetailOrganaisationTypeTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelFieldDetailOrganisationTypeTemplate"
    ADD CONSTRAINT "pkInterfacePanelFieldDetailOrganaisationTypeTemplate" PRIMARY KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber", "FieldDetailTemplateID", "OrganisationTypeID");


--
-- TOC entry 6581 (class 2606 OID 46156)
-- Name: pkInterfacePanelFieldDetailTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelFieldDetailTemplate"
    ADD CONSTRAINT "pkInterfacePanelFieldDetailTemplate" PRIMARY KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber", "FieldDetailTemplateID");


--
-- TOC entry 6595 (class 2606 OID 46158)
-- Name: pkInterfacePanelOrganUserTypeype; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelOrganisationTypeUserType"
    ADD CONSTRAINT "pkInterfacePanelOrganUserTypeype" PRIMARY KEY ("InterfacePanelID", "InterfacePanelVersionNumber", "OrganisationTypeID");


--
-- TOC entry 6597 (class 2606 OID 46160)
-- Name: pkInterfacePanelOrganUserTypeypeTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelOrganisationTypeUserTypeTemplate"
    ADD CONSTRAINT "pkInterfacePanelOrganUserTypeypeTemplate" PRIMARY KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber", "OrganisationTypeID");


--
-- TOC entry 6591 (class 2606 OID 46162)
-- Name: pkInterfacePanelOrganisationType; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelOrganisationType"
    ADD CONSTRAINT "pkInterfacePanelOrganisationType" PRIMARY KEY ("InterfacePanelID", "InterfacePanelVersionNumber", "OrganisationTypeID");


--
-- TOC entry 6593 (class 2606 OID 46164)
-- Name: pkInterfacePanelOrganisationTypeTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelOrganisationTypeTemplate"
    ADD CONSTRAINT "pkInterfacePanelOrganisationTypeTemplate" PRIMARY KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber", "OrganisationTypeID");


--
-- TOC entry 6603 (class 2606 OID 46166)
-- Name: pkInterfacePanelSetting; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelSetting"
    ADD CONSTRAINT "pkInterfacePanelSetting" PRIMARY KEY ("InterfacePanelSettingID", "InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 6605 (class 2606 OID 46168)
-- Name: pkInterfacePanelSettingTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelSettingTemplate"
    ADD CONSTRAINT "pkInterfacePanelSettingTemplate" PRIMARY KEY ("InterfacePanelSettingTemplateID", "InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 6607 (class 2606 OID 46170)
-- Name: pkInterfacePanelTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InterfacePanelTemplate"
    ADD CONSTRAINT "pkInterfacePanelTemplate" PRIMARY KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 6620 (class 2606 OID 46172)
-- Name: pkInvoice; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Invoice"
    ADD CONSTRAINT "pkInvoice" PRIMARY KEY ("InvoiceID");


--
-- TOC entry 6622 (class 2606 OID 46174)
-- Name: pkInvoiceLineItem; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InvoiceLineItem"
    ADD CONSTRAINT "pkInvoiceLineItem" PRIMARY KEY ("InvoiceLineItemID");


--
-- TOC entry 6624 (class 2606 OID 46176)
-- Name: pkInvoiceProcessLog; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "InvoiceProcessLog"
    ADD CONSTRAINT "pkInvoiceProcessLog" PRIMARY KEY ("InvoiceID", "CreatedOn", "StatusTypeID", "StatusTypeVersionNumber", "StatusTypeValueID");


--
-- TOC entry 6758 (class 2606 OID 46178)
-- Name: pkLedgerAccount; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationLedgerAccount"
    ADD CONSTRAINT "pkLedgerAccount" PRIMARY KEY ("OrganisationLedgerAccountID");


--
-- TOC entry 6626 (class 2606 OID 46180)
-- Name: pkLedgerAccountBalance; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "LedgerAccountBalance"
    ADD CONSTRAINT "pkLedgerAccountBalance" PRIMARY KEY ("LedgerAccountID", "BalanceOn");


--
-- TOC entry 6628 (class 2606 OID 46182)
-- Name: pkLedgerAccountTransaction; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "LedgerAccountTransaction"
    ADD CONSTRAINT "pkLedgerAccountTransaction" PRIMARY KEY ("LedgerAccountID", "TransactionOrderID", "BalanceOn");


--
-- TOC entry 6638 (class 2606 OID 46184)
-- Name: pkModuleArtefact; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleArtefact"
    ADD CONSTRAINT "pkModuleArtefact" PRIMARY KEY ("ArtefactID", "ArtefactVersionNumber", "ModuleID", "ModuleVersionNumber");


--
-- TOC entry 6640 (class 2606 OID 46186)
-- Name: pkModuleArtefactTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleArtefactTemplate"
    ADD CONSTRAINT "pkModuleArtefactTemplate" PRIMARY KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber", "ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 6646 (class 2606 OID 46188)
-- Name: pkModuleDependency; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleDependency"
    ADD CONSTRAINT "pkModuleDependency" PRIMARY KEY ("ModuleDependencyID");


--
-- TOC entry 6648 (class 2606 OID 46190)
-- Name: pkModuleDependencyTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleDependencyTemplate"
    ADD CONSTRAINT "pkModuleDependencyTemplate" PRIMARY KEY ("ModuleDependencyTemplateID");


--
-- TOC entry 6650 (class 2606 OID 46192)
-- Name: pkModuleNotificationConstruct; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleNotificationConstruct"
    ADD CONSTRAINT "pkModuleNotificationConstruct" PRIMARY KEY ("ModuleNotificationConstructID");


--
-- TOC entry 6652 (class 2606 OID 46194)
-- Name: pkModuleNotificationConstructTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleNotificationConstructTemplate"
    ADD CONSTRAINT "pkModuleNotificationConstructTemplate" PRIMARY KEY ("ModuleNotificationConstructTemplateID");


--
-- TOC entry 6658 (class 2606 OID 46196)
-- Name: pkModuleProduct; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleProduct"
    ADD CONSTRAINT "pkModuleProduct" PRIMARY KEY ("ModuleID", "ModuleVersionNumber", "ProductID", "ProductVersionID");


--
-- TOC entry 6660 (class 2606 OID 46198)
-- Name: pkModuleProductTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleProductTemplate"
    ADD CONSTRAINT "pkModuleProductTemplate" PRIMARY KEY ("ProductVersionID", "ProductTemplateID", "ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 6670 (class 2606 OID 46200)
-- Name: pkModuleStatusType; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleStatusType"
    ADD CONSTRAINT "pkModuleStatusType" PRIMARY KEY ("ModuleID", "ModuleVersionNumber", "StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 6672 (class 2606 OID 46202)
-- Name: pkModuleStatusTypeTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ModuleStatusTypeTemplate"
    ADD CONSTRAINT "pkModuleStatusTypeTemplate" PRIMARY KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber", "StatusTypeTemplateID", "StatusTypeTemplateVersionNumber");


--
-- TOC entry 6688 (class 2606 OID 46204)
-- Name: pkNotification; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Notification"
    ADD CONSTRAINT "pkNotification" PRIMARY KEY ("NotificationID");


--
-- TOC entry 6692 (class 2606 OID 46206)
-- Name: pkNotificationConstructClaim; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstructClaim"
    ADD CONSTRAINT "pkNotificationConstructClaim" PRIMARY KEY ("NotificationConstructClaimID");


--
-- TOC entry 6694 (class 2606 OID 46208)
-- Name: pkNotificationConstructClaimTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstructClaimTemplate"
    ADD CONSTRAINT "pkNotificationConstructClaimTemplate" PRIMARY KEY ("NotificationConstructClaimTemplateID");


--
-- TOC entry 6696 (class 2606 OID 46210)
-- Name: pkNotificationConstructData; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstructData"
    ADD CONSTRAINT "pkNotificationConstructData" PRIMARY KEY ("NotificationConstructDataID");


--
-- TOC entry 6698 (class 2606 OID 46212)
-- Name: pkNotificationConstructDataTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstructDataTemplate"
    ADD CONSTRAINT "pkNotificationConstructDataTemplate" PRIMARY KEY ("NotificationConstructDataTemplateID");


--
-- TOC entry 6708 (class 2606 OID 46214)
-- Name: pkNotificationConstructParameter; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstructParameter"
    ADD CONSTRAINT "pkNotificationConstructParameter" PRIMARY KEY ("NotificationConstructParameterID");


--
-- TOC entry 6710 (class 2606 OID 46216)
-- Name: pkNotificationConstructParameterTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstructParameterTemplate"
    ADD CONSTRAINT "pkNotificationConstructParameterTemplate" PRIMARY KEY ("NotificationConstructParameterTemplateID");


--
-- TOC entry 6712 (class 2606 OID 46218)
-- Name: pkNotificationConstructRole; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstructRole"
    ADD CONSTRAINT "pkNotificationConstructRole" PRIMARY KEY ("NotificationRoleConstructID");


--
-- TOC entry 6714 (class 2606 OID 46220)
-- Name: pkNotificationConstructRoleTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstructRoleTemplate"
    ADD CONSTRAINT "pkNotificationConstructRoleTemplate" PRIMARY KEY ("NotificationConstructRoleID");


--
-- TOC entry 6716 (class 2606 OID 46222)
-- Name: pkNotificationConstructTarget; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstructTarget"
    ADD CONSTRAINT "pkNotificationConstructTarget" PRIMARY KEY ("NotificationConstructTargetID");


--
-- TOC entry 6718 (class 2606 OID 46224)
-- Name: pkNotificationConstructTargetTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstructTargetTemplate"
    ADD CONSTRAINT "pkNotificationConstructTargetTemplate" PRIMARY KEY ("NotificationConstructTargetTemplateID");


--
-- TOC entry 6720 (class 2606 OID 46226)
-- Name: pkNotificationConstructTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationConstructTemplate"
    ADD CONSTRAINT "pkNotificationConstructTemplate" PRIMARY KEY ("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber");


--
-- TOC entry 6722 (class 2606 OID 46228)
-- Name: pkNotificationRecipient; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "NotificationRecipient"
    ADD CONSTRAINT "pkNotificationRecipient" PRIMARY KEY ("NotificationRecipientID");


--
-- TOC entry 6732 (class 2606 OID 46230)
-- Name: pkOrganisationAccountingPeriod; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationAccountingPeriod"
    ADD CONSTRAINT "pkOrganisationAccountingPeriod" PRIMARY KEY ("OrganisationAccountingPeriodID", "OrganisationID");


--
-- TOC entry 6734 (class 2606 OID 46232)
-- Name: pkOrganisationArtefact; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationArtefact"
    ADD CONSTRAINT "pkOrganisationArtefact" PRIMARY KEY ("OrganisationID", "ArtefactID", "ArtefactVersionNumber");


--
-- TOC entry 6736 (class 2606 OID 46234)
-- Name: pkOrganisationBankAccount; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationBankAccount"
    ADD CONSTRAINT "pkOrganisationBankAccount" PRIMARY KEY ("OrganisationBankAccountId");


--
-- TOC entry 6741 (class 2606 OID 46236)
-- Name: pkOrganisationDirectDebitMandate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationDirectDebitMandate"
    ADD CONSTRAINT "pkOrganisationDirectDebitMandate" PRIMARY KEY ("OrganisationDirectDebitMandateID");


--
-- TOC entry 6743 (class 2606 OID 46238)
-- Name: pkOrganisationDirectDebitMandateSignoff; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationDirectDebitMandateProcessLog"
    ADD CONSTRAINT "pkOrganisationDirectDebitMandateSignoff" PRIMARY KEY ("OrganisationDirectDebitMandateID", "CreatedOn");


--
-- TOC entry 6745 (class 2606 OID 46240)
-- Name: pkOrganisationDiscount; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationDiscount"
    ADD CONSTRAINT "pkOrganisationDiscount" PRIMARY KEY ("OrganisationID", "DiscountID", "DiscountVersionNumber");


--
-- TOC entry 6747 (class 2606 OID 46242)
-- Name: pkOrganisationFinancialDetail; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationFinancialDetail"
    ADD CONSTRAINT "pkOrganisationFinancialDetail" PRIMARY KEY ("OrganisationFinancialDetailID");


--
-- TOC entry 6760 (class 2606 OID 46244)
-- Name: pkOrganisationOfflinePaymentMethod; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationPaymentMethod"
    ADD CONSTRAINT "pkOrganisationOfflinePaymentMethod" PRIMARY KEY ("OrganisationID", "GlobalPaymentMethodID");


--
-- TOC entry 6762 (class 2606 OID 46246)
-- Name: pkOrganisationPlanSubscription; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationPlanSubscription"
    ADD CONSTRAINT "pkOrganisationPlanSubscription" PRIMARY KEY ("OrganisationID", "PlanSubscriptionID", "PlanSubscriptionVersionNumber");


--
-- TOC entry 6764 (class 2606 OID 46248)
-- Name: pkOrganisationProductPurchase; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationProductPurchase"
    ADD CONSTRAINT "pkOrganisationProductPurchase" PRIMARY KEY ("OrganisationID", "ProductID", "ProductVersionID", "InvoiceLineItemID");


--
-- TOC entry 6771 (class 2606 OID 46250)
-- Name: pkOrganisationSetting; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationSetting"
    ADD CONSTRAINT "pkOrganisationSetting" PRIMARY KEY ("OrganisationSettingID");


--
-- TOC entry 6773 (class 2606 OID 46252)
-- Name: pkOrganisationSettingTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationSettingTemplate"
    ADD CONSTRAINT "pkOrganisationSettingTemplate" PRIMARY KEY ("OrganisationSettingTemplateID");


--
-- TOC entry 6775 (class 2606 OID 46254)
-- Name: pkOrganisationStatus; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationStatus"
    ADD CONSTRAINT "pkOrganisationStatus" PRIMARY KEY ("OrganisationID", "StatusTypeID", "StatusTypeVersionNumber", "StatusTypeValueID");


--
-- TOC entry 6777 (class 2606 OID 46256)
-- Name: pkOrganisationStatusType; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationStatusType"
    ADD CONSTRAINT "pkOrganisationStatusType" PRIMARY KEY ("OrganisationStatusTypeID");


--
-- TOC entry 6784 (class 2606 OID 46258)
-- Name: pkOrganisationTeamSetting; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationTeamSetting"
    ADD CONSTRAINT "pkOrganisationTeamSetting" PRIMARY KEY ("OrganisationTeamSettingID");


--
-- TOC entry 6786 (class 2606 OID 46260)
-- Name: pkOrganisationTeamSettingTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationTeamSettingTemplate"
    ADD CONSTRAINT "pkOrganisationTeamSettingTemplate" PRIMARY KEY ("OrganisationTeamSettingID");


--
-- TOC entry 6788 (class 2606 OID 46262)
-- Name: pkOrganisationTradingName; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationTradingName"
    ADD CONSTRAINT "pkOrganisationTradingName" PRIMARY KEY ("OrganisationTradingNameID");


--
-- TOC entry 6790 (class 2606 OID 46264)
-- Name: pkOrganisationType; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationType"
    ADD CONSTRAINT "pkOrganisationType" PRIMARY KEY ("OrganisationTypeID");


--
-- TOC entry 6805 (class 2606 OID 46266)
-- Name: pkOrganisationUserType; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "OrganisationUserType"
    ADD CONSTRAINT "pkOrganisationUserType" PRIMARY KEY ("OrganisationID", "UserTypeID");


--
-- TOC entry 6809 (class 2606 OID 46268)
-- Name: pkPackage; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Package"
    ADD CONSTRAINT "pkPackage" PRIMARY KEY ("PackageID", "PackageVersionNumber");


--
-- TOC entry 6811 (class 2606 OID 46270)
-- Name: pkPackageProduct; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PackageProduct"
    ADD CONSTRAINT "pkPackageProduct" PRIMARY KEY ("PackageProductID", "PackageID", "PackageVersionNumber");


--
-- TOC entry 6825 (class 2606 OID 46272)
-- Name: pkPackageProductTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PackageProductTemplate"
    ADD CONSTRAINT "pkPackageProductTemplate" PRIMARY KEY ("PackageProductTemplateID", "PackageTemplateID", "PackageTemplateVersionNumber");


--
-- TOC entry 6827 (class 2606 OID 46274)
-- Name: pkPackageTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PackageTemplate"
    ADD CONSTRAINT "pkPackageTemplate" PRIMARY KEY ("PackageTemplateID", "PackageTemplateVersionNumber");


--
-- TOC entry 6832 (class 2606 OID 46276)
-- Name: pkPlan; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Plan"
    ADD CONSTRAINT "pkPlan" PRIMARY KEY ("PlanID", "PlanVersionNumber");


--
-- TOC entry 6834 (class 2606 OID 46278)
-- Name: pkPlanBilling; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanBilling"
    ADD CONSTRAINT "pkPlanBilling" PRIMARY KEY ("PlanID", "PlanVersionNumber", "BillingID");


--
-- TOC entry 6836 (class 2606 OID 46280)
-- Name: pkPlanBillingTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanBillingTemplate"
    ADD CONSTRAINT "pkPlanBillingTemplate" PRIMARY KEY ("PlanTemplateID", "PlanTemplateVersionNumber", "BillingTemplateID");


--
-- TOC entry 6838 (class 2606 OID 46282)
-- Name: pkPlanDiscount; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanDiscount"
    ADD CONSTRAINT "pkPlanDiscount" PRIMARY KEY ("PlanVersionNumber", "PlanID", "DiscountID", "DiscountVersionNumber");


--
-- TOC entry 6840 (class 2606 OID 46284)
-- Name: pkPlanDiscountTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanDiscountTemplate"
    ADD CONSTRAINT "pkPlanDiscountTemplate" PRIMARY KEY ("PlanTemplateID", "PlanTemplateVersionNumber", "DiscountTemplateID", "DiscountTemplateVersionNumber");


--
-- TOC entry 6842 (class 2606 OID 46286)
-- Name: pkPlanGlobalPaymentMethod; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanGlobalPaymentMethod"
    ADD CONSTRAINT "pkPlanGlobalPaymentMethod" PRIMARY KEY ("PlanID", "PlanVersionNumber", "GlobalPaymentMethodID");


--
-- TOC entry 6844 (class 2606 OID 46288)
-- Name: pkPlanGlobalPaymentMethodTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanGlobalPaymentMethodTemplate"
    ADD CONSTRAINT "pkPlanGlobalPaymentMethodTemplate" PRIMARY KEY ("PlanTemplateID", "PlanTemplateVersionNumber", "GlobalPaymentMethodID");


--
-- TOC entry 6846 (class 2606 OID 46290)
-- Name: pkPlanGroup; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanGroup"
    ADD CONSTRAINT "pkPlanGroup" PRIMARY KEY ("PlanGroupID");


--
-- TOC entry 6848 (class 2606 OID 46292)
-- Name: pkPlanProduct; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanProduct"
    ADD CONSTRAINT "pkPlanProduct" PRIMARY KEY ("PlanID", "PlanVersionNumber", "ProductID", "ProductVersionID");


--
-- TOC entry 6850 (class 2606 OID 46294)
-- Name: pkPlanProductTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanProductTemplate"
    ADD CONSTRAINT "pkPlanProductTemplate" PRIMARY KEY ("PlanTemplateID", "PlanTemplateVersionNumber", "ProductTemplateID", "ProductVersionID");


--
-- TOC entry 6852 (class 2606 OID 46296)
-- Name: pkPlanSubscription; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanSubscription"
    ADD CONSTRAINT "pkPlanSubscription" PRIMARY KEY ("PlanSubscriptionID", "PlanSubscriptionVersionNumber");


--
-- TOC entry 6854 (class 2606 OID 46298)
-- Name: pkPlanSubscriptionBillingPeriod; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanSubscriptionBillingProcessLog"
    ADD CONSTRAINT "pkPlanSubscriptionBillingPeriod" PRIMARY KEY ("PlanSubscriptionBillingPeriodID");


--
-- TOC entry 6856 (class 2606 OID 46300)
-- Name: pkPlanSubscriptionPaymentPlan; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanSubscriptionPaymentPlan"
    ADD CONSTRAINT "pkPlanSubscriptionPaymentPlan" PRIMARY KEY ("PlanSubscriptionPaymentPlanID");


--
-- TOC entry 6858 (class 2606 OID 46302)
-- Name: pkPlanSubscriptionPeriod; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanSubscriptionPeriod"
    ADD CONSTRAINT "pkPlanSubscriptionPeriod" PRIMARY KEY ("PlanSubscriptionPeriodID");


--
-- TOC entry 6860 (class 2606 OID 46304)
-- Name: pkPlanSubscriptionProcessLog; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanSubscriptionProcessLog"
    ADD CONSTRAINT "pkPlanSubscriptionProcessLog" PRIMARY KEY ("PlanSubscriptionID", "PlanSubscriptionVersionNumber", "CreatedOn", "StatusTypeValueID", "StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 6862 (class 2606 OID 46306)
-- Name: pkPlanTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanTemplate"
    ADD CONSTRAINT "pkPlanTemplate" PRIMARY KEY ("PlanTemplateID", "PlanTemplateVersionNumber");


--
-- TOC entry 6864 (class 2606 OID 46308)
-- Name: pkPlanTransaction; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanTransaction"
    ADD CONSTRAINT "pkPlanTransaction" PRIMARY KEY ("PlanTransactionID");


--
-- TOC entry 6866 (class 2606 OID 46310)
-- Name: pkPlanTransactionComponentTier; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanTransactionComponentTier"
    ADD CONSTRAINT "pkPlanTransactionComponentTier" PRIMARY KEY ("ComponentTierID", "PlanTransactionID");


--
-- TOC entry 6868 (class 2606 OID 46312)
-- Name: pkPlanTransactionComponentTierTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanTransactionComponentTierTemplate"
    ADD CONSTRAINT "pkPlanTransactionComponentTierTemplate" PRIMARY KEY ("ComponentTierTemplateID", "PlanTransactionTemplateID");


--
-- TOC entry 6870 (class 2606 OID 46314)
-- Name: pkPlanTransactionTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PlanTransactionTemplate"
    ADD CONSTRAINT "pkPlanTransactionTemplate" PRIMARY KEY ("PlanTransactionTemplateID");


--
-- TOC entry 6876 (class 2606 OID 46316)
-- Name: pkProduct; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Product"
    ADD CONSTRAINT "pkProduct" PRIMARY KEY ("ProductID", "ProductVersionID");


--
-- TOC entry 6882 (class 2606 OID 46318)
-- Name: pkProductBusTask; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductBusTask"
    ADD CONSTRAINT "pkProductBusTask" PRIMARY KEY ("ProductBusTaskID");


--
-- TOC entry 6884 (class 2606 OID 46320)
-- Name: pkProductBusTaskTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductBusTaskTemplate"
    ADD CONSTRAINT "pkProductBusTaskTemplate" PRIMARY KEY ("ProductBusTaskTemplateID");


--
-- TOC entry 6886 (class 2606 OID 46322)
-- Name: pkProductClaim; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductClaim"
    ADD CONSTRAINT "pkProductClaim" PRIMARY KEY ("ProductClaimID");


--
-- TOC entry 6888 (class 2606 OID 46324)
-- Name: pkProductClaimTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductClaimTemplate"
    ADD CONSTRAINT "pkProductClaimTemplate" PRIMARY KEY ("ProductClaimTemplateID");


--
-- TOC entry 6890 (class 2606 OID 46326)
-- Name: pkProductComponentTier; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductComponentTier"
    ADD CONSTRAINT "pkProductComponentTier" PRIMARY KEY ("ProductID", "ProductVersionID", "ComponentTierID");


--
-- TOC entry 6892 (class 2606 OID 46328)
-- Name: pkProductComponentTierTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductComponentTierTemplate"
    ADD CONSTRAINT "pkProductComponentTierTemplate" PRIMARY KEY ("ProductTemplateID", "ProductVersionID", "ComponentTierTemplateID");


--
-- TOC entry 6894 (class 2606 OID 46330)
-- Name: pkProductDeduction; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductDeduction"
    ADD CONSTRAINT "pkProductDeduction" PRIMARY KEY ("ProductDeductionID");


--
-- TOC entry 6896 (class 2606 OID 46332)
-- Name: pkProductDeductionTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductDeductionTemplate"
    ADD CONSTRAINT "pkProductDeductionTemplate" PRIMARY KEY ("ProductDeductionTemplateID");


--
-- TOC entry 6902 (class 2606 OID 46334)
-- Name: pkProductDiscount; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductDiscount"
    ADD CONSTRAINT "pkProductDiscount" PRIMARY KEY ("ProductID", "ProductVersionID", "DiscountID", "DiscountVersionNumber");


--
-- TOC entry 6904 (class 2606 OID 46336)
-- Name: pkProductDiscountTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductDiscountTemplate"
    ADD CONSTRAINT "pkProductDiscountTemplate" PRIMARY KEY ("ProductTemplateID", "ProductVersionID", "DiscountTemplateID", "DiscountTemplateVersionNumber");


--
-- TOC entry 6914 (class 2606 OID 46338)
-- Name: pkProductPlan; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductPlan"
    ADD CONSTRAINT "pkProductPlan" PRIMARY KEY ("ProductID", "ProductVersionID", "PlanID", "PlanVersionNumber");


--
-- TOC entry 6916 (class 2606 OID 46340)
-- Name: pkProductPlanTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductPlanTemplate"
    ADD CONSTRAINT "pkProductPlanTemplate" PRIMARY KEY ("ProductTemplateID", "ProductVersionID", "PlanTemplateID", "PlanTemplateVersionNumber");


--
-- TOC entry 6922 (class 2606 OID 46342)
-- Name: pkProductPurchase; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductPurchase"
    ADD CONSTRAINT "pkProductPurchase" PRIMARY KEY ("ProductPurchaseID");


--
-- TOC entry 6924 (class 2606 OID 46344)
-- Name: pkProductPurchaseBusTaskProcessDetail; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductPurchaseBusTaskProcessDetail"
    ADD CONSTRAINT "pkProductPurchaseBusTaskProcessDetail" PRIMARY KEY ("ProductPurchaseBusTaskProcessDetailID", "StartDate");


--
-- TOC entry 6926 (class 2606 OID 46346)
-- Name: pkProductPurchaseBusTaskProcessLog; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductPurchaseBusTaskProcessLog"
    ADD CONSTRAINT "pkProductPurchaseBusTaskProcessLog" PRIMARY KEY ("ProductPurchaseProductTaskID");


--
-- TOC entry 6928 (class 2606 OID 46348)
-- Name: pkProductPurchaseProcessLog; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductPurchaseProcessLog"
    ADD CONSTRAINT "pkProductPurchaseProcessLog" PRIMARY KEY ("ProductPurchaseProcessLogID");


--
-- TOC entry 6930 (class 2606 OID 46350)
-- Name: pkProductPurchaseReference; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductPurchaseReference"
    ADD CONSTRAINT "pkProductPurchaseReference" PRIMARY KEY ("ProductPurchaseReferenceID", "InvoiceLineItemID");


--
-- TOC entry 6940 (class 2606 OID 46352)
-- Name: pkProductRole; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductRole"
    ADD CONSTRAINT "pkProductRole" PRIMARY KEY ("ProductRoleID");


--
-- TOC entry 6942 (class 2606 OID 46354)
-- Name: pkProductRoleTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductRoleTemplate"
    ADD CONSTRAINT "pkProductRoleTemplate" PRIMARY KEY ("ProductRoleTemplateID");


--
-- TOC entry 6960 (class 2606 OID 46356)
-- Name: pkProductTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ProductTemplate"
    ADD CONSTRAINT "pkProductTemplate" PRIMARY KEY ("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 6989 (class 2606 OID 46358)
-- Name: pkRole; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "Role"
    ADD CONSTRAINT "pkRole" PRIMARY KEY ("RoleID");


--
-- TOC entry 6998 (class 2606 OID 46360)
-- Name: pkServiceDefinition; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ServiceDefinition"
    ADD CONSTRAINT "pkServiceDefinition" PRIMARY KEY ("ServiceDefinitionID");


--
-- TOC entry 7000 (class 2606 OID 46362)
-- Name: pkServiceDefinitionDetail; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ServiceDefinitionDetail"
    ADD CONSTRAINT "pkServiceDefinitionDetail" PRIMARY KEY ("ServiceDefinitionDetailID");


--
-- TOC entry 7002 (class 2606 OID 46364)
-- Name: pkServiceInterface; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ServiceInterface"
    ADD CONSTRAINT "pkServiceInterface" PRIMARY KEY ("ServiceInterfaceID");


--
-- TOC entry 7004 (class 2606 OID 46366)
-- Name: pkServiceInterfaceProcessLog; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ServiceInterfaceProcessLog"
    ADD CONSTRAINT "pkServiceInterfaceProcessLog" PRIMARY KEY ("ServiceInterfaceProcessLogID");


--
-- TOC entry 7012 (class 2606 OID 46368)
-- Name: pkShoppingCartBlueprint; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ShoppingCartBlueprint"
    ADD CONSTRAINT "pkShoppingCartBlueprint" PRIMARY KEY ("ShoppingCartBlueprintID");


--
-- TOC entry 7014 (class 2606 OID 46370)
-- Name: pkShoppingCartBlueprintProduct; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ShoppingCartBlueprintProduct"
    ADD CONSTRAINT "pkShoppingCartBlueprintProduct" PRIMARY KEY ("ShoppingCartBlueprintID", "ProductID", "ProductVersionID");


--
-- TOC entry 7016 (class 2606 OID 46372)
-- Name: pkShoppingCartBlueprintProductTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ShoppingCartBlueprintProductTemplate"
    ADD CONSTRAINT "pkShoppingCartBlueprintProductTemplate" PRIMARY KEY ("ShoppingCartBlueprintTemplateID", "ProductTemplateID", "ProductVersionID");


--
-- TOC entry 7018 (class 2606 OID 46374)
-- Name: pkShoppingCartBlueprintTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ShoppingCartBlueprintTemplate"
    ADD CONSTRAINT "pkShoppingCartBlueprintTemplate" PRIMARY KEY ("ShoppingCartBlueprintTemplateID");


--
-- TOC entry 7020 (class 2606 OID 46376)
-- Name: pkShoppingCartDeduction; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ShoppingCartDeduction"
    ADD CONSTRAINT "pkShoppingCartDeduction" PRIMARY KEY ("ShoppingCartID", "CountryDeductionID", "DeductionID", "DeductionVersionNumber");


--
-- TOC entry 7024 (class 2606 OID 46378)
-- Name: pkShoppingCartItemProductAttribute; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ShoppingCartItemProductAttribute"
    ADD CONSTRAINT "pkShoppingCartItemProductAttribute" PRIMARY KEY ("ShoppingCartItemProductAttributeID");


--
-- TOC entry 7026 (class 2606 OID 46380)
-- Name: pkShoppingCartItemProductSpecification; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ShoppingCartItemProductSpecification"
    ADD CONSTRAINT "pkShoppingCartItemProductSpecification" PRIMARY KEY ("ShoppingCartItemProductSpecificationID");


--
-- TOC entry 7045 (class 2606 OID 46382)
-- Name: pkStatusType; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StatusType"
    ADD CONSTRAINT "pkStatusType" PRIMARY KEY ("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 7047 (class 2606 OID 46384)
-- Name: pkStatusTypeClaim; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StatusTypeClaim"
    ADD CONSTRAINT "pkStatusTypeClaim" PRIMARY KEY ("StatusTypeClaimID");


--
-- TOC entry 7049 (class 2606 OID 46386)
-- Name: pkStatusTypeClaimTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StatusTypeClaimTemplate"
    ADD CONSTRAINT "pkStatusTypeClaimTemplate" PRIMARY KEY ("StatusTypeClaimTemplateID");


--
-- TOC entry 7051 (class 2606 OID 46388)
-- Name: pkStatusTypeRole; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StatusTypeRole"
    ADD CONSTRAINT "pkStatusTypeRole" PRIMARY KEY ("StatusTypeRoleID");


--
-- TOC entry 7053 (class 2606 OID 46390)
-- Name: pkStatusTypeRoleTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StatusTypeRoleTemplate"
    ADD CONSTRAINT "pkStatusTypeRoleTemplate" PRIMARY KEY ("StatusTypeRoleTemplateID");


--
-- TOC entry 7057 (class 2606 OID 46392)
-- Name: pkStatusTypeStructureTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StatusTypeStructureTemplate"
    ADD CONSTRAINT "pkStatusTypeStructureTemplate" PRIMARY KEY ("StatusTypeStructureTemplateID");


--
-- TOC entry 7059 (class 2606 OID 46394)
-- Name: pkStatusTypeStructureTransition; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StatusTypeStructureTransition"
    ADD CONSTRAINT "pkStatusTypeStructureTransition" PRIMARY KEY ("StatusTypeStructureTransitionID");


--
-- TOC entry 7061 (class 2606 OID 46396)
-- Name: pkStatusTypeStructureTransitionTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StatusTypeStructureTransitionTemplate"
    ADD CONSTRAINT "pkStatusTypeStructureTransitionTemplate" PRIMARY KEY ("StatusTypeStructureTransitionTemplateID");


--
-- TOC entry 7063 (class 2606 OID 46398)
-- Name: pkStatusTypeTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StatusTypeTemplate"
    ADD CONSTRAINT "pkStatusTypeTemplate" PRIMARY KEY ("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber");


--
-- TOC entry 7067 (class 2606 OID 46400)
-- Name: pkStatusTypeValueTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StatusTypeValueTemplate"
    ADD CONSTRAINT "pkStatusTypeValueTemplate" PRIMARY KEY ("StatusTypeValueTemplateID");


--
-- TOC entry 7093 (class 2606 OID 46402)
-- Name: pkTransactionOrderPayment; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "TransactionOrderPayment"
    ADD CONSTRAINT "pkTransactionOrderPayment" PRIMARY KEY ("TransactionOrderPaymentID");


--
-- TOC entry 7095 (class 2606 OID 46404)
-- Name: pkTransactionOrderPaymentError; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "TransactionOrderPaymentError"
    ADD CONSTRAINT "pkTransactionOrderPaymentError" PRIMARY KEY ("TransactionOrderPaymentErrorID", "CreatedOn");


--
-- TOC entry 7097 (class 2606 OID 46406)
-- Name: pkTransactionOrderProcessLog; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "TransactionOrderProcessLog"
    ADD CONSTRAINT "pkTransactionOrderProcessLog" PRIMARY KEY ("TransactionOrderID", "CreatedOn", "StatusTypeID", "StatusTypeVersionNumber", "StatusTypeValueID");


--
-- TOC entry 7111 (class 2606 OID 46408)
-- Name: pkUserAccountLedgerAccount; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserAccountLedgerAccount"
    ADD CONSTRAINT "pkUserAccountLedgerAccount" PRIMARY KEY ("UserAccountID", "LedgerAccountID");


--
-- TOC entry 7115 (class 2606 OID 46410)
-- Name: pkUserAccountLoginSessionData; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserAccountLoginSessionData"
    ADD CONSTRAINT "pkUserAccountLoginSessionData" PRIMARY KEY ("UserAccountLoginSessionDataID");


--
-- TOC entry 7119 (class 2606 OID 46412)
-- Name: pkUserAccountOrganisationGroup; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserAccountOrganisationGroup"
    ADD CONSTRAINT "pkUserAccountOrganisationGroup" PRIMARY KEY ("OrganisationGroupID", "UserAccountOrganisationID");


--
-- TOC entry 7121 (class 2606 OID 46414)
-- Name: pkUserAccountOrganisationRole; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserAccountOrganisationRole"
    ADD CONSTRAINT "pkUserAccountOrganisationRole" PRIMARY KEY ("UserAccountOrganisationID", "OrganisationRoleID");


--
-- TOC entry 7123 (class 2606 OID 46416)
-- Name: pkUserAccountOrganisationSecondaryUserType; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserAccountOrganisationSecondaryUserType"
    ADD CONSTRAINT "pkUserAccountOrganisationSecondaryUserType" PRIMARY KEY ("UserAccountOrganisationID", "UserTypeID");


--
-- TOC entry 7125 (class 2606 OID 46418)
-- Name: pkUserAccountOrganisationStatus; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserAccountOrganisationStatus"
    ADD CONSTRAINT "pkUserAccountOrganisationStatus" PRIMARY KEY ("UserAccountOrganisationID", "StatusTypeID", "StatusTypeVersionNumber", "StatusTypeValueID");


--
-- TOC entry 7129 (class 2606 OID 46420)
-- Name: pkUserAccountOrganisationTeam; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserAccountOrganisationTeam"
    ADD CONSTRAINT "pkUserAccountOrganisationTeam" PRIMARY KEY ("UserAccountOrganisationID", "OrganisationTeamID");


--
-- TOC entry 7010 (class 2606 OID 46422)
-- Name: pkUserShoppingCart; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "ShoppingCart"
    ADD CONSTRAINT "pkUserShoppingCart" PRIMARY KEY ("ShoppingCartID");


--
-- TOC entry 7139 (class 2606 OID 46424)
-- Name: pkUserType; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "UserType"
    ADD CONSTRAINT "pkUserType" PRIMARY KEY ("UserTypeID");


--
-- TOC entry 7167 (class 2606 OID 46426)
-- Name: pkWorkflowActionParameterNotificationConstruct; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionParameterNotificationConstruct"
    ADD CONSTRAINT "pkWorkflowActionParameterNotificationConstruct" PRIMARY KEY ("WorkflowActionParameterNotificationConstructID", "WorkflowActionID", "WorkflowParameterID", "OrganisationTypeID", "UserTypeID", "WorkflowActionParameterNotificationConstructTemplateVersion", "NotificationConstructID", "NotificationConstructVersionNumber");


--
-- TOC entry 7170 (class 2606 OID 46428)
-- Name: pkWorkflowActionParameterNotificationConstructTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowActionParameterNotificationConstructTemplate"
    ADD CONSTRAINT "pkWorkflowActionParameterNotificationConstructTemplate" PRIMARY KEY ("WorkflowActionParameterNotificationConstructTemplateID", "WorkflowActionTemplateID", "WorkflowParameterTemplateID", "OrganisationTypeID", "UserTypeID", "WorkflowActionParameterNotificationConstructTemplateVersion", "NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber");


--
-- TOC entry 7200 (class 2606 OID 46430)
-- Name: pkWorkflowClaimTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowClaimTemplate"
    ADD CONSTRAINT "pkWorkflowClaimTemplate" PRIMARY KEY ("WorkflowClaimTemplateID");


--
-- TOC entry 7238 (class 2606 OID 46432)
-- Name: pkWorkflowDecisionError; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionError"
    ADD CONSTRAINT "pkWorkflowDecisionError" PRIMARY KEY ("WorkflowDecisionErrorID");


--
-- TOC entry 7242 (class 2606 OID 46434)
-- Name: pkWorkflowDecisionErrorTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionErrorTemplate"
    ADD CONSTRAINT "pkWorkflowDecisionErrorTemplate" PRIMARY KEY ("WorkflowDecisionErrorTemplateID");


--
-- TOC entry 7251 (class 2606 OID 46436)
-- Name: pkWorkflowDecisionFailure; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionFailure"
    ADD CONSTRAINT "pkWorkflowDecisionFailure" PRIMARY KEY ("WorkflowDecisionFailureID");


--
-- TOC entry 7253 (class 2606 OID 46438)
-- Name: pkWorkflowDecisionFailureTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionFailureTemplate"
    ADD CONSTRAINT "pkWorkflowDecisionFailureTemplate" PRIMARY KEY ("WorkflowDecisionFailureTemplateID");


--
-- TOC entry 7262 (class 2606 OID 46440)
-- Name: pkWorkflowDecisionSuccess; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionSuccess"
    ADD CONSTRAINT "pkWorkflowDecisionSuccess" PRIMARY KEY ("WorkflowDecisionSuccessID");


--
-- TOC entry 7266 (class 2606 OID 46442)
-- Name: pkWorkflowDecisionSuccessTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowDecisionSuccessTemplate"
    ADD CONSTRAINT "pkWorkflowDecisionSuccessTemplate" PRIMARY KEY ("WorkflowDecisionSuccessTemplateID");


--
-- TOC entry 7298 (class 2606 OID 46444)
-- Name: pkWorkflowInstanceExecutionTrace; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowInstanceExecutionTrace"
    ADD CONSTRAINT "pkWorkflowInstanceExecutionTrace" PRIMARY KEY ("WorkflowInstanceExecutionTraceID");


--
-- TOC entry 7300 (class 2606 OID 46446)
-- Name: pkWorkflowInstanceRestriction; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowInstanceRestriction"
    ADD CONSTRAINT "pkWorkflowInstanceRestriction" PRIMARY KEY ("WorkflowInstanceID", "UserAccountOrganisationID");


--
-- TOC entry 7347 (class 2606 OID 46448)
-- Name: pkWorkflowNotificationConstruct; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowNotificationConstruct"
    ADD CONSTRAINT "pkWorkflowNotificationConstruct" PRIMARY KEY ("WorkflowNotificationConstructID");


--
-- TOC entry 7349 (class 2606 OID 46450)
-- Name: pkWorkflowNotificationConstructTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowNotificationConstructTemplate"
    ADD CONSTRAINT "pkWorkflowNotificationConstructTemplate" PRIMARY KEY ("WorkflowNotificationConstructTemplateID");


--
-- TOC entry 7360 (class 2606 OID 46452)
-- Name: pkWorkflowRole; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowRole"
    ADD CONSTRAINT "pkWorkflowRole" PRIMARY KEY ("WorkflowRoleID");


--
-- TOC entry 7198 (class 2606 OID 46454)
-- Name: pkWorkflowRoleClaim; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowClaim"
    ADD CONSTRAINT "pkWorkflowRoleClaim" PRIMARY KEY ("WorkflowClaimID");


--
-- TOC entry 7362 (class 2606 OID 46456)
-- Name: pkWorkflowRoleTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowRoleTemplate"
    ADD CONSTRAINT "pkWorkflowRoleTemplate" PRIMARY KEY ("WorkflowRoleTemplateID");


--
-- TOC entry 7364 (class 2606 OID 46458)
-- Name: pkWorkflowStatusType; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowStatusType"
    ADD CONSTRAINT "pkWorkflowStatusType" PRIMARY KEY ("WorkflowID", "WorkflowVersionNumber", "StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 7366 (class 2606 OID 46460)
-- Name: pkWorkflowStatusTypeTemplate; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "WorkflowStatusTypeTemplate"
    ADD CONSTRAINT "pkWorkflowStatusTypeTemplate" PRIMARY KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber", "StatusTypeTemplateID", "StatusTypeTemplateVersionNumber");


--
-- TOC entry 7423 (class 2606 OID 46462)
-- Name: subscription_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY subscription
    ADD CONSTRAINT subscription_pkey PRIMARY KEY (subscriberendpoint, messagetype);


--
-- TOC entry 7427 (class 2606 OID 46464)
-- Name: timeoutentity_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY timeoutentity
    ADD CONSTRAINT timeoutentity_pkey PRIMARY KEY (id);


SET search_path = sts, pg_catalog;

--
-- TOC entry 7430 (class 2606 OID 46466)
-- Name: pkLRDocument; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "LRDocument"
    ADD CONSTRAINT "pkLRDocument" PRIMARY KEY ("LRDocumentID");


--
-- TOC entry 7432 (class 2606 OID 46468)
-- Name: pkLRRegisterExtract; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "LRRegisterExtract"
    ADD CONSTRAINT "pkLRRegisterExtract" PRIMARY KEY ("LRRegisterExtractID");


--
-- TOC entry 7434 (class 2606 OID 46470)
-- Name: pkLRTitle; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "LRTitle"
    ADD CONSTRAINT "pkLRTitle" PRIMARY KEY ("LRTitleID");


--
-- TOC entry 7438 (class 2606 OID 46472)
-- Name: pkStsAccountDocument; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsAccountDocument"
    ADD CONSTRAINT "pkStsAccountDocument" PRIMARY KEY ("StsAccountDocument");


--
-- TOC entry 7440 (class 2606 OID 46474)
-- Name: pkStsActor; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsActor"
    ADD CONSTRAINT "pkStsActor" PRIMARY KEY ("StsActorID");


--
-- TOC entry 7442 (class 2606 OID 46476)
-- Name: pkStsActorAuthority; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsActorAuthority"
    ADD CONSTRAINT "pkStsActorAuthority" PRIMARY KEY ("StsActorAuthorityID");


--
-- TOC entry 7444 (class 2606 OID 46478)
-- Name: pkStsActorProcessLog; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsActorProcessLog"
    ADD CONSTRAINT "pkStsActorProcessLog" PRIMARY KEY ("StsActorProcessLogID");


--
-- TOC entry 7446 (class 2606 OID 46480)
-- Name: pkStsActorPurchase; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsActorPurchase"
    ADD CONSTRAINT "pkStsActorPurchase" PRIMARY KEY ("StsActorPurchaseID");


--
-- TOC entry 7448 (class 2606 OID 46482)
-- Name: pkStsActorStructure; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsActorStructure"
    ADD CONSTRAINT "pkStsActorStructure" PRIMARY KEY ("StsActorStructureID");


--
-- TOC entry 7450 (class 2606 OID 46484)
-- Name: pkStsActorStsSearch; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsActorStsSearch"
    ADD CONSTRAINT "pkStsActorStsSearch" PRIMARY KEY ("StsActorID", "StsSearchID");


--
-- TOC entry 7452 (class 2606 OID 46486)
-- Name: pkStsActorStsTransaction; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsActorStsTransaction"
    ADD CONSTRAINT "pkStsActorStsTransaction" PRIMARY KEY ("StsActorID", "StsTransactionID");


--
-- TOC entry 7454 (class 2606 OID 46488)
-- Name: pkStsAuthority; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsAuthority"
    ADD CONSTRAINT "pkStsAuthority" PRIMARY KEY ("StsAuthorityID");


--
-- TOC entry 7456 (class 2606 OID 46490)
-- Name: pkStsAuthorityStsDocument; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsAuthorityStsDocument"
    ADD CONSTRAINT "pkStsAuthorityStsDocument" PRIMARY KEY ("StsAuthorityID", "StsDocumentID");


--
-- TOC entry 7458 (class 2606 OID 46492)
-- Name: pkStsDocument; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsDocument"
    ADD CONSTRAINT "pkStsDocument" PRIMARY KEY ("StsDocumentID");


--
-- TOC entry 7460 (class 2606 OID 46494)
-- Name: pkStsDocumentProcessLog; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsDocumentProcessLog"
    ADD CONSTRAINT "pkStsDocumentProcessLog" PRIMARY KEY ("StsDocumentProcessLog");


--
-- TOC entry 7462 (class 2606 OID 46496)
-- Name: pkStsInvite; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsInvite"
    ADD CONSTRAINT "pkStsInvite" PRIMARY KEY ("StsInviteID");


--
-- TOC entry 7464 (class 2606 OID 46498)
-- Name: pkStsInviteProcessLog; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsInviteProcessLog"
    ADD CONSTRAINT "pkStsInviteProcessLog" PRIMARY KEY ("StatusTypeValueID", "StatusTypeVersionNumber", "CreatedOn", "StsInviteID", "StatusTypeID");


--
-- TOC entry 7436 (class 2606 OID 46500)
-- Name: pkStsProperty; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "PropertyDetail"
    ADD CONSTRAINT "pkStsProperty" PRIMARY KEY ("PropertyDetailID");


--
-- TOC entry 7466 (class 2606 OID 46502)
-- Name: pkStsSearch; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsSearch"
    ADD CONSTRAINT "pkStsSearch" PRIMARY KEY ("StsSearchID");


--
-- TOC entry 7468 (class 2606 OID 46504)
-- Name: pkStsSearchDetail; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsSearchDetail"
    ADD CONSTRAINT "pkStsSearchDetail" PRIMARY KEY ("StsSearchDetailID");


--
-- TOC entry 7470 (class 2606 OID 46506)
-- Name: pkStsSearchProcessLog; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsSearchProcessLog"
    ADD CONSTRAINT "pkStsSearchProcessLog" PRIMARY KEY ("StsSearchID", "CreatedOn", "StatusTypeID", "StatusTypeValueID", "StatusTypeVersionNumber");


--
-- TOC entry 7472 (class 2606 OID 46508)
-- Name: pkStsSearchProperty; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsSearchPropertyDetail"
    ADD CONSTRAINT "pkStsSearchProperty" PRIMARY KEY ("StsSearchPropertyDetailID");


--
-- TOC entry 7474 (class 2606 OID 46510)
-- Name: pkStsSearchRelation; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsSearchRelation"
    ADD CONSTRAINT "pkStsSearchRelation" PRIMARY KEY ("BuyerStsSearchID", "SellerStsSearchID");


--
-- TOC entry 7476 (class 2606 OID 46512)
-- Name: pkStsSourceOfFunds; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsSourceOfFunds"
    ADD CONSTRAINT "pkStsSourceOfFunds" PRIMARY KEY ("StsSourceOfFunds");


--
-- TOC entry 7478 (class 2606 OID 46514)
-- Name: pkStsSourceOfFundsStsDocument; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsSourceOfFundsStsDocument"
    ADD CONSTRAINT "pkStsSourceOfFundsStsDocument" PRIMARY KEY ("StsSourceOfFundsStsDocumentID");


--
-- TOC entry 7480 (class 2606 OID 46516)
-- Name: pkStsTransaction; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsTransaction"
    ADD CONSTRAINT "pkStsTransaction" PRIMARY KEY ("StsTransactionID");


--
-- TOC entry 7482 (class 2606 OID 46518)
-- Name: pkStsTransactionComponent; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsTransactionComponent"
    ADD CONSTRAINT "pkStsTransactionComponent" PRIMARY KEY ("StsTransactionComponentID");


--
-- TOC entry 7484 (class 2606 OID 46520)
-- Name: pkStsTransactionProcessLog; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsTransactionProcessLog"
    ADD CONSTRAINT "pkStsTransactionProcessLog" PRIMARY KEY ("CreatedOn", "StatusTypeID", "StatusTypeVersionNumber", "StatusTypeValueID", "StsTransactionID");


--
-- TOC entry 7486 (class 2606 OID 46522)
-- Name: pkStsTransactionPropertyDetail; Type: CONSTRAINT; Schema: sts; Owner: postgres; Tablespace:
--

ALTER TABLE ONLY "StsTransactionPropertyDetail"
    ADD CONSTRAINT "pkStsTransactionPropertyDetail" PRIMARY KEY ("StsTransactionPropertyDetailID");


SET search_path = audit, pg_catalog;

--
-- TOC entry 6263 (class 1259 OID 46523)
-- Name: logged_actions_action_idx; Type: INDEX; Schema: audit; Owner: postgres; Tablespace:
--

CREATE INDEX logged_actions_action_idx ON logged_actions USING btree (action);


--
-- TOC entry 6264 (class 1259 OID 46524)
-- Name: logged_actions_action_tstamp_tx_stm_idx; Type: INDEX; Schema: audit; Owner: postgres; Tablespace:
--

CREATE INDEX logged_actions_action_tstamp_tx_stm_idx ON logged_actions USING btree (action_tstamp_stm);


--
-- TOC entry 6267 (class 1259 OID 46525)
-- Name: logged_actions_relid_idx; Type: INDEX; Schema: audit; Owner: postgres; Tablespace:
--

CREATE INDEX logged_actions_relid_idx ON logged_actions USING btree (relid);


SET search_path = hangfire, pg_catalog;

--
-- TOC entry 6270 (class 1259 OID 46526)
-- Name: ix_hangfire_counter_key; Type: INDEX; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE INDEX ix_hangfire_counter_key ON counter USING btree (key);


--
-- TOC entry 6275 (class 1259 OID 46527)
-- Name: ix_hangfire_job_statename; Type: INDEX; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE INDEX ix_hangfire_job_statename ON job USING btree (statename);


--
-- TOC entry 6278 (class 1259 OID 46528)
-- Name: ix_hangfire_jobparameter_jobidandname; Type: INDEX; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE INDEX ix_hangfire_jobparameter_jobidandname ON jobparameter USING btree (jobid, name);


--
-- TOC entry 6281 (class 1259 OID 46529)
-- Name: ix_hangfire_jobqueue_queueandfetchedat; Type: INDEX; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE INDEX ix_hangfire_jobqueue_queueandfetchedat ON jobqueue USING btree (queue, fetchedat);


--
-- TOC entry 6296 (class 1259 OID 46530)
-- Name: ix_hangfire_state_jobid; Type: INDEX; Schema: hangfire; Owner: postgres; Tablespace:
--

CREATE INDEX ix_hangfire_state_jobid ON state USING btree (jobid);


SET search_path = public, pg_catalog;

--
-- TOC entry 6370 (class 1259 OID 46531)
-- Name: AttachmentDetailRoganisrnalRole; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "AttachmentDetailRoganisrnalRole" ON "AttachmentDetailRole" USING btree ("OrganisationExternalRoleID");


--
-- TOC entry 6371 (class 1259 OID 46532)
-- Name: AttachmentDetailRole_fk_AttachmenDetailRole_OrganisationRole; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "AttachmentDetailRole_fk_AttachmenDetailRole_OrganisationRole" ON "AttachmentDetailRole" USING btree ("OrganisationRoleID");


--
-- TOC entry 6372 (class 1259 OID 46533)
-- Name: AttachmentDetailRole_fk_AttachmentRole_AttachmentDetail; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "AttachmentDetailRole_fk_AttachmentRole_AttachmentDetail" ON "AttachmentDetailRole" USING btree ("AttachmentDetailID");


--
-- TOC entry 6401 (class 1259 OID 46534)
-- Name: FK_ClassificationType_ClassificationTypeCategory; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "FK_ClassificationType_ClassificationTypeCategory" ON "ClassificationType" USING btree ("ClassificationTypeCategoryID");


--
-- TOC entry 6402 (class 1259 OID 46535)
-- Name: FK_ClassificationType_ClassificationTypeCategory2; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "FK_ClassificationType_ClassificationTypeCategory2" ON "ClassificationType" USING btree ("ParentClassificationTypeCategoryID");


--
-- TOC entry 7041 (class 1259 OID 46536)
-- Name: FK_StateItem_State; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "FK_StateItem_State" ON "StateItem" USING btree ("StateID");


--
-- TOC entry 7280 (class 1259 OID 46537)
-- Name: FK_WorkflowHierarchyTemplate_WorkflowTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "FK_WorkflowHierarchyTemplate_WorkflowTemplate" ON "WorkflowHierarchyTemplate" USING btree ("WorkflowTemplateID");


--
-- TOC entry 7281 (class 1259 OID 46538)
-- Name: FK_WorkflowHierarchyTemplate_WorkflowTransistionTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "FK_WorkflowHierarchyTemplate_WorkflowTransistionTemplate" ON "WorkflowHierarchyTemplate" USING btree ("WorkflowTransistionTemplateID");


--
-- TOC entry 7397 (class 1259 OID 46539)
-- Name: FK_WorkflowTransistionTemplate_WorkflowTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "FK_WorkflowTransistionTemplate_WorkflowTemplate" ON "WorkflowTransistionTemplate" USING btree ("WorkflowTemplateID");


--
-- TOC entry 6616 (class 1259 OID 46540)
-- Name: InterfacePanelValidationOrganisationTypeUserTypeTemplate_idx; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "InterfacePanelValidationOrganisationTypeUserTypeTemplate_idx" ON "InterfacePanelValidationOrganisationTypeUserTypeTemplate" USING btree ("InterfacePanelValidationOrganisationTypeUserTypeTemplateID", "InterfacePanelValidationOrganisationTypeUserTypeTemplateVersion", "OrganisationTypeID", "UserTypeID");


--
-- TOC entry 6629 (class 1259 OID 46541)
-- Name: LinkedAccountClaims_IX_LinkedAccount_unt_ProviderAccountID; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "LinkedAccountClaims_IX_LinkedAccount_unt_ProviderAccountID" ON "LinkedAccountClaims" USING btree ("LinkedAccount_ProviderName", "LinkedAccount_ProviderAccountID");


--
-- TOC entry 6632 (class 1259 OID 46542)
-- Name: LinkedAccounts_IX_UserAccount_ID; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "LinkedAccounts_IX_UserAccount_ID" ON "LinkedAccounts" USING btree ("UserAccount_ID");


--
-- TOC entry 6748 (class 1259 OID 46543)
-- Name: OrganisationGroup_fk_Group_ClassificationType; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "OrganisationGroup_fk_Group_ClassificationType" ON "OrganisationGroup" USING btree ("GroupTypeID");


--
-- TOC entry 6749 (class 1259 OID 46544)
-- Name: OrganisationGroup_fk_Group_ClassificationType2; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "OrganisationGroup_fk_Group_ClassificationType2" ON "OrganisationGroup" USING btree ("GroupSubTypeID");


--
-- TOC entry 6750 (class 1259 OID 46545)
-- Name: OrganisationGroup_fk_Group_GroupTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "OrganisationGroup_fk_Group_GroupTemplate" ON "OrganisationGroup" USING btree ("ParentID");


--
-- TOC entry 6751 (class 1259 OID 46546)
-- Name: OrganisationGroup_fk_Group_Organisation; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "OrganisationGroup_fk_Group_Organisation" ON "OrganisationGroup" USING btree ("OrganisationID");


--
-- TOC entry 6778 (class 1259 OID 46547)
-- Name: OrganisationStructure_FK_OrganisationStructure; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "OrganisationStructure_FK_OrganisationStructure" ON "OrganisationStructure" USING btree ("OrganisationID");


--
-- TOC entry 6800 (class 1259 OID 46548)
-- Name: OrganisationUnitStructure_FK UnitMap; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "OrganisationUnitStructure_FK UnitMap" ON "OrganisationUnitStructure" USING btree ("OrganisationUnitID");


--
-- TOC entry 6801 (class 1259 OID 46549)
-- Name: OrganisationUnitStructure_FK_OrganisationUnit; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "OrganisationUnitStructure_FK_OrganisationUnit" ON "OrganisationUnitStructure" USING btree ("OrganisationID");


--
-- TOC entry 6791 (class 1259 OID 46550)
-- Name: OrganisationUnit_FK OrganisationUnit; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "OrganisationUnit_FK OrganisationUnit" ON "OrganisationUnit" USING btree ("OrganisationID");


--
-- TOC entry 6828 (class 1259 OID 46551)
-- Name: PasswordResetSecrets_IX_UserAccount_ID; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "PasswordResetSecrets_IX_UserAccount_ID" ON "PasswordResetSecrets" USING btree ("UserAccount_ID");


--
-- TOC entry 6977 (class 1259 OID 46552)
-- Name: RepositoryStructureGroup_fk_Rep; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "RepositoryStructureGroup_fk_Rep" ON "RepositoryStructureGroup" USING btree ("OrganisationGroupID");


--
-- TOC entry 6978 (class 1259 OID 46553)
-- Name: RepositoryStructureGroup_fk_RepStructure; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "RepositoryStructureGroup_fk_RepStructure" ON "RepositoryStructureGroup" USING btree ("RepositoryStructureID");


--
-- TOC entry 6979 (class 1259 OID 46554)
-- Name: RepositoryStructureGroup_fk_Repository; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "RepositoryStructureGroup_fk_Repository" ON "RepositoryStructureGroup" USING btree ("OrganisationExternalGroupID");


--
-- TOC entry 6982 (class 1259 OID 46555)
-- Name: RepositoryStructureRole_fk_anisationRole; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "RepositoryStructureRole_fk_anisationRole" ON "RepositoryStructureRole" USING btree ("OrganisationRoleID");


--
-- TOC entry 6983 (class 1259 OID 46556)
-- Name: RepositoryStructureRole_fk_ure; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "RepositoryStructureRole_fk_ure" ON "RepositoryStructureRole" USING btree ("RepositoryStructureID");


--
-- TOC entry 6973 (class 1259 OID 46557)
-- Name: RepositoryStructure_fk_RepositoryMap_Repository; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "RepositoryStructure_fk_RepositoryMap_Repository" ON "RepositoryStructure" USING btree ("RepositoryID");


--
-- TOC entry 7098 (class 1259 OID 46558)
-- Name: TwoFactorAuthTokens_IX_UserAccount_ID; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "TwoFactorAuthTokens_IX_UserAccount_ID" ON "TwoFactorAuthTokens" USING btree ("UserAccount_ID");


--
-- TOC entry 7107 (class 1259 OID 46559)
-- Name: UserAccountDetail_IX_UserID; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "UserAccountDetail_IX_UserID" ON "UserAccountDetail" USING btree ("UserID");


--
-- TOC entry 7132 (class 1259 OID 46560)
-- Name: UserCertificates_IX_UserAccount_ID; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "UserCertificates_IX_UserAccount_ID" ON "UserCertificates" USING btree ("UserAccount_ID");


--
-- TOC entry 7135 (class 1259 OID 46561)
-- Name: UserClaims_IX_UserAccount_ID; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "UserClaims_IX_UserAccount_ID" ON "UserClaims" USING btree ("UserAccount_ID");


--
-- TOC entry 7168 (class 1259 OID 46562)
-- Name: WorkflowActionParameterNotificationConstructTemplate_WorkflowAc; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE UNIQUE INDEX "WorkflowActionParameterNotificationConstructTemplate_WorkflowAc" ON "WorkflowActionParameterNotificationConstructTemplate" USING btree ("WorkflowActionParameterNotificationConstructTemplateID", "WorkflowActionParameterNotificationConstructTemplateVersion");


--
-- TOC entry 7171 (class 1259 OID 46563)
-- Name: WorkflowActionParameterTemplate_fk_WorkflowActiomplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "WorkflowActionParameterTemplate_fk_WorkflowActiomplate" ON "WorkflowActionParameterTemplate" USING btree ("WorkflowParameterTemplateID");


--
-- TOC entry 7191 (class 1259 OID 46564)
-- Name: WorkflowActionTemplate_WorkflowActionTemplateID_key; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE UNIQUE INDEX "WorkflowActionTemplate_WorkflowActionTemplateID_key" ON "WorkflowActionTemplate" USING btree ("WorkflowActionTemplateID");


--
-- TOC entry 7144 (class 1259 OID 46565)
-- Name: WorkflowAction_WorkflowActionID_key; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE UNIQUE INDEX "WorkflowAction_WorkflowActionID_key" ON "WorkflowAction" USING btree ("WorkflowActionID");


--
-- TOC entry 7145 (class 1259 OID 46566)
-- Name: WorkflowAction_idx; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "WorkflowAction_idx" ON "WorkflowAction" USING btree ("WorkflowActionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7225 (class 1259 OID 46567)
-- Name: WorkflowConditionParameterTemplate_fk_WorkflowConditiomplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "WorkflowConditionParameterTemplate_fk_WorkflowConditiomplate" ON "WorkflowConditionParameterTemplate" USING btree ("WorkflowParameterTemplateID");


--
-- TOC entry 7294 (class 1259 OID 46568)
-- Name: WorkflowInstanceExecutionStatusEvent_eo_idx; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "WorkflowInstanceExecutionStatusEvent_eo_idx" ON "WorkflowInstanceExecutionStatusEvent" USING btree ("EventOrder", "WorkflowInstanceSessionID");


--
-- TOC entry 7288 (class 1259 OID 46569)
-- Name: WorkflowInstanceExecution_idx; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "WorkflowInstanceExecution_idx" ON "WorkflowInstanceExecution" USING btree ("WorkflowInstanceExecutionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7303 (class 1259 OID 46570)
-- Name: WorkflowInstanceSession_si_so_idx; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "WorkflowInstanceSession_si_so_idx" ON "WorkflowInstanceSession" USING btree ("WorkflowInstanceID", "SessionStartedOn");


--
-- TOC entry 7284 (class 1259 OID 46571)
-- Name: WorkflowInstance_parentid_idx; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "WorkflowInstance_parentid_idx" ON "WorkflowInstance" USING btree ("ParentID");


--
-- TOC entry 7377 (class 1259 OID 46572)
-- Name: WorkflowTransistionHierarchy_fk_WorkflowTransistionHierarchye1; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "WorkflowTransistionHierarchy_fk_WorkflowTransistionHierarchye1" ON "WorkflowTransistionHierarchy" USING btree ("ParentComponentID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7404 (class 1259 OID 46573)
-- Name: WorkflowTransistionWorkflowActionTemplatemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "WorkflowTransistionWorkflowActionTemplatemplate" ON "WorkflowTransistionWorkflowActionTemplate" USING btree ("WorkflowActionTemplateID");


--
-- TOC entry 7409 (class 1259 OID 46574)
-- Name: WorkflowTreeStructure_WorkflowTreeStructureID_key; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE UNIQUE INDEX "WorkflowTreeStructure_WorkflowTreeStructureID_key" ON "WorkflowTreeStructure" USING btree ("WorkflowTreeStructureID");


--
-- TOC entry 6407 (class 1259 OID 46575)
-- Name: companyhouse_phrase_idx; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX companyhouse_phrase_idx ON "CompanyHouse" USING hash (companyname);


--
-- TOC entry 6303 (class 1259 OID 46576)
-- Name: fk_Account_Account; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_Account_Account" ON "Account" USING btree ("ParentAccountID");


--
-- TOC entry 6304 (class 1259 OID 46577)
-- Name: fk_Account_Contact; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_Account_Contact" ON "Account" USING btree ("ContactID");


--
-- TOC entry 6311 (class 1259 OID 46578)
-- Name: fk_Address_ClassificationType; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_Address_ClassificationType" ON "Address" USING btree ("AddressTypeID");


--
-- TOC entry 6367 (class 1259 OID 46579)
-- Name: fk_AttachmentDetailGroup_AttachmentDetail; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_AttachmentDetailGroup_AttachmentDetail" ON "AttachmentDetailGroup" USING btree ("AttachmentDetailID");


--
-- TOC entry 6368 (class 1259 OID 46580)
-- Name: fk_AttachmentDetailGroup_OrganisationExternalGroup; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_AttachmentDetailGroup_OrganisationExternalGroup" ON "AttachmentDetailGroup" USING btree ("OrganisationExternalGroupID");


--
-- TOC entry 6369 (class 1259 OID 46581)
-- Name: fk_AttachmentDetailGroup_OrganisationGroup; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_AttachmentDetailGroup_OrganisationGroup" ON "AttachmentDetailGroup" USING btree ("OrganisationGroupID");


--
-- TOC entry 6363 (class 1259 OID 46582)
-- Name: fk_AttachmentDetail_Organisation; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_AttachmentDetail_Organisation" ON "AttachmentDetail" USING btree ("OrganisationID");


--
-- TOC entry 6364 (class 1259 OID 46583)
-- Name: fk_AttachmentDetail_RepositoryMap; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_AttachmentDetail_RepositoryMap" ON "AttachmentDetail" USING btree ("RepositoryStructureID");


--
-- TOC entry 6360 (class 1259 OID 46584)
-- Name: fk_Attachment_AttachmentDetail; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_Attachment_AttachmentDetail" ON "Attachment" USING btree ("AttachmentDetailID");


--
-- TOC entry 6739 (class 1259 OID 46585)
-- Name: fk_OrganisationDetail_Organisation_1; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_OrganisationDetail_Organisation_1" ON "OrganisationDetail" USING btree ("OrganisationID");


--
-- TOC entry 6756 (class 1259 OID 46586)
-- Name: fk_OrganisationGroupOrganisationRole_OrganisationRole; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_OrganisationGroupOrganisationRole_OrganisationRole" ON "OrganisationGroupRole" USING btree ("OrganisationRoleID");


--
-- TOC entry 6769 (class 1259 OID 46587)
-- Name: fk_OrganisationRoleClaim_OrganisationRole; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_OrganisationRoleClaim_OrganisationRole" ON "OrganisationRoleClaim" USING btree ("OrganisationRoleID");


--
-- TOC entry 6796 (class 1259 OID 46588)
-- Name: fk_OrganisationUnitOrganisationGroup_OrganisationGroup; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_OrganisationUnitOrganisationGroup_OrganisationGroup" ON "OrganisationUnitOrganisationGroup" USING btree ("OrganisationGroupID");


--
-- TOC entry 6799 (class 1259 OID 46589)
-- Name: fk_OrganisationUnitOrganisationRole_OrganisationRole; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_OrganisationUnitOrganisationRole_OrganisationRole" ON "OrganisationUnitOrganisationRole" USING btree ("OrganisationRoleID");


--
-- TOC entry 6976 (class 1259 OID 46590)
-- Name: fk_RepositoryStructure_Repository; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_RepositoryStructure_Repository" ON "RepositoryStructure" USING btree ("RepositoryID");


--
-- TOC entry 6992 (class 1259 OID 46591)
-- Name: fk_RoleTemplateClaim_Operation; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_RoleTemplateClaim_Operation" ON "RoleClaim" USING btree ("OperationID");


--
-- TOC entry 6993 (class 1259 OID 46592)
-- Name: fk_RoleTemplateClaim_Resource; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_RoleTemplateClaim_Resource" ON "RoleClaim" USING btree ("ResourceID");


--
-- TOC entry 6994 (class 1259 OID 46593)
-- Name: fk_RoleTemplateClaim_RoleTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_RoleTemplateClaim_RoleTemplate" ON "RoleClaim" USING btree ("RoleID");


--
-- TOC entry 6995 (class 1259 OID 46594)
-- Name: fk_RoleTemplateClaim_State; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_RoleTemplateClaim_State" ON "RoleClaim" USING btree ("StateID");


--
-- TOC entry 6996 (class 1259 OID 46595)
-- Name: fk_RoleTemplateClaim_StateItem; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_RoleTemplateClaim_StateItem" ON "RoleClaim" USING btree ("StateItemID");


--
-- TOC entry 7152 (class 1259 OID 46596)
-- Name: fk_WorkflowActionCompleteConplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowActionCompleteConplate" ON "WorkflowActionCompleteConditionTemplate" USING btree ("WorkflowConditionTemplateID");


--
-- TOC entry 7159 (class 1259 OID 46597)
-- Name: fk_WorkflowActionExecuteCommandTemplate_WorkflowCommandTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowActionExecuteCommandTemplate_WorkflowCommandTemplate" ON "WorkflowActionExecuteCommandTemplate" USING btree ("WorkflowCommandTemplateID");


--
-- TOC entry 7155 (class 1259 OID 46598)
-- Name: fk_WorkflowActionExecuteCommand_WorkflowAction; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowActionExecuteCommand_WorkflowAction" ON "WorkflowActionExecuteCommand" USING btree ("WorkflowActionID");


--
-- TOC entry 7156 (class 1259 OID 46599)
-- Name: fk_WorkflowActionExecuteCommand_WorkflowCommand; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowActionExecuteCommand_WorkflowCommand" ON "WorkflowActionExecuteCommand" USING btree ("WorkflowCommandID");


--
-- TOC entry 7178 (class 1259 OID 46600)
-- Name: fk_WorkflowActionPostCommandTemplate_WorkflowActionTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowActionPostCommandTemplate_WorkflowActionTemplate" ON "WorkflowActionPostCommandTemplate" USING btree ("WorkflowActionTemplateID");


--
-- TOC entry 7183 (class 1259 OID 46601)
-- Name: fk_WorkflowActionPreCommandTemplate_WorkflowCommandTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowActionPreCommandTemplate_WorkflowCommandTemplate" ON "WorkflowActionPreCommandTemplate" USING btree ("WorkflowCommandTemplateID");


--
-- TOC entry 7190 (class 1259 OID 46602)
-- Name: fk_WorkflowActionStartConditimplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowActionStartConditimplate" ON "WorkflowActionStartConditionTemplate" USING btree ("WorkflowConditionTemplateID");


--
-- TOC entry 7194 (class 1259 OID 46603)
-- Name: fk_WorkflowActionTemplate_WorkflowObjectTypeTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowActionTemplate_WorkflowObjectTypeTemplate" ON "WorkflowActionTemplate" USING btree ("WorkflowObjectTypeTemplateID");


--
-- TOC entry 7209 (class 1259 OID 46604)
-- Name: fk_WorkflowCommandConditionTemplate_WorkflowCommandTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowCommandConditionTemplate_WorkflowCommandTemplate" ON "WorkflowCommandConditionTemplate" USING btree ("WorkflowCommandTemplateID");


--
-- TOC entry 7214 (class 1259 OID 46605)
-- Name: fk_WorkflowCommandParameterTemplate_WorkflowParameterTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowCommandParameterTemplate_WorkflowParameterTemplate" ON "WorkflowCommandParameterTemplate" USING btree ("WorkflowParameterTemplateID");


--
-- TOC entry 7217 (class 1259 OID 46606)
-- Name: fk_WorkflowCommandTemplate_WorkflowObjectTypeTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowCommandTemplate_WorkflowObjectTypeTemplate" ON "WorkflowCommandTemplate" USING btree ("WorkflowObjectTypeTemplateID");


--
-- TOC entry 7218 (class 1259 OID 46607)
-- Name: fk_WorkflowCommandTemplate_WorkflowTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowCommandTemplate_WorkflowTemplate" ON "WorkflowCommandTemplate" USING btree ("WorkflowTemplateID");


--
-- TOC entry 7203 (class 1259 OID 46608)
-- Name: fk_WorkflowCommand_Workflow; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowCommand_Workflow" ON "WorkflowCommand" USING btree ("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7204 (class 1259 OID 46609)
-- Name: fk_WorkflowCommand_WorkflowObjectType; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowCommand_WorkflowObjectType" ON "WorkflowCommand" USING btree ("WorkflowObjectTypeID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7230 (class 1259 OID 46610)
-- Name: fk_WorkflowConditionTemplate_WorkflowObjectTypeTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowConditionTemplate_WorkflowObjectTypeTemplate" ON "WorkflowConditionTemplate" USING btree ("WorkflowObjectTypeTemplateID");


--
-- TOC entry 7221 (class 1259 OID 46611)
-- Name: fk_WorkflowCondition_Workflow; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowCondition_Workflow" ON "WorkflowCondition" USING btree ("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7222 (class 1259 OID 46612)
-- Name: fk_WorkflowCondition_WorkflowObjectType; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowCondition_WorkflowObjectType" ON "WorkflowCondition" USING btree ("WorkflowObjectTypeID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7247 (class 1259 OID 46613)
-- Name: fk_WorkflowDecisionExecuteComdTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowDecisionExecuteComdTemplate" ON "WorkflowDecisionExecuteCommandTemplate" USING btree ("WorkflowCommandTemplateID");


--
-- TOC entry 7258 (class 1259 OID 46614)
-- Name: fk_WorkflowDecisionParameterTemplate_WorkflowParameterTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowDecisionParameterTemplate_WorkflowParameterTemplate" ON "WorkflowDecisionParameterTemplate" USING btree ("WorkflowParameterTemplateID");


--
-- TOC entry 7269 (class 1259 OID 46615)
-- Name: fk_WorkflowDecisionTemplate_WorkflowObjectTypeTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowDecisionTemplate_WorkflowObjectTypeTemplate" ON "WorkflowDecisionTemplate" USING btree ("WorkflowObjectTypeTemplateID");


--
-- TOC entry 7233 (class 1259 OID 46616)
-- Name: fk_WorkflowDecision_Workflow; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowDecision_Workflow" ON "WorkflowDecision" USING btree ("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7234 (class 1259 OID 46617)
-- Name: fk_WorkflowDecision_WorkflowObjectType; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowDecision_WorkflowObjectType" ON "WorkflowDecision" USING btree ("WorkflowObjectTypeID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7278 (class 1259 OID 46618)
-- Name: fk_WorkflowHierarchy_Workflow; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowHierarchy_Workflow" ON "WorkflowHierarchy" USING btree ("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7279 (class 1259 OID 46619)
-- Name: fk_WorkflowHierarchy_WorkflowTransistion; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowHierarchy_WorkflowTransistion" ON "WorkflowHierarchy" USING btree ("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7293 (class 1259 OID 46620)
-- Name: fk_WorkflowInstanceExecutionDataIte; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowInstanceExecutionDataIte" ON "WorkflowInstanceExecutionDataItem" USING btree ("WorkflowInstanceExecutionStatusEventID");


--
-- TOC entry 7287 (class 1259 OID 46621)
-- Name: fk_WorkflowInstance_Workflow; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowInstance_Workflow" ON "WorkflowInstance" USING btree ("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7310 (class 1259 OID 46622)
-- Name: fk_WorkflowMainCompleteConditio; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainCompleteConditio" ON "WorkflowMainCompleteConditionTemplate" USING btree ("WorkflowConditionTemplateID");


--
-- TOC entry 7306 (class 1259 OID 46623)
-- Name: fk_WorkflowMainCompleteCondition_Workflow; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainCompleteCondition_Workflow" ON "WorkflowMainCompleteCondition" USING btree ("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7307 (class 1259 OID 46624)
-- Name: fk_WorkflowMainCompleteCondition_WorkflowCondition; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainCompleteCondition_WorkflowCondition" ON "WorkflowMainCompleteCondition" USING btree ("WorkflowConditionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7317 (class 1259 OID 46625)
-- Name: fk_WorkflowMainExecuteCommandTemplate_WorkflowCommandTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainExecuteCommandTemplate_WorkflowCommandTemplate" ON "WorkflowMainExecuteCommandTemplate" USING btree ("WorkflowCommandTemplateID");


--
-- TOC entry 7313 (class 1259 OID 46626)
-- Name: fk_WorkflowMainExecuteCommand_Workflow; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainExecuteCommand_Workflow" ON "WorkflowMainExecuteCommand" USING btree ("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7314 (class 1259 OID 46627)
-- Name: fk_WorkflowMainExecuteCommand_WorkflowCommand; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainExecuteCommand_WorkflowCommand" ON "WorkflowMainExecuteCommand" USING btree ("WorkflowCommandID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7324 (class 1259 OID 46628)
-- Name: fk_WorkflowMainParameterTemplate_WorkflowParameterTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainParameterTemplate_WorkflowParameterTemplate" ON "WorkflowMainParameterTemplate" USING btree ("WorkflowParameterTemplateID");


--
-- TOC entry 7320 (class 1259 OID 46629)
-- Name: fk_WorkflowMainParameter_Workflow; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainParameter_Workflow" ON "WorkflowMainParameter" USING btree ("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7321 (class 1259 OID 46630)
-- Name: fk_WorkflowMainParameter_WorkflowParameter; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainParameter_WorkflowParameter" ON "WorkflowMainParameter" USING btree ("WorkflowParameterID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7331 (class 1259 OID 46631)
-- Name: fk_WorkflowMainPostCommandTemplate_WorkflowCommandTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainPostCommandTemplate_WorkflowCommandTemplate" ON "WorkflowMainPostCommandTemplate" USING btree ("WorkflowCommandTemplateID");


--
-- TOC entry 7327 (class 1259 OID 46632)
-- Name: fk_WorkflowMainPostCommand_Workflow; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainPostCommand_Workflow" ON "WorkflowMainPostCommand" USING btree ("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7328 (class 1259 OID 46633)
-- Name: fk_WorkflowMainPostCommand_WorkflowCommand; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainPostCommand_WorkflowCommand" ON "WorkflowMainPostCommand" USING btree ("WorkflowCommandID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7338 (class 1259 OID 46634)
-- Name: fk_WorkflowMainPreCommandTemplate_WorkflowCommandTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainPreCommandTemplate_WorkflowCommandTemplate" ON "WorkflowMainPreCommandTemplate" USING btree ("WorkflowCommandTemplateID");


--
-- TOC entry 7334 (class 1259 OID 46635)
-- Name: fk_WorkflowMainPreCommand_Workflow; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainPreCommand_Workflow" ON "WorkflowMainPreCommand" USING btree ("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7335 (class 1259 OID 46636)
-- Name: fk_WorkflowMainPreCommand_WorkflowCommand; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainPreCommand_WorkflowCommand" ON "WorkflowMainPreCommand" USING btree ("WorkflowCommandID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7345 (class 1259 OID 46637)
-- Name: fk_WorkflowMainStartConditionTemplate_WorkflowConditionTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainStartConditionTemplate_WorkflowConditionTemplate" ON "WorkflowMainStartConditionTemplate" USING btree ("WorkflowConditionTemplateID");


--
-- TOC entry 7341 (class 1259 OID 46638)
-- Name: fk_WorkflowMainStartCondition_Workflow; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainStartCondition_Workflow" ON "WorkflowMainStartCondition" USING btree ("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7342 (class 1259 OID 46639)
-- Name: fk_WorkflowMainStartCondition_WorkflowCondition; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowMainStartCondition_WorkflowCondition" ON "WorkflowMainStartCondition" USING btree ("WorkflowConditionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7352 (class 1259 OID 46640)
-- Name: fk_WorkflowObjectType_Workflow; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowObjectType_Workflow" ON "WorkflowObjectType" USING btree ("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7376 (class 1259 OID 46641)
-- Name: fk_WorkflowTransistionCompleteConditioate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowTransistionCompleteConditioate" ON "WorkflowTransistionCompleteConditionTemplate" USING btree ("WorkflowTransistionTemplateID");


--
-- TOC entry 7384 (class 1259 OID 46642)
-- Name: fk_WorkflowTransistionHierarchyTemplate_WorkflowTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowTransistionHierarchyTemplate_WorkflowTemplate" ON "WorkflowTransistionHierarchyTemplate" USING btree ("WorkflowTemplateID");


--
-- TOC entry 7380 (class 1259 OID 46643)
-- Name: fk_WorkflowTransistionHierarchy_Workflow; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowTransistionHierarchy_Workflow" ON "WorkflowTransistionHierarchy" USING btree ("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7381 (class 1259 OID 46644)
-- Name: fk_WorkflowTransistionHierarchy_WorkflowTransistion; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowTransistionHierarchy_WorkflowTransistion" ON "WorkflowTransistionHierarchy" USING btree ("ChildComponentID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7385 (class 1259 OID 46645)
-- Name: fk_WorkflowTransistionHierarcplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowTransistionHierarcplate" ON "WorkflowTransistionHierarchyTemplate" USING btree ("ChildComponentID");


--
-- TOC entry 7386 (class 1259 OID 46646)
-- Name: fk_WorkflowTransistionHierarmplate11; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowTransistionHierarmplate11" ON "WorkflowTransistionHierarchyTemplate" USING btree ("ParentComponentID");


--
-- TOC entry 7391 (class 1259 OID 46647)
-- Name: fk_WorkflowTransistionParametemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowTransistionParametemplate" ON "WorkflowTransistionParameterTemplate" USING btree ("WorkflowParameterTemplateID");


--
-- TOC entry 7396 (class 1259 OID 46648)
-- Name: fk_WorkflowTransistionStartCondititionTemplate; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowTransistionStartCondititionTemplate" ON "WorkflowTransistionStartConditionTemplate" USING btree ("WorkflowTransistionTemplateID");


--
-- TOC entry 7371 (class 1259 OID 46649)
-- Name: fk_WorkflowTransistion_Workflow; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX "fk_WorkflowTransistion_Workflow" ON "WorkflowTransistion" USING btree ("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7424 (class 1259 OID 46650)
-- Name: subscription_typenameidx; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX subscription_typenameidx ON subscription USING btree (typename);


--
-- TOC entry 7425 (class 1259 OID 46651)
-- Name: timeoutentity_endpointidx; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX timeoutentity_endpointidx ON timeoutentity USING btree ("time", endpoint);


--
-- TOC entry 7428 (class 1259 OID 46652)
-- Name: timeoutentity_sagaididx; Type: INDEX; Schema: public; Owner: postgres; Tablespace:
--

CREATE INDEX timeoutentity_sagaididx ON timeoutentity USING btree (sagaid);


--
-- TOC entry 8482 (class 2620 OID 46653)
-- Name: "public_Plan_audit"; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER """public_Plan_audit""" AFTER INSERT OR DELETE OR UPDATE ON "Plan" FOR EACH ROW EXECUTE PROCEDURE public_audit."Plan"();


--
-- TOC entry 8483 (class 2620 OID 46654)
-- Name: "public_ProductDetail_audit"; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER """public_ProductDetail_audit""" AFTER INSERT OR DELETE OR UPDATE ON "ProductDetail" FOR EACH ROW EXECUTE PROCEDURE public_audit."ProductDetail"();


SET search_path = hangfire, pg_catalog;

--
-- TOC entry 7487 (class 2606 OID 46655)
-- Name: jobparameter_jobid_fkey; Type: FK CONSTRAINT; Schema: hangfire; Owner: postgres
--

ALTER TABLE ONLY jobparameter
    ADD CONSTRAINT jobparameter_jobid_fkey FOREIGN KEY (jobid) REFERENCES job(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 7488 (class 2606 OID 46660)
-- Name: state_jobid_fkey; Type: FK CONSTRAINT; Schema: hangfire; Owner: postgres
--

ALTER TABLE ONLY state
    ADD CONSTRAINT state_jobid_fkey FOREIGN KEY (jobid) REFERENCES job(id) ON UPDATE CASCADE ON DELETE CASCADE;


SET search_path = legal, pg_catalog;

--
-- TOC entry 7489 (class 2606 OID 46665)
-- Name: fk_LegalOrganisationDetails_Organisation; Type: FK CONSTRAINT; Schema: legal; Owner: postgres
--

ALTER TABLE ONLY "LegalOrganisationDetails"
    ADD CONSTRAINT "fk_LegalOrganisationDetails_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES public."Organisation"("OrganisationID");


SET search_path = public, pg_catalog;

--
-- TOC entry 7675 (class 2606 OID 46670)
-- Name: DefaultOrganisationUserTargetTemplate_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationUserTargetTemplate"
    ADD CONSTRAINT "DefaultOrganisationUserTargetTemplate_fk" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7932 (class 2606 OID 46675)
-- Name: FK OrganisationUnit; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationUnit"
    ADD CONSTRAINT "FK OrganisationUnit" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7937 (class 2606 OID 46680)
-- Name: FK UnitMap; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationUnitStructure"
    ADD CONSTRAINT "FK UnitMap" FOREIGN KEY ("OrganisationUnitID") REFERENCES "OrganisationUnit"("OrganisationUnitID");


--
-- TOC entry 7567 (class 2606 OID 46685)
-- Name: FK_ClassificationType_ClassificationTypeCategory; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ClassificationType"
    ADD CONSTRAINT "FK_ClassificationType_ClassificationTypeCategory" FOREIGN KEY ("ClassificationTypeCategoryID") REFERENCES "ClassificationTypeCategory"("ClassificationTypeCategoryID");


--
-- TOC entry 7568 (class 2606 OID 46690)
-- Name: FK_ClassificationType_ClassificationTypeCategory2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ClassificationType"
    ADD CONSTRAINT "FK_ClassificationType_ClassificationTypeCategory2" FOREIGN KEY ("ParentClassificationTypeCategoryID") REFERENCES "ClassificationTypeCategory"("ClassificationTypeCategoryID");


--
-- TOC entry 7609 (class 2606 OID 46695)
-- Name: FK_DefaultOrganisationGroupDefaul_DefaultOrganisationGroup; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationGroupRole"
    ADD CONSTRAINT "FK_DefaultOrganisationGroupDefaul_DefaultOrganisationGroup" FOREIGN KEY ("DefaultOrganisationGroupID") REFERENCES "DefaultOrganisationGroup"("DefaultOrganisationGroupID");


--
-- TOC entry 7611 (class 2606 OID 46700)
-- Name: FK_DefaultOrganisationGroupDefaul_DefaultOrganisationGroupT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationGroupRoleTemplate"
    ADD CONSTRAINT "FK_DefaultOrganisationGroupDefaul_DefaultOrganisationGroupT" FOREIGN KEY ("DefaultOrganisationGroupTemplateID") REFERENCES "DefaultOrganisationGroupTemplate"("DefaultOrganisationGroupTemplateID");


--
-- TOC entry 7610 (class 2606 OID 46705)
-- Name: FK_DefaultonGroupDefault_DefaultOrganisationRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationGroupRole"
    ADD CONSTRAINT "FK_DefaultonGroupDefault_DefaultOrganisationRole" FOREIGN KEY ("DefaultOrganisationRoleID") REFERENCES "DefaultOrganisationRole"("DefaultOrganisationRoleID");


--
-- TOC entry 7612 (class 2606 OID 46710)
-- Name: FK_DefaultonGroupDefault_DefaultOrganisationRoleT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationGroupRoleTemplate"
    ADD CONSTRAINT "FK_DefaultonGroupDefault_DefaultOrganisationRoleT" FOREIGN KEY ("DefaultOrganisationRoleTemplateID") REFERENCES "DefaultOrganisationRoleTemplate"("DefaultOrganisationRoleTemplateID");


--
-- TOC entry 7703 (class 2606 OID 46715)
-- Name: FK_GroupTemplateRole_GroupTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "GroupRole"
    ADD CONSTRAINT "FK_GroupTemplateRole_GroupTemplate" FOREIGN KEY ("GroupID") REFERENCES "Group"("GroupID");


--
-- TOC entry 7704 (class 2606 OID 46720)
-- Name: FK_GroupTemplateRole_RoleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "GroupRole"
    ADD CONSTRAINT "FK_GroupTemplateRole_RoleTemplate" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 7784 (class 2606 OID 46725)
-- Name: FK_Module_ModuleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Module"
    ADD CONSTRAINT "FK_Module_ModuleTemplate" FOREIGN KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber") REFERENCES "ModuleTemplate"("ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 7928 (class 2606 OID 46730)
-- Name: FK_OrganisationStructure; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationStructure"
    ADD CONSTRAINT "FK_OrganisationStructure" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7938 (class 2606 OID 46735)
-- Name: FK_OrganisationUnit; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationUnitStructure"
    ADD CONSTRAINT "FK_OrganisationUnit" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 8011 (class 2606 OID 46740)
-- Name: FK_Plugin_PluginTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Plugin"
    ADD CONSTRAINT "FK_Plugin_PluginTemplate" FOREIGN KEY ("PluginTemplateID", "PluginTemplateVersionNumber") REFERENCES "PluginTemplate"("PluginTemplateID", "PluginTemplateVersionNumber");


--
-- TOC entry 8144 (class 2606 OID 46745)
-- Name: FK_StateItem_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StateItem"
    ADD CONSTRAINT "FK_StateItem_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 8244 (class 2606 OID 46750)
-- Name: FK_WorkflowActionTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionTemplate"
    ADD CONSTRAINT "FK_WorkflowActionTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8299 (class 2606 OID 46755)
-- Name: FK_WorkflowDecisionFailureActionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionFailureTemplate"
    ADD CONSTRAINT "FK_WorkflowDecisionFailureActionTemplate" FOREIGN KEY ("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowDecisionTemplate"("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8309 (class 2606 OID 46760)
-- Name: FK_WorkflowDecisionSuccessActionTplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionSuccessTemplate"
    ADD CONSTRAINT "FK_WorkflowDecisionSuccessActionTplate" FOREIGN KEY ("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowDecisionTemplate"("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8316 (class 2606 OID 46765)
-- Name: FK_WorkflowHierarchyTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowHierarchyTemplate"
    ADD CONSTRAINT "FK_WorkflowHierarchyTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8317 (class 2606 OID 46770)
-- Name: FK_WorkflowHierarchyTemplate_WorkflowTransistionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowHierarchyTemplate"
    ADD CONSTRAINT "FK_WorkflowHierarchyTemplate_WorkflowTransistionTemplate" FOREIGN KEY ("WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTransistionTemplate"("WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8390 (class 2606 OID 46775)
-- Name: FK_WorkflowTransistionTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionTemplate"
    ADD CONSTRAINT "FK_WorkflowTransistionTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8400 (class 2606 OID 46780)
-- Name: FK_WorkflowTransistionWorkflowActionTe; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionWorkflowDecisionTemplate"
    ADD CONSTRAINT "FK_WorkflowTransistionWorkflowActionTe" FOREIGN KEY ("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowDecisionTemplate"("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8401 (class 2606 OID 46785)
-- Name: FK_WorkflowTransistionWorkflowActionTemplate_Wormplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionWorkflowDecisionTemplate"
    ADD CONSTRAINT "FK_WorkflowTransistionWorkflowActionTemplate_Wormplate" FOREIGN KEY ("WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTransistionTemplate"("WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8394 (class 2606 OID 46790)
-- Name: FK_WorkflowTransistionWorkflowDecisionTemplate_WorkflowTrmplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionWorkflowActionTemplate"
    ADD CONSTRAINT "FK_WorkflowTransistionWorkflowDecisionTemplate_WorkflowTrmplate" FOREIGN KEY ("WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTransistionTemplate"("WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8395 (class 2606 OID 46795)
-- Name: FK_WorkflowTransistionWorkflowDecisionTplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionWorkflowActionTemplate"
    ADD CONSTRAINT "FK_WorkflowTransistionWorkflowDecisionTplate" FOREIGN KEY ("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowActionTemplate"("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7782 (class 2606 OID 46800)
-- Name: FK_dboLinkedAccountCeAccountID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "LinkedAccountClaims"
    ADD CONSTRAINT "FK_dboLinkedAccountCeAccountID" FOREIGN KEY ("LinkedAccount_ProviderName", "LinkedAccount_ProviderAccountID") REFERENCES "LinkedAccounts"("ProviderName", "ProviderAccountID") ON DELETE CASCADE;


--
-- TOC entry 7783 (class 2606 OID 46805)
-- Name: FK_dboLinkedAccounts_dboUserAccounts_UserAccount_ID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "LinkedAccounts"
    ADD CONSTRAINT "FK_dboLinkedAccounts_dboUserAccounts_UserAccount_ID" FOREIGN KEY ("UserAccount_ID") REFERENCES "UserAccounts"("ID") ON DELETE CASCADE;


--
-- TOC entry 7964 (class 2606 OID 46810)
-- Name: FK_dboPasswordResetSecrets_dboUserAccounts_UserAccount_ID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PasswordResetSecrets"
    ADD CONSTRAINT "FK_dboPasswordResetSecrets_dboUserAccounts_UserAccount_ID" FOREIGN KEY ("UserAccount_ID") REFERENCES "UserAccounts"("ID") ON DELETE CASCADE;


--
-- TOC entry 8184 (class 2606 OID 46815)
-- Name: FK_dboTwoFactorAuthTokens_dboUserAccounts_UserAccount_ID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "TwoFactorAuthTokens"
    ADD CONSTRAINT "FK_dboTwoFactorAuthTokens_dboUserAccounts_UserAccount_ID" FOREIGN KEY ("UserAccount_ID") REFERENCES "UserAccounts"("ID") ON DELETE CASCADE;


--
-- TOC entry 8188 (class 2606 OID 46820)
-- Name: FK_dboUserAccountDetail_dboUserAccounts_UserID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountDetail"
    ADD CONSTRAINT "FK_dboUserAccountDetail_dboUserAccounts_UserID" FOREIGN KEY ("UserID") REFERENCES "UserAccounts"("ID") ON DELETE CASCADE;


--
-- TOC entry 8197 (class 2606 OID 46825)
-- Name: FK_dboUserAccountOrganisationGroup_dboOrganisupID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountOrganisationGroup"
    ADD CONSTRAINT "FK_dboUserAccountOrganisationGroup_dboOrganisupID" FOREIGN KEY ("OrganisationGroupID") REFERENCES "OrganisationGroup"("OrganisationGroupID") ON DELETE CASCADE;


--
-- TOC entry 8207 (class 2606 OID 46830)
-- Name: FK_dboUserCertificates_dboUserAccounts_UserAccount_ID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserCertificates"
    ADD CONSTRAINT "FK_dboUserCertificates_dboUserAccounts_UserAccount_ID" FOREIGN KEY ("UserAccount_ID") REFERENCES "UserAccounts"("ID") ON DELETE CASCADE;


--
-- TOC entry 8208 (class 2606 OID 46835)
-- Name: FK_dboUserClaims_dboUserAccounts_UserAccount_ID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserClaims"
    ADD CONSTRAINT "FK_dboUserClaims_dboUserAccounts_UserAccount_ID" FOREIGN KEY ("UserAccount_ID") REFERENCES "UserAccounts"("ID") ON DELETE CASCADE;


--
-- TOC entry 7729 (class 2606 OID 46840)
-- Name: InterfacePanelFDValidationOrgTypeUserTypeTemplate_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFDValidationOrgTypeUserTypeTemplate"
    ADD CONSTRAINT "InterfacePanelFDValidationOrgTypeUserTypeTemplate_fk" FOREIGN KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 7730 (class 2606 OID 46845)
-- Name: InterfacePanelFDValidationOrganisationTypeUserType_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFDValidationOrganisationTypeUserType"
    ADD CONSTRAINT "InterfacePanelFDValidationOrganisationTypeUserType_fk" FOREIGN KEY ("InterfacePanelID", "InterfacePanelVersionNumber") REFERENCES "InterfacePanel"("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 7743 (class 2606 OID 46850)
-- Name: InterfacePanelFieldDetailValidationOrganisationTypeTemplate_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFieldDetailValidationOrganisationTypeTemplate"
    ADD CONSTRAINT "InterfacePanelFieldDetailValidationOrganisationTypeTemplate_fk" FOREIGN KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 7742 (class 2606 OID 46855)
-- Name: InterfacePanelFieldDetailValidationOrganisationType_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFieldDetailValidationOrganisationType"
    ADD CONSTRAINT "InterfacePanelFieldDetailValidationOrganisationType_fk" FOREIGN KEY ("InterfacePanelID", "InterfacePanelVersionNumber") REFERENCES "InterfacePanel"("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 7744 (class 2606 OID 46860)
-- Name: InterfacePanelFieldDetailValidationTemplate_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFieldDetailValidationTemplate"
    ADD CONSTRAINT "InterfacePanelFieldDetailValidationTemplate_fk" FOREIGN KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 7741 (class 2606 OID 46865)
-- Name: InterfacePanelFieldDetailValidation_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFieldDetailValidation"
    ADD CONSTRAINT "InterfacePanelFieldDetailValidation_fk" FOREIGN KEY ("InterfacePanelID", "InterfacePanelVersionNumber") REFERENCES "InterfacePanel"("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 7762 (class 2606 OID 46870)
-- Name: InterfacePanelValidationOrganisationTypeTemplate_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelValidationOrganisationTypeTemplate"
    ADD CONSTRAINT "InterfacePanelValidationOrganisationTypeTemplate_fk" FOREIGN KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 7764 (class 2606 OID 46875)
-- Name: InterfacePanelValidationOrganisationTypeUserTypeTemplate_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelValidationOrganisationTypeUserTypeTemplate"
    ADD CONSTRAINT "InterfacePanelValidationOrganisationTypeUserTypeTemplate_fk" FOREIGN KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 7763 (class 2606 OID 46880)
-- Name: InterfacePanelValidationOrganisationTypeUserType_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelValidationOrganisationTypeUserType"
    ADD CONSTRAINT "InterfacePanelValidationOrganisationTypeUserType_fk" FOREIGN KEY ("InterfacePanelID", "InterfacePanelVersionNumber") REFERENCES "InterfacePanel"("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 7761 (class 2606 OID 46885)
-- Name: InterfacePanelValidationOrganisationType_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelValidationOrganisationType"
    ADD CONSTRAINT "InterfacePanelValidationOrganisationType_fk" FOREIGN KEY ("InterfacePanelID", "InterfacePanelVersionNumber") REFERENCES "InterfacePanel"("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 7760 (class 2606 OID 46890)
-- Name: InterfacePanelValidation_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelValidation"
    ADD CONSTRAINT "InterfacePanelValidation_fk" FOREIGN KEY ("InterfacePanelID", "InterfacePanelVersionNumber") REFERENCES "InterfacePanel"("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 7856 (class 2606 OID 46895)
-- Name: NotificationConstructGroupNotificationConstructTemplate_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructGroupNotificationConstructTemplate"
    ADD CONSTRAINT "NotificationConstructGroupNotificationConstructTemplate_fk" FOREIGN KEY ("NotificationConstructGroupTemplateID", "NotificationConstructGroupTemplateVersion") REFERENCES "NotificationConstructGroupTemplate"("NotificationConstructGroupTemplateID", "NotificationConstructGroupTemplateVersion");


--
-- TOC entry 7857 (class 2606 OID 46900)
-- Name: NotificationConstructGroupNotificationConstructTemplate_fk2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructGroupNotificationConstructTemplate"
    ADD CONSTRAINT "NotificationConstructGroupNotificationConstructTemplate_fk2" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7858 (class 2606 OID 46905)
-- Name: NotificationConstructGroupNotificationConstructTemplate_fk3; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructGroupNotificationConstructTemplate"
    ADD CONSTRAINT "NotificationConstructGroupNotificationConstructTemplate_fk3" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7859 (class 2606 OID 46910)
-- Name: NotificationConstructGroupNotificationConstructTemplate_fk4; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructGroupNotificationConstructTemplate"
    ADD CONSTRAINT "NotificationConstructGroupNotificationConstructTemplate_fk4" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7852 (class 2606 OID 46915)
-- Name: NotificationConstructGroupNotificationConstruct_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructGroupNotificationConstruct"
    ADD CONSTRAINT "NotificationConstructGroupNotificationConstruct_fk" FOREIGN KEY ("NotificationConstructGroupID", "NotificationConstructGroupVersion") REFERENCES "NotificationConstructGroup"("NotificationConstructGroupID", "NotificationConstructGroupVersion");


--
-- TOC entry 7853 (class 2606 OID 46920)
-- Name: NotificationConstructGroupNotificationConstruct_fk2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructGroupNotificationConstruct"
    ADD CONSTRAINT "NotificationConstructGroupNotificationConstruct_fk2" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7854 (class 2606 OID 46925)
-- Name: NotificationConstructGroupNotificationConstruct_fk3; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructGroupNotificationConstruct"
    ADD CONSTRAINT "NotificationConstructGroupNotificationConstruct_fk3" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7851 (class 2606 OID 46930)
-- Name: NotificationConstructGroup_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructGroup"
    ADD CONSTRAINT "NotificationConstructGroup_fk" FOREIGN KEY ("NotificationConstructGroupTemplateID", "NotificationConstructGroupTemplateVersion") REFERENCES "NotificationConstructGroupTemplate"("NotificationConstructGroupTemplateID", "NotificationConstructGroupTemplateVersion");


--
-- TOC entry 7894 (class 2606 OID 46935)
-- Name: OrganisationFinancialDetail_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationFinancialDetail"
    ADD CONSTRAINT "OrganisationFinancialDetail_fk" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 8172 (class 2606 OID 46940)
-- Name: TFEventTFEventMessageSubscriber_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "TFEventTFEventMessageSubscriber"
    ADD CONSTRAINT "TFEventTFEventMessageSubscriber_fk" FOREIGN KEY ("TFEventID") REFERENCES "TFEvent"("TFEventID");


--
-- TOC entry 8173 (class 2606 OID 46945)
-- Name: TFEventTFEventMessageSubscriber_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "TFEventTFEventMessageSubscriber"
    ADD CONSTRAINT "TFEventTFEventMessageSubscriber_fk1" FOREIGN KEY ("TFEventMessageSubscriberID") REFERENCES "TFEventMessageSubscriber"("TFEventMessageSubscriberID");


--
-- TOC entry 8171 (class 2606 OID 46950)
-- Name: TFEvent_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "TFEvent"
    ADD CONSTRAINT "TFEvent_fk" FOREIGN KEY ("TFEventTypeID") REFERENCES "TFEventType"("TFEventTypeID");


--
-- TOC entry 8227 (class 2606 OID 46955)
-- Name: WorkflowActionParameterNotificationConstructTemplate_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionParameterNotificationConstructTemplate"
    ADD CONSTRAINT "WorkflowActionParameterNotificationConstructTemplate_fk" FOREIGN KEY ("WorkflowActionTemplateID", "WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowActionParameterTemplate"("WorkflowActionTemplateID", "WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8225 (class 2606 OID 46960)
-- Name: WorkflowActionParameterNotificationConstruct_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionParameterNotificationConstruct"
    ADD CONSTRAINT "WorkflowActionParameterNotificationConstruct_fk" FOREIGN KEY ("WorkflowActionParameterNotificationConstructTemplateID", "WorkflowActionParameterNotificationConstructTemplateVersion") REFERENCES "WorkflowActionParameterNotificationConstructTemplate"("WorkflowActionParameterNotificationConstructTemplateID", "WorkflowActionParameterNotificationConstructTemplateVersion");


--
-- TOC entry 8405 (class 2606 OID 46965)
-- Name: WorkflowTreeStructureActionTemplate_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTreeStructureActionTemplate"
    ADD CONSTRAINT "WorkflowTreeStructureActionTemplate_fk" FOREIGN KEY ("WorkflowTreeStructureTemplateID") REFERENCES "WorkflowTreeStructureTemplate"("WorkflowTreeStructureTemplateID");


--
-- TOC entry 8406 (class 2606 OID 46970)
-- Name: WorkflowTreeStructureActionTemplate_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTreeStructureActionTemplate"
    ADD CONSTRAINT "WorkflowTreeStructureActionTemplate_fk1" FOREIGN KEY ("WorkflowActionTemplateID") REFERENCES "WorkflowActionTemplate"("WorkflowActionTemplateID");


--
-- TOC entry 8403 (class 2606 OID 46975)
-- Name: WorkflowTreeStructureAction_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTreeStructureAction"
    ADD CONSTRAINT "WorkflowTreeStructureAction_fk" FOREIGN KEY ("WorkflowTreeStructureID") REFERENCES "WorkflowTreeStructure"("WorkflowTreeStructureID");


--
-- TOC entry 8404 (class 2606 OID 46980)
-- Name: WorkflowTreeStructureAction_fk1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTreeStructureAction"
    ADD CONSTRAINT "WorkflowTreeStructureAction_fk1" FOREIGN KEY ("WorkflowActionID") REFERENCES "WorkflowAction"("WorkflowActionID");


--
-- TOC entry 8407 (class 2606 OID 46985)
-- Name: WorkflowTreeStructureTemplate_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTreeStructureTemplate"
    ADD CONSTRAINT "WorkflowTreeStructureTemplate_fk" FOREIGN KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 8402 (class 2606 OID 46990)
-- Name: WorkflowTreeStructure_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTreeStructure"
    ADD CONSTRAINT "WorkflowTreeStructure_fk" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 7490 (class 2606 OID 46995)
-- Name: fk_Account_Contact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Account"
    ADD CONSTRAINT "fk_Account_Contact" FOREIGN KEY ("ContactID") REFERENCES "Contact"("ContactID");


--
-- TOC entry 7491 (class 2606 OID 47000)
-- Name: fk_Account_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Account"
    ADD CONSTRAINT "fk_Account_Organisation" FOREIGN KEY ("ContactOrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7492 (class 2606 OID 47005)
-- Name: fk_Account_OrganisationContact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Account"
    ADD CONSTRAINT "fk_Account_OrganisationContact" FOREIGN KEY ("ParentOrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7878 (class 2606 OID 47010)
-- Name: fk_AccountingPeriod_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationAccountingPeriod"
    ADD CONSTRAINT "fk_AccountingPeriod_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7493 (class 2606 OID 47015)
-- Name: fk_ActorClaim_Actor; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ActorClaimRoleMapping"
    ADD CONSTRAINT "fk_ActorClaim_Actor" FOREIGN KEY ("ActorID") REFERENCES "Actor"("ActorID");


--
-- TOC entry 7494 (class 2606 OID 47020)
-- Name: fk_ActorClaim_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ActorClaimRoleMapping"
    ADD CONSTRAINT "fk_ActorClaim_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 7495 (class 2606 OID 47025)
-- Name: fk_ActorClaim_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ActorClaimRoleMapping"
    ADD CONSTRAINT "fk_ActorClaim_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 7496 (class 2606 OID 47030)
-- Name: fk_ActorClaim_Role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ActorClaimRoleMapping"
    ADD CONSTRAINT "fk_ActorClaim_Role" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 7497 (class 2606 OID 47035)
-- Name: fk_ActorClaim_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ActorClaimRoleMapping"
    ADD CONSTRAINT "fk_ActorClaim_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 7498 (class 2606 OID 47040)
-- Name: fk_ActorClaim_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ActorClaimRoleMapping"
    ADD CONSTRAINT "fk_ActorClaim_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 7500 (class 2606 OID 47045)
-- Name: fk_AddressChronology_Address; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "AddressChronology"
    ADD CONSTRAINT "fk_AddressChronology_Address" FOREIGN KEY ("ParentID") REFERENCES "Address"("AddressID");


--
-- TOC entry 7499 (class 2606 OID 47050)
-- Name: fk_Address_CountryCode; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Address"
    ADD CONSTRAINT "fk_Address_CountryCode" FOREIGN KEY ("CountryCode") REFERENCES "CountryCode"("CountryCode");


--
-- TOC entry 7501 (class 2606 OID 47055)
-- Name: fk_ApplicationStageWorkflow_ApplicationStage; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ApplicationStageWorkflow"
    ADD CONSTRAINT "fk_ApplicationStageWorkflow_ApplicationStage" FOREIGN KEY ("ApplicationStageID") REFERENCES "ApplicationStage"("ApplicationStageID");


--
-- TOC entry 7502 (class 2606 OID 47060)
-- Name: fk_ApplicationStageWorkflow_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ApplicationStageWorkflow"
    ADD CONSTRAINT "fk_ApplicationStageWorkflow_Workflow" FOREIGN KEY ("WorkflowID", "VersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7511 (class 2606 OID 47065)
-- Name: fk_ArtefactClaimTemplate_ArtefactRoleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactClaimTemplate"
    ADD CONSTRAINT "fk_ArtefactClaimTemplate_ArtefactRoleTemplate" FOREIGN KEY ("ArtefactRoleTemplateID") REFERENCES "ArtefactRoleTemplate"("ArtefactRoleTemplateID");


--
-- TOC entry 7512 (class 2606 OID 47070)
-- Name: fk_ArtefactClaimTemplate_ArtefactTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactClaimTemplate"
    ADD CONSTRAINT "fk_ArtefactClaimTemplate_ArtefactTemplate" FOREIGN KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber") REFERENCES "ArtefactTemplate"("ArtefactTemplateID", "ArtefactTemplateVersionNumber");


--
-- TOC entry 7513 (class 2606 OID 47075)
-- Name: fk_ArtefactClaimTemplate_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactClaimTemplate"
    ADD CONSTRAINT "fk_ArtefactClaimTemplate_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 7514 (class 2606 OID 47080)
-- Name: fk_ArtefactClaimTemplate_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactClaimTemplate"
    ADD CONSTRAINT "fk_ArtefactClaimTemplate_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 7515 (class 2606 OID 47085)
-- Name: fk_ArtefactClaimTemplate_Role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactClaimTemplate"
    ADD CONSTRAINT "fk_ArtefactClaimTemplate_Role" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 7516 (class 2606 OID 47090)
-- Name: fk_ArtefactClaimTemplate_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactClaimTemplate"
    ADD CONSTRAINT "fk_ArtefactClaimTemplate_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 7517 (class 2606 OID 47095)
-- Name: fk_ArtefactClaimTemplate_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactClaimTemplate"
    ADD CONSTRAINT "fk_ArtefactClaimTemplate_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 7504 (class 2606 OID 47100)
-- Name: fk_ArtefactClaim_Artefact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactClaim"
    ADD CONSTRAINT "fk_ArtefactClaim_Artefact" FOREIGN KEY ("ArtefactID", "ArtefactVersionNumber") REFERENCES "Artefact"("ArtefactID", "ArtefactVersionNumber");


--
-- TOC entry 7505 (class 2606 OID 47105)
-- Name: fk_ArtefactClaim_ArtefactRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactClaim"
    ADD CONSTRAINT "fk_ArtefactClaim_ArtefactRole" FOREIGN KEY ("ArtefactRoleID") REFERENCES "ArtefactRole"("ArtefactRoleID");


--
-- TOC entry 7506 (class 2606 OID 47110)
-- Name: fk_ArtefactClaim_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactClaim"
    ADD CONSTRAINT "fk_ArtefactClaim_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 7507 (class 2606 OID 47115)
-- Name: fk_ArtefactClaim_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactClaim"
    ADD CONSTRAINT "fk_ArtefactClaim_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 7508 (class 2606 OID 47120)
-- Name: fk_ArtefactClaim_Role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactClaim"
    ADD CONSTRAINT "fk_ArtefactClaim_Role" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 7509 (class 2606 OID 47125)
-- Name: fk_ArtefactClaim_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactClaim"
    ADD CONSTRAINT "fk_ArtefactClaim_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 7510 (class 2606 OID 47130)
-- Name: fk_ArtefactClaim_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactClaim"
    ADD CONSTRAINT "fk_ArtefactClaim_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 7524 (class 2606 OID 47135)
-- Name: fk_ArtefactDepenactDependencyTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactDependencyStatusTypeTemplate"
    ADD CONSTRAINT "fk_ArtefactDepenactDependencyTemplate" FOREIGN KEY ("ArtefactDependencyTemplateID") REFERENCES "ArtefactDependencyTemplate"("ArtefactDependencyTemplateID");


--
-- TOC entry 7525 (class 2606 OID 47140)
-- Name: fk_ArtefactDependencyStatusTypeTemplate_StatusTypeValueTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactDependencyStatusTypeTemplate"
    ADD CONSTRAINT "fk_ArtefactDependencyStatusTypeTemplate_StatusTypeValueTemplate" FOREIGN KEY ("StatusTypeValueTemplateID") REFERENCES "StatusTypeValueTemplate"("StatusTypeValueTemplateID");


--
-- TOC entry 7521 (class 2606 OID 47145)
-- Name: fk_ArtefactDependencyStatusType_ArtefactDependency; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactDependencyStatusType"
    ADD CONSTRAINT "fk_ArtefactDependencyStatusType_ArtefactDependency" FOREIGN KEY ("ArtefactDependencyID") REFERENCES "ArtefactDependency"("ArtefactDependencyID");


--
-- TOC entry 7522 (class 2606 OID 47150)
-- Name: fk_ArtefactDependencyStatusType_ArtefactStatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactDependencyStatusType"
    ADD CONSTRAINT "fk_ArtefactDependencyStatusType_ArtefactStatusType" FOREIGN KEY ("ArtefactID", "ArtefactVersionNumber", "StatusTypeID", "StatusTypeVersionNumber") REFERENCES "ArtefactStatusType"("ArtefactID", "ArtefactVersionNumber", "StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 7523 (class 2606 OID 47155)
-- Name: fk_ArtefactDependencyStatusType_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactDependencyStatusType"
    ADD CONSTRAINT "fk_ArtefactDependencyStatusType_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 7527 (class 2606 OID 47160)
-- Name: fk_ArtefactDependencyTemplate_ArtefactTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactDependencyTemplate"
    ADD CONSTRAINT "fk_ArtefactDependencyTemplate_ArtefactTemplate" FOREIGN KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber") REFERENCES "ArtefactTemplate"("ArtefactTemplateID", "ArtefactTemplateVersionNumber");


--
-- TOC entry 7518 (class 2606 OID 47165)
-- Name: fk_ArtefactDependency_Artefact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactDependency"
    ADD CONSTRAINT "fk_ArtefactDependency_Artefact" FOREIGN KEY ("ArtefactID", "ArtefactVersionNumber") REFERENCES "Artefact"("ArtefactID", "ArtefactVersionNumber");


--
-- TOC entry 7519 (class 2606 OID 47170)
-- Name: fk_ArtefactDependency_ArtefactDependencyTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactDependency"
    ADD CONSTRAINT "fk_ArtefactDependency_ArtefactDependencyTemplate" FOREIGN KEY ("ArtefactDependencyTemplateID") REFERENCES "ArtefactDependencyTemplate"("ArtefactDependencyTemplateID");


--
-- TOC entry 7526 (class 2606 OID 47175)
-- Name: fk_ArtefactDepentefactStatusTypeTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactDependencyStatusTypeTemplate"
    ADD CONSTRAINT "fk_ArtefactDepentefactStatusTypeTemplate" FOREIGN KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber", "StatusTypeTemplateID", "StatusTypeTemplateVersionNumber") REFERENCES "ArtefactStatusTypeTemplate"("ArtefactTemplateID", "ArtefactTemplateVersionNumber", "StatusTypeTemplateID", "StatusTypeTemplateVersionNumber");


--
-- TOC entry 7531 (class 2606 OID 47180)
-- Name: fk_ArtefactNotificationConstructTemplate_NotificationConstructT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactNotificationConstructTemplate"
    ADD CONSTRAINT "fk_ArtefactNotificationConstructTemplate_NotificationConstructT" FOREIGN KEY ("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber") REFERENCES "NotificationConstructTemplate"("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber");


--
-- TOC entry 7529 (class 2606 OID 47185)
-- Name: fk_ArtefactNotificationConstruct_NotificationConstruct; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactNotificationConstruct"
    ADD CONSTRAINT "fk_ArtefactNotificationConstruct_NotificationConstruct" FOREIGN KEY ("NotificationConstructID", "NotificationConstructVersionNumber") REFERENCES "NotificationConstruct"("NotificationConstructID", "NotificationConstructVersionNumber");


--
-- TOC entry 7532 (class 2606 OID 47190)
-- Name: fk_ArtefactNotificationTemplate_ArtefactTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactNotificationConstructTemplate"
    ADD CONSTRAINT "fk_ArtefactNotificationTemplate_ArtefactTemplate" FOREIGN KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber") REFERENCES "ArtefactTemplate"("ArtefactTemplateID", "ArtefactTemplateVersionNumber");


--
-- TOC entry 7530 (class 2606 OID 47195)
-- Name: fk_ArtefactNotification_Artefact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactNotificationConstruct"
    ADD CONSTRAINT "fk_ArtefactNotification_Artefact" FOREIGN KEY ("ArtefactID", "ArtefactVersionNumber") REFERENCES "Artefact"("ArtefactID", "ArtefactVersionNumber");


--
-- TOC entry 7535 (class 2606 OID 47200)
-- Name: fk_ArtefactProductTemplate_ArtefactTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactProductTemplate"
    ADD CONSTRAINT "fk_ArtefactProductTemplate_ArtefactTemplate" FOREIGN KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber") REFERENCES "ArtefactTemplate"("ArtefactTemplateID", "ArtefactTemplateVersionNumber");


--
-- TOC entry 7536 (class 2606 OID 47205)
-- Name: fk_ArtefactProductTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactProductTemplate"
    ADD CONSTRAINT "fk_ArtefactProductTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 7533 (class 2606 OID 47210)
-- Name: fk_ArtefactProduct_Artefact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactProduct"
    ADD CONSTRAINT "fk_ArtefactProduct_Artefact" FOREIGN KEY ("ArtefactID", "ArtefactVersionNumber") REFERENCES "Artefact"("ArtefactID", "ArtefactVersionNumber");


--
-- TOC entry 7534 (class 2606 OID 47215)
-- Name: fk_ArtefactProduct_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactProduct"
    ADD CONSTRAINT "fk_ArtefactProduct_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 7538 (class 2606 OID 47220)
-- Name: fk_ArtefactRoleTemplate_ArtefactTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactRoleTemplate"
    ADD CONSTRAINT "fk_ArtefactRoleTemplate_ArtefactTemplate" FOREIGN KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber") REFERENCES "ArtefactTemplate"("ArtefactTemplateID", "ArtefactTemplateVersionNumber");


--
-- TOC entry 7537 (class 2606 OID 47225)
-- Name: fk_ArtefactRole_Artefact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactRole"
    ADD CONSTRAINT "fk_ArtefactRole_Artefact" FOREIGN KEY ("ArtefactID", "ArtefactVersionNumber") REFERENCES "Artefact"("ArtefactID", "ArtefactVersionNumber");


--
-- TOC entry 7541 (class 2606 OID 47230)
-- Name: fk_ArtefactStatusTypeTemplate_ArtefactTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactStatusTypeTemplate"
    ADD CONSTRAINT "fk_ArtefactStatusTypeTemplate_ArtefactTemplate" FOREIGN KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber") REFERENCES "ArtefactTemplate"("ArtefactTemplateID", "ArtefactTemplateVersionNumber");


--
-- TOC entry 7542 (class 2606 OID 47235)
-- Name: fk_ArtefactStatusTypeTemplate_StatusTypeTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactStatusTypeTemplate"
    ADD CONSTRAINT "fk_ArtefactStatusTypeTemplate_StatusTypeTemplate" FOREIGN KEY ("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber") REFERENCES "StatusTypeTemplate"("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber");


--
-- TOC entry 7539 (class 2606 OID 47240)
-- Name: fk_ArtefactStatusType_Artefact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactStatusType"
    ADD CONSTRAINT "fk_ArtefactStatusType_Artefact" FOREIGN KEY ("ArtefactID", "ArtefactVersionNumber") REFERENCES "Artefact"("ArtefactID", "ArtefactVersionNumber");


--
-- TOC entry 7540 (class 2606 OID 47245)
-- Name: fk_ArtefactStatusType_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactStatusType"
    ADD CONSTRAINT "fk_ArtefactStatusType_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 7545 (class 2606 OID 47250)
-- Name: fk_ArtefactSubscriptionTemplate_ArtefactTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactSubscriptionTemplate"
    ADD CONSTRAINT "fk_ArtefactSubscriptionTemplate_ArtefactTemplate" FOREIGN KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber") REFERENCES "ArtefactTemplate"("ArtefactTemplateID", "ArtefactTemplateVersionNumber");


--
-- TOC entry 7543 (class 2606 OID 47255)
-- Name: fk_ArtefactSubscription_Artefact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactSubscription"
    ADD CONSTRAINT "fk_ArtefactSubscription_Artefact" FOREIGN KEY ("ArtefactID", "ArtefactVersionNumber") REFERENCES "Artefact"("ArtefactID", "ArtefactVersionNumber");


--
-- TOC entry 7544 (class 2606 OID 47260)
-- Name: fk_ArtefactSubscription_PlanSubscription; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactSubscription"
    ADD CONSTRAINT "fk_ArtefactSubscription_PlanSubscription" FOREIGN KEY ("PlanSubscriptionID", "PlanSubscriptionVersionNumber") REFERENCES "PlanSubscription"("PlanSubscriptionID", "PlanSubscriptionVersionNumber");


--
-- TOC entry 7548 (class 2606 OID 47265)
-- Name: fk_ArtefactWorkflowTemplate_ArtefactTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactWorkflowTemplate"
    ADD CONSTRAINT "fk_ArtefactWorkflowTemplate_ArtefactTemplate" FOREIGN KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber") REFERENCES "ArtefactTemplate"("ArtefactTemplateID", "ArtefactTemplateVersionNumber");


--
-- TOC entry 7549 (class 2606 OID 47270)
-- Name: fk_ArtefactWorkflowTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactWorkflowTemplate"
    ADD CONSTRAINT "fk_ArtefactWorkflowTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7546 (class 2606 OID 47275)
-- Name: fk_ArtefactWorkflow_Artefact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactWorkflow"
    ADD CONSTRAINT "fk_ArtefactWorkflow_Artefact" FOREIGN KEY ("ArtefactID", "ArtefactVersionNumber") REFERENCES "Artefact"("ArtefactID", "ArtefactVersionNumber");


--
-- TOC entry 7547 (class 2606 OID 47280)
-- Name: fk_ArtefactWorkflow_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactWorkflow"
    ADD CONSTRAINT "fk_ArtefactWorkflow_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7503 (class 2606 OID 47285)
-- Name: fk_Artefact_ArtefactTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Artefact"
    ADD CONSTRAINT "fk_Artefact_ArtefactTemplate" FOREIGN KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber") REFERENCES "ArtefactTemplate"("ArtefactTemplateID", "ArtefactTemplateVersionNumber");


--
-- TOC entry 7520 (class 2606 OID 47290)
-- Name: fk_Artefactlate_Artefact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactDependency"
    ADD CONSTRAINT "fk_Artefactlate_Artefact" FOREIGN KEY ("DependencyArtefactID", "DependencyArtefactVersionNumber") REFERENCES "Artefact"("ArtefactID", "ArtefactVersionNumber");


--
-- TOC entry 7528 (class 2606 OID 47295)
-- Name: fk_Artefactlate_ArtefactTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ArtefactDependencyTemplate"
    ADD CONSTRAINT "fk_Artefactlate_ArtefactTemplate" FOREIGN KEY ("DependencyArtefactTemplateID", "DependencyArtefactTemplateVersionNumber") REFERENCES "ArtefactTemplate"("ArtefactTemplateID", "ArtefactTemplateVersionNumber");


--
-- TOC entry 7555 (class 2606 OID 47300)
-- Name: fk_AttachmenDetailRole_OrganisationRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "AttachmentDetailRole"
    ADD CONSTRAINT "fk_AttachmenDetailRole_OrganisationRole" FOREIGN KEY ("OrganisationRoleID") REFERENCES "OrganisationRole"("OrganisationRoleID");


--
-- TOC entry 7553 (class 2606 OID 47305)
-- Name: fk_AttachmentDetailGroup_AttachmentDetail; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "AttachmentDetailGroup"
    ADD CONSTRAINT "fk_AttachmentDetailGroup_AttachmentDetail" FOREIGN KEY ("AttachmentDetailID") REFERENCES "AttachmentDetail"("AttachmentDetailID");


--
-- TOC entry 7554 (class 2606 OID 47310)
-- Name: fk_AttachmentDetailGroup_OrganisationGroup; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "AttachmentDetailGroup"
    ADD CONSTRAINT "fk_AttachmentDetailGroup_OrganisationGroup" FOREIGN KEY ("OrganisationGroupID") REFERENCES "OrganisationGroup"("OrganisationGroupID");


--
-- TOC entry 7551 (class 2606 OID 47315)
-- Name: fk_AttachmentDetail_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "AttachmentDetail"
    ADD CONSTRAINT "fk_AttachmentDetail_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7552 (class 2606 OID 47320)
-- Name: fk_AttachmentDetail_RepositoryStructure; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "AttachmentDetail"
    ADD CONSTRAINT "fk_AttachmentDetail_RepositoryStructure" FOREIGN KEY ("RepositoryStructureID") REFERENCES "RepositoryStructure"("RepositoryStructureID");


--
-- TOC entry 7556 (class 2606 OID 47325)
-- Name: fk_AttachmentRole_AttachmentDetail; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "AttachmentDetailRole"
    ADD CONSTRAINT "fk_AttachmentRole_AttachmentDetail" FOREIGN KEY ("AttachmentDetailID") REFERENCES "AttachmentDetail"("AttachmentDetailID");


--
-- TOC entry 7550 (class 2606 OID 47330)
-- Name: fk_Attachment_AttachmentDetail; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Attachment"
    ADD CONSTRAINT "fk_Attachment_AttachmentDetail" FOREIGN KEY ("AttachmentDetailID") REFERENCES "AttachmentDetail"("AttachmentDetailID");


--
-- TOC entry 7557 (class 2606 OID 47335)
-- Name: fk_Billing_BillingTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Billing"
    ADD CONSTRAINT "fk_Billing_BillingTemplate" FOREIGN KEY ("BillingTemplateID") REFERENCES "BillingTemplate"("BillingTemplateID");


--
-- TOC entry 7558 (class 2606 OID 47340)
-- Name: fk_BusMessageContent_BusMessage; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "BusMessageContent"
    ADD CONSTRAINT "fk_BusMessageContent_BusMessage" FOREIGN KEY ("BusMessageID") REFERENCES "BusMessage"("BusMessageID");


--
-- TOC entry 7559 (class 2606 OID 47345)
-- Name: fk_BusMessageProcessLog_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "BusMessageProcessLog"
    ADD CONSTRAINT "fk_BusMessageProcessLog_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 7560 (class 2606 OID 47350)
-- Name: fk_BusMessageProcessLog_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "BusMessageProcessLog"
    ADD CONSTRAINT "fk_BusMessageProcessLog_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 7561 (class 2606 OID 47355)
-- Name: fk_BusMessageStatus_BusMessage; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "BusMessageProcessLog"
    ADD CONSTRAINT "fk_BusMessageStatus_BusMessage" FOREIGN KEY ("BusMessageID") REFERENCES "BusMessage"("BusMessageID");


--
-- TOC entry 7564 (class 2606 OID 47360)
-- Name: fk_BusTaskProcessLog_BusTaskSchedule; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "BusTaskScheduleProcessLog"
    ADD CONSTRAINT "fk_BusTaskProcessLog_BusTaskSchedule" FOREIGN KEY ("BusTaskScheduleID") REFERENCES "BusTaskSchedule"("BusTaskScheduleID");


--
-- TOC entry 7565 (class 2606 OID 47365)
-- Name: fk_BusTaskScheduleProcessLog_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "BusTaskScheduleProcessLog"
    ADD CONSTRAINT "fk_BusTaskScheduleProcessLog_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 7566 (class 2606 OID 47370)
-- Name: fk_BusTaskScheduleProcessLog_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "BusTaskScheduleProcessLog"
    ADD CONSTRAINT "fk_BusTaskScheduleProcessLog_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 7563 (class 2606 OID 47375)
-- Name: fk_BusTaskSchedule_BusTask; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "BusTaskSchedule"
    ADD CONSTRAINT "fk_BusTaskSchedule_BusTask" FOREIGN KEY ("BusTaskID", "BusTaskVersionNumber") REFERENCES "BusTask"("BusTaskID", "BusTaskVersionNumber");


--
-- TOC entry 7562 (class 2606 OID 47380)
-- Name: fk_BusTask_BusTaskHandler; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "BusTask"
    ADD CONSTRAINT "fk_BusTask_BusTaskHandler" FOREIGN KEY ("BusTaskHandlerID") REFERENCES "BusTaskHandler"("BusTaskHandlerID");


--
-- TOC entry 8104 (class 2606 OID 47385)
-- Name: fk_ClaimTarget_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ResourceOperationTarget"
    ADD CONSTRAINT "fk_ClaimTarget_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 8105 (class 2606 OID 47390)
-- Name: fk_ClaimTarget_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ResourceOperationTarget"
    ADD CONSTRAINT "fk_ClaimTarget_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 8106 (class 2606 OID 47395)
-- Name: fk_ClaimTarget_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ResourceOperationTarget"
    ADD CONSTRAINT "fk_ClaimTarget_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 8107 (class 2606 OID 47400)
-- Name: fk_ClaimTarget_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ResourceOperationTarget"
    ADD CONSTRAINT "fk_ClaimTarget_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 8185 (class 2606 OID 47405)
-- Name: fk_ClassificationTypeCategory_ClassificationTypeCategoryID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountArchive"
    ADD CONSTRAINT "fk_ClassificationTypeCategory_ClassificationTypeCategoryID" FOREIGN KEY ("UserAccountArchiveCategoryID") REFERENCES "ClassificationTypeCategory"("ClassificationTypeCategoryID");


--
-- TOC entry 8186 (class 2606 OID 47410)
-- Name: fk_ClassificationType_ClassificationTypeID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountArchive"
    ADD CONSTRAINT "fk_ClassificationType_ClassificationTypeID" FOREIGN KEY ("UserAccountArchiveTypeID") REFERENCES "ClassificationType"("ClassificationTypeID");


--
-- TOC entry 7571 (class 2606 OID 47415)
-- Name: fk_ComponentTier_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ComponentTierTemplate"
    ADD CONSTRAINT "fk_ComponentTier_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7569 (class 2606 OID 47420)
-- Name: fk_ComponentTier_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ComponentTier"
    ADD CONSTRAINT "fk_ComponentTier_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7572 (class 2606 OID 47425)
-- Name: fk_ComponentTier_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ComponentTierTemplate"
    ADD CONSTRAINT "fk_ComponentTier_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7570 (class 2606 OID 47430)
-- Name: fk_ComponentTier_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ComponentTier"
    ADD CONSTRAINT "fk_ComponentTier_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7573 (class 2606 OID 47435)
-- Name: fk_ContactName_Contact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ContactName"
    ADD CONSTRAINT "fk_ContactName_Contact" FOREIGN KEY ("ContactID") REFERENCES "Contact"("ContactID");


--
-- TOC entry 7576 (class 2606 OID 47440)
-- Name: fk_ContactOrganisationRegulator_Contact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ContactRegulator"
    ADD CONSTRAINT "fk_ContactOrganisationRegulator_Contact" FOREIGN KEY ("ContactID") REFERENCES "Contact"("ContactID");


--
-- TOC entry 7574 (class 2606 OID 47445)
-- Name: fk_ContactPhone_Contact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ContactPhone"
    ADD CONSTRAINT "fk_ContactPhone_Contact" FOREIGN KEY ("ContactID") REFERENCES "Contact"("ContactID");


--
-- TOC entry 7575 (class 2606 OID 47450)
-- Name: fk_ContactPhone_CountryCode; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ContactPhone"
    ADD CONSTRAINT "fk_ContactPhone_CountryCode" FOREIGN KEY ("CountryCode") REFERENCES "CountryCode"("CountryCode");


--
-- TOC entry 7577 (class 2606 OID 47455)
-- Name: fk_CountryCode_CurrencyCode; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "CountryCode"
    ADD CONSTRAINT "fk_CountryCode_CurrencyCode" FOREIGN KEY ("CurrencyCode") REFERENCES "CurrencyCode"("CurrencyCode");


--
-- TOC entry 7580 (class 2606 OID 47460)
-- Name: fk_CountryDeductionTemplate_CountryCode; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "CountryDeductionTemplate"
    ADD CONSTRAINT "fk_CountryDeductionTemplate_CountryCode" FOREIGN KEY ("CountryCode") REFERENCES "CountryCode"("CountryCode");


--
-- TOC entry 7581 (class 2606 OID 47465)
-- Name: fk_CountryDeductionTemplate_DeductionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "CountryDeductionTemplate"
    ADD CONSTRAINT "fk_CountryDeductionTemplate_DeductionTemplate" FOREIGN KEY ("DeductionTemplateID", "DeductionTemplateVersionNumber") REFERENCES "DeductionTemplate"("DeductionTemplateID", "DeductionTemplateVersionNumber");


--
-- TOC entry 7578 (class 2606 OID 47470)
-- Name: fk_CountryDeduction_CountryCode; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "CountryDeduction"
    ADD CONSTRAINT "fk_CountryDeduction_CountryCode" FOREIGN KEY ("CountryCode") REFERENCES "CountryCode"("CountryCode");


--
-- TOC entry 7579 (class 2606 OID 47475)
-- Name: fk_CountryDeduction_Deduction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "CountryDeduction"
    ADD CONSTRAINT "fk_CountryDeduction_Deduction" FOREIGN KEY ("DeductionID", "DeductionVersionNumber") REFERENCES "Deduction"("DeductionID", "DeductionVersionNumber");


--
-- TOC entry 7587 (class 2606 OID 47480)
-- Name: fk_DeductionComponentTierTemplate_ComponentTierTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DeductionComponentTierTemplate"
    ADD CONSTRAINT "fk_DeductionComponentTierTemplate_ComponentTierTemplate" FOREIGN KEY ("ComponentTierTemplateID") REFERENCES "ComponentTierTemplate"("ComponentTierTemplateID");


--
-- TOC entry 7588 (class 2606 OID 47485)
-- Name: fk_DeductionComponentTierTemplate_DeductionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DeductionComponentTierTemplate"
    ADD CONSTRAINT "fk_DeductionComponentTierTemplate_DeductionTemplate" FOREIGN KEY ("DeductionTemplateID", "DeductionTemplateVersionNumber") REFERENCES "DeductionTemplate"("DeductionTemplateID", "DeductionTemplateVersionNumber");


--
-- TOC entry 7585 (class 2606 OID 47490)
-- Name: fk_DeductionComponentTier_ComponentTier; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DeductionComponentTier"
    ADD CONSTRAINT "fk_DeductionComponentTier_ComponentTier" FOREIGN KEY ("ComponentTierID") REFERENCES "ComponentTier"("ComponentTierID");


--
-- TOC entry 7586 (class 2606 OID 47495)
-- Name: fk_DeductionComponentTier_Deduction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DeductionComponentTier"
    ADD CONSTRAINT "fk_DeductionComponentTier_Deduction" FOREIGN KEY ("DeductionID", "DeductionVersionNumber") REFERENCES "Deduction"("DeductionID", "DeductionVersionNumber");


--
-- TOC entry 7591 (class 2606 OID 47500)
-- Name: fk_DeductionProductTemplate_DeductionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DeductionProductTemplate"
    ADD CONSTRAINT "fk_DeductionProductTemplate_DeductionTemplate" FOREIGN KEY ("DeductionTemplateID", "DeductionTemplateVersionNumber") REFERENCES "DeductionTemplate"("DeductionTemplateID", "DeductionTemplateVersionNumber");


--
-- TOC entry 7592 (class 2606 OID 47505)
-- Name: fk_DeductionProductTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DeductionProductTemplate"
    ADD CONSTRAINT "fk_DeductionProductTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 7589 (class 2606 OID 47510)
-- Name: fk_DeductionProduct_Deduction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DeductionProduct"
    ADD CONSTRAINT "fk_DeductionProduct_Deduction" FOREIGN KEY ("DeductionID", "DeductionVersionNumber") REFERENCES "Deduction"("DeductionID", "DeductionVersionNumber");


--
-- TOC entry 7590 (class 2606 OID 47515)
-- Name: fk_DeductionProduct_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DeductionProduct"
    ADD CONSTRAINT "fk_DeductionProduct_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 7593 (class 2606 OID 47520)
-- Name: fk_DeductionTemplate_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DeductionTemplate"
    ADD CONSTRAINT "fk_DeductionTemplate_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7594 (class 2606 OID 47525)
-- Name: fk_DeductionTemplate_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DeductionTemplate"
    ADD CONSTRAINT "fk_DeductionTemplate_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7582 (class 2606 OID 47530)
-- Name: fk_Deduction_DeductionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Deduction"
    ADD CONSTRAINT "fk_Deduction_DeductionTemplate" FOREIGN KEY ("DeductionTemplateID", "DeductionTemplateVersionNumber") REFERENCES "DeductionTemplate"("DeductionTemplateID", "DeductionTemplateVersionNumber");


--
-- TOC entry 7583 (class 2606 OID 47535)
-- Name: fk_Deduction_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Deduction"
    ADD CONSTRAINT "fk_Deduction_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7584 (class 2606 OID 47540)
-- Name: fk_Deduction_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Deduction"
    ADD CONSTRAINT "fk_Deduction_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7597 (class 2606 OID 47545)
-- Name: fk_DefaultOrganisationArtefact_Artefact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationArtefact"
    ADD CONSTRAINT "fk_DefaultOrganisationArtefact_Artefact" FOREIGN KEY ("ArtefactID", "ArtefactVersionNumber") REFERENCES "Artefact"("ArtefactID", "ArtefactVersionNumber");


--
-- TOC entry 7599 (class 2606 OID 47550)
-- Name: fk_DefaultOrganisationArtefact_ArtefactT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationArtefactTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationArtefact_ArtefactT" FOREIGN KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber") REFERENCES "ArtefactTemplate"("ArtefactTemplateID", "ArtefactTemplateVersionNumber");


--
-- TOC entry 7598 (class 2606 OID 47555)
-- Name: fk_DefaultOrganisationArtefact_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationArtefact"
    ADD CONSTRAINT "fk_DefaultOrganisationArtefact_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7600 (class 2606 OID 47560)
-- Name: fk_DefaultOrganisationArtefact_DefaultOrganisationT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationArtefactTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationArtefact_DefaultOrganisationT" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7601 (class 2606 OID 47565)
-- Name: fk_DefaultOrganisationBranch_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationBranch"
    ADD CONSTRAINT "fk_DefaultOrganisationBranch_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7602 (class 2606 OID 47570)
-- Name: fk_DefaultOrganisationBranch_DefaultOrganisationT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationBranchTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationBranch_DefaultOrganisationT" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7603 (class 2606 OID 47575)
-- Name: fk_DefaultOrganisationBucket_BucketTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationBucket"
    ADD CONSTRAINT "fk_DefaultOrganisationBucket_BucketTemplate" FOREIGN KEY ("BucketTemplateID") REFERENCES "BucketTemplate"("BucketTemplateID");


--
-- TOC entry 7605 (class 2606 OID 47580)
-- Name: fk_DefaultOrganisationBucket_BucketTemplateT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationBucketTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationBucket_BucketTemplateT" FOREIGN KEY ("BucketTemplateID") REFERENCES "BucketTemplate"("BucketTemplateID");


--
-- TOC entry 7604 (class 2606 OID 47585)
-- Name: fk_DefaultOrganisationBucket_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationBucket"
    ADD CONSTRAINT "fk_DefaultOrganisationBucket_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7606 (class 2606 OID 47590)
-- Name: fk_DefaultOrganisationBucket_DefaultOrganisationT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationBucketTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationBucket_DefaultOrganisationT" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7615 (class 2606 OID 47595)
-- Name: fk_DefaultOrganisationGroupTargetTemplate_DefaultOrganisationGr; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationGroupTargetTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationGroupTargetTemplate_DefaultOrganisationGr" FOREIGN KEY ("DefaultOrganisationGroupTemplateID") REFERENCES "DefaultOrganisationGroupTemplate"("DefaultOrganisationGroupTemplateID");


--
-- TOC entry 7616 (class 2606 OID 47600)
-- Name: fk_DefaultOrganisationGroupTargetTemplate_DefaultOrganisationUs; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationGroupTargetTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationGroupTargetTemplate_DefaultOrganisationUs" FOREIGN KEY ("DefaultOrganisationUserTargetTemplateID") REFERENCES "DefaultOrganisationUserTargetTemplate"("DefaultOrganisationUserTargetTemplateID");


--
-- TOC entry 7613 (class 2606 OID 47605)
-- Name: fk_DefaultOrganisationGroupTarget_DefaultOrganisationGroup; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationGroupTarget"
    ADD CONSTRAINT "fk_DefaultOrganisationGroupTarget_DefaultOrganisationGroup" FOREIGN KEY ("DefaultOrganisationGroupID") REFERENCES "DefaultOrganisationGroup"("DefaultOrganisationGroupID");


--
-- TOC entry 7614 (class 2606 OID 47610)
-- Name: fk_DefaultOrganisationGroupTarget_DefaultOrganisationUserTarget; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationGroupTarget"
    ADD CONSTRAINT "fk_DefaultOrganisationGroupTarget_DefaultOrganisationUserTarget" FOREIGN KEY ("DefaultOrganisationUserTargetID") REFERENCES "DefaultOrganisationUserTarget"("DefaultOrganisationUserTargetID");


--
-- TOC entry 7607 (class 2606 OID 47615)
-- Name: fk_DefaultOrganisationGroup_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationGroup"
    ADD CONSTRAINT "fk_DefaultOrganisationGroup_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7617 (class 2606 OID 47620)
-- Name: fk_DefaultOrganisationGroup_DefaultOrganisationT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationGroupTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationGroup_DefaultOrganisationT" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7608 (class 2606 OID 47625)
-- Name: fk_DefaultOrganisationGroup_Group; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationGroup"
    ADD CONSTRAINT "fk_DefaultOrganisationGroup_Group" FOREIGN KEY ("GroupID") REFERENCES "Group"("GroupID");


--
-- TOC entry 7618 (class 2606 OID 47630)
-- Name: fk_DefaultOrganisationGroup_GroupT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationGroupTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationGroup_GroupT" FOREIGN KEY ("GroupID") REFERENCES "Group"("GroupID");


--
-- TOC entry 7620 (class 2606 OID 47635)
-- Name: fk_DefaultOrganisationLedgerTemplate_DefaultOrganisationTemplat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationLedgerTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationLedgerTemplate_DefaultOrganisationTemplat" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7619 (class 2606 OID 47640)
-- Name: fk_DefaultOrganisationLedger_DefaultOrganisationTemplat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationLedger"
    ADD CONSTRAINT "fk_DefaultOrganisationLedger_DefaultOrganisationTemplat" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7623 (class 2606 OID 47645)
-- Name: fk_DefaultOrganisationModule_DefaulanisationT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationModuleTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationModule_DefaulanisationT" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7621 (class 2606 OID 47650)
-- Name: fk_DefaultOrganisationModule_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationModule"
    ADD CONSTRAINT "fk_DefaultOrganisationModule_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7622 (class 2606 OID 47655)
-- Name: fk_DefaultOrganisationModule_Module; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationModule"
    ADD CONSTRAINT "fk_DefaultOrganisationModule_Module" FOREIGN KEY ("ModuleID", "ModuleVersionNumber") REFERENCES "Module"("ModuleID", "ModuleVersionNumber");


--
-- TOC entry 7624 (class 2606 OID 47660)
-- Name: fk_DefaultOrganisationModule_ModuleT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationModuleTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationModule_ModuleT" FOREIGN KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber") REFERENCES "ModuleTemplate"("ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 7627 (class 2606 OID 47665)
-- Name: fk_DefaultOrganisationNotificationConstructTemplate_Notificatio; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationNotificationConstructTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationNotificationConstructTemplate_Notificatio" FOREIGN KEY ("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber") REFERENCES "NotificationConstructTemplate"("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber");


--
-- TOC entry 7625 (class 2606 OID 47670)
-- Name: fk_DefaultOrganisationNotificationConstruct_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationNotificationConstruct"
    ADD CONSTRAINT "fk_DefaultOrganisationNotificationConstruct_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7626 (class 2606 OID 47675)
-- Name: fk_DefaultOrganisationNotificationConstruct_NotificationConstru; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationNotificationConstruct"
    ADD CONSTRAINT "fk_DefaultOrganisationNotificationConstruct_NotificationConstru" FOREIGN KEY ("NotificationConstructID", "NotificationConstructVersionNumber") REFERENCES "NotificationConstruct"("NotificationConstructID", "NotificationConstructVersionNumber");


--
-- TOC entry 7631 (class 2606 OID 47680)
-- Name: fk_DefaultOrganisationPaymentMethodTemplate_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationPaymentMethodTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationPaymentMethodTemplate_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7632 (class 2606 OID 47685)
-- Name: fk_DefaultOrganisationPaymentMethodTemplate_GlobalPaymentMethod; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationPaymentMethodTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationPaymentMethodTemplate_GlobalPaymentMethod" FOREIGN KEY ("GlobalPaymentMethodID") REFERENCES "GlobalPaymentMethod"("GlobalPaymentMethodID");


--
-- TOC entry 7629 (class 2606 OID 47690)
-- Name: fk_DefaultOrganisationPaymentMethod_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationPaymentMethod"
    ADD CONSTRAINT "fk_DefaultOrganisationPaymentMethod_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7630 (class 2606 OID 47695)
-- Name: fk_DefaultOrganisationPaymentMethod_GlobalPaymentMethod; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationPaymentMethod"
    ADD CONSTRAINT "fk_DefaultOrganisationPaymentMethod_GlobalPaymentMethod" FOREIGN KEY ("GlobalPaymentMethodID") REFERENCES "GlobalPaymentMethod"("GlobalPaymentMethodID");


--
-- TOC entry 7635 (class 2606 OID 47700)
-- Name: fk_DefaultOrganisationProductTemplate_DefaultOrganisationTempla; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationProductTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationProductTemplate_DefaultOrganisationTempla" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7636 (class 2606 OID 47705)
-- Name: fk_DefaultOrganisationProductTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationProductTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationProductTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 7633 (class 2606 OID 47710)
-- Name: fk_DefaultOrganisationProduct_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationProduct"
    ADD CONSTRAINT "fk_DefaultOrganisationProduct_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7634 (class 2606 OID 47715)
-- Name: fk_DefaultOrganisationProduct_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationProduct"
    ADD CONSTRAINT "fk_DefaultOrganisationProduct_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 7639 (class 2606 OID 47720)
-- Name: fk_DefaultOrganisationRoleClaim_DefaultOrganisationRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleClaim"
    ADD CONSTRAINT "fk_DefaultOrganisationRoleClaim_DefaultOrganisationRole" FOREIGN KEY ("DefaultOrganisationRoleID") REFERENCES "DefaultOrganisationRole"("DefaultOrganisationRoleID");


--
-- TOC entry 7644 (class 2606 OID 47725)
-- Name: fk_DefaultOrganisationRoleClaim_DefaultOrganisationRoleT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleClaimTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationRoleClaim_DefaultOrganisationRoleT" FOREIGN KEY ("DefaultOrganisationRoleTemplateID") REFERENCES "DefaultOrganisationRoleTemplate"("DefaultOrganisationRoleTemplateID");


--
-- TOC entry 7640 (class 2606 OID 47730)
-- Name: fk_DefaultOrganisationRoleClaim_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleClaim"
    ADD CONSTRAINT "fk_DefaultOrganisationRoleClaim_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 7645 (class 2606 OID 47735)
-- Name: fk_DefaultOrganisationRoleClaim_OperationT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleClaimTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationRoleClaim_OperationT" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 7641 (class 2606 OID 47740)
-- Name: fk_DefaultOrganisationRoleClaim_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleClaim"
    ADD CONSTRAINT "fk_DefaultOrganisationRoleClaim_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 7646 (class 2606 OID 47745)
-- Name: fk_DefaultOrganisationRoleClaim_ResourceT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleClaimTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationRoleClaim_ResourceT" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 7642 (class 2606 OID 47750)
-- Name: fk_DefaultOrganisationRoleClaim_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleClaim"
    ADD CONSTRAINT "fk_DefaultOrganisationRoleClaim_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 7643 (class 2606 OID 47755)
-- Name: fk_DefaultOrganisationRoleClaim_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleClaim"
    ADD CONSTRAINT "fk_DefaultOrganisationRoleClaim_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 7647 (class 2606 OID 47760)
-- Name: fk_DefaultOrganisationRoleClaim_StateItemT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleClaimTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationRoleClaim_StateItemT" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 7648 (class 2606 OID 47765)
-- Name: fk_DefaultOrganisationRoleClaim_StateT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleClaimTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationRoleClaim_StateT" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 7651 (class 2606 OID 47770)
-- Name: fk_DefaultOrganisationRoleTargetTemplate_DefaultOrganisationUse; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleTargetTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationRoleTargetTemplate_DefaultOrganisationUse" FOREIGN KEY ("DefaultOrganisationUserTargetTemplateID") REFERENCES "DefaultOrganisationUserTargetTemplate"("DefaultOrganisationUserTargetTemplateID");


--
-- TOC entry 7649 (class 2606 OID 47775)
-- Name: fk_DefaultOrganisationRoleTarget_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleTarget"
    ADD CONSTRAINT "fk_DefaultOrganisationRoleTarget_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationRoleID") REFERENCES "DefaultOrganisationRole"("DefaultOrganisationRoleID");


--
-- TOC entry 7652 (class 2606 OID 47780)
-- Name: fk_DefaultOrganisationRoleTarget_DefaultOrganisationT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleTargetTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationRoleTarget_DefaultOrganisationT" FOREIGN KEY ("DefaultOrganisationRoleTemplateID") REFERENCES "DefaultOrganisationRoleTemplate"("DefaultOrganisationRoleTemplateID");


--
-- TOC entry 7650 (class 2606 OID 47785)
-- Name: fk_DefaultOrganisationRoleTarget_DefaultOrganisationUserTarget; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleTarget"
    ADD CONSTRAINT "fk_DefaultOrganisationRoleTarget_DefaultOrganisationUserTarget" FOREIGN KEY ("DefaultOrganisationUserTargetID") REFERENCES "DefaultOrganisationUserTarget"("DefaultOrganisationUserTargetID");


--
-- TOC entry 7637 (class 2606 OID 47790)
-- Name: fk_DefaultOrganisationRole_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRole"
    ADD CONSTRAINT "fk_DefaultOrganisationRole_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7653 (class 2606 OID 47795)
-- Name: fk_DefaultOrganisationRole_DefaultOrganisationT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationRole_DefaultOrganisationT" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7638 (class 2606 OID 47800)
-- Name: fk_DefaultOrganisationRole_Role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRole"
    ADD CONSTRAINT "fk_DefaultOrganisationRole_Role" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 7654 (class 2606 OID 47805)
-- Name: fk_DefaultOrganisationRole_RoleT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationRoleTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationRole_RoleT" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 7657 (class 2606 OID 47810)
-- Name: fk_DefaultOrganisationShoppingCartProductTemplate_DefaultOrgani; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationShoppingCartBlueprintTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationShoppingCartProductTemplate_DefaultOrgani" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7658 (class 2606 OID 47815)
-- Name: fk_DefaultOrganisationShoppingCartProductTemplate_ShoppingCartP; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationShoppingCartBlueprintTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationShoppingCartProductTemplate_ShoppingCartP" FOREIGN KEY ("ShoppingCartBlueprintTemplateID") REFERENCES "ShoppingCartBlueprintTemplate"("ShoppingCartBlueprintTemplateID");


--
-- TOC entry 7655 (class 2606 OID 47820)
-- Name: fk_DefaultOrganisationShoppingCartProduct_DefaultOrgani; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationShoppingCartBlueprint"
    ADD CONSTRAINT "fk_DefaultOrganisationShoppingCartProduct_DefaultOrgani" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7656 (class 2606 OID 47825)
-- Name: fk_DefaultOrganisationShoppingCartProduct_ShoppingCartP; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationShoppingCartBlueprint"
    ADD CONSTRAINT "fk_DefaultOrganisationShoppingCartProduct_ShoppingCartP" FOREIGN KEY ("ShoppingCartBlueprintID") REFERENCES "ShoppingCartBlueprint"("ShoppingCartBlueprintID");


--
-- TOC entry 7662 (class 2606 OID 47830)
-- Name: fk_DefaultOrganisationStatusTypeTemplate_DefaultOrganisationTem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationStatusTypeTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationStatusTypeTemplate_DefaultOrganisationTem" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7663 (class 2606 OID 47835)
-- Name: fk_DefaultOrganisationStatusTypeTemplate_StatusTypeValueTemplat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationStatusTypeTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationStatusTypeTemplate_StatusTypeValueTemplat" FOREIGN KEY ("DefaultStatusTypeValueTemplateID") REFERENCES "StatusTypeValueTemplate"("StatusTypeValueTemplateID");


--
-- TOC entry 7659 (class 2606 OID 47840)
-- Name: fk_DefaultOrganisationStatusType_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationStatusType"
    ADD CONSTRAINT "fk_DefaultOrganisationStatusType_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7660 (class 2606 OID 47845)
-- Name: fk_DefaultOrganisationStatusType_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationStatusType"
    ADD CONSTRAINT "fk_DefaultOrganisationStatusType_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 7664 (class 2606 OID 47850)
-- Name: fk_DefaultOrganisationStatusType_StatusTypeT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationStatusTypeTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationStatusType_StatusTypeT" FOREIGN KEY ("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber") REFERENCES "StatusTypeTemplate"("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber");


--
-- TOC entry 7661 (class 2606 OID 47855)
-- Name: fk_DefaultOrganisationStatusType_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationStatusType"
    ADD CONSTRAINT "fk_DefaultOrganisationStatusType_StatusTypeValue" FOREIGN KEY ("DefaultStatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 7668 (class 2606 OID 47860)
-- Name: fk_DefaultOrganisationTargetTemplate_DefaultOrganisationStatusT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationTargetTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationTargetTemplate_DefaultOrganisationStatusT" FOREIGN KEY ("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber", "DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationStatusTypeTemplate"("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber", "DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7669 (class 2606 OID 47865)
-- Name: fk_DefaultOrganisationTargetTemplate_DefaultOrganisationTemplat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationTargetTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationTargetTemplate_DefaultOrganisationTemplat" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7670 (class 2606 OID 47870)
-- Name: fk_DefaultOrganisationTargetTemplate_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationTargetTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationTargetTemplate_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7665 (class 2606 OID 47875)
-- Name: fk_DefaultOrganisationTarget_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationTarget"
    ADD CONSTRAINT "fk_DefaultOrganisationTarget_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7666 (class 2606 OID 47880)
-- Name: fk_DefaultOrganisationTarget_DefaultOrganisationStatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationTarget"
    ADD CONSTRAINT "fk_DefaultOrganisationTarget_DefaultOrganisationStatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber", "DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisationStatusType"("StatusTypeID", "StatusTypeVersionNumber", "DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7667 (class 2606 OID 47885)
-- Name: fk_DefaultOrganisationTarget_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationTarget"
    ADD CONSTRAINT "fk_DefaultOrganisationTarget_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7671 (class 2606 OID 47890)
-- Name: fk_DefaultOrganisationTemplate_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationTemplate_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7676 (class 2606 OID 47895)
-- Name: fk_DefaultOrganisationUserTargetTemplate_DefaultOrganisationSta; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationUserTargetTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationUserTargetTemplate_DefaultOrganisationSta" FOREIGN KEY ("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber", "DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationStatusTypeTemplate"("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber", "DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7677 (class 2606 OID 47900)
-- Name: fk_DefaultOrganisationUserTargetTemplate_DefaultOrganisationTem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationUserTargetTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationUserTargetTemplate_DefaultOrganisationTem" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7678 (class 2606 OID 47905)
-- Name: fk_DefaultOrganisationUserTargetTemplate_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationUserTargetTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationUserTargetTemplate_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7672 (class 2606 OID 47910)
-- Name: fk_DefaultOrganisationUserTarget_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationUserTarget"
    ADD CONSTRAINT "fk_DefaultOrganisationUserTarget_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7673 (class 2606 OID 47915)
-- Name: fk_DefaultOrganisationUserTarget_DefaultOrganisationStatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationUserTarget"
    ADD CONSTRAINT "fk_DefaultOrganisationUserTarget_DefaultOrganisationStatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber", "DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisationStatusType"("StatusTypeID", "StatusTypeVersionNumber", "DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7674 (class 2606 OID 47920)
-- Name: fk_DefaultOrganisationUserTarget_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationUserTarget"
    ADD CONSTRAINT "fk_DefaultOrganisationUserTarget_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7681 (class 2606 OID 47925)
-- Name: fk_DefaultOrganisationUserTypeTemplate_DefaultOrganisationTempl; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationUserTypeTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationUserTypeTemplate_DefaultOrganisationTempl" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7682 (class 2606 OID 47930)
-- Name: fk_DefaultOrganisationUserTypeTemplate_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationUserTypeTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationUserTypeTemplate_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7679 (class 2606 OID 47935)
-- Name: fk_DefaultOrganisationUserType_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationUserType"
    ADD CONSTRAINT "fk_DefaultOrganisationUserType_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7680 (class 2606 OID 47940)
-- Name: fk_DefaultOrganisationUserType_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationUserType"
    ADD CONSTRAINT "fk_DefaultOrganisationUserType_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7683 (class 2606 OID 47945)
-- Name: fk_DefaultOrganisationWorkflow_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationWorkflow"
    ADD CONSTRAINT "fk_DefaultOrganisationWorkflow_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7684 (class 2606 OID 47950)
-- Name: fk_DefaultOrganisationWorkflow_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationWorkflow"
    ADD CONSTRAINT "fk_DefaultOrganisationWorkflow_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7685 (class 2606 OID 47955)
-- Name: fk_DefaultOrganisationWorkflow_WorkflowT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationWorkflowTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationWorkflow_WorkflowT" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7686 (class 2606 OID 47960)
-- Name: fk_DefaultOrganisationWorkflows_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationWorkflowTemplate"
    ADD CONSTRAINT "fk_DefaultOrganisationWorkflows_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7595 (class 2606 OID 47965)
-- Name: fk_DefaultOrganisation_DefaultOrganisationTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisation"
    ADD CONSTRAINT "fk_DefaultOrganisation_DefaultOrganisationTemplate" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7596 (class 2606 OID 47970)
-- Name: fk_DefaultOrganisation_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisation"
    ADD CONSTRAINT "fk_DefaultOrganisation_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7628 (class 2606 OID 47975)
-- Name: fk_DefaultOrgationNotificationConstruct_DefaultOrganisationT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DefaultOrganisationNotificationConstructTemplate"
    ADD CONSTRAINT "fk_DefaultOrgationNotificationConstruct_DefaultOrganisationT" FOREIGN KEY ("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber") REFERENCES "DefaultOrganisationTemplate"("DefaultOrganisationTemplateID", "DefaultOrganisationTemplateVersionNumber");


--
-- TOC entry 7687 (class 2606 OID 47980)
-- Name: fk_DirectDebitMandate_DirectDebitMandateTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DirectDebitMandate"
    ADD CONSTRAINT "fk_DirectDebitMandate_DirectDebitMandateTemplate" FOREIGN KEY ("DirectDebitMandateTemplateID", "DirectDebitMandateTemplateVersionNumber") REFERENCES "DirectDebitMandateTemplate"("DirectDebitMandateTemplateID", "DirectDebitMandateTemplateVersionNumber");


--
-- TOC entry 7693 (class 2606 OID 47985)
-- Name: fk_DiscountComponentTierTemplate_ComponentTierTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DiscountComponentTierTemplate"
    ADD CONSTRAINT "fk_DiscountComponentTierTemplate_ComponentTierTemplate" FOREIGN KEY ("ComponentTierTemplateID") REFERENCES "ComponentTierTemplate"("ComponentTierTemplateID");


--
-- TOC entry 7694 (class 2606 OID 47990)
-- Name: fk_DiscountComponentTierTemplate_DiscountTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DiscountComponentTierTemplate"
    ADD CONSTRAINT "fk_DiscountComponentTierTemplate_DiscountTemplate" FOREIGN KEY ("DiscountTemplateID", "DiscountTemplateVersionNumber") REFERENCES "DiscountTemplate"("DiscountTemplateID", "DiscountTemplateVersionNumber");


--
-- TOC entry 7691 (class 2606 OID 47995)
-- Name: fk_DiscountComponentTier_ComponentTier; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DiscountComponentTier"
    ADD CONSTRAINT "fk_DiscountComponentTier_ComponentTier" FOREIGN KEY ("ComponentTierID") REFERENCES "ComponentTier"("ComponentTierID");


--
-- TOC entry 7692 (class 2606 OID 48000)
-- Name: fk_DiscountComponentTier_Discount; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DiscountComponentTier"
    ADD CONSTRAINT "fk_DiscountComponentTier_Discount" FOREIGN KEY ("DiscountID", "DiscountVersionNumber") REFERENCES "Discount"("DiscountID", "DiscountVersionNumber");


--
-- TOC entry 7697 (class 2606 OID 48005)
-- Name: fk_DiscountRelatedProductTemplate_DiscountTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DiscountRelatedProductTemplate"
    ADD CONSTRAINT "fk_DiscountRelatedProductTemplate_DiscountTemplate" FOREIGN KEY ("DiscountTemplateID", "DiscountTemplateVersionNumber") REFERENCES "DiscountTemplate"("DiscountTemplateID", "DiscountTemplateVersionNumber");


--
-- TOC entry 7698 (class 2606 OID 48010)
-- Name: fk_DiscountRelatedProductTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DiscountRelatedProductTemplate"
    ADD CONSTRAINT "fk_DiscountRelatedProductTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 7695 (class 2606 OID 48015)
-- Name: fk_DiscountRelatedProduct_Discount; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DiscountRelatedProduct"
    ADD CONSTRAINT "fk_DiscountRelatedProduct_Discount" FOREIGN KEY ("DiscountID", "DiscountVersionNumber") REFERENCES "Discount"("DiscountID", "DiscountVersionNumber");


--
-- TOC entry 7696 (class 2606 OID 48020)
-- Name: fk_DiscountRelatedProduct_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DiscountRelatedProduct"
    ADD CONSTRAINT "fk_DiscountRelatedProduct_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 7699 (class 2606 OID 48025)
-- Name: fk_DiscountTemplate_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DiscountTemplate"
    ADD CONSTRAINT "fk_DiscountTemplate_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7700 (class 2606 OID 48030)
-- Name: fk_DiscountTemplate_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "DiscountTemplate"
    ADD CONSTRAINT "fk_DiscountTemplate_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7688 (class 2606 OID 48035)
-- Name: fk_Discount_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Discount"
    ADD CONSTRAINT "fk_Discount_Organisation" FOREIGN KEY ("OwnerOrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7689 (class 2606 OID 48040)
-- Name: fk_Discount_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Discount"
    ADD CONSTRAINT "fk_Discount_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7690 (class 2606 OID 48045)
-- Name: fk_Discount_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Discount"
    ADD CONSTRAINT "fk_Discount_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7701 (class 2606 OID 48050)
-- Name: fk_FieldDetail_FieldDetailTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "FieldDetail"
    ADD CONSTRAINT "fk_FieldDetail_FieldDetailTemplate" FOREIGN KEY ("FieldDetailTemplateID") REFERENCES "FieldDetailTemplate"("FieldDetailTemplateID");


--
-- TOC entry 7702 (class 2606 OID 48055)
-- Name: fk_GlobalPaymentMethod_DirectDebitMandate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "GlobalPaymentMethod"
    ADD CONSTRAINT "fk_GlobalPaymentMethod_DirectDebitMandate" FOREIGN KEY ("DirectDebitMandateID", "DirectDebitMandateVersionNumber") REFERENCES "DirectDebitMandate"("DirectDebitMandateID", "DirectDebitMandateVersionNumber");


--
-- TOC entry 7897 (class 2606 OID 48060)
-- Name: fk_Group_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationGroup"
    ADD CONSTRAINT "fk_Group_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7752 (class 2606 OID 48065)
-- Name: fk_InterfacePaUserTypeUserTypeypeTemplate_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelOrganisationTypeUserTypeTemplate"
    ADD CONSTRAINT "fk_InterfacePaUserTypeUserTypeypeTemplate_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7749 (class 2606 OID 48070)
-- Name: fk_InterfacePaUserTypeUserTypeype_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelOrganisationTypeUserType"
    ADD CONSTRAINT "fk_InterfacePaUserTypeUserTypeype_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7707 (class 2606 OID 48075)
-- Name: fk_InterfacePanelClaim1_Role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelClaim"
    ADD CONSTRAINT "fk_InterfacePanelClaim1_Role" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 7714 (class 2606 OID 48080)
-- Name: fk_InterfacePanelClaimTemplate1_Role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelClaimTemplate"
    ADD CONSTRAINT "fk_InterfacePanelClaimTemplate1_Role" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 7715 (class 2606 OID 48085)
-- Name: fk_InterfacePanelClaimTemplate_InterfacePanelRoleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelClaimTemplate"
    ADD CONSTRAINT "fk_InterfacePanelClaimTemplate_InterfacePanelRoleTemplate" FOREIGN KEY ("InterfacePanelRoleTemplateID") REFERENCES "InterfacePanelRoleTemplate"("InterfacePanelRoleTemplateID");


--
-- TOC entry 7708 (class 2606 OID 48090)
-- Name: fk_InterfacePanelClaim_InterfacePanelRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelClaim"
    ADD CONSTRAINT "fk_InterfacePanelClaim_InterfacePanelRole" FOREIGN KEY ("InterfacePanelRoleID") REFERENCES "InterfacePanelRole"("InterfacePanelRoleID");


--
-- TOC entry 7725 (class 2606 OID 48095)
-- Name: fk_InterfacePanelFieldDetail132ganaisationTypeTemplate_FieldDet; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFDOrganisationTypeUserTypeTemplate"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetail132ganaisationTypeTemplate_FieldDet" FOREIGN KEY ("FieldDetailTemplateID") REFERENCES "FieldDetailTemplate"("FieldDetailTemplateID");


--
-- TOC entry 7721 (class 2606 OID 48100)
-- Name: fk_InterfacePanelFieldDetail132ganaisationType_FieldDeta; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFDOrganisationTypeUserType"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetail132ganaisationType_FieldDeta" FOREIGN KEY ("FieldDetailID") REFERENCES "FieldDetail"("FieldDetailID");


--
-- TOC entry 7726 (class 2606 OID 48105)
-- Name: fk_InterfacePanelFieldDetail312naisationTypeTemplate_Organisat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFDOrganisationTypeUserTypeTemplate"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetail312naisationTypeTemplate_Organisat" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7722 (class 2606 OID 48110)
-- Name: fk_InterfacePanelFieldDetail312naisationType_Organisat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFDOrganisationTypeUserType"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetail312naisationType_Organisat" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7727 (class 2606 OID 48115)
-- Name: fk_InterfacePanelFieldDetailOr31sationTypeTemplate_Interface; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFDOrganisationTypeUserTypeTemplate"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetailOr31sationTypeTemplate_Interface" FOREIGN KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 7723 (class 2606 OID 48120)
-- Name: fk_InterfacePanelFieldDetailOr31sationType_Interface; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFDOrganisationTypeUserType"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetailOr31sationType_Interface" FOREIGN KEY ("InterfacePanelID", "InterfacePanelVersionNumber") REFERENCES "InterfacePanel"("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 7728 (class 2606 OID 48125)
-- Name: fk_InterfacePanelFieldDetailOrganai123123ate_Organisat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFDOrganisationTypeUserTypeTemplate"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetailOrganai123123ate_Organisat" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7724 (class 2606 OID 48130)
-- Name: fk_InterfacePanelFieldDetailOrganai123123ate_Organisat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFDOrganisationTypeUserType"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetailOrganai123123ate_Organisat" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7736 (class 2606 OID 48135)
-- Name: fk_InterfacePanelFieldDetailOrganaisationTypeTemplate_FieldDeta; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFieldDetailOrganisationTypeTemplate"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetailOrganaisationTypeTemplate_FieldDeta" FOREIGN KEY ("FieldDetailTemplateID") REFERENCES "FieldDetailTemplate"("FieldDetailTemplateID");


--
-- TOC entry 7737 (class 2606 OID 48140)
-- Name: fk_InterfacePanelFieldDetailOrganaisationTypeTemplate_Interface; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFieldDetailOrganisationTypeTemplate"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetailOrganaisationTypeTemplate_Interface" FOREIGN KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 7738 (class 2606 OID 48145)
-- Name: fk_InterfacePanelFieldDetailOrganaisationTypeTemplate_Organisat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFieldDetailOrganisationTypeTemplate"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetailOrganaisationTypeTemplate_Organisat" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7733 (class 2606 OID 48150)
-- Name: fk_InterfacePanelFieldDetailOrganaisationType_FieldDeta; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFieldDetailOrganisationType"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetailOrganaisationType_FieldDeta" FOREIGN KEY ("FieldDetailID") REFERENCES "FieldDetail"("FieldDetailID");


--
-- TOC entry 7734 (class 2606 OID 48155)
-- Name: fk_InterfacePanelFieldDetailOrganaisationType_Interface; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFieldDetailOrganisationType"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetailOrganaisationType_Interface" FOREIGN KEY ("InterfacePanelID", "InterfacePanelVersionNumber") REFERENCES "InterfacePanel"("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 7735 (class 2606 OID 48160)
-- Name: fk_InterfacePanelFieldDetailOrganaisationType_Organisat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFieldDetailOrganisationType"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetailOrganaisationType_Organisat" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7739 (class 2606 OID 48165)
-- Name: fk_InterfacePanelFieldDetailSettingTemplate_FieldDetailTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFieldDetailTemplate"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetailSettingTemplate_FieldDetailTemplate" FOREIGN KEY ("FieldDetailTemplateID") REFERENCES "FieldDetailTemplate"("FieldDetailTemplateID");


--
-- TOC entry 7740 (class 2606 OID 48170)
-- Name: fk_InterfacePanelFieldDetailSettingTemplate_InterfacePanelTempl; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFieldDetailTemplate"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetailSettingTemplate_InterfacePanelTempl" FOREIGN KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 7731 (class 2606 OID 48175)
-- Name: fk_InterfacePanelFieldDetailSetting_FieldDetail; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFieldDetail"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetailSetting_FieldDetail" FOREIGN KEY ("FieldDetailID") REFERENCES "FieldDetail"("FieldDetailID");


--
-- TOC entry 7732 (class 2606 OID 48180)
-- Name: fk_InterfacePanelFieldDetailSetting_InterfacePanelTempl; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelFieldDetail"
    ADD CONSTRAINT "fk_InterfacePanelFieldDetailSetting_InterfacePanelTempl" FOREIGN KEY ("InterfacePanelID", "InterfacePanelVersionNumber") REFERENCES "InterfacePanel"("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 7753 (class 2606 OID 48185)
-- Name: fk_InterfacePanelOrUserTypeTemplate_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelOrganisationTypeUserTypeTemplate"
    ADD CONSTRAINT "fk_InterfacePanelOrUserTypeTemplate_OrganisationType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7750 (class 2606 OID 48190)
-- Name: fk_InterfacePanelOrUserType_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelOrganisationTypeUserType"
    ADD CONSTRAINT "fk_InterfacePanelOrUserType_OrganisationType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7754 (class 2606 OID 48195)
-- Name: fk_InterfacePanelOrgaUserTypeonTypeTemplate_InterfacePanelTempl; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelOrganisationTypeUserTypeTemplate"
    ADD CONSTRAINT "fk_InterfacePanelOrgaUserTypeonTypeTemplate_InterfacePanelTempl" FOREIGN KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 7751 (class 2606 OID 48200)
-- Name: fk_InterfacePanelOrgaUserTypeonType_InterfacePanelTemplat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelOrganisationTypeUserType"
    ADD CONSTRAINT "fk_InterfacePanelOrgaUserTypeonType_InterfacePanelTemplat" FOREIGN KEY ("InterfacePanelID", "InterfacePanelVersionNumber") REFERENCES "InterfacePanel"("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 7747 (class 2606 OID 48205)
-- Name: fk_InterfacePanelOrganisationTypeTemplate_InterfacePanelTemplat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelOrganisationTypeTemplate"
    ADD CONSTRAINT "fk_InterfacePanelOrganisationTypeTemplate_InterfacePanelTemplat" FOREIGN KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 7748 (class 2606 OID 48210)
-- Name: fk_InterfacePanelOrganisationTypeTemplate_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelOrganisationTypeTemplate"
    ADD CONSTRAINT "fk_InterfacePanelOrganisationTypeTemplate_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7745 (class 2606 OID 48215)
-- Name: fk_InterfacePanelOrganisationType_InterfacePanel; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelOrganisationType"
    ADD CONSTRAINT "fk_InterfacePanelOrganisationType_InterfacePanel" FOREIGN KEY ("InterfacePanelID", "InterfacePanelVersionNumber") REFERENCES "InterfacePanel"("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 7746 (class 2606 OID 48220)
-- Name: fk_InterfacePanelOrganisationType_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelOrganisationType"
    ADD CONSTRAINT "fk_InterfacePanelOrganisationType_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7716 (class 2606 OID 48225)
-- Name: fk_InterfacePanelRoleClaimTemplate_InterfacePanelTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelClaimTemplate"
    ADD CONSTRAINT "fk_InterfacePanelRoleClaimTemplate_InterfacePanelTemplate" FOREIGN KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 7717 (class 2606 OID 48230)
-- Name: fk_InterfacePanelRoleClaimTemplate_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelClaimTemplate"
    ADD CONSTRAINT "fk_InterfacePanelRoleClaimTemplate_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 7718 (class 2606 OID 48235)
-- Name: fk_InterfacePanelRoleClaimTemplate_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelClaimTemplate"
    ADD CONSTRAINT "fk_InterfacePanelRoleClaimTemplate_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 7719 (class 2606 OID 48240)
-- Name: fk_InterfacePanelRoleClaimTemplate_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelClaimTemplate"
    ADD CONSTRAINT "fk_InterfacePanelRoleClaimTemplate_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 7720 (class 2606 OID 48245)
-- Name: fk_InterfacePanelRoleClaimTemplate_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelClaimTemplate"
    ADD CONSTRAINT "fk_InterfacePanelRoleClaimTemplate_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 7709 (class 2606 OID 48250)
-- Name: fk_InterfacePanelRoleClaim_InterfacePanel; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelClaim"
    ADD CONSTRAINT "fk_InterfacePanelRoleClaim_InterfacePanel" FOREIGN KEY ("InterfacePanelID", "InterfacePanelVersionNumber") REFERENCES "InterfacePanel"("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 7710 (class 2606 OID 48255)
-- Name: fk_InterfacePanelRoleClaim_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelClaim"
    ADD CONSTRAINT "fk_InterfacePanelRoleClaim_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 7711 (class 2606 OID 48260)
-- Name: fk_InterfacePanelRoleClaim_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelClaim"
    ADD CONSTRAINT "fk_InterfacePanelRoleClaim_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 7712 (class 2606 OID 48265)
-- Name: fk_InterfacePanelRoleClaim_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelClaim"
    ADD CONSTRAINT "fk_InterfacePanelRoleClaim_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 7713 (class 2606 OID 48270)
-- Name: fk_InterfacePanelRoleClaim_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelClaim"
    ADD CONSTRAINT "fk_InterfacePanelRoleClaim_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 7756 (class 2606 OID 48275)
-- Name: fk_InterfacePanelRoleTemplate_InterfacePanelTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelRoleTemplate"
    ADD CONSTRAINT "fk_InterfacePanelRoleTemplate_InterfacePanelTemplate" FOREIGN KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 7755 (class 2606 OID 48280)
-- Name: fk_InterfacePanelRole_InterfacePanel; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelRole"
    ADD CONSTRAINT "fk_InterfacePanelRole_InterfacePanel" FOREIGN KEY ("InterfacePanelID", "InterfacePanelVersionNumber") REFERENCES "InterfacePanel"("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 7758 (class 2606 OID 48285)
-- Name: fk_InterfacePanelSettingTemplate_InterfacePanelTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelSettingTemplate"
    ADD CONSTRAINT "fk_InterfacePanelSettingTemplate_InterfacePanelTemplate" FOREIGN KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 7757 (class 2606 OID 48290)
-- Name: fk_InterfacePanelSetting_InterfacePanel; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelSetting"
    ADD CONSTRAINT "fk_InterfacePanelSetting_InterfacePanel" FOREIGN KEY ("InterfacePanelID", "InterfacePanelVersionNumber") REFERENCES "InterfacePanel"("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 7759 (class 2606 OID 48295)
-- Name: fk_InterfacePanelTemplate_InterfacePanelTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanelTemplate"
    ADD CONSTRAINT "fk_InterfacePanelTemplate_InterfacePanelTemplate" FOREIGN KEY ("ParentIPTemplateID", "ParentIPTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 7705 (class 2606 OID 48300)
-- Name: fk_InterfacePanel_InterfacePanel; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanel"
    ADD CONSTRAINT "fk_InterfacePanel_InterfacePanel" FOREIGN KEY ("ParentIPID", "ParentIPVersionNumber") REFERENCES "InterfacePanel"("InterfacePanelID", "InterfacePanelVersionNumber");


--
-- TOC entry 7706 (class 2606 OID 48305)
-- Name: fk_InterfacePanel_InterfacePanelTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InterfacePanel"
    ADD CONSTRAINT "fk_InterfacePanel_InterfacePanelTemplate" FOREIGN KEY ("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber") REFERENCES "InterfacePanelTemplate"("InterfacePanelTemplateID", "InterfacePanelTemplateVersionNumber");


--
-- TOC entry 7770 (class 2606 OID 48310)
-- Name: fk_InvoiceLineItem_Account; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InvoiceLineItem"
    ADD CONSTRAINT "fk_InvoiceLineItem_Account" FOREIGN KEY ("AccountID") REFERENCES "Account"("AccountID");


--
-- TOC entry 7771 (class 2606 OID 48315)
-- Name: fk_InvoiceLineItem_CountryCode; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InvoiceLineItem"
    ADD CONSTRAINT "fk_InvoiceLineItem_CountryCode" FOREIGN KEY ("CountryCode") REFERENCES "CountryCode"("CountryCode");


--
-- TOC entry 7772 (class 2606 OID 48320)
-- Name: fk_InvoiceLineItem_Invoice; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InvoiceLineItem"
    ADD CONSTRAINT "fk_InvoiceLineItem_Invoice" FOREIGN KEY ("InvoiceID") REFERENCES "Invoice"("InvoiceID");


--
-- TOC entry 7773 (class 2606 OID 48325)
-- Name: fk_InvoiceLineItem_PlanSubscriptionPeriod; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InvoiceLineItem"
    ADD CONSTRAINT "fk_InvoiceLineItem_PlanSubscriptionPeriod" FOREIGN KEY ("PlanSubscriptionPeriodID") REFERENCES "PlanSubscriptionPeriod"("PlanSubscriptionPeriodID");


--
-- TOC entry 7774 (class 2606 OID 48330)
-- Name: fk_InvoiceLineItem_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InvoiceLineItem"
    ADD CONSTRAINT "fk_InvoiceLineItem_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 7775 (class 2606 OID 48335)
-- Name: fk_InvoiceLog_Invoice; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InvoiceProcessLog"
    ADD CONSTRAINT "fk_InvoiceLog_Invoice" FOREIGN KEY ("InvoiceID") REFERENCES "Invoice"("InvoiceID");


--
-- TOC entry 7776 (class 2606 OID 48340)
-- Name: fk_InvoiceLog_Notification; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InvoiceProcessLog"
    ADD CONSTRAINT "fk_InvoiceLog_Notification" FOREIGN KEY ("NotificationID") REFERENCES "Notification"("NotificationID");


--
-- TOC entry 7777 (class 2606 OID 48345)
-- Name: fk_InvoiceProcessLog_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InvoiceProcessLog"
    ADD CONSTRAINT "fk_InvoiceProcessLog_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 7778 (class 2606 OID 48350)
-- Name: fk_InvoiceProcessLog_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "InvoiceProcessLog"
    ADD CONSTRAINT "fk_InvoiceProcessLog_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 7765 (class 2606 OID 48355)
-- Name: fk_Invoice_CountryCode; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Invoice"
    ADD CONSTRAINT "fk_Invoice_CountryCode" FOREIGN KEY ("CountryCode") REFERENCES "CountryCode"("CountryCode");


--
-- TOC entry 7766 (class 2606 OID 48360)
-- Name: fk_Invoice_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Invoice"
    ADD CONSTRAINT "fk_Invoice_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7767 (class 2606 OID 48365)
-- Name: fk_Invoice_OrganisationAccountingPeriod; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Invoice"
    ADD CONSTRAINT "fk_Invoice_OrganisationAccountingPeriod" FOREIGN KEY ("OrganisationAccountingPeriodID", "OrganisationID") REFERENCES "OrganisationAccountingPeriod"("OrganisationAccountingPeriodID", "OrganisationID");


--
-- TOC entry 7768 (class 2606 OID 48370)
-- Name: fk_Invoice_ShoppingCart; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Invoice"
    ADD CONSTRAINT "fk_Invoice_ShoppingCart" FOREIGN KEY ("ShoppingCartID") REFERENCES "ShoppingCart"("ShoppingCartID");


--
-- TOC entry 7769 (class 2606 OID 48375)
-- Name: fk_Invoice_UserAccountOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Invoice"
    ADD CONSTRAINT "fk_Invoice_UserAccountOrganisation" FOREIGN KEY ("UserAccountOrganisationID") REFERENCES "UserAccountOrganisation"("UserAccountOrganisationID");


--
-- TOC entry 7779 (class 2606 OID 48380)
-- Name: fk_LedgerAccountBalance_LedgerAccount; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "LedgerAccountBalance"
    ADD CONSTRAINT "fk_LedgerAccountBalance_LedgerAccount" FOREIGN KEY ("LedgerAccountID") REFERENCES "OrganisationLedgerAccount"("OrganisationLedgerAccountID");


--
-- TOC entry 7780 (class 2606 OID 48385)
-- Name: fk_LedgerAccountTransaction_LedgerAccount; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "LedgerAccountTransaction"
    ADD CONSTRAINT "fk_LedgerAccountTransaction_LedgerAccount" FOREIGN KEY ("LedgerAccountID") REFERENCES "OrganisationLedgerAccount"("OrganisationLedgerAccountID");


--
-- TOC entry 7781 (class 2606 OID 48390)
-- Name: fk_LedgerAccountTransaction_TransactionOrder; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "LedgerAccountTransaction"
    ADD CONSTRAINT "fk_LedgerAccountTransaction_TransactionOrder" FOREIGN KEY ("TransactionOrderID") REFERENCES "TransactionOrder"("TransactionOrderID");


--
-- TOC entry 7901 (class 2606 OID 48395)
-- Name: fk_LedgerAccount_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationLedgerAccount"
    ADD CONSTRAINT "fk_LedgerAccount_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7803 (class 2606 OID 48400)
-- Name: fk_Module333Dependency_Module; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleDependency"
    ADD CONSTRAINT "fk_Module333Dependency_Module" FOREIGN KEY ("DependencyID", "DependencyVersionNumber") REFERENCES "Module"("ModuleID", "ModuleVersionNumber");


--
-- TOC entry 7787 (class 2606 OID 48405)
-- Name: fk_ModuleArtefactTemplate_ArtefactTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleArtefactTemplate"
    ADD CONSTRAINT "fk_ModuleArtefactTemplate_ArtefactTemplate" FOREIGN KEY ("ArtefactTemplateID", "ArtefactTemplateVersionNumber") REFERENCES "ArtefactTemplate"("ArtefactTemplateID", "ArtefactTemplateVersionNumber");


--
-- TOC entry 7788 (class 2606 OID 48410)
-- Name: fk_ModuleArtefactTemplate_ModuleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleArtefactTemplate"
    ADD CONSTRAINT "fk_ModuleArtefactTemplate_ModuleTemplate" FOREIGN KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber") REFERENCES "ModuleTemplate"("ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 7785 (class 2606 OID 48415)
-- Name: fk_ModuleArtefact_Artefact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleArtefact"
    ADD CONSTRAINT "fk_ModuleArtefact_Artefact" FOREIGN KEY ("ArtefactID", "ArtefactVersionNumber") REFERENCES "Artefact"("ArtefactID", "ArtefactVersionNumber");


--
-- TOC entry 7786 (class 2606 OID 48420)
-- Name: fk_ModuleArtefact_Module; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleArtefact"
    ADD CONSTRAINT "fk_ModuleArtefact_Module" FOREIGN KEY ("ModuleID", "ModuleVersionNumber") REFERENCES "Module"("ModuleID", "ModuleVersionNumber");


--
-- TOC entry 7796 (class 2606 OID 48425)
-- Name: fk_ModuleClaimTemplate_ModuleRoleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleClaimTemplate"
    ADD CONSTRAINT "fk_ModuleClaimTemplate_ModuleRoleTemplate" FOREIGN KEY ("ModuleRoleID") REFERENCES "ModuleRoleTemplate"("RoleID");


--
-- TOC entry 7797 (class 2606 OID 48430)
-- Name: fk_ModuleClaimTemplate_Role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleClaimTemplate"
    ADD CONSTRAINT "fk_ModuleClaimTemplate_Role" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 7842 (class 2606 OID 48435)
-- Name: fk_ModuleClaim_ModuleRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructClaimTemplate"
    ADD CONSTRAINT "fk_ModuleClaim_ModuleRole" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 7789 (class 2606 OID 48440)
-- Name: fk_ModuleClaim_ModuleRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleClaim"
    ADD CONSTRAINT "fk_ModuleClaim_ModuleRole" FOREIGN KEY ("ModuleRoleID") REFERENCES "ModuleRole"("RoleID");


--
-- TOC entry 7790 (class 2606 OID 48445)
-- Name: fk_ModuleClaim_Role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleClaim"
    ADD CONSTRAINT "fk_ModuleClaim_Role" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 7805 (class 2606 OID 48450)
-- Name: fk_ModuleDependencyTemplate_ModuleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleDependencyTemplate"
    ADD CONSTRAINT "fk_ModuleDependencyTemplate_ModuleTemplate" FOREIGN KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber") REFERENCES "ModuleTemplate"("ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 7804 (class 2606 OID 48455)
-- Name: fk_ModuleDependency_Module; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleDependency"
    ADD CONSTRAINT "fk_ModuleDependency_Module" FOREIGN KEY ("ModuleID", "ModuleVersionNumber") REFERENCES "Module"("ModuleID", "ModuleVersionNumber");


--
-- TOC entry 7808 (class 2606 OID 48460)
-- Name: fk_ModuleNotificationConstructTemplate_ModuleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleNotificationConstructTemplate"
    ADD CONSTRAINT "fk_ModuleNotificationConstructTemplate_ModuleTemplate" FOREIGN KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber") REFERENCES "ModuleTemplate"("ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 7809 (class 2606 OID 48465)
-- Name: fk_ModuleNotificationConstructTemplate_NotificationConstructTem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleNotificationConstructTemplate"
    ADD CONSTRAINT "fk_ModuleNotificationConstructTemplate_NotificationConstructTem" FOREIGN KEY ("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber") REFERENCES "NotificationConstructTemplate"("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber");


--
-- TOC entry 7806 (class 2606 OID 48470)
-- Name: fk_ModuleNotificationConstruct_Module; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleNotificationConstruct"
    ADD CONSTRAINT "fk_ModuleNotificationConstruct_Module" FOREIGN KEY ("ModuleID", "ModuleVersionNumber") REFERENCES "Module"("ModuleID", "ModuleVersionNumber");


--
-- TOC entry 7807 (class 2606 OID 48475)
-- Name: fk_ModuleNotificationConstruct_NotificationConstruct; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleNotificationConstruct"
    ADD CONSTRAINT "fk_ModuleNotificationConstruct_NotificationConstruct" FOREIGN KEY ("NotificationConstructID", "NotificationConstructVersionNumber") REFERENCES "NotificationConstruct"("NotificationConstructID", "NotificationConstructVersionNumber");


--
-- TOC entry 7811 (class 2606 OID 48480)
-- Name: fk_ModulePluginTemplate_ModuleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModulePluginTemplate"
    ADD CONSTRAINT "fk_ModulePluginTemplate_ModuleTemplate" FOREIGN KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber") REFERENCES "ModuleTemplate"("ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 7812 (class 2606 OID 48485)
-- Name: fk_ModulePluginTemplate_PluginTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModulePluginTemplate"
    ADD CONSTRAINT "fk_ModulePluginTemplate_PluginTemplate" FOREIGN KEY ("PluginTemplateID", "PluginVersionNumber") REFERENCES "PluginTemplate"("PluginTemplateID", "PluginTemplateVersionNumber");


--
-- TOC entry 7810 (class 2606 OID 48490)
-- Name: fk_ModulePlugin_Module; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModulePlugin"
    ADD CONSTRAINT "fk_ModulePlugin_Module" FOREIGN KEY ("ModuleID", "ModuleVersionNumber") REFERENCES "Module"("ModuleID", "ModuleVersionNumber");


--
-- TOC entry 7815 (class 2606 OID 48495)
-- Name: fk_ModuleProductTemplate_ModuleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleProductTemplate"
    ADD CONSTRAINT "fk_ModuleProductTemplate_ModuleTemplate" FOREIGN KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber") REFERENCES "ModuleTemplate"("ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 7816 (class 2606 OID 48500)
-- Name: fk_ModuleProductTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleProductTemplate"
    ADD CONSTRAINT "fk_ModuleProductTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 7813 (class 2606 OID 48505)
-- Name: fk_ModuleProduct_Module; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleProduct"
    ADD CONSTRAINT "fk_ModuleProduct_Module" FOREIGN KEY ("ModuleID", "ModuleVersionNumber") REFERENCES "Module"("ModuleID", "ModuleVersionNumber");


--
-- TOC entry 7814 (class 2606 OID 48510)
-- Name: fk_ModuleProduct_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleProduct"
    ADD CONSTRAINT "fk_ModuleProduct_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 7798 (class 2606 OID 48515)
-- Name: fk_ModuleRoleClaimTemplate_ModuleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleClaimTemplate"
    ADD CONSTRAINT "fk_ModuleRoleClaimTemplate_ModuleTemplate" FOREIGN KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber") REFERENCES "ModuleTemplate"("ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 7799 (class 2606 OID 48520)
-- Name: fk_ModuleRoleClaimTemplate_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleClaimTemplate"
    ADD CONSTRAINT "fk_ModuleRoleClaimTemplate_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 7800 (class 2606 OID 48525)
-- Name: fk_ModuleRoleClaimTemplate_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleClaimTemplate"
    ADD CONSTRAINT "fk_ModuleRoleClaimTemplate_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 7801 (class 2606 OID 48530)
-- Name: fk_ModuleRoleClaimTemplate_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleClaimTemplate"
    ADD CONSTRAINT "fk_ModuleRoleClaimTemplate_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 7802 (class 2606 OID 48535)
-- Name: fk_ModuleRoleClaimTemplate_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleClaimTemplate"
    ADD CONSTRAINT "fk_ModuleRoleClaimTemplate_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 7791 (class 2606 OID 48540)
-- Name: fk_ModuleRoleClaim_Module; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleClaim"
    ADD CONSTRAINT "fk_ModuleRoleClaim_Module" FOREIGN KEY ("ModuleID", "ModuleVersionNumber") REFERENCES "Module"("ModuleID", "ModuleVersionNumber");


--
-- TOC entry 7792 (class 2606 OID 48545)
-- Name: fk_ModuleRoleClaim_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleClaim"
    ADD CONSTRAINT "fk_ModuleRoleClaim_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 7793 (class 2606 OID 48550)
-- Name: fk_ModuleRoleClaim_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleClaim"
    ADD CONSTRAINT "fk_ModuleRoleClaim_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 7794 (class 2606 OID 48555)
-- Name: fk_ModuleRoleClaim_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleClaim"
    ADD CONSTRAINT "fk_ModuleRoleClaim_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 7795 (class 2606 OID 48560)
-- Name: fk_ModuleRoleClaim_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleClaim"
    ADD CONSTRAINT "fk_ModuleRoleClaim_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 7817 (class 2606 OID 48565)
-- Name: fk_ModuleRoleTemplate_ModuleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleRoleTemplate"
    ADD CONSTRAINT "fk_ModuleRoleTemplate_ModuleTemplate" FOREIGN KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber") REFERENCES "ModuleTemplate"("ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 7819 (class 2606 OID 48570)
-- Name: fk_ModuleSettingTemplate_ModuleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleSettingTemplate"
    ADD CONSTRAINT "fk_ModuleSettingTemplate_ModuleTemplate" FOREIGN KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber") REFERENCES "ModuleTemplate"("ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 7818 (class 2606 OID 48575)
-- Name: fk_ModuleSetting_Module; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleSetting"
    ADD CONSTRAINT "fk_ModuleSetting_Module" FOREIGN KEY ("ModuleID", "ModuleVersionNumber") REFERENCES "Module"("ModuleID", "ModuleVersionNumber");


--
-- TOC entry 7822 (class 2606 OID 48580)
-- Name: fk_ModuleStatusTypeTemplate_ModuleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleStatusTypeTemplate"
    ADD CONSTRAINT "fk_ModuleStatusTypeTemplate_ModuleTemplate" FOREIGN KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber") REFERENCES "ModuleTemplate"("ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 7823 (class 2606 OID 48585)
-- Name: fk_ModuleStatusTypeTemplate_StatusTypeTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleStatusTypeTemplate"
    ADD CONSTRAINT "fk_ModuleStatusTypeTemplate_StatusTypeTemplate" FOREIGN KEY ("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber") REFERENCES "StatusTypeTemplate"("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber");


--
-- TOC entry 7820 (class 2606 OID 48590)
-- Name: fk_ModuleStatusType_Module; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleStatusType"
    ADD CONSTRAINT "fk_ModuleStatusType_Module" FOREIGN KEY ("ModuleID", "ModuleVersionNumber") REFERENCES "Module"("ModuleID", "ModuleVersionNumber");


--
-- TOC entry 7821 (class 2606 OID 48595)
-- Name: fk_ModuleStatusType_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleStatusType"
    ADD CONSTRAINT "fk_ModuleStatusType_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 7826 (class 2606 OID 48600)
-- Name: fk_ModuleSubscriptionTemplate_ModuleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleSubscriptionTemplate"
    ADD CONSTRAINT "fk_ModuleSubscriptionTemplate_ModuleTemplate" FOREIGN KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber") REFERENCES "ModuleTemplate"("ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 7824 (class 2606 OID 48605)
-- Name: fk_ModuleSubscription_Module; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleSubscription"
    ADD CONSTRAINT "fk_ModuleSubscription_Module" FOREIGN KEY ("ModuleID", "ModuleVersionNumber") REFERENCES "Module"("ModuleID", "ModuleVersionNumber");


--
-- TOC entry 7825 (class 2606 OID 48610)
-- Name: fk_ModuleSubscription_PlanSubscription; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleSubscription"
    ADD CONSTRAINT "fk_ModuleSubscription_PlanSubscription" FOREIGN KEY ("PlanSubscriptionID", "PlanSubscriptionVersionNumber") REFERENCES "PlanSubscription"("PlanSubscriptionID", "PlanSubscriptionVersionNumber");


--
-- TOC entry 7829 (class 2606 OID 48615)
-- Name: fk_ModuleWorkflowTarget_ModuleWorkflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleWorkflowTarget"
    ADD CONSTRAINT "fk_ModuleWorkflowTarget_ModuleWorkflow" FOREIGN KEY ("ModuleWorkflowID") REFERENCES "ModuleWorkflow"("ModuleWorkflowID");


--
-- TOC entry 7830 (class 2606 OID 48620)
-- Name: fk_ModuleWorkflowTarget_ModuleWorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleWorkflowTargetTemplate"
    ADD CONSTRAINT "fk_ModuleWorkflowTarget_ModuleWorkflowTemplate" FOREIGN KEY ("ModuleWorkflowTemplateID") REFERENCES "ModuleWorkflowTemplate"("ModuleWorkflowTemplateID");


--
-- TOC entry 7831 (class 2606 OID 48625)
-- Name: fk_ModuleWorkflowTemplate_ModuleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleWorkflowTemplate"
    ADD CONSTRAINT "fk_ModuleWorkflowTemplate_ModuleTemplate" FOREIGN KEY ("ModuleTemplateID", "ModuleTemplateVersionNumber") REFERENCES "ModuleTemplate"("ModuleTemplateID", "ModuleTemplateVersionNumber");


--
-- TOC entry 7832 (class 2606 OID 48630)
-- Name: fk_ModuleWorkflowTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleWorkflowTemplate"
    ADD CONSTRAINT "fk_ModuleWorkflowTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 7827 (class 2606 OID 48635)
-- Name: fk_ModuleWorkflow_Module; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleWorkflow"
    ADD CONSTRAINT "fk_ModuleWorkflow_Module" FOREIGN KEY ("ModuleID", "ModuleVersionNumber") REFERENCES "Module"("ModuleID", "ModuleVersionNumber");


--
-- TOC entry 7828 (class 2606 OID 48640)
-- Name: fk_ModuleWorkflow_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ModuleWorkflow"
    ADD CONSTRAINT "fk_ModuleWorkflow_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7843 (class 2606 OID 48645)
-- Name: fk_NotificationConstificaoleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructClaimTemplate"
    ADD CONSTRAINT "fk_NotificationConstificaoleTemplate" FOREIGN KEY ("NotificationConstructRoleID") REFERENCES "NotificationConstructRoleTemplate"("NotificationConstructRoleID");


--
-- TOC entry 7844 (class 2606 OID 48650)
-- Name: fk_NotificationConstructClaimTemplate_NotificationConstructTemp; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructClaimTemplate"
    ADD CONSTRAINT "fk_NotificationConstructClaimTemplate_NotificationConstructTemp" FOREIGN KEY ("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber") REFERENCES "NotificationConstructTemplate"("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber");


--
-- TOC entry 7835 (class 2606 OID 48655)
-- Name: fk_NotificationConstructClaim_NotificationConstruct; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructClaim"
    ADD CONSTRAINT "fk_NotificationConstructClaim_NotificationConstruct" FOREIGN KEY ("NotificationConstructID", "NotificationConstructVersionNumber") REFERENCES "NotificationConstruct"("NotificationConstructID", "NotificationConstructVersionNumber");


--
-- TOC entry 7836 (class 2606 OID 48660)
-- Name: fk_NotificationConstructClaim_Role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructClaim"
    ADD CONSTRAINT "fk_NotificationConstructClaim_Role" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 7850 (class 2606 OID 48665)
-- Name: fk_NotificationConstructDataTemplate_NotificationConstructTempl; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructDataTemplate"
    ADD CONSTRAINT "fk_NotificationConstructDataTemplate_NotificationConstructTempl" FOREIGN KEY ("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber") REFERENCES "NotificationConstructTemplate"("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber");


--
-- TOC entry 7849 (class 2606 OID 48670)
-- Name: fk_NotificationConstructData_NotificationConstruct; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructData"
    ADD CONSTRAINT "fk_NotificationConstructData_NotificationConstruct" FOREIGN KEY ("NotificationConstructID", "NotificationConstructVersionNumber") REFERENCES "NotificationConstruct"("NotificationConstructID", "NotificationConstructVersionNumber");


--
-- TOC entry 7860 (class 2606 OID 48675)
-- Name: fk_NotificationConstructGroupNotificationConstructTemplate_Noti; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructGroupNotificationConstructTemplate"
    ADD CONSTRAINT "fk_NotificationConstructGroupNotificationConstructTemplate_Noti" FOREIGN KEY ("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber") REFERENCES "NotificationConstructTemplate"("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber");


--
-- TOC entry 7855 (class 2606 OID 48680)
-- Name: fk_NotificationConstructGroupNotificationConstruct_Notification; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructGroupNotificationConstruct"
    ADD CONSTRAINT "fk_NotificationConstructGroupNotificationConstruct_Notification" FOREIGN KEY ("NotificationConstructID", "NotificationConstructVersionNumber") REFERENCES "NotificationConstruct"("NotificationConstructID", "NotificationConstructVersionNumber");


--
-- TOC entry 7862 (class 2606 OID 48685)
-- Name: fk_NotificationConstructParameterTemplate_NotificationConstruct; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructParameterTemplate"
    ADD CONSTRAINT "fk_NotificationConstructParameterTemplate_NotificationConstruct" FOREIGN KEY ("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber") REFERENCES "NotificationConstructTemplate"("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber");


--
-- TOC entry 7861 (class 2606 OID 48690)
-- Name: fk_NotificationConstructParameter_NotificationConstruct; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructParameter"
    ADD CONSTRAINT "fk_NotificationConstructParameter_NotificationConstruct" FOREIGN KEY ("NotificationConstructID", "NotificationConstructVersionNumber") REFERENCES "NotificationConstruct"("NotificationConstructID", "NotificationConstructVersionNumber");


--
-- TOC entry 7845 (class 2606 OID 48695)
-- Name: fk_NotificationConstructRoleClaimTemplate_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructClaimTemplate"
    ADD CONSTRAINT "fk_NotificationConstructRoleClaimTemplate_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 7846 (class 2606 OID 48700)
-- Name: fk_NotificationConstructRoleClaimTemplate_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructClaimTemplate"
    ADD CONSTRAINT "fk_NotificationConstructRoleClaimTemplate_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 7847 (class 2606 OID 48705)
-- Name: fk_NotificationConstructRoleClaimTemplate_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructClaimTemplate"
    ADD CONSTRAINT "fk_NotificationConstructRoleClaimTemplate_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 7848 (class 2606 OID 48710)
-- Name: fk_NotificationConstructRoleClaimTemplate_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructClaimTemplate"
    ADD CONSTRAINT "fk_NotificationConstructRoleClaimTemplate_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 7837 (class 2606 OID 48715)
-- Name: fk_NotificationConstructRoleClaim_NotificationConstructRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructClaim"
    ADD CONSTRAINT "fk_NotificationConstructRoleClaim_NotificationConstructRole" FOREIGN KEY ("NotificationRoleConstructID") REFERENCES "NotificationConstructRole"("NotificationRoleConstructID");


--
-- TOC entry 7838 (class 2606 OID 48720)
-- Name: fk_NotificationConstructRoleClaim_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructClaim"
    ADD CONSTRAINT "fk_NotificationConstructRoleClaim_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 7839 (class 2606 OID 48725)
-- Name: fk_NotificationConstructRoleClaim_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructClaim"
    ADD CONSTRAINT "fk_NotificationConstructRoleClaim_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 7840 (class 2606 OID 48730)
-- Name: fk_NotificationConstructRoleClaim_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructClaim"
    ADD CONSTRAINT "fk_NotificationConstructRoleClaim_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 7841 (class 2606 OID 48735)
-- Name: fk_NotificationConstructRoleClaim_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructClaim"
    ADD CONSTRAINT "fk_NotificationConstructRoleClaim_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 7864 (class 2606 OID 48740)
-- Name: fk_NotificationConstructRoleTemplate_NotificationConstructTempl; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructRoleTemplate"
    ADD CONSTRAINT "fk_NotificationConstructRoleTemplate_NotificationConstructTempl" FOREIGN KEY ("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber") REFERENCES "NotificationConstructTemplate"("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber");


--
-- TOC entry 7863 (class 2606 OID 48745)
-- Name: fk_NotificationConstructRole_NotificationConstruct; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructRole"
    ADD CONSTRAINT "fk_NotificationConstructRole_NotificationConstruct" FOREIGN KEY ("NotificationConstructID", "NotificationConstructVersionNumber") REFERENCES "NotificationConstruct"("NotificationConstructID", "NotificationConstructVersionNumber");


--
-- TOC entry 7868 (class 2606 OID 48750)
-- Name: fk_NotificationConstructTargetTemplate_NotificationConstructTem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructTargetTemplate"
    ADD CONSTRAINT "fk_NotificationConstructTargetTemplate_NotificationConstructTem" FOREIGN KEY ("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber") REFERENCES "NotificationConstructTemplate"("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber");


--
-- TOC entry 7869 (class 2606 OID 48755)
-- Name: fk_NotificationConstructTargetTemplate_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructTargetTemplate"
    ADD CONSTRAINT "fk_NotificationConstructTargetTemplate_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7870 (class 2606 OID 48760)
-- Name: fk_NotificationConstructTargetTemplate_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructTargetTemplate"
    ADD CONSTRAINT "fk_NotificationConstructTargetTemplate_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7865 (class 2606 OID 48765)
-- Name: fk_NotificationConstructTarget_NotificationConstruct; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructTarget"
    ADD CONSTRAINT "fk_NotificationConstructTarget_NotificationConstruct" FOREIGN KEY ("NotificationConstructID", "NotificationConstructVersionNumber") REFERENCES "NotificationConstruct"("NotificationConstructID", "NotificationConstructVersionNumber");


--
-- TOC entry 7866 (class 2606 OID 48770)
-- Name: fk_NotificationConstructTarget_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructTarget"
    ADD CONSTRAINT "fk_NotificationConstructTarget_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7867 (class 2606 OID 48775)
-- Name: fk_NotificationConstructTarget_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructTarget"
    ADD CONSTRAINT "fk_NotificationConstructTarget_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7871 (class 2606 OID 48780)
-- Name: fk_NotificationConstructTemplate_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstructTemplate"
    ADD CONSTRAINT "fk_NotificationConstructTemplate_Organisation" FOREIGN KEY ("OwnerOrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7834 (class 2606 OID 48785)
-- Name: fk_NotificationConstruct_NotificationConstructTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationConstruct"
    ADD CONSTRAINT "fk_NotificationConstruct_NotificationConstructTemplate" FOREIGN KEY ("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber") REFERENCES "NotificationConstructTemplate"("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber");


--
-- TOC entry 7874 (class 2606 OID 48790)
-- Name: fk_NotificationRecipientLog_NotificationRecipient; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationRecipientLog"
    ADD CONSTRAINT "fk_NotificationRecipientLog_NotificationRecipient" FOREIGN KEY ("NotificationRecipientID") REFERENCES "NotificationRecipient"("NotificationRecipientID");


--
-- TOC entry 7872 (class 2606 OID 48795)
-- Name: fk_NotificationRecipient_Notification; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationRecipient"
    ADD CONSTRAINT "fk_NotificationRecipient_Notification" FOREIGN KEY ("NotificationID") REFERENCES "Notification"("NotificationID");


--
-- TOC entry 7873 (class 2606 OID 48800)
-- Name: fk_NotificationRecipient_UserAccountOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "NotificationRecipient"
    ADD CONSTRAINT "fk_NotificationRecipient_UserAccountOrganisation" FOREIGN KEY ("UserAccountOrganisationID") REFERENCES "UserAccountOrganisation"("UserAccountOrganisationID");


--
-- TOC entry 7833 (class 2606 OID 48805)
-- Name: fk_Notification_NotificationConstruct; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Notification"
    ADD CONSTRAINT "fk_Notification_NotificationConstruct" FOREIGN KEY ("NotificationConstructID", "NotificationConstructVersionNumber") REFERENCES "NotificationConstruct"("NotificationConstructID", "NotificationConstructVersionNumber");


--
-- TOC entry 8177 (class 2606 OID 48810)
-- Name: fk_OrderItem_Order; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "TransactionOrderItem"
    ADD CONSTRAINT "fk_OrderItem_Order" FOREIGN KEY ("OrderID") REFERENCES "TransactionOrder"("TransactionOrderID");


--
-- TOC entry 7879 (class 2606 OID 48815)
-- Name: fk_OrganisationAccountingPeriod_GlobalAccountingPeriod; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationAccountingPeriod"
    ADD CONSTRAINT "fk_OrganisationAccountingPeriod_GlobalAccountingPeriod" FOREIGN KEY ("GlobalAccountingPeriodID") REFERENCES "GlobalAccountingPeriod"("GlobalAccountingPeriodID");


--
-- TOC entry 7880 (class 2606 OID 48820)
-- Name: fk_OrganisationArtefact_Artefact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationArtefact"
    ADD CONSTRAINT "fk_OrganisationArtefact_Artefact" FOREIGN KEY ("ArtefactID", "ArtefactVersionNumber") REFERENCES "Artefact"("ArtefactID", "ArtefactVersionNumber");


--
-- TOC entry 7881 (class 2606 OID 48825)
-- Name: fk_OrganisationArtefact_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationArtefact"
    ADD CONSTRAINT "fk_OrganisationArtefact_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7882 (class 2606 OID 48830)
-- Name: fk_OrganisationBankAccount_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationBankAccount"
    ADD CONSTRAINT "fk_OrganisationBankAccount_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7883 (class 2606 OID 48835)
-- Name: fk_OrganisationDetail_OrganisationDefaultLogo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationDetail"
    ADD CONSTRAINT "fk_OrganisationDetail_OrganisationDefaultLogo" FOREIGN KEY ("OrganisationDefaultLogoID") REFERENCES "AttachmentDetail"("AttachmentDetailID");


--
-- TOC entry 7884 (class 2606 OID 48840)
-- Name: fk_OrganisationDetail_Organisation_1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationDetail"
    ADD CONSTRAINT "fk_OrganisationDetail_Organisation_1" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7888 (class 2606 OID 48845)
-- Name: fk_OrganisationDirectDebitMandateSignoff_NotificationRecipient; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationDirectDebitMandateProcessLog"
    ADD CONSTRAINT "fk_OrganisationDirectDebitMandateSignoff_NotificationRecipient" FOREIGN KEY ("NotificationRecipientID") REFERENCES "NotificationRecipient"("NotificationRecipientID");


--
-- TOC entry 7889 (class 2606 OID 48850)
-- Name: fk_OrganisationDirectDebitMandateSignoff_OrganisationDirectDebi; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationDirectDebitMandateProcessLog"
    ADD CONSTRAINT "fk_OrganisationDirectDebitMandateSignoff_OrganisationDirectDebi" FOREIGN KEY ("OrganisationDirectDebitMandateID") REFERENCES "OrganisationDirectDebitMandate"("OrganisationDirectDebitMandateID");


--
-- TOC entry 7890 (class 2606 OID 48855)
-- Name: fk_OrganisationDirectDebitMandateSignoff_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationDirectDebitMandateProcessLog"
    ADD CONSTRAINT "fk_OrganisationDirectDebitMandateSignoff_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 7891 (class 2606 OID 48860)
-- Name: fk_OrganisationDirectDebitMandateSignoff_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationDirectDebitMandateProcessLog"
    ADD CONSTRAINT "fk_OrganisationDirectDebitMandateSignoff_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 7885 (class 2606 OID 48865)
-- Name: fk_OrganisationDirectDebitMandate_DirectDebitMandate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationDirectDebitMandate"
    ADD CONSTRAINT "fk_OrganisationDirectDebitMandate_DirectDebitMandate" FOREIGN KEY ("DirectDebitMandateID", "DirectDebitMandateVersionNumber") REFERENCES "DirectDebitMandate"("DirectDebitMandateID", "DirectDebitMandateVersionNumber");


--
-- TOC entry 7886 (class 2606 OID 48870)
-- Name: fk_OrganisationDirectDebitMandate_Notification; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationDirectDebitMandate"
    ADD CONSTRAINT "fk_OrganisationDirectDebitMandate_Notification" FOREIGN KEY ("NotificationID") REFERENCES "Notification"("NotificationID");


--
-- TOC entry 7887 (class 2606 OID 48875)
-- Name: fk_OrganisationDirectDebitMandate_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationDirectDebitMandate"
    ADD CONSTRAINT "fk_OrganisationDirectDebitMandate_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7892 (class 2606 OID 48880)
-- Name: fk_OrganisationDiscount_Discount; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationDiscount"
    ADD CONSTRAINT "fk_OrganisationDiscount_Discount" FOREIGN KEY ("DiscountID", "DiscountVersionNumber") REFERENCES "Discount"("DiscountID", "DiscountVersionNumber");


--
-- TOC entry 7893 (class 2606 OID 48885)
-- Name: fk_OrganisationDiscount_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationDiscount"
    ADD CONSTRAINT "fk_OrganisationDiscount_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7902 (class 2606 OID 48890)
-- Name: fk_OrganisationFinancialDetail_GlobalPaymentMethod; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationPaymentMethod"
    ADD CONSTRAINT "fk_OrganisationFinancialDetail_GlobalPaymentMethod" FOREIGN KEY ("GlobalPaymentMethodID") REFERENCES "GlobalPaymentMethod"("GlobalPaymentMethodID");


--
-- TOC entry 7903 (class 2606 OID 48895)
-- Name: fk_OrganisationFinancialDetail_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationPaymentMethod"
    ADD CONSTRAINT "fk_OrganisationFinancialDetail_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7904 (class 2606 OID 48900)
-- Name: fk_OrganisationFinancialDetail_OrganisationBankAccount; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationPaymentMethod"
    ADD CONSTRAINT "fk_OrganisationFinancialDetail_OrganisationBankAccount" FOREIGN KEY ("OrganisationBankAccountId") REFERENCES "OrganisationBankAccount"("OrganisationBankAccountId");


--
-- TOC entry 7895 (class 2606 OID 48905)
-- Name: fk_OrganisationFinancialDetail_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationFinancialDetail"
    ADD CONSTRAINT "fk_OrganisationFinancialDetail_StatusType" FOREIGN KEY ("FinancialStatusTypeID", "FinancialStatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 7896 (class 2606 OID 48910)
-- Name: fk_OrganisationFinancialDetail_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationFinancialDetail"
    ADD CONSTRAINT "fk_OrganisationFinancialDetail_StatusTypeValue" FOREIGN KEY ("FinancialStatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 7898 (class 2606 OID 48915)
-- Name: fk_OrganisationGroupOrganisationRole_OrganisationGroup; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationGroupRole"
    ADD CONSTRAINT "fk_OrganisationGroupOrganisationRole_OrganisationGroup" FOREIGN KEY ("OrganisationGroupID") REFERENCES "OrganisationGroup"("OrganisationGroupID");


--
-- TOC entry 7899 (class 2606 OID 48920)
-- Name: fk_OrganisationGroupOrganisationRole_OrganisationRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationGroupRole"
    ADD CONSTRAINT "fk_OrganisationGroupOrganisationRole_OrganisationRole" FOREIGN KEY ("OrganisationRoleID") REFERENCES "OrganisationRole"("OrganisationRoleID");


--
-- TOC entry 7900 (class 2606 OID 48925)
-- Name: fk_OrganisationInsuranceDetails_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationInsuranceDetails"
    ADD CONSTRAINT "fk_OrganisationInsuranceDetails_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7905 (class 2606 OID 48930)
-- Name: fk_OrganisationOfflinePaymentMethod_OrganisationDirectDebitMand; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationPaymentMethod"
    ADD CONSTRAINT "fk_OrganisationOfflinePaymentMethod_OrganisationDirectDebitMand" FOREIGN KEY ("OrganisationDirectDebitMandateID") REFERENCES "OrganisationDirectDebitMandate"("OrganisationDirectDebitMandateID");


--
-- TOC entry 7906 (class 2606 OID 48935)
-- Name: fk_OrganisationPaymentMethod_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationPaymentMethod"
    ADD CONSTRAINT "fk_OrganisationPaymentMethod_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 7907 (class 2606 OID 48940)
-- Name: fk_OrganisationPaymentMethod_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationPaymentMethod"
    ADD CONSTRAINT "fk_OrganisationPaymentMethod_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 7908 (class 2606 OID 48945)
-- Name: fk_OrganisationPlanSubscription_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationPlanSubscription"
    ADD CONSTRAINT "fk_OrganisationPlanSubscription_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7909 (class 2606 OID 48950)
-- Name: fk_OrganisationPlanSubscription_PlanSubscription; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationPlanSubscription"
    ADD CONSTRAINT "fk_OrganisationPlanSubscription_PlanSubscription" FOREIGN KEY ("PlanSubscriptionID", "PlanSubscriptionVersionNumber") REFERENCES "PlanSubscription"("PlanSubscriptionID", "PlanSubscriptionVersionNumber");


--
-- TOC entry 7910 (class 2606 OID 48955)
-- Name: fk_OrganisationProductPurchase_InvoiceLineItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationProductPurchase"
    ADD CONSTRAINT "fk_OrganisationProductPurchase_InvoiceLineItem" FOREIGN KEY ("InvoiceLineItemID") REFERENCES "InvoiceLineItem"("InvoiceLineItemID");


--
-- TOC entry 7911 (class 2606 OID 48960)
-- Name: fk_OrganisationProductPurchase_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationProductPurchase"
    ADD CONSTRAINT "fk_OrganisationProductPurchase_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7912 (class 2606 OID 48965)
-- Name: fk_OrganisationProductPurchase_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationProductPurchase"
    ADD CONSTRAINT "fk_OrganisationProductPurchase_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 7914 (class 2606 OID 48970)
-- Name: fk_OrganisationRoleClaim_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationRoleClaim"
    ADD CONSTRAINT "fk_OrganisationRoleClaim_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 7915 (class 2606 OID 48975)
-- Name: fk_OrganisationRoleClaim_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationRoleClaim"
    ADD CONSTRAINT "fk_OrganisationRoleClaim_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7916 (class 2606 OID 48980)
-- Name: fk_OrganisationRoleClaim_OrganisationRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationRoleClaim"
    ADD CONSTRAINT "fk_OrganisationRoleClaim_OrganisationRole" FOREIGN KEY ("OrganisationRoleID") REFERENCES "OrganisationRole"("OrganisationRoleID");


--
-- TOC entry 7917 (class 2606 OID 48985)
-- Name: fk_OrganisationRoleClaim_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationRoleClaim"
    ADD CONSTRAINT "fk_OrganisationRoleClaim_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 7918 (class 2606 OID 48990)
-- Name: fk_OrganisationRoleClaim_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationRoleClaim"
    ADD CONSTRAINT "fk_OrganisationRoleClaim_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 7919 (class 2606 OID 48995)
-- Name: fk_OrganisationRoleClaim_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationRoleClaim"
    ADD CONSTRAINT "fk_OrganisationRoleClaim_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 7920 (class 2606 OID 49000)
-- Name: fk_OrganisationSetting_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationSetting"
    ADD CONSTRAINT "fk_OrganisationSetting_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7921 (class 2606 OID 49005)
-- Name: fk_OrganisationShoppingCartBlueprint_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationShoppingCartBlueprint"
    ADD CONSTRAINT "fk_OrganisationShoppingCartBlueprint_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7922 (class 2606 OID 49010)
-- Name: fk_OrganisationShoppingCartBlueprint_ShoppingCartBlueprint; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationShoppingCartBlueprint"
    ADD CONSTRAINT "fk_OrganisationShoppingCartBlueprint_ShoppingCartBlueprint" FOREIGN KEY ("ShoppingCartBlueprintID") REFERENCES "ShoppingCartBlueprint"("ShoppingCartBlueprintID");


--
-- TOC entry 7926 (class 2606 OID 49015)
-- Name: fk_OrganisationStatusType_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationStatusType"
    ADD CONSTRAINT "fk_OrganisationStatusType_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7927 (class 2606 OID 49020)
-- Name: fk_OrganisationStatusType_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationStatusType"
    ADD CONSTRAINT "fk_OrganisationStatusType_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 7923 (class 2606 OID 49025)
-- Name: fk_OrganisationStatus_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationStatus"
    ADD CONSTRAINT "fk_OrganisationStatus_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7924 (class 2606 OID 49030)
-- Name: fk_OrganisationStatus_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationStatus"
    ADD CONSTRAINT "fk_OrganisationStatus_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 7925 (class 2606 OID 49035)
-- Name: fk_OrganisationStatus_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationStatus"
    ADD CONSTRAINT "fk_OrganisationStatus_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 8174 (class 2606 OID 49040)
-- Name: fk_OrganisationTaxRate_TaxRateTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "TaxRate"
    ADD CONSTRAINT "fk_OrganisationTaxRate_TaxRateTemplate" FOREIGN KEY ("TaxRateTemplateID") REFERENCES "TaxRateTemplate"("TaxRateTemplateID");


--
-- TOC entry 7930 (class 2606 OID 49045)
-- Name: fk_OrganisationTeamSetting_OrganisationTeam; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationTeamSetting"
    ADD CONSTRAINT "fk_OrganisationTeamSetting_OrganisationTeam" FOREIGN KEY ("OrganisationTeamID") REFERENCES "OrganisationTeam"("OrganisationTeamID");


--
-- TOC entry 7929 (class 2606 OID 49050)
-- Name: fk_OrganisationTeam_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationTeam"
    ADD CONSTRAINT "fk_OrganisationTeam_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7931 (class 2606 OID 49055)
-- Name: fk_OrganisationTradingName_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationTradingName"
    ADD CONSTRAINT "fk_OrganisationTradingName_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7933 (class 2606 OID 49060)
-- Name: fk_OrganisationUnitOrganisationGroup_OrganisationGroup; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationUnitOrganisationGroup"
    ADD CONSTRAINT "fk_OrganisationUnitOrganisationGroup_OrganisationGroup" FOREIGN KEY ("OrganisationGroupID") REFERENCES "OrganisationGroup"("OrganisationGroupID");


--
-- TOC entry 7934 (class 2606 OID 49065)
-- Name: fk_OrganisationUnitOrganisationGroup_OrganisationUnit; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationUnitOrganisationGroup"
    ADD CONSTRAINT "fk_OrganisationUnitOrganisationGroup_OrganisationUnit" FOREIGN KEY ("OrganisationUnitID") REFERENCES "OrganisationUnit"("OrganisationUnitID");


--
-- TOC entry 7935 (class 2606 OID 49070)
-- Name: fk_OrganisationUnitOrganisationRole_OrganisationRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationUnitOrganisationRole"
    ADD CONSTRAINT "fk_OrganisationUnitOrganisationRole_OrganisationRole" FOREIGN KEY ("OrganisationRoleID") REFERENCES "OrganisationRole"("OrganisationRoleID");


--
-- TOC entry 7936 (class 2606 OID 49075)
-- Name: fk_OrganisationUnitOrganisationRole_OrganisationUnit; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationUnitOrganisationRole"
    ADD CONSTRAINT "fk_OrganisationUnitOrganisationRole_OrganisationUnit" FOREIGN KEY ("OrganisationUnitID") REFERENCES "OrganisationUnit"("OrganisationUnitID");


--
-- TOC entry 7939 (class 2606 OID 49080)
-- Name: fk_OrganisationUserType_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationUserType"
    ADD CONSTRAINT "fk_OrganisationUserType_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7940 (class 2606 OID 49085)
-- Name: fk_OrganisationUserType_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationUserType"
    ADD CONSTRAINT "fk_OrganisationUserType_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 7941 (class 2606 OID 49090)
-- Name: fk_OrganisationWorkflow_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationWorkflow"
    ADD CONSTRAINT "fk_OrganisationWorkflow_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7942 (class 2606 OID 49095)
-- Name: fk_OrganisationWorkflow_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationWorkflow"
    ADD CONSTRAINT "fk_OrganisationWorkflow_Workflow" FOREIGN KEY ("WorkflowID", "VersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 7875 (class 2606 OID 49100)
-- Name: fk_Organisation_Contact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Organisation"
    ADD CONSTRAINT "fk_Organisation_Contact" FOREIGN KEY ("PrimaryContactID") REFERENCES "Contact"("ContactID");


--
-- TOC entry 7876 (class 2606 OID 49105)
-- Name: fk_Organisation_DefaultOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Organisation"
    ADD CONSTRAINT "fk_Organisation_DefaultOrganisation" FOREIGN KEY ("DefaultOrganisationID", "DefaultOrganisationVersionNumber") REFERENCES "DefaultOrganisation"("DefaultOrganisationID", "DefaultOrganisationVersionNumber");


--
-- TOC entry 7877 (class 2606 OID 49110)
-- Name: fk_Organisation_OrganisationType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Organisation"
    ADD CONSTRAINT "fk_Organisation_OrganisationType" FOREIGN KEY ("OrganisationTypeID") REFERENCES "OrganisationType"("OrganisationTypeID");


--
-- TOC entry 7950 (class 2606 OID 49115)
-- Name: fk_PackageProductRelationionship; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductRelationshipBlueprint"
    ADD CONSTRAINT "fk_PackageProductRelationionship" FOREIGN KEY ("PackageProductRelationshipID") REFERENCES "PackageProductRelationship"("PackageProductRelationshipID");


--
-- TOC entry 7951 (class 2606 OID 49120)
-- Name: fk_PackageProductRelationshipBlueprintTemplate_PackageProductRe; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductRelationshipBlueprintTemplate"
    ADD CONSTRAINT "fk_PackageProductRelationshipBlueprintTemplate_PackageProductRe" FOREIGN KEY ("PackageProductRelationshipTemplateID") REFERENCES "PackageProductRelationshipTemplate"("PackageProductRelationshipTemplateID");


--
-- TOC entry 7952 (class 2606 OID 49125)
-- Name: fk_PackageProductRelationshipTemplate_PackageProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductRelationshipTemplate"
    ADD CONSTRAINT "fk_PackageProductRelationshipTemplate_PackageProductTemplate" FOREIGN KEY ("PackageProductTemplateID", "PackageTemplateID", "PackageTemplateVersionNumber") REFERENCES "PackageProductTemplate"("PackageProductTemplateID", "PackageTemplateID", "PackageTemplateVersionNumber");


--
-- TOC entry 7953 (class 2606 OID 49130)
-- Name: fk_PackageProductRelationshipTemplate_ProductTemplate1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductRelationshipTemplate"
    ADD CONSTRAINT "fk_PackageProductRelationshipTemplate_ProductTemplate1" FOREIGN KEY ("ParentProductTemplateID", "ParentProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 7954 (class 2606 OID 49135)
-- Name: fk_PackageProductRelationshipTemplate_ProductTemplate22; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductRelationshipTemplate"
    ADD CONSTRAINT "fk_PackageProductRelationshipTemplate_ProductTemplate22" FOREIGN KEY ("ChildProductTemplateID", "ChildProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 7947 (class 2606 OID 49140)
-- Name: fk_PackageProductRelationship_PackageProduct; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductRelationship"
    ADD CONSTRAINT "fk_PackageProductRelationship_PackageProduct" FOREIGN KEY ("PackageProductID", "PackageID", "PackageVersionNumber") REFERENCES "PackageProduct"("PackageProductID", "PackageID", "PackageVersionNumber");


--
-- TOC entry 7948 (class 2606 OID 49145)
-- Name: fk_PackageProductRelationship_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductRelationship"
    ADD CONSTRAINT "fk_PackageProductRelationship_Product" FOREIGN KEY ("ParentProductID", "ParentProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 7949 (class 2606 OID 49150)
-- Name: fk_PackageProductRelationship_ProductChild; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductRelationship"
    ADD CONSTRAINT "fk_PackageProductRelationship_ProductChild" FOREIGN KEY ("ChildProductID", "ChildProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 7958 (class 2606 OID 49155)
-- Name: fk_PackageProductSpecificationBlueprintTemplate_PackageProductT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductSpecificationBlueprintTemplate"
    ADD CONSTRAINT "fk_PackageProductSpecificationBlueprintTemplate_PackageProductT" FOREIGN KEY ("PackageProductTemplateID", "PackageTemplateID", "PackageTemplateVersionNumber") REFERENCES "PackageProductTemplate"("PackageProductTemplateID", "PackageTemplateID", "PackageTemplateVersionNumber");


--
-- TOC entry 7959 (class 2606 OID 49160)
-- Name: fk_PackageProductSpecificationBlueprintTemplate_Prodlate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductSpecificationBlueprintTemplate"
    ADD CONSTRAINT "fk_PackageProductSpecificationBlueprintTemplate_Prodlate" FOREIGN KEY ("ProductSpecificationAttributeTemplate") REFERENCES "ProductSpecificationAttributeTemplate"("ProductSpecificationAttributeTemplateID");


--
-- TOC entry 7960 (class 2606 OID 49165)
-- Name: fk_PackageProductSpecificationBlueprintTemplate_Productlate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductSpecificationBlueprintTemplate"
    ADD CONSTRAINT "fk_PackageProductSpecificationBlueprintTemplate_Productlate" FOREIGN KEY ("DefaultProductSpecificationAttributeOptionTemplateID") REFERENCES "ProductSpecificationAttributeOptionTemplate"("ProductSpecificationAttributeOptionTemplateID");


--
-- TOC entry 7956 (class 2606 OID 49170)
-- Name: fk_PackageProductSpecificationBlueprint_PackageProduct; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductSpecificationBlueprint"
    ADD CONSTRAINT "fk_PackageProductSpecificationBlueprint_PackageProduct" FOREIGN KEY ("PackageProductID", "PackageID", "PackageVersionNumber") REFERENCES "PackageProduct"("PackageProductID", "PackageID", "PackageVersionNumber");


--
-- TOC entry 7957 (class 2606 OID 49175)
-- Name: fk_PackageProductSpecificationBlueprint_Pn; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductSpecificationBlueprint"
    ADD CONSTRAINT "fk_PackageProductSpecificationBlueprint_Pn" FOREIGN KEY ("DefaultProductSpecificationAttributeOptionID") REFERENCES "ProductSpecificationAttributeOption"("ProductSpecificationAttributeOptionID");


--
-- TOC entry 7955 (class 2606 OID 49180)
-- Name: fk_PackageProductSpecificationute; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductSpecificationBlueprint"
    ADD CONSTRAINT "fk_PackageProductSpecificationute" FOREIGN KEY ("ProductSpecificationAttributeID") REFERENCES "ProductSpecificationAttribute"("ProductSpecificationAttributeID");


--
-- TOC entry 7961 (class 2606 OID 49185)
-- Name: fk_PackageProductTemplate_PackageTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductTemplate"
    ADD CONSTRAINT "fk_PackageProductTemplate_PackageTemplate" FOREIGN KEY ("PackageTemplateID", "PackageTemplateVersionNumber") REFERENCES "PackageTemplate"("PackageTemplateID", "PackageTemplateVersionNumber");


--
-- TOC entry 7962 (class 2606 OID 49190)
-- Name: fk_PackageProductTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProductTemplate"
    ADD CONSTRAINT "fk_PackageProductTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 7945 (class 2606 OID 49195)
-- Name: fk_PackageProduct_Package; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProduct"
    ADD CONSTRAINT "fk_PackageProduct_Package" FOREIGN KEY ("PackageID", "PackageVersionNumber") REFERENCES "Package"("PackageID", "PackageVersionNumber");


--
-- TOC entry 7946 (class 2606 OID 49200)
-- Name: fk_PackageProduct_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageProduct"
    ADD CONSTRAINT "fk_PackageProduct_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 7963 (class 2606 OID 49205)
-- Name: fk_PackageTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PackageTemplate"
    ADD CONSTRAINT "fk_PackageTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 7943 (class 2606 OID 49210)
-- Name: fk_Package_PackageTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Package"
    ADD CONSTRAINT "fk_Package_PackageTemplate" FOREIGN KEY ("PackageTemplateID", "PackageTemplateVersionNumber") REFERENCES "PackageTemplate"("PackageTemplateID", "PackageTemplateVersionNumber");


--
-- TOC entry 7944 (class 2606 OID 49215)
-- Name: fk_Package_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Package"
    ADD CONSTRAINT "fk_Package_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 7971 (class 2606 OID 49220)
-- Name: fk_PlanBillingTemplate_BillingTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanBillingTemplate"
    ADD CONSTRAINT "fk_PlanBillingTemplate_BillingTemplate" FOREIGN KEY ("BillingTemplateID") REFERENCES "BillingTemplate"("BillingTemplateID");


--
-- TOC entry 7972 (class 2606 OID 49225)
-- Name: fk_PlanBillingTemplate_PlanTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanBillingTemplate"
    ADD CONSTRAINT "fk_PlanBillingTemplate_PlanTemplate" FOREIGN KEY ("PlanTemplateID", "PlanTemplateVersionNumber") REFERENCES "PlanTemplate"("PlanTemplateID", "PlanTemplateVersionNumber");


--
-- TOC entry 7969 (class 2606 OID 49230)
-- Name: fk_PlanBilling_Billing; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanBilling"
    ADD CONSTRAINT "fk_PlanBilling_Billing" FOREIGN KEY ("BillingID") REFERENCES "Billing"("BillingID");


--
-- TOC entry 7970 (class 2606 OID 49235)
-- Name: fk_PlanBilling_Plan; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanBilling"
    ADD CONSTRAINT "fk_PlanBilling_Plan" FOREIGN KEY ("PlanID", "PlanVersionNumber") REFERENCES "Plan"("PlanID", "PlanVersionNumber");


--
-- TOC entry 7975 (class 2606 OID 49240)
-- Name: fk_PlanDiscountTemplate_DiscountTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanDiscountTemplate"
    ADD CONSTRAINT "fk_PlanDiscountTemplate_DiscountTemplate" FOREIGN KEY ("DiscountTemplateID", "DiscountTemplateVersionNumber") REFERENCES "DiscountTemplate"("DiscountTemplateID", "DiscountTemplateVersionNumber");


--
-- TOC entry 7976 (class 2606 OID 49245)
-- Name: fk_PlanDiscountTemplate_PlanTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanDiscountTemplate"
    ADD CONSTRAINT "fk_PlanDiscountTemplate_PlanTemplate" FOREIGN KEY ("PlanTemplateID", "PlanTemplateVersionNumber") REFERENCES "PlanTemplate"("PlanTemplateID", "PlanTemplateVersionNumber");


--
-- TOC entry 7973 (class 2606 OID 49250)
-- Name: fk_PlanDiscount_Discount; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanDiscount"
    ADD CONSTRAINT "fk_PlanDiscount_Discount" FOREIGN KEY ("DiscountID", "DiscountVersionNumber") REFERENCES "Discount"("DiscountID", "DiscountVersionNumber");


--
-- TOC entry 7974 (class 2606 OID 49255)
-- Name: fk_PlanDiscount_Plan; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanDiscount"
    ADD CONSTRAINT "fk_PlanDiscount_Plan" FOREIGN KEY ("PlanID", "PlanVersionNumber") REFERENCES "Plan"("PlanID", "PlanVersionNumber");


--
-- TOC entry 7980 (class 2606 OID 49260)
-- Name: fk_PlanGlobalPaymentMethodTemplate_BillingTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanGlobalPaymentMethodTemplate"
    ADD CONSTRAINT "fk_PlanGlobalPaymentMethodTemplate_BillingTemplate" FOREIGN KEY ("BillingTemplateID") REFERENCES "BillingTemplate"("BillingTemplateID");


--
-- TOC entry 7977 (class 2606 OID 49265)
-- Name: fk_PlanGlobalPaymentMethod_Billing; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanGlobalPaymentMethod"
    ADD CONSTRAINT "fk_PlanGlobalPaymentMethod_Billing" FOREIGN KEY ("BillingID") REFERENCES "Billing"("BillingID");


--
-- TOC entry 7978 (class 2606 OID 49270)
-- Name: fk_PlanGlobalPaymentMethod_GlobalPaymentMethod; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanGlobalPaymentMethod"
    ADD CONSTRAINT "fk_PlanGlobalPaymentMethod_GlobalPaymentMethod" FOREIGN KEY ("GlobalPaymentMethodID") REFERENCES "GlobalPaymentMethod"("GlobalPaymentMethodID");


--
-- TOC entry 7979 (class 2606 OID 49275)
-- Name: fk_PlanGlobalPaymentMethod_Plan; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanGlobalPaymentMethod"
    ADD CONSTRAINT "fk_PlanGlobalPaymentMethod_Plan" FOREIGN KEY ("PlanID", "PlanVersionNumber") REFERENCES "Plan"("PlanID", "PlanVersionNumber");


--
-- TOC entry 7981 (class 2606 OID 49280)
-- Name: fk_PlanGlobalPaymentTemplate_GlobalPaymentMethod; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanGlobalPaymentMethodTemplate"
    ADD CONSTRAINT "fk_PlanGlobalPaymentTemplate_GlobalPaymentMethod" FOREIGN KEY ("GlobalPaymentMethodID") REFERENCES "GlobalPaymentMethod"("GlobalPaymentMethodID");


--
-- TOC entry 7982 (class 2606 OID 49285)
-- Name: fk_PlanGlobalPaymentTemplate_PlanTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanGlobalPaymentMethodTemplate"
    ADD CONSTRAINT "fk_PlanGlobalPaymentTemplate_PlanTemplate" FOREIGN KEY ("PlanTemplateID", "PlanTemplateVersionNumber") REFERENCES "PlanTemplate"("PlanTemplateID", "PlanTemplateVersionNumber");


--
-- TOC entry 7985 (class 2606 OID 49290)
-- Name: fk_PlanProductTemplate_PlanTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanProductTemplate"
    ADD CONSTRAINT "fk_PlanProductTemplate_PlanTemplate" FOREIGN KEY ("PlanTemplateID", "PlanTemplateVersionNumber") REFERENCES "PlanTemplate"("PlanTemplateID", "PlanTemplateVersionNumber");


--
-- TOC entry 7986 (class 2606 OID 49295)
-- Name: fk_PlanProductTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanProductTemplate"
    ADD CONSTRAINT "fk_PlanProductTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 7983 (class 2606 OID 49300)
-- Name: fk_PlanProduct_Plan; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanProduct"
    ADD CONSTRAINT "fk_PlanProduct_Plan" FOREIGN KEY ("PlanID", "PlanVersionNumber") REFERENCES "Plan"("PlanID", "PlanVersionNumber");


--
-- TOC entry 7984 (class 2606 OID 49305)
-- Name: fk_PlanProduct_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanProduct"
    ADD CONSTRAINT "fk_PlanProduct_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 7990 (class 2606 OID 49310)
-- Name: fk_PlanSubscriptionBillingPeriod_PlanSubscription; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanSubscriptionBillingProcessLog"
    ADD CONSTRAINT "fk_PlanSubscriptionBillingPeriod_PlanSubscription" FOREIGN KEY ("PlanSubscriptionID", "PlanSubscriptionVersionNumber") REFERENCES "PlanSubscription"("PlanSubscriptionID", "PlanSubscriptionVersionNumber");


--
-- TOC entry 7991 (class 2606 OID 49315)
-- Name: fk_PlanSubscriptionBillingPeriod_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanSubscriptionBillingProcessLog"
    ADD CONSTRAINT "fk_PlanSubscriptionBillingPeriod_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 7992 (class 2606 OID 49320)
-- Name: fk_PlanSubscriptionBillingPeriod_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanSubscriptionBillingProcessLog"
    ADD CONSTRAINT "fk_PlanSubscriptionBillingPeriod_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 7993 (class 2606 OID 49325)
-- Name: fk_PlanSubscriptionPaymentPlan_Billing; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanSubscriptionPaymentPlan"
    ADD CONSTRAINT "fk_PlanSubscriptionPaymentPlan_Billing" FOREIGN KEY ("BillingID") REFERENCES "Billing"("BillingID");


--
-- TOC entry 7994 (class 2606 OID 49330)
-- Name: fk_PlanSubscriptionPaymentPlan_GlobalPaymentMethod; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanSubscriptionPaymentPlan"
    ADD CONSTRAINT "fk_PlanSubscriptionPaymentPlan_GlobalPaymentMethod" FOREIGN KEY ("GlobalPaymentMethodID") REFERENCES "GlobalPaymentMethod"("GlobalPaymentMethodID");


--
-- TOC entry 7995 (class 2606 OID 49335)
-- Name: fk_PlanSubscriptionPaymentPlan_PlanSubscription; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanSubscriptionPaymentPlan"
    ADD CONSTRAINT "fk_PlanSubscriptionPaymentPlan_PlanSubscription" FOREIGN KEY ("PlanSubscriptionID", "PlanSubscriptionVersionNumber") REFERENCES "PlanSubscription"("PlanSubscriptionID", "PlanSubscriptionVersionNumber");


--
-- TOC entry 7996 (class 2606 OID 49340)
-- Name: fk_PlanSubscriptionPeriod_PlanSubscription; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanSubscriptionPeriod"
    ADD CONSTRAINT "fk_PlanSubscriptionPeriod_PlanSubscription" FOREIGN KEY ("PlanSubscriptionID", "PlanSubscriptionVersionNumber") REFERENCES "PlanSubscription"("PlanSubscriptionID", "PlanSubscriptionVersionNumber");


--
-- TOC entry 7997 (class 2606 OID 49345)
-- Name: fk_PlanSubscriptionPeriod_PlanSubscriptionBillingPeriod; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanSubscriptionPeriod"
    ADD CONSTRAINT "fk_PlanSubscriptionPeriod_PlanSubscriptionBillingPeriod" FOREIGN KEY ("PlanSubscriptionBillingPeriodID") REFERENCES "PlanSubscriptionBillingProcessLog"("PlanSubscriptionBillingPeriodID");


--
-- TOC entry 7998 (class 2606 OID 49350)
-- Name: fk_PlanSubscriptionProcessLog_PlanSubscription; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanSubscriptionProcessLog"
    ADD CONSTRAINT "fk_PlanSubscriptionProcessLog_PlanSubscription" FOREIGN KEY ("PlanSubscriptionID", "PlanSubscriptionVersionNumber") REFERENCES "PlanSubscription"("PlanSubscriptionID", "PlanSubscriptionVersionNumber");


--
-- TOC entry 7999 (class 2606 OID 49355)
-- Name: fk_PlanSubscriptionProcessLog_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanSubscriptionProcessLog"
    ADD CONSTRAINT "fk_PlanSubscriptionProcessLog_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8000 (class 2606 OID 49360)
-- Name: fk_PlanSubscriptionProcessLog_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanSubscriptionProcessLog"
    ADD CONSTRAINT "fk_PlanSubscriptionProcessLog_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 7987 (class 2606 OID 49365)
-- Name: fk_PlanSubscription_CountryCode; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanSubscription"
    ADD CONSTRAINT "fk_PlanSubscription_CountryCode" FOREIGN KEY ("CountryCode") REFERENCES "CountryCode"("CountryCode");


--
-- TOC entry 7988 (class 2606 OID 49370)
-- Name: fk_PlanSubscription_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanSubscription"
    ADD CONSTRAINT "fk_PlanSubscription_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 7989 (class 2606 OID 49375)
-- Name: fk_PlanSubscription_Plan; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanSubscription"
    ADD CONSTRAINT "fk_PlanSubscription_Plan" FOREIGN KEY ("PlanID", "PlanVersionNumber") REFERENCES "Plan"("PlanID", "PlanVersionNumber");


--
-- TOC entry 8001 (class 2606 OID 49380)
-- Name: fk_PlanTemplate_CountryCode; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanTemplate"
    ADD CONSTRAINT "fk_PlanTemplate_CountryCode" FOREIGN KEY ("CountryCode") REFERENCES "CountryCode"("CountryCode");


--
-- TOC entry 8002 (class 2606 OID 49385)
-- Name: fk_PlanTemplate_PlanGroup; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanTemplate"
    ADD CONSTRAINT "fk_PlanTemplate_PlanGroup" FOREIGN KEY ("PlanGroupID") REFERENCES "PlanGroup"("PlanGroupID");


--
-- TOC entry 8007 (class 2606 OID 49390)
-- Name: fk_PlanTransactionComponentTierTemplate_ComponentTierTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanTransactionComponentTierTemplate"
    ADD CONSTRAINT "fk_PlanTransactionComponentTierTemplate_ComponentTierTemplate" FOREIGN KEY ("ComponentTierTemplateID") REFERENCES "ComponentTierTemplate"("ComponentTierTemplateID");


--
-- TOC entry 8008 (class 2606 OID 49395)
-- Name: fk_PlanTransactionComponentTierTemplate_PlanTransactionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanTransactionComponentTierTemplate"
    ADD CONSTRAINT "fk_PlanTransactionComponentTierTemplate_PlanTransactionTemplate" FOREIGN KEY ("PlanTransactionTemplateID") REFERENCES "PlanTransactionTemplate"("PlanTransactionTemplateID");


--
-- TOC entry 8005 (class 2606 OID 49400)
-- Name: fk_PlanTransactionComponentTier_ComponentTier; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanTransactionComponentTier"
    ADD CONSTRAINT "fk_PlanTransactionComponentTier_ComponentTier" FOREIGN KEY ("ComponentTierID") REFERENCES "ComponentTier"("ComponentTierID");


--
-- TOC entry 8006 (class 2606 OID 49405)
-- Name: fk_PlanTransactionComponentTier_PlanTransaction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanTransactionComponentTier"
    ADD CONSTRAINT "fk_PlanTransactionComponentTier_PlanTransaction" FOREIGN KEY ("PlanTransactionID") REFERENCES "PlanTransaction"("PlanTransactionID");


--
-- TOC entry 8009 (class 2606 OID 49410)
-- Name: fk_PlanTransactionTemplate_PlanProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanTransactionTemplate"
    ADD CONSTRAINT "fk_PlanTransactionTemplate_PlanProductTemplate" FOREIGN KEY ("PlanTemplateID", "PlanTemplateVersionNumber", "ProductTemplateID", "ProductVersionID") REFERENCES "PlanProductTemplate"("PlanTemplateID", "PlanTemplateVersionNumber", "ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8010 (class 2606 OID 49415)
-- Name: fk_PlanTransactionTemplate_PlanTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanTransactionTemplate"
    ADD CONSTRAINT "fk_PlanTransactionTemplate_PlanTemplate" FOREIGN KEY ("PlanTemplateID", "PlanTemplateVersionNumber") REFERENCES "PlanTemplate"("PlanTemplateID", "PlanTemplateVersionNumber");


--
-- TOC entry 8003 (class 2606 OID 49420)
-- Name: fk_PlanTransaction_Plan; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanTransaction"
    ADD CONSTRAINT "fk_PlanTransaction_Plan" FOREIGN KEY ("PlanID", "PlanVersionNumber") REFERENCES "Plan"("PlanID", "PlanVersionNumber");


--
-- TOC entry 8004 (class 2606 OID 49425)
-- Name: fk_PlanTransaction_PlanProduct; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PlanTransaction"
    ADD CONSTRAINT "fk_PlanTransaction_PlanProduct" FOREIGN KEY ("PlanID", "PlanVersionNumber", "ProductID", "ProductVersionID") REFERENCES "PlanProduct"("PlanID", "PlanVersionNumber", "ProductID", "ProductVersionID");


--
-- TOC entry 7966 (class 2606 OID 49430)
-- Name: fk_Plan_CountryCode; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Plan"
    ADD CONSTRAINT "fk_Plan_CountryCode" FOREIGN KEY ("CountryCode") REFERENCES "CountryCode"("CountryCode");


--
-- TOC entry 7967 (class 2606 OID 49435)
-- Name: fk_Plan_PlanGroup; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Plan"
    ADD CONSTRAINT "fk_Plan_PlanGroup" FOREIGN KEY ("PlanGroupID") REFERENCES "PlanGroup"("PlanGroupID");


--
-- TOC entry 7968 (class 2606 OID 49440)
-- Name: fk_Plan_PlanTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Plan"
    ADD CONSTRAINT "fk_Plan_PlanTemplate" FOREIGN KEY ("PlanTemplateID", "PlanTemplateVersionNumber") REFERENCES "PlanTemplate"("PlanTemplateID", "PlanTemplateVersionNumber");


--
-- TOC entry 8015 (class 2606 OID 49445)
-- Name: fk_ProductBusTaskTemplate_BusTask; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductBusTaskTemplate"
    ADD CONSTRAINT "fk_ProductBusTaskTemplate_BusTask" FOREIGN KEY ("BusTaskID", "BusTaskVersionNumber") REFERENCES "BusTask"("BusTaskID", "BusTaskVersionNumber");


--
-- TOC entry 8013 (class 2606 OID 49450)
-- Name: fk_ProductBusTask_BusTask; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductBusTask"
    ADD CONSTRAINT "fk_ProductBusTask_BusTask" FOREIGN KEY ("BusTaskID", "BusTaskVersionNumber") REFERENCES "BusTask"("BusTaskID", "BusTaskVersionNumber");


--
-- TOC entry 8024 (class 2606 OID 49455)
-- Name: fk_ProductClaimTemplate_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductClaimTemplate"
    ADD CONSTRAINT "fk_ProductClaimTemplate_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 8025 (class 2606 OID 49460)
-- Name: fk_ProductClaimTemplate_ProductRoleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductClaimTemplate"
    ADD CONSTRAINT "fk_ProductClaimTemplate_ProductRoleTemplate" FOREIGN KEY ("ProductRoleTemplateID") REFERENCES "ProductRoleTemplate"("ProductRoleTemplateID");


--
-- TOC entry 8026 (class 2606 OID 49465)
-- Name: fk_ProductClaimTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductClaimTemplate"
    ADD CONSTRAINT "fk_ProductClaimTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8027 (class 2606 OID 49470)
-- Name: fk_ProductClaimTemplate_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductClaimTemplate"
    ADD CONSTRAINT "fk_ProductClaimTemplate_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 8028 (class 2606 OID 49475)
-- Name: fk_ProductClaimTemplate_Role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductClaimTemplate"
    ADD CONSTRAINT "fk_ProductClaimTemplate_Role" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 8029 (class 2606 OID 49480)
-- Name: fk_ProductClaimTemplate_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductClaimTemplate"
    ADD CONSTRAINT "fk_ProductClaimTemplate_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 8030 (class 2606 OID 49485)
-- Name: fk_ProductClaimTemplate_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductClaimTemplate"
    ADD CONSTRAINT "fk_ProductClaimTemplate_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 8017 (class 2606 OID 49490)
-- Name: fk_ProductClaim_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductClaim"
    ADD CONSTRAINT "fk_ProductClaim_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 8018 (class 2606 OID 49495)
-- Name: fk_ProductClaim_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductClaim"
    ADD CONSTRAINT "fk_ProductClaim_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8019 (class 2606 OID 49500)
-- Name: fk_ProductClaim_ProductRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductClaim"
    ADD CONSTRAINT "fk_ProductClaim_ProductRole" FOREIGN KEY ("ProductRoleID") REFERENCES "ProductRole"("ProductRoleID");


--
-- TOC entry 8020 (class 2606 OID 49505)
-- Name: fk_ProductClaim_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductClaim"
    ADD CONSTRAINT "fk_ProductClaim_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 8021 (class 2606 OID 49510)
-- Name: fk_ProductClaim_Role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductClaim"
    ADD CONSTRAINT "fk_ProductClaim_Role" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 8022 (class 2606 OID 49515)
-- Name: fk_ProductClaim_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductClaim"
    ADD CONSTRAINT "fk_ProductClaim_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 8023 (class 2606 OID 49520)
-- Name: fk_ProductClaim_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductClaim"
    ADD CONSTRAINT "fk_ProductClaim_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 8033 (class 2606 OID 49525)
-- Name: fk_ProductComponentTierTemplate_ComponentTierTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductComponentTierTemplate"
    ADD CONSTRAINT "fk_ProductComponentTierTemplate_ComponentTierTemplate" FOREIGN KEY ("ComponentTierTemplateID") REFERENCES "ComponentTierTemplate"("ComponentTierTemplateID");


--
-- TOC entry 8034 (class 2606 OID 49530)
-- Name: fk_ProductComponentTierTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductComponentTierTemplate"
    ADD CONSTRAINT "fk_ProductComponentTierTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8031 (class 2606 OID 49535)
-- Name: fk_ProductComponentTier_ComponentTier; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductComponentTier"
    ADD CONSTRAINT "fk_ProductComponentTier_ComponentTier" FOREIGN KEY ("ComponentTierID") REFERENCES "ComponentTier"("ComponentTierID");


--
-- TOC entry 8032 (class 2606 OID 49540)
-- Name: fk_ProductComponentTier_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductComponentTier"
    ADD CONSTRAINT "fk_ProductComponentTier_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8037 (class 2606 OID 49545)
-- Name: fk_ProductDeductionTemplate_DeductionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductDeductionTemplate"
    ADD CONSTRAINT "fk_ProductDeductionTemplate_DeductionTemplate" FOREIGN KEY ("DeductionTemplateID", "DeductionTemplateVersionNumber") REFERENCES "DeductionTemplate"("DeductionTemplateID", "DeductionTemplateVersionNumber");


--
-- TOC entry 8035 (class 2606 OID 49550)
-- Name: fk_ProductDeduction_Deduction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductDeduction"
    ADD CONSTRAINT "fk_ProductDeduction_Deduction" FOREIGN KEY ("DeductionID", "DeductionVersionNumber") REFERENCES "Deduction"("DeductionID", "DeductionVersionNumber");


--
-- TOC entry 8036 (class 2606 OID 49555)
-- Name: fk_ProductDeduction_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductDeduction"
    ADD CONSTRAINT "fk_ProductDeduction_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8038 (class 2606 OID 49560)
-- Name: fk_ProductDeduction_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductDeductionTemplate"
    ADD CONSTRAINT "fk_ProductDeduction_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8040 (class 2606 OID 49565)
-- Name: fk_ProductDetailTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductDetailTemplate"
    ADD CONSTRAINT "fk_ProductDetailTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8039 (class 2606 OID 49570)
-- Name: fk_ProductDetail_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductDetail"
    ADD CONSTRAINT "fk_ProductDetail_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8043 (class 2606 OID 49575)
-- Name: fk_ProductDiscountTemplate_DiscountTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductDiscountTemplate"
    ADD CONSTRAINT "fk_ProductDiscountTemplate_DiscountTemplate" FOREIGN KEY ("DiscountTemplateID", "DiscountTemplateVersionNumber") REFERENCES "DiscountTemplate"("DiscountTemplateID", "DiscountTemplateVersionNumber");


--
-- TOC entry 8044 (class 2606 OID 49580)
-- Name: fk_ProductDiscountTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductDiscountTemplate"
    ADD CONSTRAINT "fk_ProductDiscountTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8041 (class 2606 OID 49585)
-- Name: fk_ProductDiscount_Discount; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductDiscount"
    ADD CONSTRAINT "fk_ProductDiscount_Discount" FOREIGN KEY ("DiscountID", "DiscountVersionNumber") REFERENCES "Discount"("DiscountID", "DiscountVersionNumber");


--
-- TOC entry 8042 (class 2606 OID 49590)
-- Name: fk_ProductDiscount_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductDiscount"
    ADD CONSTRAINT "fk_ProductDiscount_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8048 (class 2606 OID 49595)
-- Name: fk_ProductFamilyProductPackageTemplate_PackageProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductFamilyProductPackageTemplate"
    ADD CONSTRAINT "fk_ProductFamilyProductPackageTemplate_PackageProductTemplate" FOREIGN KEY ("PackageProductTemplateID", "PackageTemplateID", "PackageTemplateVersionNumber") REFERENCES "PackageProductTemplate"("PackageProductTemplateID", "PackageTemplateID", "PackageTemplateVersionNumber");


--
-- TOC entry 8049 (class 2606 OID 49600)
-- Name: fk_ProductFamilyProductPackageTemplate_ProductFamilyTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductFamilyProductPackageTemplate"
    ADD CONSTRAINT "fk_ProductFamilyProductPackageTemplate_ProductFamilyTemplate" FOREIGN KEY ("ProductFamilyTemplateID") REFERENCES "ProductFamilyTemplate"("ProductFamilyTemplateID");


--
-- TOC entry 8050 (class 2606 OID 49605)
-- Name: fk_ProductFamilyProductPackageTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductFamilyProductPackageTemplate"
    ADD CONSTRAINT "fk_ProductFamilyProductPackageTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8045 (class 2606 OID 49610)
-- Name: fk_ProductFamilyProductPackage_PackageProduct; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductFamilyProductPackage"
    ADD CONSTRAINT "fk_ProductFamilyProductPackage_PackageProduct" FOREIGN KEY ("PackageProductID", "PackageID", "PackageVersionNumber") REFERENCES "PackageProduct"("PackageProductID", "PackageID", "PackageVersionNumber");


--
-- TOC entry 8046 (class 2606 OID 49615)
-- Name: fk_ProductFamilyProductPackage_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductFamilyProductPackage"
    ADD CONSTRAINT "fk_ProductFamilyProductPackage_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8047 (class 2606 OID 49620)
-- Name: fk_ProductFamilyProductPackage_ProductFamily; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductFamilyProductPackage"
    ADD CONSTRAINT "fk_ProductFamilyProductPackage_ProductFamily" FOREIGN KEY ("ProductFamilyID") REFERENCES "ProductFamily"("ProductFamilyID");


--
-- TOC entry 8053 (class 2606 OID 49625)
-- Name: fk_ProductPlanTemplate_PlanTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductPlanTemplate"
    ADD CONSTRAINT "fk_ProductPlanTemplate_PlanTemplate" FOREIGN KEY ("PlanTemplateID", "PlanTemplateVersionNumber") REFERENCES "PlanTemplate"("PlanTemplateID", "PlanTemplateVersionNumber");


--
-- TOC entry 8054 (class 2606 OID 49630)
-- Name: fk_ProductPlanTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductPlanTemplate"
    ADD CONSTRAINT "fk_ProductPlanTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8051 (class 2606 OID 49635)
-- Name: fk_ProductPlan_Plan; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductPlan"
    ADD CONSTRAINT "fk_ProductPlan_Plan" FOREIGN KEY ("PlanID", "PlanVersionNumber") REFERENCES "Plan"("PlanID", "PlanVersionNumber");


--
-- TOC entry 8052 (class 2606 OID 49640)
-- Name: fk_ProductPlan_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductPlan"
    ADD CONSTRAINT "fk_ProductPlan_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8057 (class 2606 OID 49645)
-- Name: fk_ProductProductAttributeTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductProductAttributeTemplate"
    ADD CONSTRAINT "fk_ProductProductAttributeTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8055 (class 2606 OID 49650)
-- Name: fk_ProductProductAttribute_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductProductAttribute"
    ADD CONSTRAINT "fk_ProductProductAttribute_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8056 (class 2606 OID 49655)
-- Name: fk_ProductProductAttribute_ProductAttribute; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductProductAttribute"
    ADD CONSTRAINT "fk_ProductProductAttribute_ProductAttribute" FOREIGN KEY ("ProductAttributeID") REFERENCES "ProductAttribute"("ProductAttributeID");


--
-- TOC entry 8058 (class 2606 OID 49660)
-- Name: fk_ProductProductAttribute_ProductAttributeTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductProductAttributeTemplate"
    ADD CONSTRAINT "fk_ProductProductAttribute_ProductAttributeTemplate" FOREIGN KEY ("ProductAttributeTemplateID") REFERENCES "ProductAttributeTemplate"("ProductAttributeTemplateID");


--
-- TOC entry 8060 (class 2606 OID 49665)
-- Name: fk_ProductPurchaseBusTaskProcessDetail_ProductPurchaseBusTaskPr; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductPurchaseBusTaskProcessDetail"
    ADD CONSTRAINT "fk_ProductPurchaseBusTaskProcessDetail_ProductPurchaseBusTaskPr" FOREIGN KEY ("ProductPurchaseProductTaskID") REFERENCES "ProductPurchaseBusTaskProcessLog"("ProductPurchaseProductTaskID");


--
-- TOC entry 8061 (class 2606 OID 49670)
-- Name: fk_ProductPurchaseBusTask_ProductBusTask; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductPurchaseBusTaskProcessLog"
    ADD CONSTRAINT "fk_ProductPurchaseBusTask_ProductBusTask" FOREIGN KEY ("ProductBusTaskID") REFERENCES "ProductBusTask"("ProductBusTaskID");


--
-- TOC entry 8065 (class 2606 OID 49675)
-- Name: fk_ProductPurchaseProcessLog_ProductPurchase; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductPurchaseProcessLog"
    ADD CONSTRAINT "fk_ProductPurchaseProcessLog_ProductPurchase" FOREIGN KEY ("ProductPurchaseID") REFERENCES "ProductPurchase"("ProductPurchaseID");


--
-- TOC entry 8066 (class 2606 OID 49680)
-- Name: fk_ProductPurchaseProcessLog_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductPurchaseProcessLog"
    ADD CONSTRAINT "fk_ProductPurchaseProcessLog_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8067 (class 2606 OID 49685)
-- Name: fk_ProductPurchaseProcessLog_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductPurchaseProcessLog"
    ADD CONSTRAINT "fk_ProductPurchaseProcessLog_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 8062 (class 2606 OID 49690)
-- Name: fk_ProductPurchaseProductTask_ProductPurchase; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductPurchaseBusTaskProcessLog"
    ADD CONSTRAINT "fk_ProductPurchaseProductTask_ProductPurchase" FOREIGN KEY ("ProductPurchaseID") REFERENCES "ProductPurchase"("ProductPurchaseID");


--
-- TOC entry 8063 (class 2606 OID 49695)
-- Name: fk_ProductPurchaseProductTask_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductPurchaseBusTaskProcessLog"
    ADD CONSTRAINT "fk_ProductPurchaseProductTask_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8064 (class 2606 OID 49700)
-- Name: fk_ProductPurchaseProductTask_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductPurchaseBusTaskProcessLog"
    ADD CONSTRAINT "fk_ProductPurchaseProductTask_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 8068 (class 2606 OID 49705)
-- Name: fk_ProductPurchaseReference_InvoiceLineItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductPurchaseReference"
    ADD CONSTRAINT "fk_ProductPurchaseReference_InvoiceLineItem" FOREIGN KEY ("InvoiceLineItemID") REFERENCES "InvoiceLineItem"("InvoiceLineItemID");


--
-- TOC entry 8072 (class 2606 OID 49710)
-- Name: fk_ProductRelationshipBlueprintTe; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductRelationshipBlueprintTemplate"
    ADD CONSTRAINT "fk_ProductRelationshipBlueprintTe" FOREIGN KEY ("ProductRelationshipTemplateID") REFERENCES "ProductRelationshipTemplate"("ProductRelationshipTemplateID");


--
-- TOC entry 8071 (class 2606 OID 49715)
-- Name: fk_ProductRelationshipBlueprint_ProductRelationship; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductRelationshipBlueprint"
    ADD CONSTRAINT "fk_ProductRelationshipBlueprint_ProductRelationship" FOREIGN KEY ("ProductRelationshipID") REFERENCES "ProductRelationship"("ProductRelationshipID");


--
-- TOC entry 8073 (class 2606 OID 49720)
-- Name: fk_ProductRelationshipTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductRelationshipTemplate"
    ADD CONSTRAINT "fk_ProductRelationshipTemplate_ProductTemplate" FOREIGN KEY ("ParentProductTemplateID", "ParentProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8074 (class 2606 OID 49725)
-- Name: fk_ProductRelationshipTemplate_ProductTemplate1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductRelationshipTemplate"
    ADD CONSTRAINT "fk_ProductRelationshipTemplate_ProductTemplate1" FOREIGN KEY ("ChildProductTemplateID", "ChildProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8069 (class 2606 OID 49730)
-- Name: fk_ProductRelationship_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductRelationship"
    ADD CONSTRAINT "fk_ProductRelationship_Product" FOREIGN KEY ("ParentProductID", "ParentProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8070 (class 2606 OID 49735)
-- Name: fk_ProductRelationship_Product1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductRelationship"
    ADD CONSTRAINT "fk_ProductRelationship_Product1" FOREIGN KEY ("ChildProductID", "ChildProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8139 (class 2606 OID 49740)
-- Name: fk_ProductRelationship_Product111; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "SpecificationAttributeRelationship"
    ADD CONSTRAINT "fk_ProductRelationship_Product111" FOREIGN KEY ("ParentSpecificationAttributeID") REFERENCES "SpecificationAttribute"("SpecificationAttributeID");


--
-- TOC entry 8076 (class 2606 OID 49745)
-- Name: fk_ProductRoleTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductRoleTemplate"
    ADD CONSTRAINT "fk_ProductRoleTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8075 (class 2606 OID 49750)
-- Name: fk_ProductRole_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductRole"
    ADD CONSTRAINT "fk_ProductRole_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8143 (class 2606 OID 49755)
-- Name: fk_ProductSpecficiationAttribute; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "SpecificiationAttributeOption"
    ADD CONSTRAINT "fk_ProductSpecficiationAttribute" FOREIGN KEY ("SpecificationAttributeID") REFERENCES "SpecificationAttribute"("SpecificationAttributeID");


--
-- TOC entry 8079 (class 2606 OID 49760)
-- Name: fk_ProductSpecificationAttributeOe; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductSpecificationAttributeOption"
    ADD CONSTRAINT "fk_ProductSpecificationAttributeOe" FOREIGN KEY ("ProductSpecificationAttributeID") REFERENCES "ProductSpecificationAttribute"("ProductSpecificationAttributeID");


--
-- TOC entry 8138 (class 2606 OID 49765)
-- Name: fk_ProductSpecificationAttributeOptionTemplate_ProductSate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "SpecificationAttributeOptionTemplate"
    ADD CONSTRAINT "fk_ProductSpecificationAttributeOptionTemplate_ProductSate" FOREIGN KEY ("SpecificationAttributeTemplateID") REFERENCES "SpecificationAttributeTemplate"("SpecificationAttributeTemplateID");


--
-- TOC entry 8081 (class 2606 OID 49770)
-- Name: fk_ProductSpecificationAttributeOptionTemplate_Proplate1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductSpecificationAttributeOptionTemplate"
    ADD CONSTRAINT "fk_ProductSpecificationAttributeOptionTemplate_Proplate1" FOREIGN KEY ("ProductSpecificationAttributeTemplateID") REFERENCES "ProductSpecificationAttributeTemplate"("ProductSpecificationAttributeTemplateID");


--
-- TOC entry 8082 (class 2606 OID 49775)
-- Name: fk_ProductSpecificationAttributeOptionTemplate_Specificamplate1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductSpecificationAttributeOptionTemplate"
    ADD CONSTRAINT "fk_ProductSpecificationAttributeOptionTemplate_Specificamplate1" FOREIGN KEY ("SpecificationAttributeOptionTemplateID") REFERENCES "SpecificationAttributeOptionTemplate"("SpecificationAttributeOptionTemplateID");


--
-- TOC entry 8083 (class 2606 OID 49780)
-- Name: fk_ProductSpecificationAttributeTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductSpecificationAttributeTemplate"
    ADD CONSTRAINT "fk_ProductSpecificationAttributeTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8084 (class 2606 OID 49785)
-- Name: fk_ProductSpecificationAttributeTempte; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductSpecificationAttributeTemplate"
    ADD CONSTRAINT "fk_ProductSpecificationAttributeTempte" FOREIGN KEY ("SpecificationAttributeTemplateID") REFERENCES "SpecificationAttributeTemplate"("SpecificationAttributeTemplateID");


--
-- TOC entry 8137 (class 2606 OID 49790)
-- Name: fk_ProductSpecificationAttribute_Producte; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "SpecificationAttribute"
    ADD CONSTRAINT "fk_ProductSpecificationAttribute_Producte" FOREIGN KEY ("SpecificationAttributeTemplateID") REFERENCES "SpecificationAttributeTemplate"("SpecificationAttributeTemplateID");


--
-- TOC entry 8077 (class 2606 OID 49795)
-- Name: fk_ProductSpecificationAttribute_SpecificationAttribute; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductSpecificationAttribute"
    ADD CONSTRAINT "fk_ProductSpecificationAttribute_SpecificationAttribute" FOREIGN KEY ("SpecificationAttributeID") REFERENCES "SpecificationAttribute"("SpecificationAttributeID");


--
-- TOC entry 8080 (class 2606 OID 49800)
-- Name: fk_ProductSpecificationAttritributeOption; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductSpecificationAttributeOption"
    ADD CONSTRAINT "fk_ProductSpecificationAttritributeOption" FOREIGN KEY ("SpecficiationAttributeOptionID") REFERENCES "SpecificiationAttributeOption"("SpecficiationAttributeOptionID");


--
-- TOC entry 8088 (class 2606 OID 49805)
-- Name: fk_ProductSpecificationBlueprintTemplate_Prod; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductSpecificationBlueprintTemplate"
    ADD CONSTRAINT "fk_ProductSpecificationBlueprintTemplate_Prod" FOREIGN KEY ("ProductSpecificationAttributeTemplateID") REFERENCES "ProductSpecificationAttributeTemplate"("ProductSpecificationAttributeTemplateID");


--
-- TOC entry 8089 (class 2606 OID 49810)
-- Name: fk_ProductSpecificationBlueprintTemplate_ProductS; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductSpecificationBlueprintTemplate"
    ADD CONSTRAINT "fk_ProductSpecificationBlueprintTemplate_ProductS" FOREIGN KEY ("DefaultProductSpecificationAttributeOptionTemplateID") REFERENCES "ProductSpecificationAttributeOptionTemplate"("ProductSpecificationAttributeOptionTemplateID");


--
-- TOC entry 8085 (class 2606 OID 49815)
-- Name: fk_ProductSpecificationBlueprint_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductSpecificationBlueprint"
    ADD CONSTRAINT "fk_ProductSpecificationBlueprint_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8086 (class 2606 OID 49820)
-- Name: fk_ProductSpecificationBlueprint_ProductSpecificationAttribute; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductSpecificationBlueprint"
    ADD CONSTRAINT "fk_ProductSpecificationBlueprint_ProductSpecificationAttribute" FOREIGN KEY ("ProductSpecificationAttributeID") REFERENCES "ProductSpecificationAttribute"("ProductSpecificationAttributeID");


--
-- TOC entry 8087 (class 2606 OID 49825)
-- Name: fk_ProductSpecificationBlueprint_tion; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductSpecificationBlueprint"
    ADD CONSTRAINT "fk_ProductSpecificationBlueprint_tion" FOREIGN KEY ("DefaultProductSpecificationAttributeOptionID") REFERENCES "ProductSpecificationAttributeOption"("ProductSpecificationAttributeOptionID");


--
-- TOC entry 8016 (class 2606 OID 49830)
-- Name: fk_ProductTFProductTaskTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductBusTaskTemplate"
    ADD CONSTRAINT "fk_ProductTFProductTaskTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8014 (class 2606 OID 49835)
-- Name: fk_ProductTFProductTask_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductBusTask"
    ADD CONSTRAINT "fk_ProductTFProductTask_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8091 (class 2606 OID 49840)
-- Name: fk_ProductTagTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductTagTemplate"
    ADD CONSTRAINT "fk_ProductTagTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8090 (class 2606 OID 49845)
-- Name: fk_ProductTag_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductTag"
    ADD CONSTRAINT "fk_ProductTag_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8093 (class 2606 OID 49850)
-- Name: fk_ProductVariantAttributeCombinationTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductVariantAttributeCombinationTemplate"
    ADD CONSTRAINT "fk_ProductVariantAttributeCombinationTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8092 (class 2606 OID 49855)
-- Name: fk_ProductVariantAttributeCombination_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductVariantAttributeCombination"
    ADD CONSTRAINT "fk_ProductVariantAttributeCombination_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8095 (class 2606 OID 49860)
-- Name: fk_ProductVariantAttributeValueTemplate_ProductProductAttribute; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductVariantAttributeValueTemplate"
    ADD CONSTRAINT "fk_ProductVariantAttributeValueTemplate_ProductProductAttribute" FOREIGN KEY ("ProductProductAttributeTemplateID") REFERENCES "ProductProductAttributeTemplate"("ProductProductAttributeTemplateID");


--
-- TOC entry 8141 (class 2606 OID 49865)
-- Name: fk_ProductVariantAttributeValueTemplate_ProductTemplateParent; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "SpecificationAttributeRelationshipTemplate"
    ADD CONSTRAINT "fk_ProductVariantAttributeValueTemplate_ProductTemplateParent" FOREIGN KEY ("ParentSpecificationAttributeTemplateID") REFERENCES "SpecificationAttributeTemplate"("SpecificationAttributeTemplateID");


--
-- TOC entry 8094 (class 2606 OID 49870)
-- Name: fk_ProductVariantAttributeValue_ProductProductAttribute; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductVariantAttributeValue"
    ADD CONSTRAINT "fk_ProductVariantAttributeValue_ProductProductAttribute" FOREIGN KEY ("ProductProductAttributeID") REFERENCES "ProductProductAttribute"("ProductProductAttributeID");


--
-- TOC entry 8012 (class 2606 OID 49875)
-- Name: fk_Product_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Product"
    ADD CONSTRAINT "fk_Product_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductTemplateVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8096 (class 2606 OID 49880)
-- Name: fk_RepositoryMap_Repository; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "RepositoryStructure"
    ADD CONSTRAINT "fk_RepositoryMap_Repository" FOREIGN KEY ("RepositoryID") REFERENCES "Repository"("RepositoryID");


--
-- TOC entry 8100 (class 2606 OID 49885)
-- Name: fk_RepositoryStructureGroup_OrganisationRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "RepositoryStructureRole"
    ADD CONSTRAINT "fk_RepositoryStructureGroup_OrganisationRole" FOREIGN KEY ("OrganisationRoleID") REFERENCES "OrganisationRole"("OrganisationRoleID");


--
-- TOC entry 8101 (class 2606 OID 49890)
-- Name: fk_RepositoryStructureGroup_RepositoryStructure; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "RepositoryStructureRole"
    ADD CONSTRAINT "fk_RepositoryStructureGroup_RepositoryStructure" FOREIGN KEY ("RepositoryStructureID") REFERENCES "RepositoryStructure"("RepositoryStructureID");


--
-- TOC entry 8098 (class 2606 OID 49895)
-- Name: fk_RepositoryStructureRole_OrganisationGroup; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "RepositoryStructureGroup"
    ADD CONSTRAINT "fk_RepositoryStructureRole_OrganisationGroup" FOREIGN KEY ("OrganisationGroupID") REFERENCES "OrganisationGroup"("OrganisationGroupID");


--
-- TOC entry 8099 (class 2606 OID 49900)
-- Name: fk_RepositoryStructureRole_RepositoryStructure; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "RepositoryStructureGroup"
    ADD CONSTRAINT "fk_RepositoryStructureRole_RepositoryStructure" FOREIGN KEY ("RepositoryStructureID") REFERENCES "RepositoryStructure"("RepositoryStructureID");


--
-- TOC entry 8097 (class 2606 OID 49905)
-- Name: fk_RepositoryStructure_Repository; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "RepositoryStructure"
    ADD CONSTRAINT "fk_RepositoryStructure_Repository" FOREIGN KEY ("RepositoryID") REFERENCES "Repository"("RepositoryID");


--
-- TOC entry 8102 (class 2606 OID 49910)
-- Name: fk_ResourceOperation_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ResourceOperation"
    ADD CONSTRAINT "fk_ResourceOperation_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 8103 (class 2606 OID 49915)
-- Name: fk_ResourceOperation_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ResourceOperation"
    ADD CONSTRAINT "fk_ResourceOperation_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 8108 (class 2606 OID 49920)
-- Name: fk_RoleTemplateClaim_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "RoleClaim"
    ADD CONSTRAINT "fk_RoleTemplateClaim_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 8109 (class 2606 OID 49925)
-- Name: fk_RoleTemplateClaim_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "RoleClaim"
    ADD CONSTRAINT "fk_RoleTemplateClaim_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 8110 (class 2606 OID 49930)
-- Name: fk_RoleTemplateClaim_RoleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "RoleClaim"
    ADD CONSTRAINT "fk_RoleTemplateClaim_RoleTemplate" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 8111 (class 2606 OID 49935)
-- Name: fk_RoleTemplateClaim_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "RoleClaim"
    ADD CONSTRAINT "fk_RoleTemplateClaim_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 8112 (class 2606 OID 49940)
-- Name: fk_RoleTemplateClaim_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "RoleClaim"
    ADD CONSTRAINT "fk_RoleTemplateClaim_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 7913 (class 2606 OID 49945)
-- Name: fk_Role_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "OrganisationRole"
    ADD CONSTRAINT "fk_Role_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 8114 (class 2606 OID 49950)
-- Name: fk_ServiceDefinitionDetail_ServiceDefinition; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ServiceDefinitionDetail"
    ADD CONSTRAINT "fk_ServiceDefinitionDetail_ServiceDefinition" FOREIGN KEY ("ServiceDefinitionID") REFERENCES "ServiceDefinition"("ServiceDefinitionID");


--
-- TOC entry 8113 (class 2606 OID 49955)
-- Name: fk_ServiceDefinition_ServiceInterface; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ServiceDefinition"
    ADD CONSTRAINT "fk_ServiceDefinition_ServiceInterface" FOREIGN KEY ("ServiceInterfaceID") REFERENCES "ServiceInterface"("ServiceInterfaceID");


--
-- TOC entry 8115 (class 2606 OID 49960)
-- Name: fk_ServiceInterfaceProcessLog_ProductPurchaseProductTask; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ServiceInterfaceProcessLog"
    ADD CONSTRAINT "fk_ServiceInterfaceProcessLog_ProductPurchaseProductTask" FOREIGN KEY ("ProductPurchaseProductTaskID") REFERENCES "ProductPurchaseBusTaskProcessLog"("ProductPurchaseProductTaskID");


--
-- TOC entry 8116 (class 2606 OID 49965)
-- Name: fk_ServiceInterfaceProcessLog_ServiceDefinition; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ServiceInterfaceProcessLog"
    ADD CONSTRAINT "fk_ServiceInterfaceProcessLog_ServiceDefinition" FOREIGN KEY ("ServiceDefinitionID") REFERENCES "ServiceDefinition"("ServiceDefinitionID");


--
-- TOC entry 8117 (class 2606 OID 49970)
-- Name: fk_ServiceInterfaceProcessLog_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ServiceInterfaceProcessLog"
    ADD CONSTRAINT "fk_ServiceInterfaceProcessLog_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8118 (class 2606 OID 49975)
-- Name: fk_ServiceInterfaceProcessLog_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ServiceInterfaceProcessLog"
    ADD CONSTRAINT "fk_ServiceInterfaceProcessLog_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 8126 (class 2606 OID 49980)
-- Name: fk_ShoppingCartDeduction_CountryDeduction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCartDeduction"
    ADD CONSTRAINT "fk_ShoppingCartDeduction_CountryDeduction" FOREIGN KEY ("CountryDeductionID", "DeductionID", "DeductionVersionNumber") REFERENCES "CountryDeduction"("CountryDeductionID", "DeductionID", "DeductionVersionNumber");


--
-- TOC entry 8127 (class 2606 OID 49985)
-- Name: fk_ShoppingCartDeduction_ShoppingCart; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCartDeduction"
    ADD CONSTRAINT "fk_ShoppingCartDeduction_ShoppingCart" FOREIGN KEY ("ShoppingCartID") REFERENCES "ShoppingCart"("ShoppingCartID");


--
-- TOC entry 8128 (class 2606 OID 49990)
-- Name: fk_ShoppingCartItem_Account; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCartItem"
    ADD CONSTRAINT "fk_ShoppingCartItem_Account" FOREIGN KEY ("AccountID") REFERENCES "Account"("AccountID");


--
-- TOC entry 8129 (class 2606 OID 49995)
-- Name: fk_ShoppingCartItem_InvoiceLineItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCartItem"
    ADD CONSTRAINT "fk_ShoppingCartItem_InvoiceLineItem" FOREIGN KEY ("InvoiceLineItemID") REFERENCES "InvoiceLineItem"("InvoiceLineItemID");


--
-- TOC entry 8124 (class 2606 OID 50000)
-- Name: fk_ShoppingCartProductProductTemplate_ProductTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCartBlueprintProductTemplate"
    ADD CONSTRAINT "fk_ShoppingCartProductProductTemplate_ProductTemplate" FOREIGN KEY ("ProductTemplateID", "ProductVersionID") REFERENCES "ProductTemplate"("ProductTemplateID", "ProductVersionID");


--
-- TOC entry 8125 (class 2606 OID 50005)
-- Name: fk_ShoppingCartProductProductTemplate_ShoppingCartProductTempla; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCartBlueprintProductTemplate"
    ADD CONSTRAINT "fk_ShoppingCartProductProductTemplate_ShoppingCartProductTempla" FOREIGN KEY ("ShoppingCartBlueprintTemplateID") REFERENCES "ShoppingCartBlueprintTemplate"("ShoppingCartBlueprintTemplateID");


--
-- TOC entry 8122 (class 2606 OID 50010)
-- Name: fk_ShoppingCartProductProduct_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCartBlueprintProduct"
    ADD CONSTRAINT "fk_ShoppingCartProductProduct_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8123 (class 2606 OID 50015)
-- Name: fk_ShoppingCartProductProduct_ShoppingCartProductTempla; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCartBlueprintProduct"
    ADD CONSTRAINT "fk_ShoppingCartProductProduct_ShoppingCartProductTempla" FOREIGN KEY ("ShoppingCartBlueprintID") REFERENCES "ShoppingCartBlueprint"("ShoppingCartBlueprintID");


--
-- TOC entry 8119 (class 2606 OID 50020)
-- Name: fk_ShoppingCart_GlobalPaymentMethod; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCart"
    ADD CONSTRAINT "fk_ShoppingCart_GlobalPaymentMethod" FOREIGN KEY ("GlobalPaymentMethodID") REFERENCES "GlobalPaymentMethod"("GlobalPaymentMethodID");


--
-- TOC entry 8120 (class 2606 OID 50025)
-- Name: fk_ShoppingCart_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCart"
    ADD CONSTRAINT "fk_ShoppingCart_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 8121 (class 2606 OID 50030)
-- Name: fk_ShoppingCart_UserAccountOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCart"
    ADD CONSTRAINT "fk_ShoppingCart_UserAccountOrganisation" FOREIGN KEY ("UserAccountOrganisationID") REFERENCES "UserAccountOrganisation"("UserAccountOrganisationID");


--
-- TOC entry 8142 (class 2606 OID 50035)
-- Name: fk_SpecificationAttributeRelationshipTempTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "SpecificationAttributeRelationshipTemplate"
    ADD CONSTRAINT "fk_SpecificationAttributeRelationshipTempTemplate" FOREIGN KEY ("SpecificationAttributeTemplateID") REFERENCES "SpecificationAttributeTemplate"("SpecificationAttributeTemplateID");


--
-- TOC entry 8140 (class 2606 OID 50040)
-- Name: fk_SpecificationAttributeRelationship_SpecificationAttribute; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "SpecificationAttributeRelationship"
    ADD CONSTRAINT "fk_SpecificationAttributeRelationship_SpecificationAttribute" FOREIGN KEY ("SpecificationAttributeID") REFERENCES "SpecificationAttribute"("SpecificationAttributeID");


--
-- TOC entry 8152 (class 2606 OID 50045)
-- Name: fk_StatusTypeClaimTemplate_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeClaimTemplate"
    ADD CONSTRAINT "fk_StatusTypeClaimTemplate_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 8153 (class 2606 OID 50050)
-- Name: fk_StatusTypeClaimTemplate_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeClaimTemplate"
    ADD CONSTRAINT "fk_StatusTypeClaimTemplate_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 8154 (class 2606 OID 50055)
-- Name: fk_StatusTypeClaimTemplate_Role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeClaimTemplate"
    ADD CONSTRAINT "fk_StatusTypeClaimTemplate_Role" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 8155 (class 2606 OID 50060)
-- Name: fk_StatusTypeClaimTemplate_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeClaimTemplate"
    ADD CONSTRAINT "fk_StatusTypeClaimTemplate_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 8156 (class 2606 OID 50065)
-- Name: fk_StatusTypeClaimTemplate_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeClaimTemplate"
    ADD CONSTRAINT "fk_StatusTypeClaimTemplate_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 8157 (class 2606 OID 50070)
-- Name: fk_StatusTypeClaimTemplate_StatusTypeRoleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeClaimTemplate"
    ADD CONSTRAINT "fk_StatusTypeClaimTemplate_StatusTypeRoleTemplate" FOREIGN KEY ("StatusTypeRoleTemplateID") REFERENCES "StatusTypeRoleTemplate"("StatusTypeRoleTemplateID");


--
-- TOC entry 8158 (class 2606 OID 50075)
-- Name: fk_StatusTypeClaimTemplate_StatusTypeTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeClaimTemplate"
    ADD CONSTRAINT "fk_StatusTypeClaimTemplate_StatusTypeTemplate" FOREIGN KEY ("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber") REFERENCES "StatusTypeTemplate"("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber");


--
-- TOC entry 8146 (class 2606 OID 50080)
-- Name: fk_StatusTypeClaim_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeClaim"
    ADD CONSTRAINT "fk_StatusTypeClaim_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 8147 (class 2606 OID 50085)
-- Name: fk_StatusTypeClaim_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeClaim"
    ADD CONSTRAINT "fk_StatusTypeClaim_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 8148 (class 2606 OID 50090)
-- Name: fk_StatusTypeClaim_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeClaim"
    ADD CONSTRAINT "fk_StatusTypeClaim_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 8149 (class 2606 OID 50095)
-- Name: fk_StatusTypeClaim_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeClaim"
    ADD CONSTRAINT "fk_StatusTypeClaim_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 8150 (class 2606 OID 50100)
-- Name: fk_StatusTypeClaim_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeClaim"
    ADD CONSTRAINT "fk_StatusTypeClaim_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8151 (class 2606 OID 50105)
-- Name: fk_StatusTypeClaim_StatusTypeRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeClaim"
    ADD CONSTRAINT "fk_StatusTypeClaim_StatusTypeRole" FOREIGN KEY ("StatusTypeRoleID") REFERENCES "StatusTypeRole"("StatusTypeRoleID");


--
-- TOC entry 8160 (class 2606 OID 50110)
-- Name: fk_StatusTypeRoleTemplate_StatusTypeTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeRoleTemplate"
    ADD CONSTRAINT "fk_StatusTypeRoleTemplate_StatusTypeTemplate" FOREIGN KEY ("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber") REFERENCES "StatusTypeTemplate"("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber");


--
-- TOC entry 8159 (class 2606 OID 50115)
-- Name: fk_StatusTypeRole_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeRole"
    ADD CONSTRAINT "fk_StatusTypeRole_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8165 (class 2606 OID 50120)
-- Name: fk_StatusTypeStructureMappeStructure; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeStructureTransition"
    ADD CONSTRAINT "fk_StatusTypeStructureMappeStructure" FOREIGN KEY ("NextStatusTypeStructureID") REFERENCES "StatusTypeStructure"("StatusTypeStructureID");


--
-- TOC entry 8167 (class 2606 OID 50125)
-- Name: fk_StatusTypeStructureMappeStructureTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeStructureTransitionTemplate"
    ADD CONSTRAINT "fk_StatusTypeStructureMappeStructureTemplate" FOREIGN KEY ("NextStatusTypeStructureTemplateID") REFERENCES "StatusTypeStructureTemplate"("StatusTypeStructureTemplateID");


--
-- TOC entry 8168 (class 2606 OID 50130)
-- Name: fk_StatusTypeStructureMappingTemplate_StatusTypeStructureTempla; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeStructureTransitionTemplate"
    ADD CONSTRAINT "fk_StatusTypeStructureMappingTemplate_StatusTypeStructureTempla" FOREIGN KEY ("CurrentStatusTypeStructureTemplateID") REFERENCES "StatusTypeStructureTemplate"("StatusTypeStructureTemplateID");


--
-- TOC entry 8166 (class 2606 OID 50135)
-- Name: fk_StatusTypeStructureMapping_StatusTypeStructureTempla; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeStructureTransition"
    ADD CONSTRAINT "fk_StatusTypeStructureMapping_StatusTypeStructureTempla" FOREIGN KEY ("CurrentStatusTypeStructureID") REFERENCES "StatusTypeStructure"("StatusTypeStructureID");


--
-- TOC entry 8163 (class 2606 OID 50140)
-- Name: fk_StatusTypeStructureTemplate_StatusTypeTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeStructureTemplate"
    ADD CONSTRAINT "fk_StatusTypeStructureTemplate_StatusTypeTemplate" FOREIGN KEY ("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber") REFERENCES "StatusTypeTemplate"("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber");


--
-- TOC entry 8164 (class 2606 OID 50145)
-- Name: fk_StatusTypeStructureTemplate_StatusTypeValueTemplateID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeStructureTemplate"
    ADD CONSTRAINT "fk_StatusTypeStructureTemplate_StatusTypeValueTemplateID" FOREIGN KEY ("StatusTypeValueTemplateID") REFERENCES "StatusTypeValueTemplate"("StatusTypeValueTemplateID");


--
-- TOC entry 8161 (class 2606 OID 50150)
-- Name: fk_StatusTypeStructure_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeStructure"
    ADD CONSTRAINT "fk_StatusTypeStructure_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8162 (class 2606 OID 50155)
-- Name: fk_StatusTypeStructure_StatusTypeValueID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeStructure"
    ADD CONSTRAINT "fk_StatusTypeStructure_StatusTypeValueID" FOREIGN KEY ("StatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 8169 (class 2606 OID 50160)
-- Name: fk_StatusTypeValueID_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeValue"
    ADD CONSTRAINT "fk_StatusTypeValueID_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8170 (class 2606 OID 50165)
-- Name: fk_StatusTypeValueTemplateID_StatusTypeTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusTypeValueTemplate"
    ADD CONSTRAINT "fk_StatusTypeValueTemplateID_StatusTypeTemplate" FOREIGN KEY ("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber") REFERENCES "StatusTypeTemplate"("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber");


--
-- TOC entry 8145 (class 2606 OID 50170)
-- Name: fk_StatusType_StatusTypeTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "StatusType"
    ADD CONSTRAINT "fk_StatusType_StatusTypeTemplate" FOREIGN KEY ("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber") REFERENCES "StatusTypeTemplate"("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber");


--
-- TOC entry 8178 (class 2606 OID 50175)
-- Name: fk_TransactionOrderItem_InvoiceLineItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "TransactionOrderItem"
    ADD CONSTRAINT "fk_TransactionOrderItem_InvoiceLineItem" FOREIGN KEY ("InvoiceLineItemID") REFERENCES "InvoiceLineItem"("InvoiceLineItemID");


--
-- TOC entry 8179 (class 2606 OID 50180)
-- Name: fk_TransactionOrderPaymentError_TransactionOrderPayment; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "TransactionOrderPaymentError"
    ADD CONSTRAINT "fk_TransactionOrderPaymentError_TransactionOrderPayment" FOREIGN KEY ("TransactionOrderPaymentID") REFERENCES "TransactionOrderPayment"("TransactionOrderPaymentID");


--
-- TOC entry 8180 (class 2606 OID 50185)
-- Name: fk_TransactionOrderProcessLog_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "TransactionOrderProcessLog"
    ADD CONSTRAINT "fk_TransactionOrderProcessLog_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8181 (class 2606 OID 50190)
-- Name: fk_TransactionOrderProcessLog_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "TransactionOrderProcessLog"
    ADD CONSTRAINT "fk_TransactionOrderProcessLog_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 8182 (class 2606 OID 50195)
-- Name: fk_TransactionOrderProcessLog_TransactionOrder; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "TransactionOrderProcessLog"
    ADD CONSTRAINT "fk_TransactionOrderProcessLog_TransactionOrder" FOREIGN KEY ("TransactionOrderID") REFERENCES "TransactionOrder"("TransactionOrderID");


--
-- TOC entry 8183 (class 2606 OID 50200)
-- Name: fk_TransactionOrderProcessLog_TransactionOrderPayment; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "TransactionOrderProcessLog"
    ADD CONSTRAINT "fk_TransactionOrderProcessLog_TransactionOrderPayment" FOREIGN KEY ("TransactionOrderPaymentID") REFERENCES "TransactionOrderPayment"("TransactionOrderPaymentID");


--
-- TOC entry 8175 (class 2606 OID 50205)
-- Name: fk_TransactionOrder_GlobalPaymentMethod; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "TransactionOrder"
    ADD CONSTRAINT "fk_TransactionOrder_GlobalPaymentMethod" FOREIGN KEY ("GlobalPaymentMethodID") REFERENCES "GlobalPaymentMethod"("GlobalPaymentMethodID");


--
-- TOC entry 8176 (class 2606 OID 50210)
-- Name: fk_TransactionOrder_Invoice; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "TransactionOrder"
    ADD CONSTRAINT "fk_TransactionOrder_Invoice" FOREIGN KEY ("InvoiceID") REFERENCES "Invoice"("InvoiceID");


--
-- TOC entry 8189 (class 2606 OID 50215)
-- Name: fk_UserAccountLedgerAccount_LedgerAccount; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountLedgerAccount"
    ADD CONSTRAINT "fk_UserAccountLedgerAccount_LedgerAccount" FOREIGN KEY ("LedgerAccountID") REFERENCES "OrganisationLedgerAccount"("OrganisationLedgerAccountID");


--
-- TOC entry 8190 (class 2606 OID 50220)
-- Name: fk_UserAccountLedgerAccount_UserAccounts; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountLedgerAccount"
    ADD CONSTRAINT "fk_UserAccountLedgerAccount_UserAccounts" FOREIGN KEY ("UserAccountID") REFERENCES "UserAccounts"("ID");


--
-- TOC entry 8191 (class 2606 OID 50225)
-- Name: fk_UserAccountLoginSessionData_UserAccountLoginSession; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountLoginSessionData"
    ADD CONSTRAINT "fk_UserAccountLoginSessionData_UserAccountLoginSession" FOREIGN KEY ("UserAccountID", "UserSessionID") REFERENCES "UserAccountLoginSession"("UserAccountID", "UserSessionID");


--
-- TOC entry 8198 (class 2606 OID 50230)
-- Name: fk_UserAccountOrganisationGroup_UserAccountOrganisationUnit; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountOrganisationGroup"
    ADD CONSTRAINT "fk_UserAccountOrganisationGroup_UserAccountOrganisationUnit" FOREIGN KEY ("UserAccountOrganisationID") REFERENCES "UserAccountOrganisation"("UserAccountOrganisationID");


--
-- TOC entry 8059 (class 2606 OID 50235)
-- Name: fk_UserAccountOrganisationProductPurchase_InvoiceLineItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductPurchase"
    ADD CONSTRAINT "fk_UserAccountOrganisationProductPurchase_InvoiceLineItem" FOREIGN KEY ("InvoiceLineItemID") REFERENCES "InvoiceLineItem"("InvoiceLineItemID");


--
-- TOC entry 8199 (class 2606 OID 50240)
-- Name: fk_UserAccountOrganisationRole_OrganisationRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountOrganisationRole"
    ADD CONSTRAINT "fk_UserAccountOrganisationRole_OrganisationRole" FOREIGN KEY ("OrganisationRoleID") REFERENCES "OrganisationRole"("OrganisationRoleID");


--
-- TOC entry 8200 (class 2606 OID 50245)
-- Name: fk_UserAccountOrganisationRole_UserAccountOrganisationUnit; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountOrganisationRole"
    ADD CONSTRAINT "fk_UserAccountOrganisationRole_UserAccountOrganisationUnit" FOREIGN KEY ("UserAccountOrganisationID") REFERENCES "UserAccountOrganisation"("UserAccountOrganisationID");


--
-- TOC entry 8201 (class 2606 OID 50250)
-- Name: fk_UserAccountOrganisationSecondaryUserType_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountOrganisationSecondaryUserType"
    ADD CONSTRAINT "fk_UserAccountOrganisationSecondaryUserType_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 8202 (class 2606 OID 50255)
-- Name: fk_UserAccountOrganisationStatus_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountOrganisationStatus"
    ADD CONSTRAINT "fk_UserAccountOrganisationStatus_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8203 (class 2606 OID 50260)
-- Name: fk_UserAccountOrganisationStatus_StatusTypeValue; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountOrganisationStatus"
    ADD CONSTRAINT "fk_UserAccountOrganisationStatus_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES "StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 8204 (class 2606 OID 50265)
-- Name: fk_UserAccountOrganisationStatus_UserAccountOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountOrganisationStatus"
    ADD CONSTRAINT "fk_UserAccountOrganisationStatus_UserAccountOrganisation" FOREIGN KEY ("UserAccountOrganisationID") REFERENCES "UserAccountOrganisation"("UserAccountOrganisationID");


--
-- TOC entry 8205 (class 2606 OID 50270)
-- Name: fk_UserAccountOrganisationTeam_OrganisationTeam; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountOrganisationTeam"
    ADD CONSTRAINT "fk_UserAccountOrganisationTeam_OrganisationTeam" FOREIGN KEY ("OrganisationTeamID") REFERENCES "OrganisationTeam"("OrganisationTeamID");


--
-- TOC entry 8206 (class 2606 OID 50275)
-- Name: fk_UserAccountOrganisationTeam_UserAccountOrganisationUnit; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountOrganisationTeam"
    ADD CONSTRAINT "fk_UserAccountOrganisationTeam_UserAccountOrganisationUnit" FOREIGN KEY ("UserAccountOrganisationID") REFERENCES "UserAccountOrganisation"("UserAccountOrganisationID");


--
-- TOC entry 8192 (class 2606 OID 50280)
-- Name: fk_UserAccountOrganisationUnit_Organisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountOrganisation"
    ADD CONSTRAINT "fk_UserAccountOrganisationUnit_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES "Organisation"("OrganisationID");


--
-- TOC entry 8193 (class 2606 OID 50285)
-- Name: fk_UserAccountOrganisationUnit_OrganisationUnit; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountOrganisation"
    ADD CONSTRAINT "fk_UserAccountOrganisationUnit_OrganisationUnit" FOREIGN KEY ("OrganisationUnitID") REFERENCES "OrganisationUnit"("OrganisationUnitID");


--
-- TOC entry 8194 (class 2606 OID 50290)
-- Name: fk_UserAccountOrganisation_Contact; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountOrganisation"
    ADD CONSTRAINT "fk_UserAccountOrganisation_Contact" FOREIGN KEY ("PrimaryContactID") REFERENCES "Contact"("ContactID");


--
-- TOC entry 8195 (class 2606 OID 50295)
-- Name: fk_UserAccountOrganisation_UserType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountOrganisation"
    ADD CONSTRAINT "fk_UserAccountOrganisation_UserType" FOREIGN KEY ("UserTypeID") REFERENCES "UserType"("UserTypeID");


--
-- TOC entry 8187 (class 2606 OID 50300)
-- Name: fk_UserAccounts_ID; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountArchive"
    ADD CONSTRAINT "fk_UserAccounts_ID" FOREIGN KEY ("UserID") REFERENCES "UserAccounts"("ID");


--
-- TOC entry 8196 (class 2606 OID 50305)
-- Name: fk_UserAccunts; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "UserAccountOrganisation"
    ADD CONSTRAINT "fk_UserAccunts" FOREIGN KEY ("UserID") REFERENCES "UserAccounts"("ID");


--
-- TOC entry 8134 (class 2606 OID 50310)
-- Name: fk_UserShoppingCartIteductSpecificationAttributeOption; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCartItemProductSpecification"
    ADD CONSTRAINT "fk_UserShoppingCartIteductSpecificationAttributeOption" FOREIGN KEY ("ProductSpecificationAttributeOptionID") REFERENCES "ProductSpecificationAttributeOption"("ProductSpecificationAttributeOptionID");


--
-- TOC entry 8132 (class 2606 OID 50315)
-- Name: fk_UserShoppingCartItemProductAttribute_ProductVariantAttribute; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCartItemProductAttribute"
    ADD CONSTRAINT "fk_UserShoppingCartItemProductAttribute_ProductVariantAttribute" FOREIGN KEY ("ProductVariantAttributeValueID") REFERENCES "ProductVariantAttributeValue"("ProductVariantAttributeValueID");


--
-- TOC entry 8133 (class 2606 OID 50320)
-- Name: fk_UserShoppingCartItemProductAttribute_UserShoppingCartItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCartItemProductAttribute"
    ADD CONSTRAINT "fk_UserShoppingCartItemProductAttribute_UserShoppingCartItem" FOREIGN KEY ("ShoppingCartItemID") REFERENCES "ShoppingCartItem"("ShoppingCartItemID");


--
-- TOC entry 8135 (class 2606 OID 50325)
-- Name: fk_UserShoppingCartItemProductSpecification_UserShoppingCartIte; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCartItemProductSpecification"
    ADD CONSTRAINT "fk_UserShoppingCartItemProductSpecification_UserShoppingCartIte" FOREIGN KEY ("ShoppingCartItemID") REFERENCES "ShoppingCartItem"("ShoppingCartItemID");


--
-- TOC entry 8130 (class 2606 OID 50330)
-- Name: fk_UserShoppingCartItem_Product; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCartItem"
    ADD CONSTRAINT "fk_UserShoppingCartItem_Product" FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 8131 (class 2606 OID 50335)
-- Name: fk_UserShoppingCartItem_UserShoppingCart; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCartItem"
    ADD CONSTRAINT "fk_UserShoppingCartItem_UserShoppingCart" FOREIGN KEY ("ShoppingCartID") REFERENCES "ShoppingCart"("ShoppingCartID");


--
-- TOC entry 8136 (class 2606 OID 50340)
-- Name: fk_UserShoppingroductSpecificationAttribute; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ShoppingCartItemProductSpecification"
    ADD CONSTRAINT "fk_UserShoppingroductSpecificationAttribute" FOREIGN KEY ("ProductSpecificationAttributeID") REFERENCES "ProductSpecificationAttribute"("ProductSpecificationAttributeID");


--
-- TOC entry 8209 (class 2606 OID 50345)
-- Name: fk_WorflowParameterTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorflowParameterTemplate"
    ADD CONSTRAINT "fk_WorflowParameterTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8215 (class 2606 OID 50350)
-- Name: fk_WorkflowActionCompleteConditionTe; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionCompleteConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowActionCompleteConditionTe" FOREIGN KEY ("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowActionTemplate"("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8216 (class 2606 OID 50355)
-- Name: fk_WorkflowActionCompleteConditionTemate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionCompleteConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowActionCompleteConditionTemate" FOREIGN KEY ("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowConditionTemplate"("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8213 (class 2606 OID 50360)
-- Name: fk_WorkflowActionCompleteCondition_WorkflowAction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionCompleteCondition"
    ADD CONSTRAINT "fk_WorkflowActionCompleteCondition_WorkflowAction" FOREIGN KEY ("WorkflowActionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowAction"("WorkflowActionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8214 (class 2606 OID 50365)
-- Name: fk_WorkflowActionCompleteCondition_WorkflowCondition; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionCompleteCondition"
    ADD CONSTRAINT "fk_WorkflowActionCompleteCondition_WorkflowCondition" FOREIGN KEY ("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCondition"("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8219 (class 2606 OID 50370)
-- Name: fk_WorkflowActionExecuteCommandTemplate_WorkflowActionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionExecuteCommandTemplate"
    ADD CONSTRAINT "fk_WorkflowActionExecuteCommandTemplate_WorkflowActionTemplate" FOREIGN KEY ("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowActionTemplate"("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8220 (class 2606 OID 50375)
-- Name: fk_WorkflowActionExecuteCommandTemplate_WorkflowCommandTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionExecuteCommandTemplate"
    ADD CONSTRAINT "fk_WorkflowActionExecuteCommandTemplate_WorkflowCommandTemplate" FOREIGN KEY ("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowCommandTemplate"("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8217 (class 2606 OID 50380)
-- Name: fk_WorkflowActionExecuteCommand_WorkflowAction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionExecuteCommand"
    ADD CONSTRAINT "fk_WorkflowActionExecuteCommand_WorkflowAction" FOREIGN KEY ("WorkflowActionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowAction"("WorkflowActionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8218 (class 2606 OID 50385)
-- Name: fk_WorkflowActionExecuteCommand_WorkflowCommand; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionExecuteCommand"
    ADD CONSTRAINT "fk_WorkflowActionExecuteCommand_WorkflowCommand" FOREIGN KEY ("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCommand"("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8222 (class 2606 OID 50390)
-- Name: fk_WorkflowActionNotificationTemplate_WorkflowActionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionNotificationTemplate"
    ADD CONSTRAINT "fk_WorkflowActionNotificationTemplate_WorkflowActionTemplate" FOREIGN KEY ("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowActionTemplate"("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8228 (class 2606 OID 50395)
-- Name: fk_WorkflowActionParameterNotificationConstructTemplate_Notific; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionParameterNotificationConstructTemplate"
    ADD CONSTRAINT "fk_WorkflowActionParameterNotificationConstructTemplate_Notific" FOREIGN KEY ("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber") REFERENCES "NotificationConstructTemplate"("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber");


--
-- TOC entry 8226 (class 2606 OID 50400)
-- Name: fk_WorkflowActionParameterNotificationConstruct_NotificationCon; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionParameterNotificationConstruct"
    ADD CONSTRAINT "fk_WorkflowActionParameterNotificationConstruct_NotificationCon" FOREIGN KEY ("NotificationConstructID", "NotificationConstructVersionNumber") REFERENCES "NotificationConstruct"("NotificationConstructID", "NotificationConstructVersionNumber");


--
-- TOC entry 8223 (class 2606 OID 50405)
-- Name: fk_WorkflowActionParameter_WorkflowAction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionParameter"
    ADD CONSTRAINT "fk_WorkflowActionParameter_WorkflowAction" FOREIGN KEY ("WorkflowActionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowAction"("WorkflowActionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8224 (class 2606 OID 50410)
-- Name: fk_WorkflowActionParameter_WorkflowParameter; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionParameter"
    ADD CONSTRAINT "fk_WorkflowActionParameter_WorkflowParameter" FOREIGN KEY ("WorkflowParameterID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowParameter"("WorkflowParameterID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8229 (class 2606 OID 50415)
-- Name: fk_WorkflowActionParamter_WorkflowActionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionParameterTemplate"
    ADD CONSTRAINT "fk_WorkflowActionParamter_WorkflowActionTemplate" FOREIGN KEY ("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowActionTemplate"("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8230 (class 2606 OID 50420)
-- Name: fk_WorkflowActionParamter_WorkflowParameterTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionParameterTemplate"
    ADD CONSTRAINT "fk_WorkflowActionParamter_WorkflowParameterTemplate" FOREIGN KEY ("WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowParameterTemplate"("WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8233 (class 2606 OID 50425)
-- Name: fk_WorkflowActionPostCommandTemplate_WorkflowActionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionPostCommandTemplate"
    ADD CONSTRAINT "fk_WorkflowActionPostCommandTemplate_WorkflowActionTemplate" FOREIGN KEY ("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowActionTemplate"("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8234 (class 2606 OID 50430)
-- Name: fk_WorkflowActionPostCommandTemplate_WorkflowCommandTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionPostCommandTemplate"
    ADD CONSTRAINT "fk_WorkflowActionPostCommandTemplate_WorkflowCommandTemplate" FOREIGN KEY ("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowCommandTemplate"("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8231 (class 2606 OID 50435)
-- Name: fk_WorkflowActionPostCommand_WorkflowAction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionPostCommand"
    ADD CONSTRAINT "fk_WorkflowActionPostCommand_WorkflowAction" FOREIGN KEY ("WorkflowActionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowAction"("WorkflowActionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8237 (class 2606 OID 50440)
-- Name: fk_WorkflowActionPreCommandTemplate_WorkflowActionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionPreCommandTemplate"
    ADD CONSTRAINT "fk_WorkflowActionPreCommandTemplate_WorkflowActionTemplate" FOREIGN KEY ("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowActionTemplate"("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8238 (class 2606 OID 50445)
-- Name: fk_WorkflowActionPreCommandTemplate_WorkflowCommandTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionPreCommandTemplate"
    ADD CONSTRAINT "fk_WorkflowActionPreCommandTemplate_WorkflowCommandTemplate" FOREIGN KEY ("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowCommandTemplate"("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8235 (class 2606 OID 50450)
-- Name: fk_WorkflowActionPreCommand_WorkflowAction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionPreCommand"
    ADD CONSTRAINT "fk_WorkflowActionPreCommand_WorkflowAction" FOREIGN KEY ("WorkflowActionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowAction"("WorkflowActionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8236 (class 2606 OID 50455)
-- Name: fk_WorkflowActionPreCommand_WorkflowCommand; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionPreCommand"
    ADD CONSTRAINT "fk_WorkflowActionPreCommand_WorkflowCommand" FOREIGN KEY ("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCommand"("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8239 (class 2606 OID 50460)
-- Name: fk_WorkflowActionProductPlaceholder_WorkflowActionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionProductPlaceholder"
    ADD CONSTRAINT "fk_WorkflowActionProductPlaceholder_WorkflowActionTemplate" FOREIGN KEY ("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowActionTemplate"("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8242 (class 2606 OID 50465)
-- Name: fk_WorkflowActionStartConditionTememplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionStartConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowActionStartConditionTememplate" FOREIGN KEY ("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowConditionTemplate"("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8243 (class 2606 OID 50470)
-- Name: fk_WorkflowActionStartConditionTemplate_WorkflowActionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionStartConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowActionStartConditionTemplate_WorkflowActionTemplate" FOREIGN KEY ("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowActionTemplate"("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8240 (class 2606 OID 50475)
-- Name: fk_WorkflowActionStartCondition_WorkflowAction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionStartCondition"
    ADD CONSTRAINT "fk_WorkflowActionStartCondition_WorkflowAction" FOREIGN KEY ("WorkflowActionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowAction"("WorkflowActionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8241 (class 2606 OID 50480)
-- Name: fk_WorkflowActionStartCondition_WorkflowCondition; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionStartCondition"
    ADD CONSTRAINT "fk_WorkflowActionStartCondition_WorkflowCondition" FOREIGN KEY ("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCondition"("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8221 (class 2606 OID 50485)
-- Name: fk_WorkflowActionStateExecutionTemplate_WorkflowActionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionExecutionTemplate"
    ADD CONSTRAINT "fk_WorkflowActionStateExecutionTemplate_WorkflowActionTemplate" FOREIGN KEY ("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowActionTemplate"("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8245 (class 2606 OID 50490)
-- Name: fk_WorkflowActionTemplate_WorkflowObjectTypeTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionTemplate"
    ADD CONSTRAINT "fk_WorkflowActionTemplate_WorkflowObjectTypeTemplate" FOREIGN KEY ("WorkflowObjectTypeTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowObjectTypeTemplate"("WorkflowObjectTypeTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8246 (class 2606 OID 50495)
-- Name: fk_WorkflowActionValidationTemplate_WorkflowActionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionValidationTemplate"
    ADD CONSTRAINT "fk_WorkflowActionValidationTemplate_WorkflowActionTemplate" FOREIGN KEY ("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowActionTemplate"("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8211 (class 2606 OID 50500)
-- Name: fk_WorkflowAction_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowAction"
    ADD CONSTRAINT "fk_WorkflowAction_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8212 (class 2606 OID 50505)
-- Name: fk_WorkflowAction_WorkflowObjectType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowAction"
    ADD CONSTRAINT "fk_WorkflowAction_WorkflowObjectType" FOREIGN KEY ("WorkflowObjectTypeID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowObjectType"("WorkflowObjectTypeID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8254 (class 2606 OID 50510)
-- Name: fk_WorkflowClaimTemplate_Role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowClaimTemplate"
    ADD CONSTRAINT "fk_WorkflowClaimTemplate_Role" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 8255 (class 2606 OID 50515)
-- Name: fk_WorkflowClaimTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowClaimTemplate"
    ADD CONSTRAINT "fk_WorkflowClaimTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8247 (class 2606 OID 50520)
-- Name: fk_WorkflowClaim_Role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowClaim"
    ADD CONSTRAINT "fk_WorkflowClaim_Role" FOREIGN KEY ("RoleID") REFERENCES "Role"("RoleID");


--
-- TOC entry 8248 (class 2606 OID 50525)
-- Name: fk_WorkflowClaim_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowClaim"
    ADD CONSTRAINT "fk_WorkflowClaim_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8266 (class 2606 OID 50530)
-- Name: fk_WorkflowCommandConditionTemplate_WorkflowCommandTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommandConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowCommandConditionTemplate_WorkflowCommandTemplate" FOREIGN KEY ("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowCommandTemplate"("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8267 (class 2606 OID 50535)
-- Name: fk_WorkflowCommandConditionTemplate_WorkflowConditionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommandConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowCommandConditionTemplate_WorkflowConditionTemplate" FOREIGN KEY ("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowConditionTemplate"("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8268 (class 2606 OID 50540)
-- Name: fk_WorkflowCommandConditionTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommandConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowCommandConditionTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8263 (class 2606 OID 50545)
-- Name: fk_WorkflowCommandCondition_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommandCondition"
    ADD CONSTRAINT "fk_WorkflowCommandCondition_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8264 (class 2606 OID 50550)
-- Name: fk_WorkflowCommandCondition_WorkflowCommand; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommandCondition"
    ADD CONSTRAINT "fk_WorkflowCommandCondition_WorkflowCommand" FOREIGN KEY ("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCommand"("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8265 (class 2606 OID 50555)
-- Name: fk_WorkflowCommandCondition_WorkflowCondition; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommandCondition"
    ADD CONSTRAINT "fk_WorkflowCommandCondition_WorkflowCondition" FOREIGN KEY ("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCondition"("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8272 (class 2606 OID 50560)
-- Name: fk_WorkflowCommandParameterTemplate_WorkflowCommandTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommandParameterTemplate"
    ADD CONSTRAINT "fk_WorkflowCommandParameterTemplate_WorkflowCommandTemplate" FOREIGN KEY ("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowCommandTemplate"("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8273 (class 2606 OID 50565)
-- Name: fk_WorkflowCommandParameterTemplate_WorkflowParameterTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommandParameterTemplate"
    ADD CONSTRAINT "fk_WorkflowCommandParameterTemplate_WorkflowParameterTemplate" FOREIGN KEY ("WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowParameterTemplate"("WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8274 (class 2606 OID 50570)
-- Name: fk_WorkflowCommandParameterTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommandParameterTemplate"
    ADD CONSTRAINT "fk_WorkflowCommandParameterTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8269 (class 2606 OID 50575)
-- Name: fk_WorkflowCommandParameter_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommandParameter"
    ADD CONSTRAINT "fk_WorkflowCommandParameter_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8270 (class 2606 OID 50580)
-- Name: fk_WorkflowCommandParameter_WorkflowCommand; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommandParameter"
    ADD CONSTRAINT "fk_WorkflowCommandParameter_WorkflowCommand" FOREIGN KEY ("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCommand"("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8271 (class 2606 OID 50585)
-- Name: fk_WorkflowCommandParameter_WorkflowParameter; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommandParameter"
    ADD CONSTRAINT "fk_WorkflowCommandParameter_WorkflowParameter" FOREIGN KEY ("WorkflowParameterID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowParameter"("WorkflowParameterID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8275 (class 2606 OID 50590)
-- Name: fk_WorkflowCommandTemplate_WorkflowObjectTypeTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommandTemplate"
    ADD CONSTRAINT "fk_WorkflowCommandTemplate_WorkflowObjectTypeTemplate" FOREIGN KEY ("WorkflowObjectTypeTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowObjectTypeTemplate"("WorkflowObjectTypeTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8276 (class 2606 OID 50595)
-- Name: fk_WorkflowCommandTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommandTemplate"
    ADD CONSTRAINT "fk_WorkflowCommandTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8261 (class 2606 OID 50600)
-- Name: fk_WorkflowCommand_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommand"
    ADD CONSTRAINT "fk_WorkflowCommand_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8262 (class 2606 OID 50605)
-- Name: fk_WorkflowCommand_WorkflowObjectType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCommand"
    ADD CONSTRAINT "fk_WorkflowCommand_WorkflowObjectType" FOREIGN KEY ("WorkflowObjectTypeID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowObjectType"("WorkflowObjectTypeID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8281 (class 2606 OID 50610)
-- Name: fk_WorkflowConditionParameterTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowConditionParameterTemplate"
    ADD CONSTRAINT "fk_WorkflowConditionParameterTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8278 (class 2606 OID 50615)
-- Name: fk_WorkflowConditionParameter_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowConditionParameter"
    ADD CONSTRAINT "fk_WorkflowConditionParameter_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8279 (class 2606 OID 50620)
-- Name: fk_WorkflowConditionParameter_WorkflowCondition; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowConditionParameter"
    ADD CONSTRAINT "fk_WorkflowConditionParameter_WorkflowCondition" FOREIGN KEY ("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCondition"("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8282 (class 2606 OID 50625)
-- Name: fk_WorkflowConditionParameter_WorkflowConditionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowConditionParameterTemplate"
    ADD CONSTRAINT "fk_WorkflowConditionParameter_WorkflowConditionTemplate" FOREIGN KEY ("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowConditionTemplate"("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8280 (class 2606 OID 50630)
-- Name: fk_WorkflowConditionParameter_WorkflowParameter; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowConditionParameter"
    ADD CONSTRAINT "fk_WorkflowConditionParameter_WorkflowParameter" FOREIGN KEY ("WorkflowParameterID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowParameter"("WorkflowParameterID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8283 (class 2606 OID 50635)
-- Name: fk_WorkflowConditionParameter_WorkflowParameterTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowConditionParameterTemplate"
    ADD CONSTRAINT "fk_WorkflowConditionParameter_WorkflowParameterTemplate" FOREIGN KEY ("WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowParameterTemplate"("WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8284 (class 2606 OID 50640)
-- Name: fk_WorkflowConditionTemplate_WorkflowObjectTypeTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowConditionTemplate_WorkflowObjectTypeTemplate" FOREIGN KEY ("WorkflowObjectTypeTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowObjectTypeTemplate"("WorkflowObjectTypeTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8285 (class 2606 OID 50645)
-- Name: fk_WorkflowConditionTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowConditionTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8277 (class 2606 OID 50650)
-- Name: fk_WorkflowCondition_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowCondition"
    ADD CONSTRAINT "fk_WorkflowCondition_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8288 (class 2606 OID 50655)
-- Name: fk_WorkflowDecisionEflowDecision; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionError"
    ADD CONSTRAINT "fk_WorkflowDecisionEflowDecision" FOREIGN KEY ("NextWorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowDecision"("WorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8291 (class 2606 OID 50660)
-- Name: fk_WorkflowDecisionErrorActionTemplate_WorkflowActionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionErrorTemplate"
    ADD CONSTRAINT "fk_WorkflowDecisionErrorActionTemplate_WorkflowActionTemplate" FOREIGN KEY ("NextWorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowActionTemplate"("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8292 (class 2606 OID 50665)
-- Name: fk_WorkflowDecisionErrorActionTemplate_WorkflowDecisionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionErrorTemplate"
    ADD CONSTRAINT "fk_WorkflowDecisionErrorActionTemplate_WorkflowDecisionTemplate" FOREIGN KEY ("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowDecisionTemplate"("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8289 (class 2606 OID 50670)
-- Name: fk_WorkflowDecisionErrorAction_WorkflowAction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionError"
    ADD CONSTRAINT "fk_WorkflowDecisionErrorAction_WorkflowAction" FOREIGN KEY ("NextWorkflowActionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowAction"("WorkflowActionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8290 (class 2606 OID 50675)
-- Name: fk_WorkflowDecisionErrorAction_WorkflowDecision; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionError"
    ADD CONSTRAINT "fk_WorkflowDecisionErrorAction_WorkflowDecision" FOREIGN KEY ("WorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowDecision"("WorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8293 (class 2606 OID 50680)
-- Name: fk_WorkflowDecisionErrorTDecisionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionErrorTemplate"
    ADD CONSTRAINT "fk_WorkflowDecisionErrorTDecisionTemplate" FOREIGN KEY ("NextWorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowDecisionTemplate"("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8294 (class 2606 OID 50685)
-- Name: fk_WorkflowDecisionExecuteCate_WorkflowDecisionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionExecuteCommand"
    ADD CONSTRAINT "fk_WorkflowDecisionExecuteCate_WorkflowDecisionTemplate" FOREIGN KEY ("WorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowDecision"("WorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8295 (class 2606 OID 50690)
-- Name: fk_WorkflowDecisionExecuteCommandTemplate_WorkflowDecisionTempl; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionExecuteCommandTemplate"
    ADD CONSTRAINT "fk_WorkflowDecisionExecuteCommandTemplate_WorkflowDecisionTempl" FOREIGN KEY ("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowDecisionTemplate"("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8296 (class 2606 OID 50695)
-- Name: fk_WorkflowDecisionFailukflowDecision; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionFailure"
    ADD CONSTRAINT "fk_WorkflowDecisionFailukflowDecision" FOREIGN KEY ("NextWorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowDecision"("WorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8300 (class 2606 OID 50700)
-- Name: fk_WorkflowDecisionFailureActionTemplate_WorkflowActionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionFailureTemplate"
    ADD CONSTRAINT "fk_WorkflowDecisionFailureActionTemplate_WorkflowActionTemplate" FOREIGN KEY ("NextWorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowActionTemplate"("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8297 (class 2606 OID 50705)
-- Name: fk_WorkflowDecisionFailureAction_WorkflowAction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionFailure"
    ADD CONSTRAINT "fk_WorkflowDecisionFailureAction_WorkflowAction" FOREIGN KEY ("NextWorkflowActionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowAction"("WorkflowActionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8298 (class 2606 OID 50710)
-- Name: fk_WorkflowDecisionFailureAction_WorkflowDecision; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionFailure"
    ADD CONSTRAINT "fk_WorkflowDecisionFailureAction_WorkflowDecision" FOREIGN KEY ("WorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowDecision"("WorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8301 (class 2606 OID 50715)
-- Name: fk_WorkflowDecisionFrkflowDecisionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionFailureTemplate"
    ADD CONSTRAINT "fk_WorkflowDecisionFrkflowDecisionTemplate" FOREIGN KEY ("NextWorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowDecisionTemplate"("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8304 (class 2606 OID 50720)
-- Name: fk_WorkflowDecisionParameterTemplate_WorkflowParameterTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionParameterTemplate"
    ADD CONSTRAINT "fk_WorkflowDecisionParameterTemplate_WorkflowParameterTemplate" FOREIGN KEY ("WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowParameterTemplate"("WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8302 (class 2606 OID 50725)
-- Name: fk_WorkflowDecisionParameter_WorkflowParameter; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionParameter"
    ADD CONSTRAINT "fk_WorkflowDecisionParameter_WorkflowParameter" FOREIGN KEY ("WorkflowParameterID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowParameter"("WorkflowParameterID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8310 (class 2606 OID 50730)
-- Name: fk_WorkflowDecisionSuccessActionTemplate_WorkflowActionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionSuccessTemplate"
    ADD CONSTRAINT "fk_WorkflowDecisionSuccessActionTemplate_WorkflowActionTemplate" FOREIGN KEY ("NextWorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowActionTemplate"("WorkflowActionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8306 (class 2606 OID 50735)
-- Name: fk_WorkflowDecisionSuccessAction_WorkflowAction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionSuccess"
    ADD CONSTRAINT "fk_WorkflowDecisionSuccessAction_WorkflowAction" FOREIGN KEY ("NextWorkflowActionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowAction"("WorkflowActionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8307 (class 2606 OID 50740)
-- Name: fk_WorkflowDecisionSuccessAction_WorkflowDecision; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionSuccess"
    ADD CONSTRAINT "fk_WorkflowDecisionSuccessAction_WorkflowDecision" FOREIGN KEY ("WorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowDecision"("WorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8311 (class 2606 OID 50745)
-- Name: fk_WorkflowDecisionSuccessTemp; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionSuccessTemplate"
    ADD CONSTRAINT "fk_WorkflowDecisionSuccessTemp" FOREIGN KEY ("NextWorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowDecisionTemplate"("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8312 (class 2606 OID 50750)
-- Name: fk_WorkflowDecisionTemplate_WorkflowObjectTypeTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionTemplate"
    ADD CONSTRAINT "fk_WorkflowDecisionTemplate_WorkflowObjectTypeTemplate" FOREIGN KEY ("WorkflowObjectTypeTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowObjectTypeTemplate"("WorkflowObjectTypeTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8313 (class 2606 OID 50755)
-- Name: fk_WorkflowDecisionTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionTemplate"
    ADD CONSTRAINT "fk_WorkflowDecisionTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8286 (class 2606 OID 50760)
-- Name: fk_WorkflowDecision_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecision"
    ADD CONSTRAINT "fk_WorkflowDecision_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8287 (class 2606 OID 50765)
-- Name: fk_WorkflowDecision_WorkflowObjectType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecision"
    ADD CONSTRAINT "fk_WorkflowDecision_WorkflowObjectType" FOREIGN KEY ("WorkflowObjectTypeID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowObjectType"("WorkflowObjectTypeID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8308 (class 2606 OID 50770)
-- Name: fk_WorkflowDecisioorkflowDecision; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionSuccess"
    ADD CONSTRAINT "fk_WorkflowDecisioorkflowDecision" FOREIGN KEY ("NextWorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowDecision"("WorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8314 (class 2606 OID 50775)
-- Name: fk_WorkflowHierarchy_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowHierarchy"
    ADD CONSTRAINT "fk_WorkflowHierarchy_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8315 (class 2606 OID 50780)
-- Name: fk_WorkflowHierarchy_WorkflowTransistion; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowHierarchy"
    ADD CONSTRAINT "fk_WorkflowHierarchy_WorkflowTransistion" FOREIGN KEY ("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowTransistion"("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8320 (class 2606 OID 50785)
-- Name: fk_WorkflowInstanceExecutionDataItem_Workfl; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowInstanceExecutionDataItem"
    ADD CONSTRAINT "fk_WorkflowInstanceExecutionDataItem_Workfl" FOREIGN KEY ("WorkflowInstanceExecutionStatusEventID") REFERENCES "WorkflowInstanceExecutionStatusEvent"("WorkflowInstanceExecutionStatusEventID");


--
-- TOC entry 8321 (class 2606 OID 50790)
-- Name: fk_WorkflowInstanceExecutionSta; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowInstanceExecutionStatusEvent"
    ADD CONSTRAINT "fk_WorkflowInstanceExecutionSta" FOREIGN KEY ("WorkflowInstanceExecutionID", "WorkflowInstanceSessionID", "WorkflowID", "WorkflowVersionNumber", "WorkflowInstanceID") REFERENCES "WorkflowInstanceExecution"("WorkflowInstanceExecutionID", "WorkflowInstanceSessionID", "WorkflowID", "WorkflowVersionNumber", "WorkflowInstanceID");


--
-- TOC entry 8232 (class 2606 OID 50795)
-- Name: fk_WorkflowInstanceExecutionStatusEve; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowActionPostCommand"
    ADD CONSTRAINT "fk_WorkflowInstanceExecutionStatusEve" FOREIGN KEY ("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCommand"("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8322 (class 2606 OID 50800)
-- Name: fk_WorkflowInstanceExecutionStatusEvent_WorkflowExecutionStatus; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowInstanceExecutionStatusEvent"
    ADD CONSTRAINT "fk_WorkflowInstanceExecutionStatusEvent_WorkflowExecutionStatus" FOREIGN KEY ("WorkflowExecutionStatusID") REFERENCES "WorkflowExecutionStatus"("WorkflowExecutionStatusID");


--
-- TOC entry 8323 (class 2606 OID 50805)
-- Name: fk_WorkflowInstanceExecutionTrace_WorkflowInstanceExecution; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowInstanceExecutionTrace"
    ADD CONSTRAINT "fk_WorkflowInstanceExecutionTrace_WorkflowInstanceExecution" FOREIGN KEY ("WorkflowInstanceExecutionID", "WorkflowInstanceSessionID", "WorkflowID", "WorkflowVersionNumber", "WorkflowInstanceID") REFERENCES "WorkflowInstanceExecution"("WorkflowInstanceExecutionID", "WorkflowInstanceSessionID", "WorkflowID", "WorkflowVersionNumber", "WorkflowInstanceID");


--
-- TOC entry 8319 (class 2606 OID 50810)
-- Name: fk_WorkflowInstanceExecution_WorkflowInstanceSession; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowInstanceExecution"
    ADD CONSTRAINT "fk_WorkflowInstanceExecution_WorkflowInstanceSession" FOREIGN KEY ("WorkflowInstanceSessionID", "WorkflowID", "WorkflowVersionNumber", "WorkflowInstanceID") REFERENCES "WorkflowInstanceSession"("WorkflowInstanceSessionID", "WorkflowID", "WorkflowVersionNumber", "WorkflowInstanceID");


--
-- TOC entry 8324 (class 2606 OID 50815)
-- Name: fk_WorkflowInstanceRestriction_UserAccountOrganisation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowInstanceRestriction"
    ADD CONSTRAINT "fk_WorkflowInstanceRestriction_UserAccountOrganisation" FOREIGN KEY ("UserAccountOrganisationID") REFERENCES "UserAccountOrganisation"("UserAccountOrganisationID");


--
-- TOC entry 8325 (class 2606 OID 50820)
-- Name: fk_WorkflowInstanceRestriction_WorkflowInstance; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowInstanceRestriction"
    ADD CONSTRAINT "fk_WorkflowInstanceRestriction_WorkflowInstance" FOREIGN KEY ("WorkflowInstanceID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowInstance"("WorkflowInstanceID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8326 (class 2606 OID 50825)
-- Name: fk_WorkflowInstanceSession_WorkflowInstance; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowInstanceSession"
    ADD CONSTRAINT "fk_WorkflowInstanceSession_WorkflowInstance" FOREIGN KEY ("WorkflowInstanceID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowInstance"("WorkflowInstanceID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8318 (class 2606 OID 50830)
-- Name: fk_WorkflowInstance_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowInstance"
    ADD CONSTRAINT "fk_WorkflowInstance_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8329 (class 2606 OID 50835)
-- Name: fk_WorkflowMainCompleteConditionTem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainCompleteConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowMainCompleteConditionTem" FOREIGN KEY ("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowConditionTemplate"("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8330 (class 2606 OID 50840)
-- Name: fk_WorkflowMainCompleteConditionTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainCompleteConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowMainCompleteConditionTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8327 (class 2606 OID 50845)
-- Name: fk_WorkflowMainCompleteCondition_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainCompleteCondition"
    ADD CONSTRAINT "fk_WorkflowMainCompleteCondition_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8328 (class 2606 OID 50850)
-- Name: fk_WorkflowMainCompleteCondition_WorkflowCondition; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainCompleteCondition"
    ADD CONSTRAINT "fk_WorkflowMainCompleteCondition_WorkflowCondition" FOREIGN KEY ("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCondition"("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8333 (class 2606 OID 50855)
-- Name: fk_WorkflowMainExecuteCommandTemplate_WorkflowCommandTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainExecuteCommandTemplate"
    ADD CONSTRAINT "fk_WorkflowMainExecuteCommandTemplate_WorkflowCommandTemplate" FOREIGN KEY ("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowCommandTemplate"("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8334 (class 2606 OID 50860)
-- Name: fk_WorkflowMainExecuteCommandTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainExecuteCommandTemplate"
    ADD CONSTRAINT "fk_WorkflowMainExecuteCommandTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8331 (class 2606 OID 50865)
-- Name: fk_WorkflowMainExecuteCommand_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainExecuteCommand"
    ADD CONSTRAINT "fk_WorkflowMainExecuteCommand_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8332 (class 2606 OID 50870)
-- Name: fk_WorkflowMainExecuteCommand_WorkflowCommand; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainExecuteCommand"
    ADD CONSTRAINT "fk_WorkflowMainExecuteCommand_WorkflowCommand" FOREIGN KEY ("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCommand"("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8337 (class 2606 OID 50875)
-- Name: fk_WorkflowMainParameterTemplate_WorkflowParameterTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainParameterTemplate"
    ADD CONSTRAINT "fk_WorkflowMainParameterTemplate_WorkflowParameterTemplate" FOREIGN KEY ("WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowParameterTemplate"("WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8338 (class 2606 OID 50880)
-- Name: fk_WorkflowMainParameterTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainParameterTemplate"
    ADD CONSTRAINT "fk_WorkflowMainParameterTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8335 (class 2606 OID 50885)
-- Name: fk_WorkflowMainParameter_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainParameter"
    ADD CONSTRAINT "fk_WorkflowMainParameter_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8336 (class 2606 OID 50890)
-- Name: fk_WorkflowMainParameter_WorkflowParameter; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainParameter"
    ADD CONSTRAINT "fk_WorkflowMainParameter_WorkflowParameter" FOREIGN KEY ("WorkflowParameterID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowParameter"("WorkflowParameterID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8341 (class 2606 OID 50895)
-- Name: fk_WorkflowMainPostCommandTemplate_WorkflowCommandTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainPostCommandTemplate"
    ADD CONSTRAINT "fk_WorkflowMainPostCommandTemplate_WorkflowCommandTemplate" FOREIGN KEY ("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowCommandTemplate"("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8342 (class 2606 OID 50900)
-- Name: fk_WorkflowMainPostCommandTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainPostCommandTemplate"
    ADD CONSTRAINT "fk_WorkflowMainPostCommandTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8339 (class 2606 OID 50905)
-- Name: fk_WorkflowMainPostCommand_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainPostCommand"
    ADD CONSTRAINT "fk_WorkflowMainPostCommand_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8340 (class 2606 OID 50910)
-- Name: fk_WorkflowMainPostCommand_WorkflowCommand; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainPostCommand"
    ADD CONSTRAINT "fk_WorkflowMainPostCommand_WorkflowCommand" FOREIGN KEY ("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCommand"("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8345 (class 2606 OID 50915)
-- Name: fk_WorkflowMainPreCommandTemplate_WorkflowCommandTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainPreCommandTemplate"
    ADD CONSTRAINT "fk_WorkflowMainPreCommandTemplate_WorkflowCommandTemplate" FOREIGN KEY ("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowCommandTemplate"("WorkflowCommandTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8346 (class 2606 OID 50920)
-- Name: fk_WorkflowMainPreCommandTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainPreCommandTemplate"
    ADD CONSTRAINT "fk_WorkflowMainPreCommandTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8343 (class 2606 OID 50925)
-- Name: fk_WorkflowMainPreCommand_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainPreCommand"
    ADD CONSTRAINT "fk_WorkflowMainPreCommand_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8344 (class 2606 OID 50930)
-- Name: fk_WorkflowMainPreCommand_WorkflowCommand; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainPreCommand"
    ADD CONSTRAINT "fk_WorkflowMainPreCommand_WorkflowCommand" FOREIGN KEY ("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCommand"("WorkflowCommandID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8349 (class 2606 OID 50935)
-- Name: fk_WorkflowMainStartConditionTemplate_WorkflowConditionTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainStartConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowMainStartConditionTemplate_WorkflowConditionTemplate" FOREIGN KEY ("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowConditionTemplate"("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8350 (class 2606 OID 50940)
-- Name: fk_WorkflowMainStartConditionTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainStartConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowMainStartConditionTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8347 (class 2606 OID 50945)
-- Name: fk_WorkflowMainStartCondition_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainStartCondition"
    ADD CONSTRAINT "fk_WorkflowMainStartCondition_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8348 (class 2606 OID 50950)
-- Name: fk_WorkflowMainStartCondition_WorkflowCondition; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowMainStartCondition"
    ADD CONSTRAINT "fk_WorkflowMainStartCondition_WorkflowCondition" FOREIGN KEY ("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCondition"("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8353 (class 2606 OID 50955)
-- Name: fk_WorkflowNotificationConstructTemplate_NotificationConstructT; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowNotificationConstructTemplate"
    ADD CONSTRAINT "fk_WorkflowNotificationConstructTemplate_NotificationConstructT" FOREIGN KEY ("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber") REFERENCES "NotificationConstructTemplate"("NotificationConstructTemplateID", "NotificationConstructTemplateVersionNumber");


--
-- TOC entry 8354 (class 2606 OID 50960)
-- Name: fk_WorkflowNotificationConstructTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowNotificationConstructTemplate"
    ADD CONSTRAINT "fk_WorkflowNotificationConstructTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8351 (class 2606 OID 50965)
-- Name: fk_WorkflowNotificationConstruct_NotificationConstruct; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowNotificationConstruct"
    ADD CONSTRAINT "fk_WorkflowNotificationConstruct_NotificationConstruct" FOREIGN KEY ("NotificationConstructID", "NotificationConstructVersionNumber") REFERENCES "NotificationConstruct"("NotificationConstructID", "NotificationConstructVersionNumber");


--
-- TOC entry 8352 (class 2606 OID 50970)
-- Name: fk_WorkflowNotificationConstruct_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowNotificationConstruct"
    ADD CONSTRAINT "fk_WorkflowNotificationConstruct_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8356 (class 2606 OID 50975)
-- Name: fk_WorkflowObjectTypeTemplate_WorkflowTemplate1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowObjectTypeTemplate"
    ADD CONSTRAINT "fk_WorkflowObjectTypeTemplate_WorkflowTemplate1" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8355 (class 2606 OID 50980)
-- Name: fk_WorkflowObjectType_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowObjectType"
    ADD CONSTRAINT "fk_WorkflowObjectType_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8358 (class 2606 OID 50985)
-- Name: fk_WorkflowParameterTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowParameterTemplate"
    ADD CONSTRAINT "fk_WorkflowParameterTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8357 (class 2606 OID 50990)
-- Name: fk_WorkflowParameter_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowParameter"
    ADD CONSTRAINT "fk_WorkflowParameter_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8256 (class 2606 OID 50995)
-- Name: fk_WorkflowRoleClaimTemplate_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowClaimTemplate"
    ADD CONSTRAINT "fk_WorkflowRoleClaimTemplate_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 8257 (class 2606 OID 51000)
-- Name: fk_WorkflowRoleClaimTemplate_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowClaimTemplate"
    ADD CONSTRAINT "fk_WorkflowRoleClaimTemplate_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 8258 (class 2606 OID 51005)
-- Name: fk_WorkflowRoleClaimTemplate_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowClaimTemplate"
    ADD CONSTRAINT "fk_WorkflowRoleClaimTemplate_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 8259 (class 2606 OID 51010)
-- Name: fk_WorkflowRoleClaimTemplate_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowClaimTemplate"
    ADD CONSTRAINT "fk_WorkflowRoleClaimTemplate_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 8260 (class 2606 OID 51015)
-- Name: fk_WorkflowRoleClaimTemplate_WorkflowRoleTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowClaimTemplate"
    ADD CONSTRAINT "fk_WorkflowRoleClaimTemplate_WorkflowRoleTemplate" FOREIGN KEY ("WorkflowRoleTemplateID") REFERENCES "WorkflowRoleTemplate"("WorkflowRoleTemplateID");


--
-- TOC entry 8249 (class 2606 OID 51020)
-- Name: fk_WorkflowRoleClaim_Operation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowClaim"
    ADD CONSTRAINT "fk_WorkflowRoleClaim_Operation" FOREIGN KEY ("OperationID") REFERENCES "Operation"("OperationID");


--
-- TOC entry 8250 (class 2606 OID 51025)
-- Name: fk_WorkflowRoleClaim_Resource; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowClaim"
    ADD CONSTRAINT "fk_WorkflowRoleClaim_Resource" FOREIGN KEY ("ResourceID") REFERENCES "Resource"("ResourceID");


--
-- TOC entry 8251 (class 2606 OID 51030)
-- Name: fk_WorkflowRoleClaim_State; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowClaim"
    ADD CONSTRAINT "fk_WorkflowRoleClaim_State" FOREIGN KEY ("StateID") REFERENCES "State"("StateID");


--
-- TOC entry 8252 (class 2606 OID 51035)
-- Name: fk_WorkflowRoleClaim_StateItem; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowClaim"
    ADD CONSTRAINT "fk_WorkflowRoleClaim_StateItem" FOREIGN KEY ("StateItemID") REFERENCES "StateItem"("StateItemID");


--
-- TOC entry 8253 (class 2606 OID 51040)
-- Name: fk_WorkflowRoleClaim_WorkflowRole; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowClaim"
    ADD CONSTRAINT "fk_WorkflowRoleClaim_WorkflowRole" FOREIGN KEY ("WorkflowRoleID") REFERENCES "WorkflowRole"("WorkflowRoleID");


--
-- TOC entry 8360 (class 2606 OID 51045)
-- Name: fk_WorkflowRoleTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowRoleTemplate"
    ADD CONSTRAINT "fk_WorkflowRoleTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8359 (class 2606 OID 51050)
-- Name: fk_WorkflowRole_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowRole"
    ADD CONSTRAINT "fk_WorkflowRole_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8363 (class 2606 OID 51055)
-- Name: fk_WorkflowStatusTypeTemplate_StatusTypeTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowStatusTypeTemplate"
    ADD CONSTRAINT "fk_WorkflowStatusTypeTemplate_StatusTypeTemplate" FOREIGN KEY ("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber") REFERENCES "StatusTypeTemplate"("StatusTypeTemplateID", "StatusTypeTemplateVersionNumber");


--
-- TOC entry 8364 (class 2606 OID 51060)
-- Name: fk_WorkflowStatusTypeTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowStatusTypeTemplate"
    ADD CONSTRAINT "fk_WorkflowStatusTypeTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8361 (class 2606 OID 51065)
-- Name: fk_WorkflowStatusType_StatusType; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowStatusType"
    ADD CONSTRAINT "fk_WorkflowStatusType_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES "StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8362 (class 2606 OID 51070)
-- Name: fk_WorkflowStatusType_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowStatusType"
    ADD CONSTRAINT "fk_WorkflowStatusType_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8369 (class 2606 OID 51075)
-- Name: fk_WorkflowTransistionCompleteConditionTempate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionCompleteConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowTransistionCompleteConditionTempate" FOREIGN KEY ("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowConditionTemplate"("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8370 (class 2606 OID 51080)
-- Name: fk_WorkflowTransistionCompleteConditionTemplate_WorkflowTemplat; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionCompleteConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowTransistionCompleteConditionTemplate_WorkflowTemplat" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8371 (class 2606 OID 51085)
-- Name: fk_WorkflowTransistionCompleteConditionTeplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionCompleteConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowTransistionCompleteConditionTeplate" FOREIGN KEY ("WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTransistionTemplate"("WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8366 (class 2606 OID 51090)
-- Name: fk_WorkflowTransistionCompleteCondition_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionCompleteCondition"
    ADD CONSTRAINT "fk_WorkflowTransistionCompleteCondition_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8367 (class 2606 OID 51095)
-- Name: fk_WorkflowTransistionCompleteCondition_WorkflowCondition; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionCompleteCondition"
    ADD CONSTRAINT "fk_WorkflowTransistionCompleteCondition_WorkflowCondition" FOREIGN KEY ("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCondition"("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8368 (class 2606 OID 51100)
-- Name: fk_WorkflowTransistionCompleteCondition_WorkflowTransistion; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionCompleteCondition"
    ADD CONSTRAINT "fk_WorkflowTransistionCompleteCondition_WorkflowTransistion" FOREIGN KEY ("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowTransistion"("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8372 (class 2606 OID 51105)
-- Name: fk_WorkflowTransistionHierarchyTemp; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionHierarchy"
    ADD CONSTRAINT "fk_WorkflowTransistionHierarchyTemp" FOREIGN KEY ("ParentComponentID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowTransistion"("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8375 (class 2606 OID 51110)
-- Name: fk_WorkflowTransistionHierarchyTemplamplate11; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionHierarchyTemplate"
    ADD CONSTRAINT "fk_WorkflowTransistionHierarchyTemplamplate11" FOREIGN KEY ("ParentComponentID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTransistionTemplate"("WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8376 (class 2606 OID 51115)
-- Name: fk_WorkflowTransistionHierarchyTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionHierarchyTemplate"
    ADD CONSTRAINT "fk_WorkflowTransistionHierarchyTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8377 (class 2606 OID 51120)
-- Name: fk_WorkflowTransistionHierarchyTte; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionHierarchyTemplate"
    ADD CONSTRAINT "fk_WorkflowTransistionHierarchyTte" FOREIGN KEY ("ChildComponentID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTransistionTemplate"("WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8373 (class 2606 OID 51125)
-- Name: fk_WorkflowTransistionHierarchy_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionHierarchy"
    ADD CONSTRAINT "fk_WorkflowTransistionHierarchy_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8374 (class 2606 OID 51130)
-- Name: fk_WorkflowTransistionHierarchy_WorkflowTransistion; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionHierarchy"
    ADD CONSTRAINT "fk_WorkflowTransistionHierarchy_WorkflowTransistion" FOREIGN KEY ("ChildComponentID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowTransistion"("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8381 (class 2606 OID 51135)
-- Name: fk_WorkflowTransistionParameterTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionParameterTemplate"
    ADD CONSTRAINT "fk_WorkflowTransistionParameterTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8382 (class 2606 OID 51140)
-- Name: fk_WorkflowTransistionParameterTemplate_ate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionParameterTemplate"
    ADD CONSTRAINT "fk_WorkflowTransistionParameterTemplate_ate" FOREIGN KEY ("WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowParameterTemplate"("WorkflowParameterTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8383 (class 2606 OID 51145)
-- Name: fk_WorkflowTransistionParameterTempplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionParameterTemplate"
    ADD CONSTRAINT "fk_WorkflowTransistionParameterTempplate" FOREIGN KEY ("WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTransistionTemplate"("WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8378 (class 2606 OID 51150)
-- Name: fk_WorkflowTransistionParameter_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionParameter"
    ADD CONSTRAINT "fk_WorkflowTransistionParameter_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8379 (class 2606 OID 51155)
-- Name: fk_WorkflowTransistionParameter_WorkflowParameter; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionParameter"
    ADD CONSTRAINT "fk_WorkflowTransistionParameter_WorkflowParameter" FOREIGN KEY ("WorkflowParameterID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowParameter"("WorkflowParameterID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8380 (class 2606 OID 51160)
-- Name: fk_WorkflowTransistionParameter_WorkflowTransistion; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionParameter"
    ADD CONSTRAINT "fk_WorkflowTransistionParameter_WorkflowTransistion" FOREIGN KEY ("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowTransistion"("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8387 (class 2606 OID 51165)
-- Name: fk_WorkflowTransistionStartConditionTeate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionStartConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowTransistionStartConditionTeate" FOREIGN KEY ("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowConditionTemplate"("WorkflowConditionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8388 (class 2606 OID 51170)
-- Name: fk_WorkflowTransistionStartConditionTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionStartConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowTransistionStartConditionTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8389 (class 2606 OID 51175)
-- Name: fk_WorkflowTransistionStartConditionTete; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionStartConditionTemplate"
    ADD CONSTRAINT "fk_WorkflowTransistionStartConditionTete" FOREIGN KEY ("WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTransistionTemplate"("WorkflowTransistionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8384 (class 2606 OID 51180)
-- Name: fk_WorkflowTransistionStartCondition_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionStartCondition"
    ADD CONSTRAINT "fk_WorkflowTransistionStartCondition_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8385 (class 2606 OID 51185)
-- Name: fk_WorkflowTransistionStartCondition_WorkflowCondition; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionStartCondition"
    ADD CONSTRAINT "fk_WorkflowTransistionStartCondition_WorkflowCondition" FOREIGN KEY ("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowCondition"("WorkflowConditionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8386 (class 2606 OID 51190)
-- Name: fk_WorkflowTransistionStartCondition_WorkflowTransistion; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionStartCondition"
    ADD CONSTRAINT "fk_WorkflowTransistionStartCondition_WorkflowTransistion" FOREIGN KEY ("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowTransistion"("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8396 (class 2606 OID 51195)
-- Name: fk_WorkflowTransistionWorkflowActionTemplate_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionWorkflowActionTemplate"
    ADD CONSTRAINT "fk_WorkflowTransistionWorkflowActionTemplate_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8391 (class 2606 OID 51200)
-- Name: fk_WorkflowTransistionWorkflowAction_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionWorkflowAction"
    ADD CONSTRAINT "fk_WorkflowTransistionWorkflowAction_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8392 (class 2606 OID 51205)
-- Name: fk_WorkflowTransistionWorkflowAction_WorkflowAction; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionWorkflowAction"
    ADD CONSTRAINT "fk_WorkflowTransistionWorkflowAction_WorkflowAction" FOREIGN KEY ("WorkflowActionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowAction"("WorkflowActionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8393 (class 2606 OID 51210)
-- Name: fk_WorkflowTransistionWorkflowAction_WorkflowTransistion; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionWorkflowAction"
    ADD CONSTRAINT "fk_WorkflowTransistionWorkflowAction_WorkflowTransistion" FOREIGN KEY ("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowTransistion"("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8397 (class 2606 OID 51215)
-- Name: fk_WorkflowTransistionWorkflowDecision_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionWorkflowDecision"
    ADD CONSTRAINT "fk_WorkflowTransistionWorkflowDecision_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8398 (class 2606 OID 51220)
-- Name: fk_WorkflowTransistionWorkflowDecision_WorkflowDecision; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionWorkflowDecision"
    ADD CONSTRAINT "fk_WorkflowTransistionWorkflowDecision_WorkflowDecision" FOREIGN KEY ("WorkflowDecisionID", "WorkflowVersionNumber", "WorkflowID") REFERENCES "WorkflowDecision"("WorkflowDecisionID", "WorkflowVersionNumber", "WorkflowID");


--
-- TOC entry 8399 (class 2606 OID 51225)
-- Name: fk_WorkflowTransistionWorkflowDecision_WorkflowTransistion; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistionWorkflowDecision"
    ADD CONSTRAINT "fk_WorkflowTransistionWorkflowDecision_WorkflowTransistion" FOREIGN KEY ("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowTransistion"("WorkflowTransistionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8365 (class 2606 OID 51230)
-- Name: fk_WorkflowTransistion_Workflow; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowTransistion"
    ADD CONSTRAINT "fk_WorkflowTransistion_Workflow" FOREIGN KEY ("WorkflowID", "WorkflowVersionNumber") REFERENCES "Workflow"("WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8210 (class 2606 OID 51235)
-- Name: fk_Workflow_WorkflowTemplate; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "Workflow"
    ADD CONSTRAINT "fk_Workflow_WorkflowTemplate" FOREIGN KEY ("WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowTemplate"("WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8305 (class 2606 OID 51240)
-- Name: fk_Workfommand_WorkflowCommand; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionParameterTemplate"
    ADD CONSTRAINT "fk_Workfommand_WorkflowCommand" FOREIGN KEY ("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber") REFERENCES "WorkflowDecisionTemplate"("WorkflowDecisionTemplateID", "WorkflowTemplateID", "WorkflowTemplateVersionNumber");


--
-- TOC entry 8303 (class 2606 OID 51245)
-- Name: fk_Workfommand_WorkflowCommand; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "WorkflowDecisionParameter"
    ADD CONSTRAINT "fk_Workfommand_WorkflowCommand" FOREIGN KEY ("WorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber") REFERENCES "WorkflowDecision"("WorkflowDecisionID", "WorkflowID", "WorkflowVersionNumber");


--
-- TOC entry 8078 (class 2606 OID 51250)
-- Name: productspecificationattribute_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "ProductSpecificationAttribute"
    ADD CONSTRAINT productspecificationattribute_fk FOREIGN KEY ("ProductID", "ProductVersionID") REFERENCES "Product"("ProductID", "ProductVersionID");


--
-- TOC entry 7965 (class 2606 OID 51255)
-- Name: questionfk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY "PasswordResetSecrets"
    ADD CONSTRAINT questionfk FOREIGN KEY ("QuestionID") REFERENCES "ClassificationType"("ClassificationTypeID") ON DELETE CASCADE;


SET search_path = sts, pg_catalog;

--
-- TOC entry 8418 (class 2606 OID 51260)
-- Name: fk_AccountDocument_Account; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsAccountDocument"
    ADD CONSTRAINT "fk_AccountDocument_Account" FOREIGN KEY ("AccountID") REFERENCES public."Account"("AccountID");


--
-- TOC entry 8419 (class 2606 OID 51265)
-- Name: fk_AccountDocument_StsDocument; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsAccountDocument"
    ADD CONSTRAINT "fk_AccountDocument_StsDocument" FOREIGN KEY ("StsDocumentID") REFERENCES "StsDocument"("StsDocumentID");


--
-- TOC entry 8408 (class 2606 OID 51270)
-- Name: fk_LRDocument_Attachment; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "LRDocument"
    ADD CONSTRAINT "fk_LRDocument_Attachment" FOREIGN KEY ("AttachmentID") REFERENCES public."Attachment"("AttachmentID");


--
-- TOC entry 8409 (class 2606 OID 51275)
-- Name: fk_LRDocument_LRTitle; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "LRDocument"
    ADD CONSTRAINT "fk_LRDocument_LRTitle" FOREIGN KEY ("LRTitleID") REFERENCES "LRTitle"("LRTitleID");


--
-- TOC entry 8410 (class 2606 OID 51280)
-- Name: fk_LRDocument_ProductPurchaseProductTask; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "LRDocument"
    ADD CONSTRAINT "fk_LRDocument_ProductPurchaseProductTask" FOREIGN KEY ("ProductPurchaseProductTaskID") REFERENCES public."ProductPurchaseBusTaskProcessLog"("ProductPurchaseProductTaskID");


--
-- TOC entry 8411 (class 2606 OID 51285)
-- Name: fk_LRRegisterExtract_LRTitle; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "LRRegisterExtract"
    ADD CONSTRAINT "fk_LRRegisterExtract_LRTitle" FOREIGN KEY ("LRTitleID") REFERENCES "LRTitle"("LRTitleID");


--
-- TOC entry 8412 (class 2606 OID 51290)
-- Name: fk_LRRegisterExtract_ProductPurchaseProductTask; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "LRRegisterExtract"
    ADD CONSTRAINT "fk_LRRegisterExtract_ProductPurchaseProductTask" FOREIGN KEY ("ProductPurchaseProductTaskID") REFERENCES public."ProductPurchaseBusTaskProcessLog"("ProductPurchaseProductTaskID");


--
-- TOC entry 8413 (class 2606 OID 51295)
-- Name: fk_LRTitle_Address; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "LRTitle"
    ADD CONSTRAINT "fk_LRTitle_Address" FOREIGN KEY ("AddressID") REFERENCES public."Address"("AddressID");


--
-- TOC entry 8414 (class 2606 OID 51300)
-- Name: fk_LRTitle_ProductPurchaseProductTask; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "LRTitle"
    ADD CONSTRAINT "fk_LRTitle_ProductPurchaseProductTask" FOREIGN KEY ("ProductPurchaseProductTaskID") REFERENCES public."ProductPurchaseBusTaskProcessLog"("ProductPurchaseProductTaskID");


--
-- TOC entry 8415 (class 2606 OID 51305)
-- Name: fk_LRTitle_StsProperty; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "LRTitle"
    ADD CONSTRAINT "fk_LRTitle_StsProperty" FOREIGN KEY ("StsPropertyID") REFERENCES "PropertyDetail"("PropertyDetailID");


--
-- TOC entry 8416 (class 2606 OID 51310)
-- Name: fk_LRTitle_StsSearchProperty; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "LRTitle"
    ADD CONSTRAINT "fk_LRTitle_StsSearchProperty" FOREIGN KEY ("StsSearchPropertyID") REFERENCES "StsSearchPropertyDetail"("StsSearchPropertyDetailID");


--
-- TOC entry 8426 (class 2606 OID 51315)
-- Name: fk_StsActorAuthority_StsActor; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorAuthority"
    ADD CONSTRAINT "fk_StsActorAuthority_StsActor" FOREIGN KEY ("StsActorID") REFERENCES "StsActor"("StsActorID");


--
-- TOC entry 8427 (class 2606 OID 51320)
-- Name: fk_StsActorProcessLog_StatusType; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorProcessLog"
    ADD CONSTRAINT "fk_StsActorProcessLog_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES public."StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8428 (class 2606 OID 51325)
-- Name: fk_StsActorProcessLog_StatusTypeValue; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorProcessLog"
    ADD CONSTRAINT "fk_StsActorProcessLog_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES public."StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 8429 (class 2606 OID 51330)
-- Name: fk_StsActorProcessLog_StsActor; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorProcessLog"
    ADD CONSTRAINT "fk_StsActorProcessLog_StsActor" FOREIGN KEY ("StsActorID") REFERENCES "StsActor"("StsActorID");


--
-- TOC entry 8430 (class 2606 OID 51335)
-- Name: fk_StsActorPurchase_StsActorStructure; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorPurchase"
    ADD CONSTRAINT "fk_StsActorPurchase_StsActorStructure" FOREIGN KEY ("MortgageBrokerStsActorStructureID") REFERENCES "StsActorStructure"("StsActorStructureID");


--
-- TOC entry 8431 (class 2606 OID 51340)
-- Name: fk_StsActorPurchase_StsActorStructure22; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorPurchase"
    ADD CONSTRAINT "fk_StsActorPurchase_StsActorStructure22" FOREIGN KEY ("MortgageApplicantStsActorStructureID") REFERENCES "StsActorStructure"("StsActorStructureID");


--
-- TOC entry 8433 (class 2606 OID 51345)
-- Name: fk_StsActorStructure_Account; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorStructure"
    ADD CONSTRAINT "fk_StsActorStructure_Account" FOREIGN KEY ("SecondaryStsActorAccountID") REFERENCES public."Account"("AccountID");


--
-- TOC entry 8434 (class 2606 OID 51350)
-- Name: fk_StsActorStructure_StsActor; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorStructure"
    ADD CONSTRAINT "fk_StsActorStructure_StsActor" FOREIGN KEY ("PrimaryStsActorID") REFERENCES "StsActor"("StsActorID");


--
-- TOC entry 8435 (class 2606 OID 51355)
-- Name: fk_StsActorStructure_StsActorP; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorStructure"
    ADD CONSTRAINT "fk_StsActorStructure_StsActorP" FOREIGN KEY ("SecondaryStsActorID") REFERENCES "StsActor"("StsActorID");


--
-- TOC entry 8436 (class 2606 OID 51360)
-- Name: fk_StsActorStsSearch_StatusType; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorStsSearch"
    ADD CONSTRAINT "fk_StsActorStsSearch_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES public."StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8437 (class 2606 OID 51365)
-- Name: fk_StsActorStsSearch_StatusTypeValue; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorStsSearch"
    ADD CONSTRAINT "fk_StsActorStsSearch_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES public."StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 8438 (class 2606 OID 51370)
-- Name: fk_StsActorStsSearch_StsActor; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorStsSearch"
    ADD CONSTRAINT "fk_StsActorStsSearch_StsActor" FOREIGN KEY ("StsActorID") REFERENCES "StsActor"("StsActorID");


--
-- TOC entry 8439 (class 2606 OID 51375)
-- Name: fk_StsActorStsSearch_StsActorStructure; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorStsSearch"
    ADD CONSTRAINT "fk_StsActorStsSearch_StsActorStructure" FOREIGN KEY ("StsActorStructureID") REFERENCES "StsActorStructure"("StsActorStructureID");


--
-- TOC entry 8440 (class 2606 OID 51380)
-- Name: fk_StsActorStsSearch_StsSearch; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorStsSearch"
    ADD CONSTRAINT "fk_StsActorStsSearch_StsSearch" FOREIGN KEY ("StsSearchID") REFERENCES "StsSearch"("StsSearchID");


--
-- TOC entry 8441 (class 2606 OID 51385)
-- Name: fk_StsActorStsTransaction_StatusType; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorStsTransaction"
    ADD CONSTRAINT "fk_StsActorStsTransaction_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES public."StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8442 (class 2606 OID 51390)
-- Name: fk_StsActorStsTransaction_StatusTypeValue; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorStsTransaction"
    ADD CONSTRAINT "fk_StsActorStsTransaction_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES public."StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 8443 (class 2606 OID 51395)
-- Name: fk_StsActorStsTransaction_StsActor; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorStsTransaction"
    ADD CONSTRAINT "fk_StsActorStsTransaction_StsActor" FOREIGN KEY ("StsActorID") REFERENCES "StsActor"("StsActorID");


--
-- TOC entry 8444 (class 2606 OID 51400)
-- Name: fk_StsActorStsTransaction_StsActorStructure; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorStsTransaction"
    ADD CONSTRAINT "fk_StsActorStsTransaction_StsActorStructure" FOREIGN KEY ("StsActorStructureID") REFERENCES "StsActorStructure"("StsActorStructureID");


--
-- TOC entry 8445 (class 2606 OID 51405)
-- Name: fk_StsActorStsTransaction_StsTransaction; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorStsTransaction"
    ADD CONSTRAINT "fk_StsActorStsTransaction_StsTransaction" FOREIGN KEY ("StsTransactionID") REFERENCES "StsTransaction"("StsTransactionID");


--
-- TOC entry 8420 (class 2606 OID 51410)
-- Name: fk_StsActor_Contact; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActor"
    ADD CONSTRAINT "fk_StsActor_Contact" FOREIGN KEY ("ActorContactID") REFERENCES public."Contact"("ContactID");


--
-- TOC entry 8421 (class 2606 OID 51415)
-- Name: fk_StsActor_UserAccountOrganisation; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActor"
    ADD CONSTRAINT "fk_StsActor_UserAccountOrganisation" FOREIGN KEY ("CreatedBy") REFERENCES public."UserAccountOrganisation"("UserAccountOrganisationID");


--
-- TOC entry 8448 (class 2606 OID 51420)
-- Name: fk_StsAuthorityStsDocument_StsAuthority; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsAuthorityStsDocument"
    ADD CONSTRAINT "fk_StsAuthorityStsDocument_StsAuthority" FOREIGN KEY ("StsAuthorityID") REFERENCES "StsAuthority"("StsAuthorityID");


--
-- TOC entry 8449 (class 2606 OID 51425)
-- Name: fk_StsAuthorityStsDocument_StsDocument; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsAuthorityStsDocument"
    ADD CONSTRAINT "fk_StsAuthorityStsDocument_StsDocument" FOREIGN KEY ("StsDocumentID") REFERENCES "StsDocument"("StsDocumentID");


--
-- TOC entry 8446 (class 2606 OID 51430)
-- Name: fk_StsAuthority_StsActorAuthority; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsAuthority"
    ADD CONSTRAINT "fk_StsAuthority_StsActorAuthority" FOREIGN KEY ("StsActorAuthorityID") REFERENCES "StsActorAuthority"("StsActorAuthorityID");


--
-- TOC entry 8447 (class 2606 OID 51435)
-- Name: fk_StsAuthority_StsActorStructure; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsAuthority"
    ADD CONSTRAINT "fk_StsAuthority_StsActorStructure" FOREIGN KEY ("StsAuthorityStsActorStructureID") REFERENCES "StsActorStructure"("StsActorStructureID");


--
-- TOC entry 8451 (class 2606 OID 51440)
-- Name: fk_StsDocumentProcessLog_Contact; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsDocumentProcessLog"
    ADD CONSTRAINT "fk_StsDocumentProcessLog_Contact" FOREIGN KEY ("StatusChangedByContactID") REFERENCES public."Contact"("ContactID");


--
-- TOC entry 8452 (class 2606 OID 51445)
-- Name: fk_StsDocumentProcessLog_StatusType; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsDocumentProcessLog"
    ADD CONSTRAINT "fk_StsDocumentProcessLog_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES public."StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8453 (class 2606 OID 51450)
-- Name: fk_StsDocumentProcessLog_StatusTypeValue; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsDocumentProcessLog"
    ADD CONSTRAINT "fk_StsDocumentProcessLog_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES public."StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 8454 (class 2606 OID 51455)
-- Name: fk_StsDocumentProcessLog_StsDocument; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsDocumentProcessLog"
    ADD CONSTRAINT "fk_StsDocumentProcessLog_StsDocument" FOREIGN KEY ("StsDocumentID") REFERENCES "StsDocument"("StsDocumentID");


--
-- TOC entry 8455 (class 2606 OID 51460)
-- Name: fk_StsDocumentProcessLog_UserAccountOrganisation; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsDocumentProcessLog"
    ADD CONSTRAINT "fk_StsDocumentProcessLog_UserAccountOrganisation" FOREIGN KEY ("StatusChangedBy") REFERENCES public."UserAccountOrganisation"("UserAccountOrganisationID");


--
-- TOC entry 8450 (class 2606 OID 51465)
-- Name: fk_StsDocument_Attachment; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsDocument"
    ADD CONSTRAINT "fk_StsDocument_Attachment" FOREIGN KEY ("AttachmentID") REFERENCES public."Attachment"("AttachmentID");


--
-- TOC entry 8456 (class 2606 OID 51470)
-- Name: fk_StsInviteProcessLog_StatusType; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsInviteProcessLog"
    ADD CONSTRAINT "fk_StsInviteProcessLog_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES public."StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8457 (class 2606 OID 51475)
-- Name: fk_StsInviteProcessLog_StatusTypeValue; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsInviteProcessLog"
    ADD CONSTRAINT "fk_StsInviteProcessLog_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES public."StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 8458 (class 2606 OID 51480)
-- Name: fk_StsInviteProcessLog_StsInvite; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsInviteProcessLog"
    ADD CONSTRAINT "fk_StsInviteProcessLog_StsInvite" FOREIGN KEY ("StsInviteID") REFERENCES "StsInvite"("StsInviteID");


--
-- TOC entry 8432 (class 2606 OID 51485)
-- Name: fk_StsMortgageShare_StsActor; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActorPurchase"
    ADD CONSTRAINT "fk_StsMortgageShare_StsActor" FOREIGN KEY ("StsActorID") REFERENCES "StsActor"("StsActorID");


--
-- TOC entry 8417 (class 2606 OID 51490)
-- Name: fk_StsProperty_Address; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "PropertyDetail"
    ADD CONSTRAINT "fk_StsProperty_Address" FOREIGN KEY ("PropertyDetailAddressID") REFERENCES public."Address"("AddressID");


--
-- TOC entry 8470 (class 2606 OID 51495)
-- Name: fk_StsSearchActorDetailDeposit_StsActorPurchase; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsSourceOfFunds"
    ADD CONSTRAINT "fk_StsSearchActorDetailDeposit_StsActorPurchase" FOREIGN KEY ("StsActorPurchaseID") REFERENCES "StsActorPurchase"("StsActorPurchaseID");


--
-- TOC entry 8460 (class 2606 OID 51500)
-- Name: fk_StsSearchDetail_StsSearch; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsSearchDetail"
    ADD CONSTRAINT "fk_StsSearchDetail_StsSearch" FOREIGN KEY ("StsSearchID") REFERENCES "StsSearch"("StsSearchID");


--
-- TOC entry 8422 (class 2606 OID 51505)
-- Name: fk_StsSearchOrganisationActor_Actor; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActor"
    ADD CONSTRAINT "fk_StsSearchOrganisationActor_Actor" FOREIGN KEY ("ActorID") REFERENCES public."Actor"("ActorID");


--
-- TOC entry 8423 (class 2606 OID 51510)
-- Name: fk_StsSearchOrganisationActor_Organisation; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActor"
    ADD CONSTRAINT "fk_StsSearchOrganisationActor_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES public."Organisation"("OrganisationID");


--
-- TOC entry 8424 (class 2606 OID 51515)
-- Name: fk_StsSearchPrimaryActor_Invite; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActor"
    ADD CONSTRAINT "fk_StsSearchPrimaryActor_Invite" FOREIGN KEY ("StsInviteID") REFERENCES "StsInvite"("StsInviteID");


--
-- TOC entry 8425 (class 2606 OID 51520)
-- Name: fk_StsSearchPrimaryActor_UserAccountOrganisation; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsActor"
    ADD CONSTRAINT "fk_StsSearchPrimaryActor_UserAccountOrganisation" FOREIGN KEY ("ActorUserAccountOrganisationID") REFERENCES public."UserAccountOrganisation"("UserAccountOrganisationID");


--
-- TOC entry 8461 (class 2606 OID 51525)
-- Name: fk_StsSearchProcessLog_StatusType; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsSearchProcessLog"
    ADD CONSTRAINT "fk_StsSearchProcessLog_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES public."StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8462 (class 2606 OID 51530)
-- Name: fk_StsSearchProcessLog_StatusTypeValue; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsSearchProcessLog"
    ADD CONSTRAINT "fk_StsSearchProcessLog_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES public."StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 8463 (class 2606 OID 51535)
-- Name: fk_StsSearchProcessLog_StsSearch; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsSearchProcessLog"
    ADD CONSTRAINT "fk_StsSearchProcessLog_StsSearch" FOREIGN KEY ("StsSearchID") REFERENCES "StsSearch"("StsSearchID");


--
-- TOC entry 8464 (class 2606 OID 51540)
-- Name: fk_StsSearchProperty_StsProperty; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsSearchPropertyDetail"
    ADD CONSTRAINT "fk_StsSearchProperty_StsProperty" FOREIGN KEY ("PropertyDetailID") REFERENCES "PropertyDetail"("PropertyDetailID");


--
-- TOC entry 8465 (class 2606 OID 51545)
-- Name: fk_StsSearchProperty_StsSearch; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsSearchPropertyDetail"
    ADD CONSTRAINT "fk_StsSearchProperty_StsSearch" FOREIGN KEY ("StsSearchID") REFERENCES "StsSearch"("StsSearchID");


--
-- TOC entry 8466 (class 2606 OID 51550)
-- Name: fk_StsSearchRelation_StatusType; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsSearchRelation"
    ADD CONSTRAINT "fk_StsSearchRelation_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES public."StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8467 (class 2606 OID 51555)
-- Name: fk_StsSearchRelation_StatusTypeValue; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsSearchRelation"
    ADD CONSTRAINT "fk_StsSearchRelation_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES public."StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 8468 (class 2606 OID 51560)
-- Name: fk_StsSearchRelation_StsSearch; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsSearchRelation"
    ADD CONSTRAINT "fk_StsSearchRelation_StsSearch" FOREIGN KEY ("BuyerStsSearchID") REFERENCES "StsSearch"("StsSearchID");


--
-- TOC entry 8469 (class 2606 OID 51565)
-- Name: fk_StsSearchRelation_StsSearch2; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsSearchRelation"
    ADD CONSTRAINT "fk_StsSearchRelation_StsSearch2" FOREIGN KEY ("SellerStsSearchID") REFERENCES "StsSearch"("StsSearchID");


--
-- TOC entry 8459 (class 2606 OID 51570)
-- Name: fk_StsSearch_UserAccountOrganisation; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsSearch"
    ADD CONSTRAINT "fk_StsSearch_UserAccountOrganisation" FOREIGN KEY ("AssignedToUserAccountOrganisationID") REFERENCES public."UserAccountOrganisation"("UserAccountOrganisationID");


--
-- TOC entry 8472 (class 2606 OID 51575)
-- Name: fk_StsSourceOfFundsStsDocument_StsDocument; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsSourceOfFundsStsDocument"
    ADD CONSTRAINT "fk_StsSourceOfFundsStsDocument_StsDocument" FOREIGN KEY ("StsDocumentID") REFERENCES "StsDocument"("StsDocumentID");


--
-- TOC entry 8473 (class 2606 OID 51580)
-- Name: fk_StsSourceOfFundsStsDocument_StsSourceOfFunds; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsSourceOfFundsStsDocument"
    ADD CONSTRAINT "fk_StsSourceOfFundsStsDocument_StsSourceOfFunds" FOREIGN KEY ("StsSourceOfFunds") REFERENCES "StsSourceOfFunds"("StsSourceOfFunds");


--
-- TOC entry 8471 (class 2606 OID 51585)
-- Name: fk_StsSourceOfFunds_StsActorStructure; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsSourceOfFunds"
    ADD CONSTRAINT "fk_StsSourceOfFunds_StsActorStructure" FOREIGN KEY ("SourceOfFundsStsActorStructureID") REFERENCES "StsActorStructure"("StsActorStructureID");


--
-- TOC entry 8475 (class 2606 OID 51590)
-- Name: fk_StsTransactionComponent_Artefact; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsTransactionComponent"
    ADD CONSTRAINT "fk_StsTransactionComponent_Artefact" FOREIGN KEY ("ArtefactID", "ArtefactVersionNumber") REFERENCES public."Artefact"("ArtefactID", "ArtefactVersionNumber");


--
-- TOC entry 8476 (class 2606 OID 51595)
-- Name: fk_StsTransactionComponent_StsTransaction; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsTransactionComponent"
    ADD CONSTRAINT "fk_StsTransactionComponent_StsTransaction" FOREIGN KEY ("StsTransactionID") REFERENCES "StsTransaction"("StsTransactionID");


--
-- TOC entry 8477 (class 2606 OID 51600)
-- Name: fk_StsTransactionProcessLog_StatusType; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsTransactionProcessLog"
    ADD CONSTRAINT "fk_StsTransactionProcessLog_StatusType" FOREIGN KEY ("StatusTypeID", "StatusTypeVersionNumber") REFERENCES public."StatusType"("StatusTypeID", "StatusTypeVersionNumber");


--
-- TOC entry 8478 (class 2606 OID 51605)
-- Name: fk_StsTransactionProcessLog_StatusTypeValue; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsTransactionProcessLog"
    ADD CONSTRAINT "fk_StsTransactionProcessLog_StatusTypeValue" FOREIGN KEY ("StatusTypeValueID") REFERENCES public."StatusTypeValue"("StatusTypeValueID");


--
-- TOC entry 8479 (class 2606 OID 51610)
-- Name: fk_StsTransactionProcessLog_StsTransaction; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsTransactionProcessLog"
    ADD CONSTRAINT "fk_StsTransactionProcessLog_StsTransaction" FOREIGN KEY ("StsTransactionID") REFERENCES "StsTransaction"("StsTransactionID");


--
-- TOC entry 8480 (class 2606 OID 51615)
-- Name: fk_StsTransactionPropertyDetail_PropertyDetail; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsTransactionPropertyDetail"
    ADD CONSTRAINT "fk_StsTransactionPropertyDetail_PropertyDetail" FOREIGN KEY ("PropertyDetailID") REFERENCES "PropertyDetail"("PropertyDetailID");


--
-- TOC entry 8481 (class 2606 OID 51620)
-- Name: fk_StsTransactionPropertyDetail_StsTransaction; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsTransactionPropertyDetail"
    ADD CONSTRAINT "fk_StsTransactionPropertyDetail_StsTransaction" FOREIGN KEY ("StsTransactionID") REFERENCES "StsTransaction"("StsTransactionID");


--
-- TOC entry 8474 (class 2606 OID 51625)
-- Name: fk_StsTransaction_Organisation; Type: FK CONSTRAINT; Schema: sts; Owner: postgres
--

ALTER TABLE ONLY "StsTransaction"
    ADD CONSTRAINT "fk_StsTransaction_Organisation" FOREIGN KEY ("OrganisationID") REFERENCES public."Organisation"("OrganisationID");


--
-- TOC entry 8659 (class 0 OID 0)
-- Dependencies: 10
-- Name: audit; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA audit FROM PUBLIC;
REVOKE ALL ON SCHEMA audit FROM postgres;
GRANT ALL ON SCHEMA audit TO postgres;


--
-- TOC entry 8661 (class 0 OID 0)
-- Dependencies: 11
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


SET search_path = audit, pg_catalog;

--
-- TOC entry 8687 (class 0 OID 0)
-- Dependencies: 177
-- Name: logged_actions; Type: ACL; Schema: audit; Owner: postgres
--

REVOKE ALL ON TABLE logged_actions FROM PUBLIC;
REVOKE ALL ON TABLE logged_actions FROM postgres;
GRANT ALL ON TABLE logged_actions TO postgres;


SET search_path = public, pg_catalog;

--
-- TOC entry 8719 (class 0 OID 0)
-- Dependencies: 718
-- Name: appmanager; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE appmanager FROM PUBLIC;
REVOKE ALL ON TABLE appmanager FROM postgres;
GRANT ALL ON TABLE appmanager TO postgres;
GRANT ALL ON TABLE appmanager TO PUBLIC;


-- Completed on 2015-03-27 13:19:22

--
-- PostgreSQL database dump complete
--

