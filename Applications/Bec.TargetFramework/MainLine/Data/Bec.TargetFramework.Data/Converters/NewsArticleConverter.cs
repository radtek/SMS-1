//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class NewsArticleConverter
    {

        public static NewsArticleDTO ToDto(this Bec.TargetFramework.Data.NewsArticle source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static NewsArticleDTO ToDtoWithRelated(this Bec.TargetFramework.Data.NewsArticle source, int level)
        {
            if (source == null)
              return null;

            var target = new NewsArticleDTO();

            // Properties
            target.NewsArticleID = source.NewsArticleID;
            target.Title = source.Title;
            target.DateTime = source.DateTime;
            target.Content = source.Content;

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.NewsArticle ToEntity(this NewsArticleDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.NewsArticle();

            // Properties
            target.NewsArticleID = source.NewsArticleID;
            target.Title = source.Title;
            target.DateTime = source.DateTime;
            target.Content = source.Content;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<NewsArticleDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.NewsArticle> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<NewsArticleDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.NewsArticle> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.NewsArticle> ToEntities(this IEnumerable<NewsArticleDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.NewsArticle source, NewsArticleDTO target);

        static partial void OnEntityCreating(NewsArticleDTO source, Bec.TargetFramework.Data.NewsArticle target);

    }

}
