//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class VOrganisationRoleHierarchyConverter
    {

        public static VOrganisationRoleHierarchyDTO ToDto(this Bec.TargetFramework.Data.VOrganisationRoleHierarchy source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static VOrganisationRoleHierarchyDTO ToDtoWithRelated(this Bec.TargetFramework.Data.VOrganisationRoleHierarchy source, int level)
        {
            if (source == null)
              return null;

            var target = new VOrganisationRoleHierarchyDTO();

            // Properties
            target.OrganisationRoleID = source.OrganisationRoleID;
            target.RoleID = source.RoleID;
            target.RoleName = source.RoleName;
            target.ParentRoleID = source.ParentRoleID;
            target.ParentRoleName = source.ParentRoleName;
            target.Level = source.Level;
            target.RoleHierarchyID = source.RoleHierarchyID;

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.VOrganisationRoleHierarchy ToEntity(this VOrganisationRoleHierarchyDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.VOrganisationRoleHierarchy();

            // Properties
            target.OrganisationRoleID = source.OrganisationRoleID;
            target.RoleID = source.RoleID;
            target.RoleName = source.RoleName;
            target.ParentRoleID = source.ParentRoleID;
            target.ParentRoleName = source.ParentRoleName;
            target.Level = source.Level;
            target.RoleHierarchyID = source.RoleHierarchyID;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<VOrganisationRoleHierarchyDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.VOrganisationRoleHierarchy> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<VOrganisationRoleHierarchyDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.VOrganisationRoleHierarchy> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.VOrganisationRoleHierarchy> ToEntities(this IEnumerable<VOrganisationRoleHierarchyDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.VOrganisationRoleHierarchy source, VOrganisationRoleHierarchyDTO target);

        static partial void OnEntityCreating(VOrganisationRoleHierarchyDTO source, Bec.TargetFramework.Data.VOrganisationRoleHierarchy target);

    }

}
