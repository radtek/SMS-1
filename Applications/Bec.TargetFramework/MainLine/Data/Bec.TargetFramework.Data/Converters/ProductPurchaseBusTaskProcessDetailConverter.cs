//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class ProductPurchaseBusTaskProcessDetailConverter
    {

        public static ProductPurchaseBusTaskProcessDetailDTO ToDto(this Bec.TargetFramework.Data.ProductPurchaseBusTaskProcessDetail source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static ProductPurchaseBusTaskProcessDetailDTO ToDtoWithRelated(this Bec.TargetFramework.Data.ProductPurchaseBusTaskProcessDetail source, int level)
        {
            if (source == null)
              return null;

            var target = new ProductPurchaseBusTaskProcessDetailDTO();

            // Properties
            target.ProductPurchaseBusTaskProcessDetailID = source.ProductPurchaseBusTaskProcessDetailID;
            target.ProductPurchaseProductTaskID = source.ProductPurchaseProductTaskID;
            target.StartDate = source.StartDate;
            target.EndDate = source.EndDate;
            target.CreatedBy = source.CreatedBy;
            target.MessageDetail = source.MessageDetail;
            target.MessageJsonDetail = source.MessageJsonDetail;
            target.MessageAdditionalDetail = source.MessageAdditionalDetail;
            target.MessageJsonAdditionalDetail = source.MessageJsonAdditionalDetail;
            target.TaskDataHasExpiry = source.TaskDataHasExpiry;
            target.TaskDataExpiryDate = source.TaskDataExpiryDate;
            target.ProcessDataTypeID = source.ProcessDataTypeID;
            target.ProcessDataCategoryID = source.ProcessDataCategoryID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;

            // Navigation Properties
            if (level > 0) {
              target.ProductPurchaseBusTaskProcessLog = source.ProductPurchaseBusTaskProcessLog.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.ProductPurchaseBusTaskProcessDetail ToEntity(this ProductPurchaseBusTaskProcessDetailDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.ProductPurchaseBusTaskProcessDetail();

            // Properties
            target.ProductPurchaseBusTaskProcessDetailID = source.ProductPurchaseBusTaskProcessDetailID;
            target.ProductPurchaseProductTaskID = source.ProductPurchaseProductTaskID;
            target.StartDate = source.StartDate;
            target.EndDate = source.EndDate;
            target.CreatedBy = source.CreatedBy;
            target.MessageDetail = source.MessageDetail;
            target.MessageJsonDetail = source.MessageJsonDetail;
            target.MessageAdditionalDetail = source.MessageAdditionalDetail;
            target.MessageJsonAdditionalDetail = source.MessageJsonAdditionalDetail;
            target.TaskDataHasExpiry = source.TaskDataHasExpiry;
            target.TaskDataExpiryDate = source.TaskDataExpiryDate;
            target.ProcessDataTypeID = source.ProcessDataTypeID;
            target.ProcessDataCategoryID = source.ProcessDataCategoryID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<ProductPurchaseBusTaskProcessDetailDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.ProductPurchaseBusTaskProcessDetail> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<ProductPurchaseBusTaskProcessDetailDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.ProductPurchaseBusTaskProcessDetail> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.ProductPurchaseBusTaskProcessDetail> ToEntities(this IEnumerable<ProductPurchaseBusTaskProcessDetailDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.ProductPurchaseBusTaskProcessDetail source, ProductPurchaseBusTaskProcessDetailDTO target);

        static partial void OnEntityCreating(ProductPurchaseBusTaskProcessDetailDTO source, Bec.TargetFramework.Data.ProductPurchaseBusTaskProcessDetail target);

    }

}
