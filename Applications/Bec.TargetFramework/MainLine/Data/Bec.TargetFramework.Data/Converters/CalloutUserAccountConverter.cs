//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class CalloutUserAccountConverter
    {

        public static CalloutUserAccountDTO ToDto(this Bec.TargetFramework.Data.CalloutUserAccount source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static CalloutUserAccountDTO ToDtoWithRelated(this Bec.TargetFramework.Data.CalloutUserAccount source, int level)
        {
            if (source == null)
              return null;

            var target = new CalloutUserAccountDTO();

            // Properties
            target.CalloutUserAccountID = source.CalloutUserAccountID;
            target.CalloutID = source.CalloutID;
            target.RoleID = source.RoleID;
            target.IsDeleted = source.IsDeleted;
            target.CreatedOn = source.CreatedOn;
            target.UserID = source.UserID;
            target.Visible = source.Visible;

            // Navigation Properties
            if (level > 0) {
              target.Callout = source.Callout.ToDtoWithRelated(level - 1);
              target.Role = source.Role.ToDtoWithRelated(level - 1);
              target.UserAccount = source.UserAccount.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.CalloutUserAccount ToEntity(this CalloutUserAccountDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.CalloutUserAccount();

            // Properties
            target.CalloutUserAccountID = source.CalloutUserAccountID;
            target.CalloutID = source.CalloutID;
            target.RoleID = source.RoleID;
            target.IsDeleted = source.IsDeleted;
            target.CreatedOn = source.CreatedOn;
            target.UserID = source.UserID;
            target.Visible = source.Visible;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<CalloutUserAccountDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.CalloutUserAccount> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<CalloutUserAccountDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.CalloutUserAccount> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.CalloutUserAccount> ToEntities(this IEnumerable<CalloutUserAccountDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.CalloutUserAccount source, CalloutUserAccountDTO target);

        static partial void OnEntityCreating(CalloutUserAccountDTO source, Bec.TargetFramework.Data.CalloutUserAccount target);

    }

}
