//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class ArtefactTemplateConverter
    {

        public static ArtefactTemplateDTO ToDto(this Bec.TargetFramework.Data.ArtefactTemplate source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static ArtefactTemplateDTO ToDtoWithRelated(this Bec.TargetFramework.Data.ArtefactTemplate source, int level)
        {
            if (source == null)
              return null;

            var target = new ArtefactTemplateDTO();

            // Properties
            target.ArtefactTemplateID = source.ArtefactTemplateID;
            target.ArtefactTemplateVersionNumber = source.ArtefactTemplateVersionNumber;
            target.Name = source.Name;
            target.Description = source.Description;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;

            // Navigation Properties
            if (level > 0) {
              target.ArtefactProductTemplates = source.ArtefactProductTemplates.ToDtosWithRelated(level - 1);
              target.ArtefactSubscriptionTemplates = source.ArtefactSubscriptionTemplates.ToDtosWithRelated(level - 1);
              target.DefaultOrganisationArtefactTemplates = source.DefaultOrganisationArtefactTemplates.ToDtosWithRelated(level - 1);
              target.Artefacts = source.Artefacts.ToDtosWithRelated(level - 1);
              target.ArtefactClaimTemplates = source.ArtefactClaimTemplates.ToDtosWithRelated(level - 1);
              target.ArtefactNotificationConstructTemplates = source.ArtefactNotificationConstructTemplates.ToDtosWithRelated(level - 1);
              target.ArtefactRoleTemplates = source.ArtefactRoleTemplates.ToDtosWithRelated(level - 1);
              target.ArtefactDependencyTemplates_ArtefactTemplateID_ArtefactTemplateVersionNumber = source.ArtefactDependencyTemplates_ArtefactTemplateID_ArtefactTemplateVersionNumber.ToDtosWithRelated(level - 1);
              target.ModuleArtefactTemplates = source.ModuleArtefactTemplates.ToDtosWithRelated(level - 1);
              target.StatusTypeTemplates = source.StatusTypeTemplates.ToDtosWithRelated(level - 1);
              target.ArtefactDependencyTemplates_DependencyArtefactTemplateID_DependencyArtefactTemplateVersionNumber = source.ArtefactDependencyTemplates_DependencyArtefactTemplateID_DependencyArtefactTemplateVersionNumber.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.ArtefactTemplate ToEntity(this ArtefactTemplateDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.ArtefactTemplate();

            // Properties
            target.ArtefactTemplateID = source.ArtefactTemplateID;
            target.ArtefactTemplateVersionNumber = source.ArtefactTemplateVersionNumber;
            target.Name = source.Name;
            target.Description = source.Description;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<ArtefactTemplateDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.ArtefactTemplate> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<ArtefactTemplateDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.ArtefactTemplate> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.ArtefactTemplate> ToEntities(this IEnumerable<ArtefactTemplateDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.ArtefactTemplate source, ArtefactTemplateDTO target);

        static partial void OnEntityCreating(ArtefactTemplateDTO source, Bec.TargetFramework.Data.ArtefactTemplate target);

    }

}
