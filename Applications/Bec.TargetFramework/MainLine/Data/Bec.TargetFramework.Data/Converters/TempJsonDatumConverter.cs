//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class TempJsonDatumConverter
    {

        public static TempJsonDatumDTO ToDto(this Bec.TargetFramework.Data.TempJsonDatum source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static TempJsonDatumDTO ToDtoWithRelated(this Bec.TargetFramework.Data.TempJsonDatum source, int level)
        {
            if (source == null)
              return null;

            var target = new TempJsonDatumDTO();

            // Properties
            target.TempJsonDataID = source.TempJsonDataID;
            target.JsonData = source.JsonData;
            target.UserAccountOrganisationID = source.UserAccountOrganisationID;
            target.CreatedOn = source.CreatedOn;

            // Navigation Properties
            if (level > 0) {
              target.UserAccountOrganisation = source.UserAccountOrganisation.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.TempJsonDatum ToEntity(this TempJsonDatumDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.TempJsonDatum();

            // Properties
            target.TempJsonDataID = source.TempJsonDataID;
            target.JsonData = source.JsonData;
            target.UserAccountOrganisationID = source.UserAccountOrganisationID;
            target.CreatedOn = source.CreatedOn;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<TempJsonDatumDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.TempJsonDatum> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<TempJsonDatumDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.TempJsonDatum> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.TempJsonDatum> ToEntities(this IEnumerable<TempJsonDatumDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.TempJsonDatum source, TempJsonDatumDTO target);

        static partial void OnEntityCreating(TempJsonDatumDTO source, Bec.TargetFramework.Data.TempJsonDatum target);

    }

}
