//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class VConversationConverter
    {

        public static VConversationDTO ToDto(this Bec.TargetFramework.Data.VConversation source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static VConversationDTO ToDtoWithRelated(this Bec.TargetFramework.Data.VConversation source, int level)
        {
            if (source == null)
              return null;

            var target = new VConversationDTO();

            // Properties
            target.UserAccountOrganisationID = source.UserAccountOrganisationID;
            target.ConversationID = source.ConversationID;
            target.Subject = source.Subject;
            target.MostRecentDate = source.MostRecentDate;
            target.MostRecentMessage = source.MostRecentMessage;
            target.MostRecentEmail = source.MostRecentEmail;
            target.FirstUnreadDate = source.FirstUnreadDate;
            target.FirstUnreadMessage = source.FirstUnreadMessage;
            target.FirstUnreadEmail = source.FirstUnreadEmail;

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.VConversation ToEntity(this VConversationDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.VConversation();

            // Properties
            target.UserAccountOrganisationID = source.UserAccountOrganisationID;
            target.ConversationID = source.ConversationID;
            target.Subject = source.Subject;
            target.MostRecentDate = source.MostRecentDate;
            target.MostRecentMessage = source.MostRecentMessage;
            target.MostRecentEmail = source.MostRecentEmail;
            target.FirstUnreadDate = source.FirstUnreadDate;
            target.FirstUnreadMessage = source.FirstUnreadMessage;
            target.FirstUnreadEmail = source.FirstUnreadEmail;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<VConversationDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.VConversation> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<VConversationDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.VConversation> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.VConversation> ToEntities(this IEnumerable<VConversationDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.VConversation source, VConversationDTO target);

        static partial void OnEntityCreating(VConversationDTO source, Bec.TargetFramework.Data.VConversation target);

    }

}
