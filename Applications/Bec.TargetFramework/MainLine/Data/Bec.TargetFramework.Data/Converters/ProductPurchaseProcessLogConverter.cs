//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class ProductPurchaseProcessLogConverter
    {

        public static ProductPurchaseProcessLogDTO ToDto(this Bec.TargetFramework.Data.ProductPurchaseProcessLog source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static ProductPurchaseProcessLogDTO ToDtoWithRelated(this Bec.TargetFramework.Data.ProductPurchaseProcessLog source, int level)
        {
            if (source == null)
              return null;

            var target = new ProductPurchaseProcessLogDTO();

            // Properties
            target.ProductPurchaseProcessLogID = source.ProductPurchaseProcessLogID;
            target.CreatedOn = source.CreatedOn;
            target.StatusTypeID = source.StatusTypeID;
            target.StatusTypeVersionNumber = source.StatusTypeVersionNumber;
            target.StatusTypeValueID = source.StatusTypeValueID;
            target.ProductPurchaseID = source.ProductPurchaseID;
            target.ProcessMessage = source.ProcessMessage;
            target.ProcessDetail = source.ProcessDetail;
            target.HasError = source.HasError;
            target.IsComplete = source.IsComplete;
            target.NumberOfRetries = source.NumberOfRetries;
            target.ParentID = source.ParentID;

            // Navigation Properties
            if (level > 0) {
              target.ProductPurchase = source.ProductPurchase.ToDtoWithRelated(level - 1);
              target.StatusType = source.StatusType.ToDtoWithRelated(level - 1);
              target.StatusTypeValue = source.StatusTypeValue.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.ProductPurchaseProcessLog ToEntity(this ProductPurchaseProcessLogDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.ProductPurchaseProcessLog();

            // Properties
            target.ProductPurchaseProcessLogID = source.ProductPurchaseProcessLogID;
            target.CreatedOn = source.CreatedOn;
            target.StatusTypeID = source.StatusTypeID;
            target.StatusTypeVersionNumber = source.StatusTypeVersionNumber;
            target.StatusTypeValueID = source.StatusTypeValueID;
            target.ProductPurchaseID = source.ProductPurchaseID;
            target.ProcessMessage = source.ProcessMessage;
            target.ProcessDetail = source.ProcessDetail;
            target.HasError = source.HasError;
            target.IsComplete = source.IsComplete;
            target.NumberOfRetries = source.NumberOfRetries;
            target.ParentID = source.ParentID;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<ProductPurchaseProcessLogDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.ProductPurchaseProcessLog> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<ProductPurchaseProcessLogDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.ProductPurchaseProcessLog> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.ProductPurchaseProcessLog> ToEntities(this IEnumerable<ProductPurchaseProcessLogDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.ProductPurchaseProcessLog source, ProductPurchaseProcessLogDTO target);

        static partial void OnEntityCreating(ProductPurchaseProcessLogDTO source, Bec.TargetFramework.Data.ProductPurchaseProcessLog target);

    }

}
