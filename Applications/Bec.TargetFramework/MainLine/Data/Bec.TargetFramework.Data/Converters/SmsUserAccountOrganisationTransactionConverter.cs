//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class SmsUserAccountOrganisationTransactionConverter
    {

        public static SmsUserAccountOrganisationTransactionDTO ToDto(this Bec.TargetFramework.Data.SmsUserAccountOrganisationTransaction source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static SmsUserAccountOrganisationTransactionDTO ToDtoWithRelated(this Bec.TargetFramework.Data.SmsUserAccountOrganisationTransaction source, int level)
        {
            if (source == null)
              return null;

            var target = new SmsUserAccountOrganisationTransactionDTO();

            // Properties
            target.SmsUserAccountOrganisationTransactionID = source.SmsUserAccountOrganisationTransactionID;
            target.UserAccountOrganisationID = source.UserAccountOrganisationID;
            target.SmsTransactionID = source.SmsTransactionID;
            target.SmsUserAccountOrganisationTransactionTypeID = source.SmsUserAccountOrganisationTransactionTypeID;
            target.AddressID = source.AddressID;
            target.ContactID = source.ContactID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.CreatedOn = source.CreatedOn;
            target.CreatedBy = source.CreatedBy;
            target.ModifiedOn = source.ModifiedOn;
            target.ModifiedBy = source.ModifiedBy;
            target.LatestBankAccountCheckID = source.LatestBankAccountCheckID;
            target.ProductAcceptedOn = source.ProductAcceptedOn;
            target.ProductDeclinedOn = source.ProductDeclinedOn;

            // Navigation Properties
            if (level > 0) {
              target.SmsTransaction = source.SmsTransaction.ToDtoWithRelated(level - 1);
              target.SmsUserAccountOrganisationTransactionType = source.SmsUserAccountOrganisationTransactionType.ToDtoWithRelated(level - 1);
              target.Address = source.Address.ToDtoWithRelated(level - 1);
              target.Contact = source.Contact.ToDtoWithRelated(level - 1);
              target.UserAccountOrganisation = source.UserAccountOrganisation.ToDtoWithRelated(level - 1);
              target.SmsBankAccountChecks = source.SmsBankAccountChecks.ToDtosWithRelated(level - 1);
              target.LatestBankAccountCheck = source.LatestBankAccountCheck.ToDtoWithRelated(level - 1);
              target.SmsSrcFundsBankAccounts = source.SmsSrcFundsBankAccounts.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.SmsUserAccountOrganisationTransaction ToEntity(this SmsUserAccountOrganisationTransactionDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.SmsUserAccountOrganisationTransaction();

            // Properties
            target.SmsUserAccountOrganisationTransactionID = source.SmsUserAccountOrganisationTransactionID;
            target.UserAccountOrganisationID = source.UserAccountOrganisationID;
            target.SmsTransactionID = source.SmsTransactionID;
            target.SmsUserAccountOrganisationTransactionTypeID = source.SmsUserAccountOrganisationTransactionTypeID;
            target.AddressID = source.AddressID;
            target.ContactID = source.ContactID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.CreatedOn = source.CreatedOn;
            target.CreatedBy = source.CreatedBy;
            target.ModifiedOn = source.ModifiedOn;
            target.ModifiedBy = source.ModifiedBy;
            target.LatestBankAccountCheckID = source.LatestBankAccountCheckID;
            target.ProductAcceptedOn = source.ProductAcceptedOn;
            target.ProductDeclinedOn = source.ProductDeclinedOn;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<SmsUserAccountOrganisationTransactionDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.SmsUserAccountOrganisationTransaction> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<SmsUserAccountOrganisationTransactionDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.SmsUserAccountOrganisationTransaction> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.SmsUserAccountOrganisationTransaction> ToEntities(this IEnumerable<SmsUserAccountOrganisationTransactionDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.SmsUserAccountOrganisationTransaction source, SmsUserAccountOrganisationTransactionDTO target);

        static partial void OnEntityCreating(SmsUserAccountOrganisationTransactionDTO source, Bec.TargetFramework.Data.SmsUserAccountOrganisationTransaction target);

    }

}
