//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class ConversationSafeSendGroupParticipantConverter
    {

        public static ConversationSafeSendGroupParticipantDTO ToDto(this Bec.TargetFramework.Data.ConversationSafeSendGroupParticipant source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static ConversationSafeSendGroupParticipantDTO ToDtoWithRelated(this Bec.TargetFramework.Data.ConversationSafeSendGroupParticipant source, int level)
        {
            if (source == null)
              return null;

            var target = new ConversationSafeSendGroupParticipantDTO();

            // Properties
            target.ConversationID = source.ConversationID;
            target.OrganisationID = source.OrganisationID;
            target.SafeSendGroupID = source.SafeSendGroupID;
            target.Added = source.Added;

            // Navigation Properties
            if (level > 0) {
              target.Conversation = source.Conversation.ToDtoWithRelated(level - 1);
              target.Organisation = source.Organisation.ToDtoWithRelated(level - 1);
              target.SafeSendGroup = source.SafeSendGroup.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.ConversationSafeSendGroupParticipant ToEntity(this ConversationSafeSendGroupParticipantDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.ConversationSafeSendGroupParticipant();

            // Properties
            target.ConversationID = source.ConversationID;
            target.OrganisationID = source.OrganisationID;
            target.SafeSendGroupID = source.SafeSendGroupID;
            target.Added = source.Added;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<ConversationSafeSendGroupParticipantDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.ConversationSafeSendGroupParticipant> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<ConversationSafeSendGroupParticipantDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.ConversationSafeSendGroupParticipant> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.ConversationSafeSendGroupParticipant> ToEntities(this IEnumerable<ConversationSafeSendGroupParticipantDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.ConversationSafeSendGroupParticipant source, ConversationSafeSendGroupParticipantDTO target);

        static partial void OnEntityCreating(ConversationSafeSendGroupParticipantDTO source, Bec.TargetFramework.Data.ConversationSafeSendGroupParticipant target);

    }

}
