//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 2/5/2015 2:37:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Analysis
{

    public static partial class AnalysisEngineMutatorConverter
    {

        public static AnalysisEngineMutatorDTO ToDto(this Bec.TargetFramework.Data.Analysis.AnalysisEngineMutator source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static AnalysisEngineMutatorDTO ToDtoWithRelated(this Bec.TargetFramework.Data.Analysis.AnalysisEngineMutator source, int level)
        {
            if (source == null)
              return null;

            var target = new AnalysisEngineMutatorDTO();

            // Properties
            target.AnalysisEngineID = source.AnalysisEngineID;
            target.AnalysisEngineVersionNumber = source.AnalysisEngineVersionNumber;
            target.AnalysisMutatorID = source.AnalysisMutatorID;
            target.AnalysisMutatorVersionNumber = source.AnalysisMutatorVersionNumber;
            target.Order = source.Order;

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.Analysis.AnalysisEngineMutator ToEntity(this AnalysisEngineMutatorDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.Analysis.AnalysisEngineMutator();

            // Properties
            target.AnalysisEngineID = source.AnalysisEngineID;
            target.AnalysisEngineVersionNumber = source.AnalysisEngineVersionNumber;
            target.AnalysisMutatorID = source.AnalysisMutatorID;
            target.AnalysisMutatorVersionNumber = source.AnalysisMutatorVersionNumber;
            target.Order = source.Order;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<AnalysisEngineMutatorDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.Analysis.AnalysisEngineMutator> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<AnalysisEngineMutatorDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.Analysis.AnalysisEngineMutator> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.Analysis.AnalysisEngineMutator> ToEntities(this IEnumerable<AnalysisEngineMutatorDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.Analysis.AnalysisEngineMutator source, AnalysisEngineMutatorDTO target);

        static partial void OnEntityCreating(AnalysisEngineMutatorDTO source, Bec.TargetFramework.Data.Analysis.AnalysisEngineMutator target);

    }

}
