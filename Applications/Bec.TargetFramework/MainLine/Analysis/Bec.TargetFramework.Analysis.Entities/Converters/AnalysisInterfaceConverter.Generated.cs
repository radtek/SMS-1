//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 2/5/2015 2:37:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Analysis
{

    public static partial class AnalysisInterfaceConverter
    {

        public static AnalysisInterfaceDTO ToDto(this Bec.TargetFramework.Data.Analysis.AnalysisInterface source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static AnalysisInterfaceDTO ToDtoWithRelated(this Bec.TargetFramework.Data.Analysis.AnalysisInterface source, int level)
        {
            if (source == null)
              return null;

            var target = new AnalysisInterfaceDTO();

            // Properties
            target.AnalysisInterfaceID = source.AnalysisInterfaceID;
            target.AnalysisInterfaceVersionNumber = source.AnalysisInterfaceVersionNumber;
            target.Name = source.Name;
            target.Description = source.Description;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.AnalysisInterfaceTypeID = source.AnalysisInterfaceTypeID;
            target.AnalysisInterfaceCategoryID = source.AnalysisInterfaceCategoryID;
            target.ObjectName = source.ObjectName;
            target.ObjectAssembly = source.ObjectAssembly;
            target.AnalysisBatchSchedulerID = source.AnalysisBatchSchedulerID;
            target.AnalysisBatchSchedulerVersionNumber = source.AnalysisBatchSchedulerVersionNumber;
            target.AnalysisBatchReceiverID = source.AnalysisBatchReceiverID;
            target.AnalysisBatchReceiverVersionNumber = source.AnalysisBatchReceiverVersionNumber;
            target.AnalysisBatchProcessorID = source.AnalysisBatchProcessorID;
            target.AnalysisBatchProcessorVersionNumber = source.AnalysisBatchProcessorVersionNumber;
            target.AnalysisEngineID = source.AnalysisEngineID;
            target.AnalysisEngineVersionNumber = source.AnalysisEngineVersionNumber;
            target.AnalysisBatchCollatorID = source.AnalysisBatchCollatorID;
            target.AnalysisBatchCollatorVersionNumber = source.AnalysisBatchCollatorVersionNumber;
            target.AnalysisBatchSenderID = source.AnalysisBatchSenderID;
            target.AnalysisBatchSenderVersionNumber = source.AnalysisBatchSenderVersionNumber;

            // Navigation Properties
            if (level > 0) {
              target.AnalysisProcessLogs = source.AnalysisProcessLogs.ToDtosWithRelated(level - 1);
              target.AnalysisBatchScheduler = source.AnalysisBatchScheduler.ToDtoWithRelated(level - 1);
              target.AnalysisBatchReceiver = source.AnalysisBatchReceiver.ToDtoWithRelated(level - 1);
              target.AnalysisBatchProcessor = source.AnalysisBatchProcessor.ToDtoWithRelated(level - 1);
              target.AnalysisEngine = source.AnalysisEngine.ToDtoWithRelated(level - 1);
              target.AnalysisBatchCollator = source.AnalysisBatchCollator.ToDtoWithRelated(level - 1);
              target.AnalysisBatchSender = source.AnalysisBatchSender.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.Analysis.AnalysisInterface ToEntity(this AnalysisInterfaceDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.Analysis.AnalysisInterface();

            // Properties
            target.AnalysisInterfaceID = source.AnalysisInterfaceID;
            target.AnalysisInterfaceVersionNumber = source.AnalysisInterfaceVersionNumber;
            target.Name = source.Name;
            target.Description = source.Description;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.AnalysisInterfaceTypeID = source.AnalysisInterfaceTypeID;
            target.AnalysisInterfaceCategoryID = source.AnalysisInterfaceCategoryID;
            target.ObjectName = source.ObjectName;
            target.ObjectAssembly = source.ObjectAssembly;
            target.AnalysisBatchSchedulerID = source.AnalysisBatchSchedulerID;
            target.AnalysisBatchSchedulerVersionNumber = source.AnalysisBatchSchedulerVersionNumber;
            target.AnalysisBatchReceiverID = source.AnalysisBatchReceiverID;
            target.AnalysisBatchReceiverVersionNumber = source.AnalysisBatchReceiverVersionNumber;
            target.AnalysisBatchProcessorID = source.AnalysisBatchProcessorID;
            target.AnalysisBatchProcessorVersionNumber = source.AnalysisBatchProcessorVersionNumber;
            target.AnalysisEngineID = source.AnalysisEngineID;
            target.AnalysisEngineVersionNumber = source.AnalysisEngineVersionNumber;
            target.AnalysisBatchCollatorID = source.AnalysisBatchCollatorID;
            target.AnalysisBatchCollatorVersionNumber = source.AnalysisBatchCollatorVersionNumber;
            target.AnalysisBatchSenderID = source.AnalysisBatchSenderID;
            target.AnalysisBatchSenderVersionNumber = source.AnalysisBatchSenderVersionNumber;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<AnalysisInterfaceDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.Analysis.AnalysisInterface> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<AnalysisInterfaceDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.Analysis.AnalysisInterface> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.Analysis.AnalysisInterface> ToEntities(this IEnumerable<AnalysisInterfaceDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.Analysis.AnalysisInterface source, AnalysisInterfaceDTO target);

        static partial void OnEntityCreating(AnalysisInterfaceDTO source, Bec.TargetFramework.Data.Analysis.AnalysisInterface target);

    }

}
