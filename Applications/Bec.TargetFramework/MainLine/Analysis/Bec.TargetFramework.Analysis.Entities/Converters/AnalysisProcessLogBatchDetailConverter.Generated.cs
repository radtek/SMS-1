//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 2/5/2015 2:37:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Analysis
{

    public static partial class AnalysisProcessLogBatchDetailConverter
    {

        public static AnalysisProcessLogBatchDetailDTO ToDto(this Bec.TargetFramework.Data.Analysis.AnalysisProcessLogBatchDetail source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static AnalysisProcessLogBatchDetailDTO ToDtoWithRelated(this Bec.TargetFramework.Data.Analysis.AnalysisProcessLogBatchDetail source, int level)
        {
            if (source == null)
              return null;

            var target = new AnalysisProcessLogBatchDetailDTO();

            // Properties
            target.AnalysisProcessLogBatchDetailID = source.AnalysisProcessLogBatchDetailID;
            target.AnalysisProcessLogID = source.AnalysisProcessLogID;
            target.Order = source.Order;
            target.CreatedOn = source.CreatedOn;
            target.Detail = source.Detail;
            target.StatusTypeID = source.StatusTypeID;
            target.StatusTypeVersionNumber = source.StatusTypeVersionNumber;
            target.StatusTypeValueID = source.StatusTypeValueID;
            target.AnalysisMortgageApplicationID = source.AnalysisMortgageApplicationID;
            target.DetailType = source.DetailType;

            // Navigation Properties
            if (level > 0) {
              target.AnalysisProcessLog = source.AnalysisProcessLog.ToDtoWithRelated(level - 1);
              target.StatusType = source.StatusType.ToDtoWithRelated(level - 1);
              target.StatusTypeValue = source.StatusTypeValue.ToDtoWithRelated(level - 1);
              target.AnalysisMortgageApplication = source.AnalysisMortgageApplication.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.Analysis.AnalysisProcessLogBatchDetail ToEntity(this AnalysisProcessLogBatchDetailDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.Analysis.AnalysisProcessLogBatchDetail();

            // Properties
            target.AnalysisProcessLogBatchDetailID = source.AnalysisProcessLogBatchDetailID;
            target.AnalysisProcessLogID = source.AnalysisProcessLogID;
            target.Order = source.Order;
            target.CreatedOn = source.CreatedOn;
            target.Detail = source.Detail;
            target.StatusTypeID = source.StatusTypeID;
            target.StatusTypeVersionNumber = source.StatusTypeVersionNumber;
            target.StatusTypeValueID = source.StatusTypeValueID;
            target.AnalysisMortgageApplicationID = source.AnalysisMortgageApplicationID;
            target.DetailType = source.DetailType;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<AnalysisProcessLogBatchDetailDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.Analysis.AnalysisProcessLogBatchDetail> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<AnalysisProcessLogBatchDetailDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.Analysis.AnalysisProcessLogBatchDetail> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.Analysis.AnalysisProcessLogBatchDetail> ToEntities(this IEnumerable<AnalysisProcessLogBatchDetailDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.Analysis.AnalysisProcessLogBatchDetail source, AnalysisProcessLogBatchDetailDTO target);

        static partial void OnEntityCreating(AnalysisProcessLogBatchDetailDTO source, Bec.TargetFramework.Data.Analysis.AnalysisProcessLogBatchDetail target);

    }

}
