//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 2/5/2015 2:37:38 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Analysis
{

    public static partial class AnalysisProcessLogStepConverter
    {

        public static AnalysisProcessLogStepDTO ToDto(this Bec.TargetFramework.Data.Analysis.AnalysisProcessLogStep source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static AnalysisProcessLogStepDTO ToDtoWithRelated(this Bec.TargetFramework.Data.Analysis.AnalysisProcessLogStep source, int level)
        {
            if (source == null)
              return null;

            var target = new AnalysisProcessLogStepDTO();

            // Properties
            target.AnalysisProcessLogStepID = source.AnalysisProcessLogStepID;
            target.Step = source.Step;
            target.AnalysisProcessLogID = source.AnalysisProcessLogID;
            target.ParentStep = source.ParentStep;
            target.CreatedOn = source.CreatedOn;
            target.StatusTypeID = source.StatusTypeID;
            target.StatusTypeVersionNumber = source.StatusTypeVersionNumber;
            target.StatusTypeValueID = source.StatusTypeValueID;
            target.SourceID = source.SourceID;
            target.SourceVersionNumber = source.SourceVersionNumber;
            target.RetryNumberOfTimes = source.RetryNumberOfTimes;

            // Navigation Properties
            if (level > 0) {
              target.AnalysisProcessLog = source.AnalysisProcessLog.ToDtoWithRelated(level - 1);
              target.StatusType = source.StatusType.ToDtoWithRelated(level - 1);
              target.StatusTypeValue = source.StatusTypeValue.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.Analysis.AnalysisProcessLogStep ToEntity(this AnalysisProcessLogStepDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.Analysis.AnalysisProcessLogStep();

            // Properties
            target.AnalysisProcessLogStepID = source.AnalysisProcessLogStepID;
            target.Step = source.Step;
            target.AnalysisProcessLogID = source.AnalysisProcessLogID;
            target.ParentStep = source.ParentStep;
            target.CreatedOn = source.CreatedOn;
            target.StatusTypeID = source.StatusTypeID;
            target.StatusTypeVersionNumber = source.StatusTypeVersionNumber;
            target.StatusTypeValueID = source.StatusTypeValueID;
            target.SourceID = source.SourceID;
            target.SourceVersionNumber = source.SourceVersionNumber;
            target.RetryNumberOfTimes = source.RetryNumberOfTimes;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<AnalysisProcessLogStepDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.Analysis.AnalysisProcessLogStep> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<AnalysisProcessLogStepDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.Analysis.AnalysisProcessLogStep> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.Analysis.AnalysisProcessLogStep> ToEntities(this IEnumerable<AnalysisProcessLogStepDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.Analysis.AnalysisProcessLogStep source, AnalysisProcessLogStepDTO target);

        static partial void OnEntityCreating(AnalysisProcessLogStepDTO source, Bec.TargetFramework.Data.Analysis.AnalysisProcessLogStep target);

    }

}
