//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 24/03/2015 09:58:29
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Analysis.Entities
{

    public static partial class AnalysisProcessLogConverter
    {

        public static AnalysisProcessLogDTO ToDto(this Bec.TargetFramework.Data.Analysis.AnalysisProcessLog source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static AnalysisProcessLogDTO ToDtoWithRelated(this Bec.TargetFramework.Data.Analysis.AnalysisProcessLog source, int level)
        {
            if (source == null)
              return null;

            var target = new AnalysisProcessLogDTO();

            // Properties
            target.AnalysisProcessLogID = source.AnalysisProcessLogID;
            target.CreatedOn = source.CreatedOn;
            target.AnalysisInterfaceID = source.AnalysisInterfaceID;
            target.AnalysisInterfaceVersionNumber = source.AnalysisInterfaceVersionNumber;
            target.StatusTypeID = source.StatusTypeID;
            target.StatusTypeVersionNumber = source.StatusTypeVersionNumber;
            target.StatusTypeValueID = source.StatusTypeValueID;
            target.HasError = source.HasError;
            target.IsComplete = source.IsComplete;
            target.CompletedOn = source.CompletedOn;

            // Navigation Properties
            if (level > 0) {
              target.StatusTypeValue = source.StatusTypeValue.ToDtoWithRelated(level - 1);
              target.AnalysisInterface = source.AnalysisInterface.ToDtoWithRelated(level - 1);
              target.StatusType = source.StatusType.ToDtoWithRelated(level - 1);
              target.AnalysisProcessLogSteps = source.AnalysisProcessLogSteps.ToDtosWithRelated(level - 1);
              target.AnalysisProcessLogBatchDetails = source.AnalysisProcessLogBatchDetails.ToDtosWithRelated(level - 1);
              target.AnalysisProcessLogBatches = source.AnalysisProcessLogBatches.ToDtosWithRelated(level - 1);
              target.AnalysisProcessLogStepOutputs = source.AnalysisProcessLogStepOutputs.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.Analysis.AnalysisProcessLog ToEntity(this AnalysisProcessLogDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.Analysis.AnalysisProcessLog();

            // Properties
            target.AnalysisProcessLogID = source.AnalysisProcessLogID;
            target.CreatedOn = source.CreatedOn;
            target.AnalysisInterfaceID = source.AnalysisInterfaceID;
            target.AnalysisInterfaceVersionNumber = source.AnalysisInterfaceVersionNumber;
            target.StatusTypeID = source.StatusTypeID;
            target.StatusTypeVersionNumber = source.StatusTypeVersionNumber;
            target.StatusTypeValueID = source.StatusTypeValueID;
            target.HasError = source.HasError;
            target.IsComplete = source.IsComplete;
            target.CompletedOn = source.CompletedOn;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<AnalysisProcessLogDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.Analysis.AnalysisProcessLog> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<AnalysisProcessLogDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.Analysis.AnalysisProcessLog> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.Analysis.AnalysisProcessLog> ToEntities(this IEnumerable<AnalysisProcessLogDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.Analysis.AnalysisProcessLog source, AnalysisProcessLogDTO target);

        static partial void OnEntityCreating(AnalysisProcessLogDTO source, Bec.TargetFramework.Data.Analysis.AnalysisProcessLog target);

    }

}
