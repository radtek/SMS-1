//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 24/03/2015 09:58:29
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Analysis.Entities
{

    public static partial class AnalysisInputSchemaConverter
    {

        public static AnalysisInputSchemaDTO ToDto(this Bec.TargetFramework.Data.Analysis.AnalysisInputSchema source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static AnalysisInputSchemaDTO ToDtoWithRelated(this Bec.TargetFramework.Data.Analysis.AnalysisInputSchema source, int level)
        {
            if (source == null)
              return null;

            var target = new AnalysisInputSchemaDTO();

            // Properties
            target.AnalysisInputSchemaID = source.AnalysisInputSchemaID;
            target.AnalysisInputSchemaVersionNumber = source.AnalysisInputSchemaVersionNumber;
            target.CreatedOn = source.CreatedOn;
            target.Name = source.Name;
            target.Description = source.Description;
            target.InputSchemaData = source.InputSchemaData;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.CreatedBy = source.CreatedBy;
            target.ModifiedOn = source.ModifiedOn;
            target.ModifiedBy = source.ModifiedBy;

            // Navigation Properties
            if (level > 0) {
              target.AnalysisInputMortgageApplications = source.AnalysisInputMortgageApplications.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.Analysis.AnalysisInputSchema ToEntity(this AnalysisInputSchemaDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.Analysis.AnalysisInputSchema();

            // Properties
            target.AnalysisInputSchemaID = source.AnalysisInputSchemaID;
            target.AnalysisInputSchemaVersionNumber = source.AnalysisInputSchemaVersionNumber;
            target.CreatedOn = source.CreatedOn;
            target.Name = source.Name;
            target.Description = source.Description;
            target.InputSchemaData = source.InputSchemaData;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.CreatedBy = source.CreatedBy;
            target.ModifiedOn = source.ModifiedOn;
            target.ModifiedBy = source.ModifiedBy;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<AnalysisInputSchemaDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.Analysis.AnalysisInputSchema> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<AnalysisInputSchemaDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.Analysis.AnalysisInputSchema> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.Analysis.AnalysisInputSchema> ToEntities(this IEnumerable<AnalysisInputSchemaDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.Analysis.AnalysisInputSchema source, AnalysisInputSchemaDTO target);

        static partial void OnEntityCreating(AnalysisInputSchemaDTO source, Bec.TargetFramework.Data.Analysis.AnalysisInputSchema target);

    }

}
