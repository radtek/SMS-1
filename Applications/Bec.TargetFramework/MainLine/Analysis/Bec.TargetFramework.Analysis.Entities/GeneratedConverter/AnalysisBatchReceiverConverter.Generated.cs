//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 24/03/2015 09:58:29
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Analysis.Entities
{

    public static partial class AnalysisBatchReceiverConverter
    {

        public static AnalysisBatchReceiverDTO ToDto(this Bec.TargetFramework.Data.Analysis.AnalysisBatchReceiver source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static AnalysisBatchReceiverDTO ToDtoWithRelated(this Bec.TargetFramework.Data.Analysis.AnalysisBatchReceiver source, int level)
        {
            if (source == null)
              return null;

            var target = new AnalysisBatchReceiverDTO();

            // Properties
            target.AnalysisBatchReceiverID = source.AnalysisBatchReceiverID;
            target.AnalysisBatchReceiverVersionNumber = source.AnalysisBatchReceiverVersionNumber;
            target.Name = source.Name;
            target.Description = source.Description;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.AnalysisBatchReceiverTypeID = source.AnalysisBatchReceiverTypeID;
            target.AnalysisBatchReceiverCategoryID = source.AnalysisBatchReceiverCategoryID;
            target.ObjectName = source.ObjectName;
            target.ObjectAssembly = source.ObjectAssembly;

            // Navigation Properties
            if (level > 0) {
              target.AnalysisInterfaces = source.AnalysisInterfaces.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.Analysis.AnalysisBatchReceiver ToEntity(this AnalysisBatchReceiverDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.Analysis.AnalysisBatchReceiver();

            // Properties
            target.AnalysisBatchReceiverID = source.AnalysisBatchReceiverID;
            target.AnalysisBatchReceiverVersionNumber = source.AnalysisBatchReceiverVersionNumber;
            target.Name = source.Name;
            target.Description = source.Description;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.AnalysisBatchReceiverTypeID = source.AnalysisBatchReceiverTypeID;
            target.AnalysisBatchReceiverCategoryID = source.AnalysisBatchReceiverCategoryID;
            target.ObjectName = source.ObjectName;
            target.ObjectAssembly = source.ObjectAssembly;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<AnalysisBatchReceiverDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.Analysis.AnalysisBatchReceiver> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<AnalysisBatchReceiverDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.Analysis.AnalysisBatchReceiver> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.Analysis.AnalysisBatchReceiver> ToEntities(this IEnumerable<AnalysisBatchReceiverDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.Analysis.AnalysisBatchReceiver source, AnalysisBatchReceiverDTO target);

        static partial void OnEntityCreating(AnalysisBatchReceiverDTO source, Bec.TargetFramework.Data.Analysis.AnalysisBatchReceiver target);

    }

}
