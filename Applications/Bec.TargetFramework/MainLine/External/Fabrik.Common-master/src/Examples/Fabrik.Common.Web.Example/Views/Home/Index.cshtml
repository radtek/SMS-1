@model Fabrik.Common.Web.Example.Models.HomeView
@{
    ViewBag.Title = "Home Page";
}

@section Scripts {
    <script type="text/javascript">

        $(function () {

            $("#ajaxify").click(function() {

                // hijax the form

                $("form").submit(function (e) {
                    var $form = $(this);
                    var validator = $form.data("validator");

                    if (!validator || !$form.valid())
                        return;
                
                    e.preventDefault();

                    $.ajax({
                        url: "@Url.Action("index")",
                        type: "POST",
                        data: $form.serialize(),
                        statusCode: {
                            400: function(xhr, status, err) {                           
                                var errors = $.parseJSON(err);
                                validator.showErrors(errors);
                            }
                        },
                        success: function() {
                            // clear errors
                            // validator.resetForm();
                        }
                    });
                });

                alert("Ajaxified!");
            });
        });
    
    </script>
}

<h2>@Model.Message</h2>

<h3>@Html.IfElse(DateTime.UtcNow.Hour < 12, "Good morning!", "Good afternoon!")</h3>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
            <p>@Html.DescriptionFor(model => model.Name)</p>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Age)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Age)
            @Html.ValidationMessageFor(model => model.Age)
            <p>@Html.DescriptionFor(model => model.Age)</p>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SubscriptionType)
        </div>
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => model.SubscriptionType)
            @Html.ValidationMessageFor(model => model.SubscriptionType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SubscriptionSources)
        </div>
        <div class="editor-field">
            @Html.CheckBoxListFor(model => model.SubscriptionSources, Model.SubscriptionSourcesList)
            @Html.ValidationMessageFor(model => model.SubscriptionSources)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TestEnum)
        </div>
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => model.TestEnum)
            @Html.ValidationMessageFor(model => model.TestEnum)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TestEnumNullable)
        </div>
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => model.TestEnumNullable, "Pick One", "0", new { @class = "foo" })
            @Html.ValidationMessageFor(model => model.TestEnumNullable)
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<p>
    <button id="ajaxify">Ajaxify This Form</button>
</p>

@Html.Action("about")