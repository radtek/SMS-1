@using Bec.TargetFramework.Entities
@using Bec.TargetFramework.Entities.Enums
@using Bec.TargetFramework.Infrastructure.Extensions
@model AddSmsTransactionDTO
@{
    var titles = ((SalutationEnum[])Enum.GetValues(typeof(SalutationEnum)))
        .Select(s => new SelectListItem
        {
            Text = s.GetStringValue(),
            Value = s.GetStringValue()
        });
}
<div class="modal fade in" tabindex="-1" role="dialog" aria-labelledby="addTransactionLabel" aria-hidden="true">
    <div class="modal-dialog">
        <!--
        <div class="help help-container help-sm">
            <div class="help-vert">HELP</div>
            <div class="help help-inner">
                <div>Help goes here</div>
            </div>
        </div>
        -->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="addTransactionLabel">Order Product - Buyer Product > Bank Account Check</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <form id="addTransaction-form" class="smart-form margin-top-10">
                        @Html.ValidationBootstrap()
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.BuyerUaoID)
                        <section class="col-xs-12">
                            <div id="addTransactionWizard">
                                <div class="form-bootstrapWizard margin-left-10 margin-right-10">
                                    <ul class="nav nav-pills nav-justified thumbnail setup-panel">
                                        <li class="active" data-target="#step1">
                                            <a href="#step1" data-toggle="tab">
                                                <h4 class="list-group-item-heading">Step 1</h4>
                                                <p class="list-group-item-text">Primary Buyer</p>
                                            </a>
                                        </li>
                                        <li data-target="#step2">
                                            <a href="#step2" data-toggle="tab">
                                                <h4 class="list-group-item-heading">Step 2</h4>
                                                <p class="list-group-item-text">Transaction Details</p>
                                            </a>
                                        </li>
                                    </ul>
                                </div>

                                <div class="tab-content">
                                    <div class="tab-pane active" id="step1">

                                        <fieldset>
                                            <legend>Primary Buyer</legend>
                                            <div class="row">
                                                <section class="col col-sm-4">
                                                    <label class="label">Title</label>
                                                    <label class="select">
                                                        @Html.DropDownListFor(m => m.Salutation, new SelectList(titles, "Value", "Text"), "Please Select", new { tabindex = "1" })
                                                        <i></i>
                                                    </label>
                                                </section>
                                                <section class="col col-sm-4">
                                                    <label class="label">First Name</label>
                                                    <label class="input">
                                                        <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                                        @Html.TextBoxFor(m => m.FirstName, new { tabindex = "2", maxlength = 50 })
                                                    </label>
                                                </section>
                                                <section class="col col-sm-4">
                                                    <label class="label">Last Name</label>
                                                    <label class="input">
                                                        <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                                        @Html.TextBoxFor(m => m.LastName, new { tabindex = "3", maxlength = 50 })
                                                    </label>
                                                </section>
                                            </div>
                                            <div class="row">
                                                <section class="col col-sm-8">
                                                    <label class="label">Email</label>
                                                    <label class="input">
                                                        <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                                        @Html.TextBoxFor(m => m.Email, new { tabindex = "4", maxlength = 100, type = "email" })
                                                    </label>
                                                </section>
                                                <section class="col col-sm-4">
                                                    <label class="label">Date of Birth <small>[dd/mm/yyyy]</small></label>
                                                    <label class="input">
                                                        <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                                        @Html.TextBoxFor(m => m.BirthDate, "{0:dd/MM/yyyy}", new { tabindex = "5", data_mask = "99/99/9999", id = "birthDateInput", placeholder = "dd/mm/yyyy", @readonly = true })
                                                    </label>
                                                </section>
                                            </div>
                                        </fieldset>
                                        <fieldset>
                                            <legend>Registered Home Address</legend>
                                            <div class="row">
                                                <section class="col col-4">
                                                    <label class="label">Lookup Postcode</label>
                                                    <label class="input">
                                                        <input id="primaryBuyerPostcodeLookup" type="text" tabindex="6" maxlength="10" />
                                                    </label>
                                                </section>

                                                <section class="col">
                                                    <label class="label">&nbsp;</label>
                                                    <button id="primaryBuyerFindAddressButton" data-url="@Url.Action("FindAddress", "Home", new {Area = ""})" type="button" class="btn btn-default btn-sm" tabindex="7">Find Address</button>
                                                </section>
                                            </div>

                                            <section>
                                                <label class="select">
                                                    <select id="primaryBuyerAddressResults" tabindex="8"></select>
                                                    <i></i>
                                                </label>
                                            </section>


                                            <div class="row">
                                                <section class="col" id="primaryBuyerNoMatch">
                                                    <em style="color: #d56161">No matches found, please enter address below</em>
                                                </section>
                                            </div>

                                            <div class="row" id="primaryBuyerManAddRow">
                                                <section class="col">
                                                    <input type="checkbox" id="primaryBuyerManualAddress" />
                                                    <label for="primaryBuyerManualAddress" tabindex="9">Edit Address Details</label>
                                                </section>
                                            </div>

                                            <div class="row">
                                                <section class="col col-6">
                                                    <label class="input">
                                                        <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                                        @Html.TextBoxFor(m => m.Line1, new { id = "primaryBuyerLine1", @readonly = "readonly", placeholder = "Address Line 1", tabindex = "10", maxlength = 50 })
                                                    </label>
                                                </section>
                                                <section class="col col-6">
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.County, new { id = "primaryBuyerCounty", @readonly = "readonly", placeholder = "County", tabindex = "13", maxlength = 50 })
                                                    </label>
                                                </section>
                                            </div>

                                            <div class="row">
                                                <section class="col col-6">
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.Line2, new { id = "primaryBuyerLine2", @readonly = "readonly", placeholder = "Address Line 2", tabindex = "11", maxlength = 50 })
                                                    </label>
                                                </section>
                                                <section class="col col-6">
                                                    <label class="input">
                                                        <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                                        @Html.TextBoxFor(m => m.PostalCode, new { id = "primaryBuyerPostalCode", @readonly = "readonly", placeholder = "Postcode", tabindex = "14", maxlength = 50 })
                                                    </label>
                                                </section>
                                            </div>

                                            <div class="row">
                                                <section class="col col-6">
                                                    <label class="input">
                                                        <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                                        @Html.TextBoxFor(m => m.Town, new { id = "primaryBuyerTown", @readonly = "readonly", placeholder = "Town", tabindex = "12", maxlength = 50 })
                                                    </label>
                                                </section>
                                            </div>
                                            <div class="row">
                                                <section class="col col-sm-12">
                                                    <label class="label">Additional Address Information</label>
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.AdditionalAddressInformation, new { id = "primaryBuyerAdditionalAddressInformation", @readonly = "readonly", tabindex = "15", maxlength = 50 })
                                                    </label>
                                                </section>
                                            </div>
                                        </fieldset>
                                    </div>

                                    <div class="tab-pane" id="step2">
                                        <fieldset>
                                            <legend>Transaction Details</legend>
                                            <div class="row">
                                                <section class="col col-4">
                                                    <label class="label">Lookup Postcode</label>
                                                    <label class="input">
                                                        <input id="sms_postcodelookup" type="text" tabindex="5" maxlength="10" />
                                                    </label>
                                                </section>

                                                <section class="col">
                                                    <label class="label">&nbsp;</label>
                                                    <button id="sms_findaddressbutton" data-url="@Url.Action("FindAddress", "Home", new {Area = ""})" type="button" class="btn btn-default btn-sm" tabindex="6">Find Address</button>
                                                </section>
                                            </div>

                                            <section>
                                                <label class="select">
                                                    <select id="sms_addressresults" tabindex="7"></select>
                                                    <i></i>
                                                </label>
                                            </section>


                                            <div class="row">
                                                <section class="col" id="sms_noMatch">
                                                    <em style="color: #d56161">No matches found, please enter address below</em>
                                                </section>
                                            </div>

                                            <div class="row" id="sms_manAddRow">
                                                <section class="col">
                                                    <input type="checkbox" id="sms_manualAddress" />
                                                    <label for="sms_manualAddress" tabindex="8">Edit Address Details</label>
                                                </section>
                                            </div>

                                            <div class="row">
                                                <section class="col col-6">
                                                    <label class="input">
                                                        <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                                        @Html.TextBoxFor(m => m.SmsTransactionDTO.Address.Line1, new { id = "sms_Line1", @readonly = "readonly", placeholder = "Address Line 1", tabindex = "9", maxlength = 50 })
                                                    </label>
                                                </section>
                                                <section class="col col-6">
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.SmsTransactionDTO.Address.County, new { id = "sms_County", @readonly = "readonly", placeholder = "County", tabindex = "12", maxlength = 50 })
                                                    </label>
                                                </section>
                                            </div>

                                            <div class="row">
                                                <section class="col col-6">
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.SmsTransactionDTO.Address.Line2, new { id = "sms_Line2", @readonly = "readonly", placeholder = "Address Line 2", tabindex = "10", maxlength = 50 })
                                                    </label>
                                                </section>
                                                <section class="col col-6">
                                                    <label class="input">
                                                        <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                                        @Html.TextBoxFor(m => m.SmsTransactionDTO.Address.PostalCode, new { id = "sms_PostalCode", @readonly = "readonly", placeholder = "Postcode", tabindex = "13", maxlength = 50 })
                                                    </label>
                                                </section>
                                            </div>

                                            <div class="row">
                                                <section class="col col-6">
                                                    <label class="input">
                                                        <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                                        @Html.TextBoxFor(m => m.SmsTransactionDTO.Address.Town, new { id = "sms_Town", @readonly = "readonly", placeholder = "Town", tabindex = "11", maxlength = 50 })
                                                    </label>
                                                </section>
                                            </div>
                                            <div class="row">
                                                <section class="col col-sm-12">
                                                    <label class="label">Additional Address Information</label>
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.SmsTransactionDTO.Address.AdditionalAddressInformation, new { id = "sms_AdditionalAddressInformation", @readonly = "readonly", tabindex = "14", maxlength = 50 })
                                                    </label>
                                                </section>
                                            </div>

                                            <div class="row">
                                                <section class="col col-6">
                                                    <label class="label">Price</label>
                                                    <label class="input">
                                                        <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                                        @Html.TextBoxFor(m => m.SmsTransactionDTO.Price, new { tabindex = "15", maxlength = 50 })
                                                    </label>
                                                </section>
                                            </div>

                                            <div class="row">
                                                <section class="col col-6">
                                                    <label class="label">Mortgage Lender</label>
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.SmsTransactionDTO.LenderName, new { tabindex = "16", maxlength = 50, id = "lenderSearch", @class = "form-control" })
                                                        <span class="typeahead-spinner"><i class="fa fa-spin fa-spinner"></i></span>
                                                    </label>
                                                </section>
                                                <section class="col col-6">
                                                    <label class="label">Mortgage Application Number</label>
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.SmsTransactionDTO.MortgageApplicationNumber, new { tabindex = "17", maxlength = 50 })
                                                    </label>
                                                </section>
                                            </div>

                                        </fieldset>
                                        <fieldset>
                                            <legend>Other Details</legend>
                                            <div class="form-group">
                                                <label class="label">Internal Reference</label>
                                                <label class="input">
                                                    <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                                    @Html.TextBoxFor(m => m.SmsTransactionDTO.Reference, new { tabindex = "18", maxlength = 500 })
                                                </label>
                                            </div>
                                        </fieldset>
                                        <!--
                    <fieldset>
                        <section>
                            <label class="label">Product Price: <span id="price">£10.00</span></label>
                        </section>

                        <section>
                            <label class="label">Credit Balance as of <span id="balance"></span></label>
                        </section>

                    </fieldset>
                    -->

                                    </div>

                                </div>
                            </div>
                        </section>
                    </form>
                </div>
            </div>
            <div class="modal-footer" id="addTransactionControls">
                <!--
                <button type="button" class="btn btn-sm btn-default pull-left" onclick="updateBalance()" tabindex="19">Refresh</button>
                <button type="button" class="btn btn-sm btn-default pull-left" onclick="topUp()" tabindex="18">Top Up Credit</button>
                    -->
                <button type="button" id="cancelAddTransaction" class="btn btn-default" data-dismiss="modal" tabindex="19">
                    Cancel
                </button>
                <button type="button" id="stepBack" class="btn btn-primary" style="display:none;" tabindex="20">
                    <i class="fa fa-chevron-left margin-right-5"></i>Back
                </button>
                <button type="button" id="stepNext" class="btn btn-primary" tabindex="20">
                    Next<i class="fa fa-chevron-right margin-left-5"></i>
                </button>
                <button type="button" id="submitAddTransaction" class="btn btn-primary" style="display:none;" tabindex="20">
                    Order Product<i class="fa fa-check margin-left-5"></i>
                </button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript" src="~/Scripts/typeahead.bundle.min.js"></script>
<script type="text/javascript">

    $(function () {

        var lenders = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Name'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            remote: {
                url: '@Url.Action("SearchLenders", "Products", new {Area = "ProOrganisation"})' + '?search=%QUERY',
                wildcard: '%QUERY',
                transform: function (response) {
                    return response.Items;
                }
            }
        });

        $('#lenderSearch').typeahead({
            minLength: 1,
            highlight: true,
            hint: false
        }, {
            display: 'Name',
            source: lenders
        })
        .on('typeahead:asyncrequest', function () {
            $('#orgSearch').parent().siblings('.typeahead-spinner').show();
        })
        .on('typeahead:asynccancel typeahead:asyncreceive', function () {
            $('#orgSearch').parent().siblings('.typeahead-spinner').hide();
        });

        new findAddress({
            postcodelookup: '#primaryBuyerPostcodeLookup',
            line1: '#primaryBuyerLine1',
            line2: '#primaryBuyerLine2',
            town: '#primaryBuyerTown',
            county: '#primaryBuyerCounty',
            postcode: '#primaryBuyerPostalCode',
            manualAddress: '#primaryBuyerManualAddress',
            resList: '#primaryBuyerAddressResults',
            manAddRow: '#primaryBuyerManAddRow',
            noMatch: '#primaryBuyerNoMatch',
            findAddressButton: '#primaryBuyerFindAddressButton',
            additionalAddress: '#primaryBuyerAdditionalAddressInformation'
        }).setup();

        new findAddress({
            postcodelookup: '#sms_postcodelookup',
            line1: '#sms_Line1',
            line2: '#sms_Line2',
            town: '#sms_Town',
            county: '#sms_County',
            postcode: '#sms_PostalCode',
            manualAddress: '#sms_manualAddress',
            resList: '#sms_addressresults',
            manAddRow: '#sms_manAddRow',
            noMatch: '#sms_noMatch',
            findAddressButton: '#sms_findaddressbutton',
            additionalAddress: '#sms_AdditionalAddressInformation'
        }).setup();

        $("#addTransaction-form").validate({
            ignore: '.skip',
            // Rules for form validation
            rules: {
                "@Html.NameFor(m => m.Salutation)": {
                    required: true
                },
                "@Html.NameFor(m => m.FirstName)": {
                    required: true
                },
                "@Html.NameFor(m => m.LastName)": {
                    required: true
                },
                "@Html.NameFor(m => m.Email)": {
                    required: true,
                    email: true,
                    remote: {
                        url: '@Url.Action("CheckEmail", "Home", new { Area = "" })',
                        data: { email: function () { return $('#Email').val(); } },
                        dataType: 'json',
                        error: function (xhr, status, error) { checkRedirect(xhr.responseJSON); }
                    }
                },
                "@Html.NameFor(m => m.BirthDate)": {
                    required: true,
                    dateGB: true
                },
                "@Html.NameFor(m => m.Line1)": {
                    required: true
                },
                "@Html.NameFor(m => m.Town)": {
                    required: true
                },
                "@Html.NameFor(m => m.PostalCode)": {
                    required: true,
                    minlength: 5
                },
                "@Html.NameFor(m => m.SmsTransactionDTO.Address.Line1)": {
                    required: true
                },
                "@Html.NameFor(m => m.SmsTransactionDTO.Address.Town)": {
                    required: true
                },
                "@Html.NameFor(m => m.SmsTransactionDTO.Address.PostalCode)": {
                    required: true,
                    minlength: 5
                },
                "@Html.NameFor(m => m.SmsTransactionDTO.Reference)": {
                    required: true
                },
                "@Html.NameFor(m => m.SmsTransactionDTO.Price)": {
                    required: true,
                    digits: true,
                    max: 2147483647
                },
            },

            // Do not change code below
            errorPlacement: function (error, element) {
                error.insertAfter(element.parent());
            },

            submitHandler: validateSubmit
        });

        var wizard = $('#addTransactionWizard').bootstrapWizard({
            tabClass: 'form-wizard',
            onTabShow: function (tab, navigation, index) {
                var $total = navigation.find('li').length;
                var $current = index + 1;
                if ($current >= $total) {
                    $('#stepBack').show();
                    $('#stepNext').hide();
                    $('#submitAddTransaction').show();
                    $('#submitAddTransaction').removeClass('disabled');
                } else {
                    $('#stepBack').hide();
                    $('#stepNext').show();
                    $('#submitAddTransaction').hide();
                }
            }
        });

        $("#submitAddTransaction").click(function () {
            var form = $("#addTransaction-form");
            var isValid = form.valid();
            if (!isValid) {
                var invalidInputs = $(form.find('.tab-pane .invalid')[0]);
                var tabId = $(invalidInputs.parents('.tab-pane')[0]).attr('id');
                wizard.bootstrapWizard('show', tabId);

                return false;
            }
            form.submit();
        });

        $("#stepNext").click(function () {
            wizard.bootstrapWizard('next');
        });

        $("#stepBack").click(function () {
            wizard.bootstrapWizard('previous');
        });

        function validateSubmit(form) {
            $("#addTransactionControls button").prop('disabled', true);
            var formData = $("#addTransaction-form").serializeArray();
            //handlemodal won't show the modal if there are no results, i.e. it receives a json result {"result" : "ok"}
            handleModal(
            {
                url: '@Url.Action("CheckDuplicateUserSmsTransaction", "Products", new { Area = "ProOrganisation" })',
                data: formData,
                method: 'POST'
            },
            {
                cancel: function () {
                    $("#addTransactionControls button").prop('disabled', false);
                },
                save: function () {
                    doPost(formData);
                }
            },
            true,
            "save"); //default action if no duplicate results
        }

        function doPost(formData) {
            ajaxWrapper({
                url: '@Url.Action("AddSmsTransaction", "Products", new { area = "ProOrganisation" })',
                type: "POST",
                data: formData
            }).done(function (res) {
                if (res.result == true)
                    window.location = '@Url.Action("Index", "Transaction", new { area = "SmsTransaction" })';
                else {
                    $('#buyerUaoID').val(res.buyerUaoID);
                    updateBalance();
                    handleModal({ url: '@Url.Action("ViewMessage", "Home", new { Area = "", })' + "?title=" + res.title + "&message=" + res.message + "&button=Back" }, {
                        messageButton: function () {
                            $("#addTransactionControls button").prop('disabled', false);
                        }
                    }, true);
                }
            }).fail(function (e) {
                console.log(e);
                updateBalance();
                handleModal({ url: '@Url.Action("ViewMessage", "Home", new { Area = "" })' + "?title=Error&message=" + e + "&button=Back" }, {
                    messageButton: function () {
                        $("#addTransactionControls button").prop('disabled', false);
                    }
                }, true);
            });
        }

        function updateBalance() {
            ajaxWrapper({ url: '@Url.Action("GetBalanceAsAt", "Credit", new { area = "ProOrganisation" })' + '?startOfDay=false&date=' + new Date().toJSON().slice(0, 10) })
                .done(function (res) {
                    $('#balance').text(new Date().toLocaleTimeString() + ": " + formatCurrency(parseFloat(res)));
                });
        }

        function topUp() {
            handleModal({ url: '@Url.Action("ViewTopUpCredit", "Credit", new { area  = "ProOrganisation", redirect = false })' }, {
                submitPay: function () {
                    updateBalance();
                }
            }, true);
        }

        function setupDateOfBirthInput() {
            var now = new Date();
            var minDate = new Date(now.getFullYear() - 110, 0, 1);//, 1, 1);
            $("#birthDateInput").datepicker({
                dateFormat: "dd/mm/yy",
                maxDate: now,
                minDate: minDate,
                changeMonth: true,
                changeYear: true,
                yearRange: "-110:+0",
                showButtonPanel: true,
                prevText: "<i class=\"fa fa-chevron-left\"></i>",
                nextText: "<i class=\"fa fa-chevron-right\"></i>"
            });
        }

        updateBalance();
        setupDateOfBirthInput();
    });

</script>
}