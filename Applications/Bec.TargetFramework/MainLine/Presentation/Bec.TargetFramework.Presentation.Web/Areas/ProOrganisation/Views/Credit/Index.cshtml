<!-- MAIN CONTENT -->
<div id="content">
    <div class="row">

        <h2 class="row-seperator-header inline-heading">View Credit</h2>
        <a data-href="@Url.Action("ViewTopUpCredit", "Credit", new { area  = "ProOrganisation", redirect = true })" class="btn btn-primary btn-sm inline-heading" data-modallink="true">Top Up Credit</a>

        <div class="col-sm-12 margin-top-10">
            <form id="creditSearchForm">
                <div class="row">
                    <div class="col-sm-2">
                        <div class="input-group">
                            <input class="form-control" name="from" id="from" type="text" placeholder="From" data-mask="99/99/9999">
                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                        </div>
                    </div>
                    <div class="col-sm-2">
                        <div class="input-group">
                            <input class="form-control" name="to" id="to" type="text" placeholder="To" data-mask="99/99/9999">
                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                        </div>
                    </div>
                    <div class="col-sm-2">
                        <button class="btn btn-default" id="submitCreditSearch">Filter</button>
                    </div>
                    <div class="col-sm-6">
                        <div class="pull-right">
                            <span>Opening Balance: </span>
                            <span id="openingBal"></span>
                            <span>&nbsp;Closing Balance: </span>
                            <span id="closingBal" style="margin-right: 8px;"></span>
                        </div>
                    </div>
                </div>
            </form>
            <div class="row margin-top-10">
                <div class="col-sm-12">
                    <div class="well">
                        <div id="statementGrid"></div>
                    </div>
                </div>
            </div>

            <div class="row hidden" id="rPanel">
                <div class="col-sm-6">
                    <!-- well -->
                    <div class="well">

                        <h5>Selected Transaction</h5>
                        <dl class="dl-horizontal">
                            <dt>Reference:</dt>
                            <dd><p id="ddReference"></p></dd>
                            <dt>Amount:</dt>
                            <dd><p id="ddAmount"></p></dd>
                            <dt>Date:</dt>
                            <dd><p id="ddDate"></p></dd>
                            <dt>Created By:</dt>
                            <dd><p id="ddCreatedBy"></p></dd>
                        </dl>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript" src="~/Scripts/Bec/bec.daterange.js"></script>
    <script type="text/javascript">

        var shownMessage = false;
        //set up grid options for the three grids. most are passed straight on to kendo grid.
        var statementGrid = new gridItem(
            {
                gridElementId: 'statementGrid',
                url: '@Url.Action("GetStatement", "Credit", new { area = "ProOrganisation" })',
                schema: { data: "Items", total: "Count", model: { id: "TransactionOrderID" } },
                type: 'odata-v4',
                serverSorting: true,
                serverPaging: true,
                defaultSort: { field: "BalanceOn", dir: "desc" },
                panels: ['rPanel'],
                change: txChange,
                jumpToId: '@ViewBag.TransactionOrderId',
                onLoadFailed: function (data) {
                    console.log(data);
                },
                extraParameters: function () {
                    var selectedDateRange = getSelectedDateRange();
                    return "&from=" + selectedDateRange.from + "&to=" + selectedDateRange.to;
                },
                columns: [
                        {
                            field: "InvoiceReference",
                            title: "Reference",
                            sortable: false
                        },
                        {
                            field: "Amount",
                            title: "Amount",
                            sortable: false,
                            template: function (dataItem) { return formatCurrency(dataItem.Amount); }
                        },
                        {
                            field: "Balance",
                            title: "Balance",
                            sortable: false,
                            template: function (dataItem) { return formatCurrency(dataItem.Balance); }
                        },
                        {
                            field: "BalanceOn",
                            title: "Date",
                            template: function (dataItem) { return dateString(dataItem.BalanceOn); }
                        },
                        {
                            field: "CreatedByName",
                            title: "Created By",
                            sortable: false
                        }
                ]
            });

        $(function () {
            findModalLinks();
            setupDateRangeInputs();
            statementGrid.makeGrid();
            updateBalances();
            setupForm();
        });

        function applyFilter() {
            statementGrid.refreshGrid();
            updateBalances();
        }

        function updateBalances() {
            var selectedDateRange = getSelectedDateRange();

            ajaxWrapper({ url: '@Url.Action("GetBalanceAsAt", "Credit", new { area = "ProOrganisation" })' + '?startOfDay=true&date=' + selectedDateRange.from })
                .done(function (res) {
                    $('#openingBal').text(formatCurrency(parseFloat(res)));
                });
            ajaxWrapper({ url: '@Url.Action("GetBalanceAsAt", "Credit", new { area = "ProOrganisation" })' + '?startOfDay=false&date=' + selectedDateRange.to })
                .done(function (res) {
                    $('#closingBal').text(formatCurrency(parseFloat(res)));
                });
        }

        //data binding for the panes beneath each grid
        function txChange(dataItem) {
            $("p#ddReference").text(dataItem.InvoiceReference || "");
            $("p#ddAmount").text(formatCurrency(dataItem.Amount));
            $("p#ddDate").text(dateString(dataItem.BalanceOn) || "");
            $("p#ddCreatedBy").text(dataItem.CreatedByName || "");
        }

        function getSelectedDateRange() {
            var dateFrom = moment($('#from').val(), 'DD/MM/YYYY').format('YYYY-MM-DD');
            var dateTo = moment($('#to').val(), 'DD/MM/YYYY').format('YYYY-MM-DD');
            return {
                from: dateFrom,
                to: dateTo
            };
        }

        function setupDateRangeInputs() {
            $.becDateRange({
                dateFromInputSelector: "#from",
                dateToInputSelector: "#to",
                dateFromShowButtonSelector: "#from ~ .input-group-addon",
                dateToShowButtonSelector: "#to ~ .input-group-addon"
            });
        }

        function setupForm() {
            var creditSearchForm = $("#creditSearchForm");
            $("#submitCreditSearch").click(function (e) {
                creditSearchForm.submit();
            });
            creditSearchForm.validate({
                ignore: '.skip',
                rules: {
                    from: {
                        required: true,
                        dateGB: true
                    },
                    to: {
                        required: true,
                        dateGB: true
                    },
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                },

                submitHandler: applyFilter
            });
        }

    </script>
}
