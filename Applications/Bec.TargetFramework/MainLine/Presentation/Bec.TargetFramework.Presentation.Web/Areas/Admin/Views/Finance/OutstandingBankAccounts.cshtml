@using Bec.TargetFramework.Entities.Enums
<!-- MAIN CONTENT -->
<div id="content">
    <div class="row">

        <h2 class="row-seperator-header inline-heading">View Bank Accounts</h2>
        <div class="col-sm-12">

            <div class="row">
                <div class="col-sm-12">
                    <div class="well">
                        <div id="baGrid"></div>
                    </div>
                </div>
            </div>

            <div class="row hidden" id="rPanel">
                <div class="col-sm-6">
                    <!-- well -->
                    <div class="well">
                        
                        <a id="markPotentialButton" class="btn btn-primary btn-sm" data-modallink="true">Mark Potential Fraud</a>
                        <a id="markSafeButton" class="btn btn-primary btn-sm" data-modallink="true">Mark Safe</a>
                        <a id="markSafeKillDupesButton" class="btn btn-primary btn-sm" data-modallink="true">Mark Safe and Mark all Duplicates as Potential Fraud</a>

                        <h5>Selected Bank Account</h5>
                        <dl class="dl-horizontal">
                            <dt>Account Number:</dt>
                            <dd><p id="ddAccountNumber"></p></dd>
                            <dt>Sort Code:</dt>
                            <dd><p id="ddSortCode"></p></dd>
                            <dt>Created:</dt>
                            <dd><p id="ddCreated"></p></dd>
                            <dt>Status:</dt>
                            <dd><p id="ddStatus"></p></dd>
                        </dl>
                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="well">
                        <h5>Account History</h5>
                        <div id="history"></div>
                        <h5 id="dupeHeading">Duplicate Accounts&nbsp;</h5>
                        <div id="duplicates"></div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">

        //set up grid options for the three grids. most are passed straight on to kendo grid.
        var baGrid = new gridItem(
            {
                gridElementId: 'baGrid',
                url: '@Url.Action("GetBankAccounts", "Finance", new { area = "Admin" })',
                schema: { data: "list", total: "total", model: { id: "OrganisationBankAccountID" } },
                defaultSort: { field: "Created", dir: "asc" },
                panels: ['rPanel'],
                jumpToId: '@TempData["OrganisationBankAccountID"]',
                change: txChange,
                columns: [
                        {
                            field: "Name",
                            title: "Firm Name"
                        },
                        {
                            field: "BankAccountNumber",
                            title: "Account Number"
                        },
                        {
                            field: "SortCode",
                            title: "Sort Code"
                        },
                        {
                            field: "Status",
                            title: "Status"
                        },
                        {
                            field: "StatusChangedBy",
                            title: "Changed By"
                        },
                        {
                            field: "StatusChangedOn",
                            title: "Changed On",
                            template: function (dataItem) { return dateString(dataItem.StatusChangedOn); }
                        },
                        {
                            field: "Created",
                            title: "Created",
                            template: function (dataItem) {
                                return dateString(dataItem.Created);
                            }
                        },
                        {
                            field: "Duplicates.length",
                            title: "Alert",
                            template: function (dataItem) {
                                return dataItem.Duplicates.length > 0 ? "<i class='fa fa-exclamation-triangle fa-lg' style='color:red;'></i> Duplicate accounts exist" : "";
                            }
                        }
                ]
            });

        $(document).ready(function () {
            baGrid.makeGrid();

            findModalLinks();
        });

        //data binding for the panes beneath each grid
        function txChange(dataItem) {
            $("p#ddAccountNumber").text(dataItem.BankAccountNumber || "");
            $("p#ddSortCode").text(dataItem.SortCode || "");
            $("p#ddCreated").text(dateString(dataItem.Created));
            $("p#ddStatus").text(dataItem.Description || "");

            $("#markPotentialButton").data('href', '@Url.Action("ViewStatus", "Finance", new { area = "Admin" })' + "?baId=" + dataItem.OrganisationBankAccountID + "&status=@BankAccountStatusEnum.PotentialFraud" + "&title=" + encodeURIComponent("Confirm Potential Fraud") + "&message=" + encodeURIComponent("Are you sure that you wish to confirm this account as Potential Fraud?"));
            $("#markSafeButton").data('href', '@Url.Action("ViewStatus", "Finance", new { area = "Admin" })' + "?baId=" + dataItem.OrganisationBankAccountID + "&status=@BankAccountStatusEnum.Safe" + "&title=" + encodeURIComponent("Mark Safe") + "&message=" + encodeURIComponent("Are you sure that you wish to mark this account Safe?"));
            $("#markSafeKillDupesButton").data('href', '@Url.Action("ViewStatus", "Finance", new { area = "Admin" })' + "?baId=" + dataItem.OrganisationBankAccountID + "&status=@BankAccountStatusEnum.Safe" + "&title=" + encodeURIComponent("Mark Safe") + "&message=" + encodeURIComponent("Are you sure that you wish to mark this account Safe?") + "&killDuplicates=true");
               
            $("#markSafeButton").attr("disabled", dataItem.Duplicates.length > 0);
            $("#markSafeKillDupesButton").attr("disabled", dataItem.Duplicates.length == 0);
               
            showHistory('#history', dataItem);
            showDuplicates('#duplicates', '#dupeHeading', dataItem);
        }

    </script>
}
