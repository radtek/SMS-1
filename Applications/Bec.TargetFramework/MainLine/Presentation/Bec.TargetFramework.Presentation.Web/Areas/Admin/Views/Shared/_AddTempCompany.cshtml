
@using Bec.TargetFramework.Entities
@model VCompanyDTO
           
@{
    List<SelectListItem> regulators = new List<SelectListItem>
    {
        new SelectListItem{Text = "SRA",Value="SRA"},
        new SelectListItem{Text = "CLC",Value="CLC"},
        new SelectListItem{Text = "Other",Value="Other"}
    };

    List<SelectListItem> titles = new List<SelectListItem>
    {
        new SelectListItem{Text = "Mr.",Value="Mr."},
        new SelectListItem{Text = "Mrs.",Value="Mrs."},
        new SelectListItem{Text = "Miss.",Value="Miss."},
        new SelectListItem{Text = "Ms.",Value="Ms."},
        new SelectListItem{Text = "Dr.",Value="Dr."}
    };
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
        &times;
    </button>
    <h4 class="modal-title" id="addModalLabel">Add Company</h4>
</div>
<div class="modal-body">
    <div class="row">
        <div class="col-md-12">

            <form action="@Url.Action("AddTempCompany", "TempCompany", new { area = "Admin" })" method="POST" id="addTempCompany-form" class="smart-form">
                @Html.ValidationBootstrap()
                @Html.AntiForgeryToken()
                <fieldset>
                    <div class="row">
                        <section class="col col-6">
                            <label class="label">Company Name</label>
                            <label class="input ">
                                <i class="icon-append fa fa-asterisk" style="font-size:0.7em;"></i>
                                @Html.TextBoxFor(m => m.CompanyName)
                            </label>
                        </section>

                        <section class="col col-6">
                            <label class="label">Regulator</label>
                            <label class="select">

                                @Html.DropDownListFor(m => m.CompanyRegulator, new SelectList(regulators, "Value", "Text"), "Please Select")

                            </label>
                        </section>
                    </div>

                    <div class="row">
                        <section class="col col-6">
                            <label class="label">Company Address</label>
                            <label class="input">
                                <i class="icon-append fa fa-asterisk" style="font-size:0.7em;"></i>
                                @Html.TextBoxFor(m => m.CompanyAddress1, new { placeholder = "Address Line 1" })
                            </label>
                        </section>

                        <section class="col col-6">
                            <label class="input" id="otherRegulatorLabel">
                                <i class="icon-append fa fa-asterisk" style="font-size:0.7em;"></i>
                                @Html.TextBoxFor(m => m.CompanyOtherRegulator, new { placeholder = "Enter Regulator" })

                            </label>
                        </section>
                    </div>

                    <div class="row">
                        <section class="col col-6">
                            <label class="input">
                                @Html.TextBoxFor(m => m.CompanyAddress2, new { placeholder = "Address Line 2" })
                            </label>
                        </section>
                    </div>

                    <div class="row">
                        <section class="col col-6">
                            <label class="input">
                                <i class="icon-append fa fa-asterisk" style="font-size:0.7em;"></i>
                                @Html.TextBoxFor(m => m.CompanyTownCity, new { placeholder = "Town/City" })
                            </label>
                        </section>
                    </div>

                    <div class="row">
                        <section class="col col-6">
                            <label class="input">
                                @Html.TextBoxFor(m => m.CompanyCounty, new { placeholder = "County" })
                            </label>
                        </section>
                    </div>

                    <div class="row">
                        <section class="col col-6">
                            <label class="input">
                                <i class="icon-append fa fa-asterisk" style="font-size:0.7em;"></i>
                                @Html.TextBoxFor(m => m.CompanyPostCode, new { placeholder = "Post Code" })
                            </label>
                        </section>
                    </div>

                    <div class="row">
                        <section class="col col-6">
                            <label class="label">Additional Address Information</label>
                            <label class="input">
                                <input type="text" name="aa" placeholder="">
                            </label>
                        </section>
                    </div>

                </fieldset>
                <fieldset>
                    <div class="row">
                        <section class="col col-3">
                            <label class="label">Title</label>
                            <label class="select">
                                @Html.DropDownListFor(m => m.SystemAdminTitle, new SelectList(titles, "Value", "Text"), "Please Select")
                            </label>
                        </section>
                        <section class="col col-4">
                            <label class="label">First Name</label>
                            <label class="input">
                                <i class="icon-append fa fa-asterisk" style="font-size:0.7em;"></i>
                                @Html.TextBoxFor(m => m.SystemAdminFirstName)
                            </label>
                        </section>
                            <section class="col col-5">
                                <label class="label">Last Name</label>
                                <label class="input">
                                    <i class="icon-append fa fa-asterisk" style="font-size:0.7em;"></i>
                                    @Html.TextBoxFor(m => m.SystemAdminLastName)
                                </label>
                            </section>
                        
                        </div>
                    <div class="row">
                        <section class="col col-6">
                            <label class="label">Email</label>
                            <label class="input">
                                <i class="icon-append fa fa-asterisk" style="font-size:0.7em;"></i>
                                @Html.TextBoxFor(m => m.SystemAdminEmail)
                            </label>
                        </section>
                            <section class="col col-6">
                                <label class="label">Telephone Number</label>
                                <label class="input">
                                    <i class="icon-append fa fa-asterisk" style="font-size:0.7em;"></i>
                                    @Html.TextBoxFor(m => m.SystemAdminTel)
                                </label>
                            </section>
                    </div>
                </fieldset>
        
        </form>

    </div>
    </div>
    
</div>
<div class="modal-footer">
    <button class="btn btn-default" data-toggle="modal" data-target="#cancelModal">
        Cancel
    </button>
    <button type="button" id="formSubmit" class="btn btn-primary">
        Save
    </button>
</div>
<script type="text/javascript">

    // submit from when Save button clicked
    $("#formSubmit").click(function () {
        $("#addTempCompany-form").submit();
    });
    

    $.validator.addMethod("regulatorOtherSelected", function (value, element) {
        if (value.toLowerCase() == 'other') {
            return true;
        } else if (value == "")
            return false;
        else
            return true;
    }, "This field is required");

    $.validator.addMethod("regulatorOtherSelectedAndNoOtherValue", function (value, element) {
        if (!$("#CompanyOtherRegulator").is(":visible"))
            return true;
        else if (value == "")
            return false;
        else
            return true;
    }, "This field is required");

    // Validation
    $("#addTempCompany-form").validate({
        ignore: '.skip',
        // Rules for form validation
        rules: {
            CompanyName: {
                required: true
            },
            CompanyAddress1: {
                required: true
            },
            CompanyTownCity: {
                required: true
            },
            CompanyPostCode: {
                required: true
            },
            CompanyRegulator: {
                regulatorOtherSelected: true
            },
            CompanyOtherRegulator: {
                regulatorOtherSelectedAndNoOtherValue: true
            },
            SystemAdminTitle: {
                required: true
            },
            SystemAdminFirstName: {
                required: true
            },
            SystemAdminLastName: {
                required: true
            },
            SystemAdminEmail: {
                required: true
            },
            SystemAdminTel: {
                required: true
            }

        },

        // Messages for form validation
        messages: {
            CompanyName: {
                required: 'Please enter a Company Name'
            }
        },

        // Do not change code below
        errorPlacement: function (error, element) {
            error.insertAfter(element.parent());
        }
    });

    $("#otherRegulatorLabel").hide();
    $("#CompanyRegulator").change(function() {
        var selectedValue = this.value;

        if (selectedValue.toLowerCase() == 'other') {
            $("#otherRegulatorLabel").show();

        } else {
            $("#otherRegulatorLabel").next('em[for="CompanyOtherRegulator"]').remove();
            $("#otherRegulatorLabel").removeClass("state-error");
            $("#otherRegulatorLabel").hide();
            $("#CompanyOtherRegulator").val(null);
        }
    });

</script>

