@using Bec.TargetFramework.Entities
@using Bec.TargetFramework.Entities.Enums
@using Bec.TargetFramework.Infrastructure.Extensions
@using Bec.TargetFramework.Presentation.Web.Models
@model PendingUpdateModel<SmsTransactionDTO>
<h5>Transaction Details</h5>
<table class="table transaction-details-table">
    <tr>
        <th>Transaction Address</th>
        <th>Mortgage Details</th>
        <th>Purchase Price</th>
        <th>Product: Safe Buyer</th>
        <th><!--Actions--></th>
    </tr>
    <tr>
        <td>
            <p>@Html.PendingUpdateFieldFor(m => m.Dto.Address.Line1, "Line1", FieldUpdateParentType.SmsTransactionAddress, Model.Dto.SmsTransactionID, "TBC")</p>
            <p>@Html.PendingUpdateFieldFor(m => m.Dto.Address.Line2, "Line2", FieldUpdateParentType.SmsTransactionAddress, Model.Dto.SmsTransactionID, string.Empty)</p>
            <p>@Html.PendingUpdateFieldFor(m => m.Dto.Address.Town, "Town", FieldUpdateParentType.SmsTransactionAddress, Model.Dto.SmsTransactionID, string.Empty)</p>
            <p>@Html.PendingUpdateFieldFor(m => m.Dto.Address.County, "County", FieldUpdateParentType.SmsTransactionAddress, Model.Dto.SmsTransactionID, string.Empty)</p>
            <p>@Html.PendingUpdateFieldFor(m => m.Dto.Address.PostalCode, "PostalCode", FieldUpdateParentType.SmsTransactionAddress, Model.Dto.SmsTransactionID, string.Empty)</p>
        </td>
        <td>
            <p>@Html.PendingUpdateFieldFor(m => m.Dto.LenderName, "LenderName", FieldUpdateParentType.SmsTransaction, Model.Dto.SmsTransactionID, "Buying Without Mortgage")</p>
            <p>@Html.PendingUpdateFieldFor(m => m.Dto.MortgageApplicationNumber, "MortgageApplicationNumber", FieldUpdateParentType.SmsTransaction, Model.Dto.SmsTransactionID, string.Empty)</p>
        </td>
        <td>
            <p>@Html.PendingUpdateFieldFor(m => m.Dto.Price, "Price", FieldUpdateParentType.SmsTransaction, Model.Dto.SmsTransactionID, "TBC", FieldUpdateDataType.Money)</p>
        </td>
        <td>
            <p>Product Offered: <span class="format-date" data-val="@Model.Dto.CreatedOn.ToString("O")"></span></p>
            <p>
                Product Advised:
                @if (Model.Dto.IsProductAdvised && Model.Dto.ProductAdvisedOn.HasValue)
                {
                    <span class="format-date" data-val="@Model.Dto.ProductAdvisedOn.Value.ToString("O")"></span>
                }
                else
                {
                    <span>No</span>
                }
            </p>
            @if (!Model.Dto.IsProductAdvised && !Model.Dto.InvoiceID.HasValue)
            {
                <a class="btn btn-sm btn-primary" data-modallink="true" title="Advise Buyer To Use Safe Buyer Product"
                   data-href="@Url.Action("ViewAdviseProduct", "Transaction", new { area = "SmsTransaction" })?txID=@(Model.Dto.SmsTransactionID)&pageNumber=@(ViewBag.pageNumber)">
                    <i class="fa fa-bullhorn margin-right-5"></i>Advise Buyer To Use Safe Buyer Product
                </a>
            }
        </td>
        <td>
            <a class="btn btn-sm btn-primary" data-modallink="true" title="Edit Transaction Details" data-href="@Url.Action("ViewEditSmsTransaction", "Transaction", new { area = "SmsTransaction", txID = Model.Dto.SmsTransactionID, pageNumber = ViewBag.pageNumber })"><i class="fa fa-pencil margin-right-5"></i>Edit/Review Changes</a>
        </td>
    </tr>
</table>

<h5 class="inline-heading">Buyer Parties</h5>
<div class="btn-group margin-left-10">
    <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
        <i class="fa fa-plus margin-right-5"></i>Add
    </button>
    <ul class="dropdown-menu">
        <li>
            <a href="#" data-modallink="true" title="Add Additional Buyer"
               data-href="@Url.Action("ViewAddBuyerParty", "BuyerParty", new { area = "SmsTransaction", uaotType = UserAccountOrganisationTransactionType.AdditionalBuyer, txID = Model.Dto.SmsTransactionID, pageNumber = ViewBag.pageNumber })">Additional Buyer</a>
        </li>
        <li>
            <a href="#" data-modallink="true" title="Add Giftor"
               data-href="@Url.Action("ViewAddBuyerParty", "BuyerParty", new { area = "SmsTransaction", uaotType = UserAccountOrganisationTransactionType.Giftor, txID = Model.Dto.SmsTransactionID, pageNumber = ViewBag.pageNumber })">Giftor</a>
        </li>
    </ul>
</div>

<table class="table transaction-details-table">
    <tr>
        <th>Type</th>
        <th>Full Name</th>
        <th>Registered Home Address</th>
        <th>Email</th>
        <th>Date of Birth</th>
        <th>Login Information</th>
        <th><!--Actions--></th>
    </tr>
    @foreach (var relatedParty in Model.Dto.SmsUserAccountOrganisationTransactions.OrderBy(x => x.SmsUserAccountOrganisationTransactionTypeID))
    {
        <tr>
            <td>@relatedParty.SmsUserAccountOrganisationTransactionType.Description</td>
            <td>
                @Html.PendingUpdateFieldFor(m => relatedParty.Contact.Salutation, "Salutation", FieldUpdateParentType.Contact, relatedParty.SmsUserAccountOrganisationTransactionID, string.Empty)
                @Html.PendingUpdateFieldFor(m => relatedParty.Contact.FirstName, "FirstName", FieldUpdateParentType.Contact, relatedParty.SmsUserAccountOrganisationTransactionID, string.Empty)
                @Html.PendingUpdateFieldFor(m => relatedParty.Contact.LastName, "LastName", FieldUpdateParentType.Contact, relatedParty.SmsUserAccountOrganisationTransactionID, string.Empty)
            </td>
            <td>
                <p>@Html.PendingUpdateFieldFor(m => relatedParty.Address.Line1, "Line1", FieldUpdateParentType.RegisteredHomeAddress, relatedParty.SmsUserAccountOrganisationTransactionID, "TBC")</p>
                <p>@Html.PendingUpdateFieldFor(m => relatedParty.Address.Line2, "Line2", FieldUpdateParentType.RegisteredHomeAddress, relatedParty.SmsUserAccountOrganisationTransactionID, string.Empty)</p>
                <p>@Html.PendingUpdateFieldFor(m => relatedParty.Address.Town, "Town", FieldUpdateParentType.RegisteredHomeAddress, relatedParty.SmsUserAccountOrganisationTransactionID, string.Empty)</p>
                <p>@Html.PendingUpdateFieldFor(m => relatedParty.Address.County, "County", FieldUpdateParentType.RegisteredHomeAddress, relatedParty.SmsUserAccountOrganisationTransactionID, string.Empty)</p>
                <p>@Html.PendingUpdateFieldFor(m => relatedParty.Address.PostalCode, "PostalCode", FieldUpdateParentType.RegisteredHomeAddress, relatedParty.SmsUserAccountOrganisationTransactionID, string.Empty)</p>
            </td>
            <td>@relatedParty.UserAccountOrganisation.UserAccount.Email</td>
            <td>
                <p>@Html.PendingUpdateFieldFor(m => relatedParty.Contact.BirthDate, "BirthDate", FieldUpdateParentType.Contact, relatedParty.SmsUserAccountOrganisationTransactionID, string.Empty, FieldUpdateDataType.Date)</p>
            </td>
            <td>
                @if (relatedParty.UserAccountOrganisation.UserAccount.IsTemporaryAccount)
                {
                    if (!string.IsNullOrWhiteSpace(relatedParty.UserAccountOrganisation.PinCode))
                    {
                        <strong>@relatedParty.UserAccountOrganisation.PinCode</strong>
                    }
                    <a class="btn btn-sm btn-default pull-right" data-modallink="true" title="Regenerate PIN"
                       data-href="@Url.Action("ViewGeneratePIN", "Transaction", new { area = "SmsTransaction" })?txID=@(Model.Dto.SmsTransactionID)&uaoID=@(relatedParty.UserAccountOrganisationID)&email=@(relatedParty.UserAccountOrganisation.UserAccount.Email)&pageNumber=@(ViewBag.pageNumber)">
                        <i class="fa fa-repeat margin-right-5"></i>Regenerate PIN
                    </a>
                }
                else
                {
                    var lastLogin = relatedParty.UserAccountOrganisation.UserAccount.LastLogin.HasValue ? relatedParty.UserAccountOrganisation.UserAccount.LastLogin.Value.ToString("O") : string.Empty;
                    <span class="format-date-time" data-val="@lastLogin"></span>
                }
            </td>
            <td>
                <a id="editButton" class="btn btn-sm btn-primary" data-modallink="true" title="Edit Buyer Party" data-href="@Url.Action("ViewEditBuyerParty", "BuyerParty", new { area = "SmsTransaction", uaotID = relatedParty.SmsUserAccountOrganisationTransactionID, pageNumber = ViewBag.pageNumber })"><i class="fa fa-pencil margin-right-5"></i>Edit/Review Changes</a>
            </td>
        </tr>
    }
</table>