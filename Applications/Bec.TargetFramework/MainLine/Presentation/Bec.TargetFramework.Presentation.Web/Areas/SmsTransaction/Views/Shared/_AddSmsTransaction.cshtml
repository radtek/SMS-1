@using Bec.TargetFramework.Entities
@using Bec.TargetFramework.Entities.Enums
@using Bec.TargetFramework.Infrastructure.Extensions

<div class="modal fade in" tabindex="-1" role="dialog" aria-labelledby="addTransactionLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="addTransactionLabel">Add Transaction</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <form id="addTransaction-form" class="smart-form">
                            @Html.ValidationBootstrap()
                            @Html.AntiForgeryToken()
                            <input name="buyerUaoID" id="buyerUaoID" type="hidden" />
                            <fieldset>
                                <section>
                                    <label class="label">Title</label>
                                    <label class="select">
                                        <select name="Salutation" tabindex="=1">
                                            <option>Mr</option>
                                            <option>Mrs</option>
                                            <option>Miss</option>
                                            <option>Ms</option>
                                            <option>Dr</option>
                                        </select>
                                        <i></i>
                                    </label>
                                </section>

                                <section>
                                    <label class="label">First Name</label>
                                    <label class="input">
                                        <input name="firstName" tabindex="2" maxlength="100" />
                                    </label>
                                </section>

                                <section>
                                    <label class="label">Last Name</label>
                                    <label class="input">
                                        <input name="lastName" tabindex="3" maxlength="100" />
                                    </label>
                                </section>

                                <section>
                                    <label class="label">Email</label>
                                    <label class="input">
                                        <input name="Email" type="email" tabindex="4" maxlength="200" />
                                    </label>
                                </section>

                                <section>
                                    <label class="label">Product Price: <span id="price">£10.00</span></label>
                                </section>

                                <section>
                                    <label class="label">Credit Balance as of <span id="balance"></span></label>
                                </section>

                            </fieldset>
                        </form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-default pull-left" onclick="updateBalance()">Refresh</button>
                <button type="button" id="cancelAddTransaction" class="btn btn-default" data-dismiss="modal">
                    Cancel
                </button>
                <button type="button" id="submitAddTransaction" class="btn btn-primary" tabindex="5">
                    Add Transaction
                </button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    // submit from when Save button clicked
    $("#submitAddTransaction").click(function () {
        $("#addTransaction-form").submit();
    });

    $("#addTransaction-form").validate({
        ignore: '.skip',
        // Rules for form validation
        rules: {
            "Name": {
                required: true
            },
            "Email": {
                required: true,
                email: true
            }
        },

        // Do not change code below
        errorPlacement: function (error, element) {
            error.insertAfter(element.parent());
        },

        submitHandler: validateSubmit
    });

    function validateSubmit(form) {
        $("#submitAddTransaction").prop('disabled', true);
        var formData = $("#addTransaction-form").serializeArray();
        ajaxWrapper({
            url: '@Url.Action("AddSmsTransaction", "Buyer", new { area = "SmsTransaction" })',
            type: "POST",
            data: formData
        }).done(function (res) {
            if (res.result == true)
                window.location = '@Url.Action("Index", "Buyer", new { area = "SmsTransaction" })';
            else {
                $('#buyerUaoID').val(res.buyerUaoID);
                handleModal({ url: '@Url.Action("ViewMessage", "Home", new { Area = "", })' + "?title=" + res.title + "&message=" + res.message + "&button=Back" }, {
                    messageButton: function () {
                        $("#submitAddTransaction").prop('disabled', false);
                    }
                }, true);
            }
        }).fail(function (e) {
            console.log(e);
            handleModal({ url: '@Url.Action("ViewMessage", "Home", new { Area = "" })' + "?title=Error&message=" + e + "&button=Back" }, {
                messageButton: function () {
                    $("#submitAddTransaction").prop('disabled', false);
                }
            }, true);
        });
    }

    function updateBalance() {
        ajaxWrapper({ url: '@Url.Action("GetBalanceAsAt", "Credit", new { area = "ProOrganisation" })' + '?startOfDay=false&date=' + new Date().toJSON().slice(0, 10) })
            .done(function (res) {
                $('#balance').text(new Date().toLocaleTimeString() + ": " + formatCurrency(parseFloat(res)));
            });
    }

    updateBalance();
</script>
