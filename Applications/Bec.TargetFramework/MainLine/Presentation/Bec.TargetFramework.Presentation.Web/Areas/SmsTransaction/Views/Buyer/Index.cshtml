@using Bec.TargetFramework.Entities
@{
    int i = 0;
}
@model IEnumerable<SmsTransactionDTO>
<!-- MAIN CONTENT -->
<div id="content">
    @foreach (var tx in Model)
    {
        <div class="well">
            <div class="row">
                <div class="col col-6">
                    <h5>@tx.Organisation.OrganisationDetails.First().Name</h5>
                    <form id="check-Form-@(i++)" data-index="@i" data-url="@Url.Action("PerformCheck", "Check", new { Area = "BankAccount", orgID = tx.OrganisationID })">
                        <section>
                            <label class="input">
                                <input type="text" name="accountNumber" id="accountNumber" placeholder="Account Number" maxlength="8" />
                            </label>
                        </section>
                        <section>
                            <label class="input">
                                <input type="text" name="sortCode" id="sortCode" placeholder="Sort Code" maxlength="6" />
                            </label>
                        </section>
                        <section>
                            <label class="Button">
                                <input type="submit" value="Check" id="submitButton" />
                            </label>
                        </section>
                    </form>
                    <div id="result-@i"></div>
                </div>
            </div>
        </div>

    }
</div>

@section Scripts {
    <script type="text/javascript">
        var opts = {
            ignore: '.skip',
            // Rules for form validation
            rules: {
                accountNumber: {
                    required: true,
                    digits: true,
                    minlength: 8
                },
                sortCode: {
                    required: true,
                    digits: true,
                    minlength: 6
                }
            },

            submitHandler: validateSubmit
        };

        @for (int j = 0; j < i; j++)
        {
            <text>$("#check-Form-</text>@j<text>").validate(opts);</text>
        }

        function validateSubmit(form) {
            $("#submitButton").prop('disabled', true);

            var resDiv = $('#result-' + $(form).data("index"));
            resDiv.empty();
            resDiv.append("Please wait...");

            var formData = $(form).serializeArray();
            ajaxWrapper({
                url: $(form).data("url"),
                type: "POST",
                data: formData
            }).done(function (res) {
                $("#submitButton").prop('disabled', false);
                resDiv.empty();
                if (res.result == true)
                    resDiv.append("Match");
                else {
                    resDiv.append("No Match");
                }
            }).fail(function (e) {
                $("#submitButton").prop('disabled', false);
                resDiv.empty();

                console.log(e);
                resDiv.append("Error");
            });
        }

    </script>
}
