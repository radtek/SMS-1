@using Bec.TargetFramework.Entities
@using Bec.TargetFramework.Entities.Enums
@using Bec.TargetFramework.Infrastructure.Extensions
@using Bec.TargetFramework.Presentation.Web.Helpers
@using Bec.TargetFramework.Presentation.Web.Models
@model PendingUpdateModel<SmsUserAccountOrganisationTransactionDTO>
<div id="editSmsClientContainer" class="modal fade in" tabindex="-1" role="dialog" aria-labelledby="editSmsTransactionLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="editSmsTransactionLabel">Edit Buyer Party</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <form data-url="@Url.Action("EditSmsClient", "SmsClient", new { area = "SmsTransaction" })" data-redirectto="@Url.Action("Index", "Transaction", new { area = "SmsTransaction", selectedTransactionID = ViewBag.txID, pageNumber = ViewBag.pageNumber })" data-message="@Url.Action("ViewMessage", "Message", new { Area = "" })" id="editSmsTransaction-form" class="smart-form pending-update-form">
                            @Html.ValidationBootstrap()
                            @Html.AntiForgeryToken()
                            @Html.Hidden("txID", (object)ViewBag.txID)
                            @Html.Hidden("uaoID", (object)ViewBag.uaoID)
                            @Html.Hidden("pageNumber", (object)ViewBag.pageNumber)
                            @Html.HiddenFor(m => m.Dto.Address.RowVersion)
                            @Html.HiddenFor(m => m.Dto.Contact.RowVersion)
                            @Html.HiddenFor(m => m.Dto.UserAccountOrganisation.UserAccount.RowVersion)
                            <fieldset>
                                <legend>Primary Buyer Details</legend>
                                <div class="row">
                                    <section class="col col-sm-4">
                                        <label class="label">Title</label>
                                        <div class="select">
                                            @Html.DropDownListFor(m => m.Dto.Contact.Salutation, Html.EnumListString<SalutationEnum>(), "Please Select", new { tabindex = "1", id = "salutation" })
                                            @Html.PendingChangesButtonFor(m => m.Dto.Contact.Salutation, "Salutation", FieldUpdateParentType.Contact, Model.Dto.SmsUserAccountOrganisationTransactionID, "salutation", "")
                                            <i></i>
                                        </div>
                                    </section>
                                    <section class="col col-sm-4">
                                        <label class="label">First Name</label>
                                        <div class="input">
                                            <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                            @Html.TextBoxFor(m => m.Dto.Contact.FirstName, new { tabindex = "2", maxlength = 50, id = "firstName" })
                                            @Html.PendingChangesButtonFor(m => m.Dto.Contact.FirstName, "FirstName", FieldUpdateParentType.Contact, Model.Dto.SmsUserAccountOrganisationTransactionID, "firstName", "")
                                        </div>
                                    </section>
                                    <section class="col col-sm-4">
                                        <label class="label">Last Name</label>
                                        <div class="input">
                                            <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                            @Html.TextBoxFor(m => m.Dto.Contact.LastName, new { tabindex = "3", maxlength = 50, id = "lastName" })
                                            @Html.PendingChangesButtonFor(m => m.Dto.Contact.LastName, "LastName", FieldUpdateParentType.Contact, Model.Dto.SmsUserAccountOrganisationTransactionID, "lastName", "")
                                        </div>
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-sm-8">
                                        <label class="label">Email</label>
                                        <div class="input">
                                            @if (ViewBag.IsTemporaryUser)
                                            {
                                                <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                                @* Currently the email for primary becky is checked against all users hence the check method used: CheckEmailProfessional *@
                                                @Html.TextBoxFor(m => m.Dto.UserAccountOrganisation.UserAccount.Email, new { tabindex = "4", maxlength = 100, type = "email", data_url = Url.Action("CheckEmailPersonal", "App", new { Area = "", uaoID = Model.Dto.UserAccountOrganisationID, txId = Model.Dto.SmsTransactionID }) })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(m => m.Dto.UserAccountOrganisation.UserAccount.Email, new { @readonly = "readonly", disabled = "disabled" })
                                            }
                                        </div>
                                    </section>
                                    <section class="col col-sm-4">
                                        <label class="label">Date of Birth</label>
                                        <div class="input">
                                            <i class="icon-append fa fa-asterisk" style="font-size: 0.7em;"></i>
                                            @if (ViewBag.canEditBirthDate)
                                            {
                                                @Html.TextBoxFor(m => m.Dto.Contact.BirthDate, "{0:O}", new { tabindex = "5", id = "birthDateInput", @readonly = "readonly" })
                                                @Html.PendingChangesButtonFor(m => m.Dto.Contact.BirthDate, "BirthDate", FieldUpdateParentType.Contact, Model.Dto.SmsUserAccountOrganisationTransactionID, "birthDateInput", string.Empty, FieldUpdateDataType.Date)
                                            }
                                            else
                                            {
                                                <input name="" id="birthDateReadOnly" type="text" value="@Model.Dto.Contact.BirthDate.Value.ToString("O")" readonly="readonly" />
                                                @Html.PendingChangesButtonFor(m => m.Dto.Contact.BirthDate, "BirthDate", FieldUpdateParentType.Contact, Model.Dto.SmsUserAccountOrganisationTransactionID, "birthDateReadOnly", string.Empty, FieldUpdateDataType.Date)
                                            }
                                        </div>
                                    </section>
                                </div>
                            </fieldset>
                            <fieldset>
                                <legend>Registered Home Address</legend>
                                <div class="row">
                                    <section class="col col-4">
                                        <label class="label">Lookup Postcode</label>
                                        <label class="input">
                                            <input id="txPostcodeLookup" type="text" tabindex="15" maxlength="10" />
                                        </label>
                                    </section>

                                    <section class="col">
                                        <label class="label">&nbsp;</label>
                                        <button id="txFindAddressButton" data-url="@Url.Action("FindAddress", "PostcodeLookup", new { Area = "" })" data-requestverificationtoken="@Html.AntiForgeryTokenValue()" type="button" class="btn btn-primary btn-sm" tabindex="16">Find Address</button>
                                    </section>
                                </div>

                                <section>
                                    <label class="select">
                                        <select id="txAddressResults" tabindex="17"></select>
                                        <i></i>
                                    </label>
                                </section>

                                <div class="row">
                                    <section class="col" id="txNoMatch">
                                        <em style="color: #d56161">No matches found, please enter address below</em>
                                    </section>
                                </div>

                                <div class="row" id="txManAddRow">
                                    <section class="col">
                                        <input type="checkbox" id="txManualAddress" />
                                        <label for="sms_manualAddress" tabindex="18">Edit Address Details</label>
                                    </section>
                                </div>

                                <div class="row">
                                    <section class="col col-6">
                                        <div class="input">
                                            @Html.TextBoxFor(m => m.Dto.Address.Line1, new { id = "txLine1", placeholder = "Address Line 1", tabindex = "19", maxlength = 50 })
                                            @Html.PendingChangesButtonFor(m => m.Dto.Address.Line1, "Line1", FieldUpdateParentType.RegisteredHomeAddress, Model.Dto.SmsUserAccountOrganisationTransactionID, "txLine1", "TBC")
                                        </div>
                                    </section>
                                    <section class="col col-6">
                                        <div class="input">
                                            @Html.TextBoxFor(m => m.Dto.Address.County, new { id = "txCounty", placeholder = "County", tabindex = "22", maxlength = 50 })
                                            @Html.PendingChangesButtonFor(m => m.Dto.Address.County, "County", FieldUpdateParentType.RegisteredHomeAddress, Model.Dto.SmsUserAccountOrganisationTransactionID, "txCounty", "")
                                        </div>
                                    </section>
                                </div>

                                <div class="row">
                                    <section class="col col-6">
                                        <div class="input">
                                            @Html.TextBoxFor(m => m.Dto.Address.Line2, new { id = "txLine2", placeholder = "Address Line 2", tabindex = "20", maxlength = 50 })
                                            @Html.PendingChangesButtonFor(m => m.Dto.Address.Line2, "Line2", FieldUpdateParentType.RegisteredHomeAddress, Model.Dto.SmsUserAccountOrganisationTransactionID, "txLine2", "")
                                        </div>
                                    </section>
                                    <section class="col col-6">
                                        <div class="input">
                                            @Html.TextBoxFor(m => m.Dto.Address.PostalCode, new { id = "txPostalCode", placeholder = "Postcode", tabindex = "23", maxlength = 50 })
                                            @Html.PendingChangesButtonFor(m => m.Dto.Address.PostalCode, "PostalCode", FieldUpdateParentType.RegisteredHomeAddress, Model.Dto.SmsUserAccountOrganisationTransactionID, "txPostalCode", "")
                                        </div>
                                    </section>
                                </div>

                                <div class="row">
                                    <section class="col col-6">
                                        <div class="input">
                                            @Html.TextBoxFor(m => m.Dto.Address.Town, new { id = "txTown", placeholder = "Town", tabindex = "21", maxlength = 50 })
                                            @Html.PendingChangesButtonFor(m => m.Dto.Address.Town, "Town", FieldUpdateParentType.RegisteredHomeAddress, Model.Dto.SmsUserAccountOrganisationTransactionID, "txTown", "")
                                        </div>
                                    </section>
                                </div>
                            </fieldset>
                        </form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="cancelEditSmsTransaction" class="btn btn-default" data-dismiss="modal">
                    Cancel
                </button>
                <button type="button" id="submitEditSmsTransaction" class="btn btn-primary" tabindex="15">
                    Save
                </button>
            </div>
        </div>
    </div>
</div>

<script async src="@Scripts.Url("~/Scripts/SmsTransaction/SmsClient/_EditSmsClient")"></script>
