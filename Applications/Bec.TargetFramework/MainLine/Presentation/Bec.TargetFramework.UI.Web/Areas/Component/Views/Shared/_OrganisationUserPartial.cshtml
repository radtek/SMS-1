@using Ext.Net
@using Ext.Net.MVC
@model Bec.TargetFramework.Entities.OrganisationDTO


<script>

    function closeAddWindowAndUpdateUser(usersJson) {
        App.UsersJson.setValue(usersJson);
        App.AddOrganisationUserGrid.getStore().load();
        App.OrganisationUserAddWindow.close();
    }

    function closeEditWindowAndUpdateUser(usersJson) {
        App.UsersJson.setValue(usersJson);
        App.AddOrganisationUserGrid.getStore().load();
        App.OrganisationUserEditWindow.close();
    }

    function deleteUpdateuser(usersJson) {
        App.UsersJson.setValue(usersJson);
        App.AddOrganisationUserGrid.getStore().load();
        App.OrganisationUserEditWindow.close();
    }

</script>

@(Html.X().Container().Padding(5)
            .Items
(
              Html.X().HiddenFor(model => Model.UsersJson),
                  Html.X()
                      .GridPanel()
                      .Padding(5)
                      .ID("AddOrganisationUserGrid")
                      .Title("Users")
                      .Store(Html.X()
                          .Store()
                          .AutoLoad(true)
                          .RemoteSort(false)
                          .Parameters(e => e.Add(Html.X().StoreParameter().Name("usersJsonValue").Value("App.OrganisationUserForm.getForm().findField('UsersJson').getValue()").Mode(ParameterMode.Raw)))
                          .Model(Html.X()
                              .Model()
                              .Fields(fields =>
                              {
                                  fields.Add(new ModelField("ContactName"));
                                  fields.Add(new ModelField("ContactID"));
                                  fields.Add(new ModelField("OrganisationID"));
                              }))
                          .Proxy(proxy => proxy.Add(Html.X()
                              .AjaxProxy()
                              .Url(Url.Action("GetUsers", "UserOrganisation", new {area = "Component"}))
                              .Reader(reader => reader.Add(Html.X().JsonReader().Root("data").IDProperty("ContactID")))))
                          .MessageBusListeners(ml =>
                          {
                              ml.Add(new MessageBusListener {Name = "AddOrganisationUser", Handler = "App.OrganisationUserAddWindow.close();  App.AddOrganisationUserGrid.getStore().load();"});
                              ml.Add(new MessageBusListener {Name = "DeleteOrganisationUser", Handler = "App.AddOrganisationUserGrid.getStore().load();"});
                              ml.Add(new MessageBusListener {Name = "EditOrganisationUser", Handler = "App.OrganisationUserEditWindow.close();  App.AddOrganisationUserGrid.getStore().load();"});
                          }))
                      .ColumnModel(
                              Html.X().Column().Text("Name").DataIndex("ContactName").Width(200),
                          Html.X()
                              .CommandColumn()
                              .Text("")
                              .Commands(
                                  Html.X()
                                      .GridCommand()
                                      .CommandName("Edit")
                                      .Icon(Icon.ApplicationEdit)
                                      .ToolTip(tt => tt.Text = "Editss")
                              )
                              .DirectEvents(de =>
                              {
                                  de.Command.Method = HttpMethod.POST;
                                  de.Command.Url = Url.Action("ShowEditOrganisationUserWindow", "UserOrganisation", new { area = "Component" });
                                  de.Command.ExtraParams.Add(new Parameter("usersJsonValue", "App.OrganisationUserForm.getForm().findField('UsersJson').getValue()", ParameterMode.Raw));
                                  de.Command.ExtraParams.Add(new Parameter("id", "record.data.ContactID", ParameterMode.Raw));
                                  de.Command.ExtraParams.Add(new Parameter("units", "App.UnitsJson.getValue()", ParameterMode.Raw));
                                  de.Command.ExtraParams.Add(new Parameter("branches", "App.BranchesJson.getValue()", ParameterMode.Raw));
                              })
                          ,
                          Html.X()
                              .CommandColumn()
                              .Commands(
                                  Html.X()
                                      .GridCommand()
                                      .CommandName("Delete")
                                      .Icon(Icon.ApplicationDelete)
                                      .ToolTip(tt => tt.Text = "Delete")
                              ).DirectEvents(de =>
                              {
                                  de.Command.Method = HttpMethod.POST;
                                  de.Command.Url = Url.Action("DeleteOrganisationUser", "UserOrganisation", new { area = "Component" });
                                  de.Command.Confirmation.ConfirmRequest = true;
                                  de.Command.Confirmation.Message = "Are you sure you want to delete this record?";
                                  de.Command.Confirmation.ConfirmRequest = true;
                                  de.Command.ExtraParams.Add(new Parameter("id", "record.data.ContactID", ParameterMode.Raw));
                                  de.Command.ExtraParams.Add(new Parameter("usersJsonValue", "App.UsersJson.getValue()", ParameterMode.Raw));
                                  de.Command.Success = "App.AddOrganisationUserGrid.getStore().load();";
                              })
                      )
                      .DockedItems(
                          Html.X().Toolbar()
                              .Dock(Dock.Top)
                              .Items(
                                  Html.X()
                                      .Button()
                                      .Text("Add User")    
                                      .DirectEvents(de =>
                                      {
                                          de.Click.Method = HttpMethod.POST;
                                          de.Click.Url = Url.Action("ShowAddOrganisationUserWindow", "UserOrganisation", new { area = "Component" });
                                          de.Click.ExtraParams.Add(new Parameter("usersJsonValue", "App.UsersJson.getValue()", ParameterMode.Raw));
                                          de.Click.ExtraParams.Add(new Parameter("units", "App.UnitsJson.getValue()", ParameterMode.Raw));
                                          de.Click.ExtraParams.Add(new Parameter("branches", "App.BranchesJson.getValue()", ParameterMode.Raw));
                                      })
                                  ,
                                  Html.X().ToolbarFill()))
                      .AutoDoLayout(true)
              
         
      ))