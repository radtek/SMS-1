@using Ext.Net
@using Ext.Net.MVC
@model Bec.TargetFramework.Entities.OrganisationDTO


<script>

    function closeAddWindowAndUpdateUnit(unitsJson) {
        App.UnitsJson.setValue(unitsJson);
        App.AddOrganisationUnitGrid.getStore().load();
        App.OrganisationUnitAddWindow.close();
    }

    function closeEditWindowAndUpdateUnit(unitsJson) {
        App.UnitsJson.setValue(unitsJson);
        App.AddOrganisationUnitGrid.getStore().load();
        App.OrganisationUnitEditWindow.close();
    }

    function deleteUpdateUnit(unitsJson) {
        App.UnitsJson.setValue(unitsJson);
        App.AddOrganisationUnitGrid.getStore().load();
        App.OrganisationUnitEditWindow.close();
    }

    function closeAddWindowAndUpdateBranch(branchesJson) {
        App.BranchesJson.setValue(branchesJson);
        App.AddOrganisationBranchGrid.getStore().load();
        App.OrganisationBranchAddWindow.close();
    }

    function closeEditWindowAndUpdateBranch(branchesJson) {
        App.BranchesJson.setValue(branchesJson);
        App.AddOrganisationBranchGrid.getStore().load();
        App.OrganisationBranchEditWindow.close();
    }

    function deleteUpdateBranch(branchesJson) {
        App.BranchesJson.setValue(branchesJson);
        App.AddOrganisationBranchGrid.getStore().load();
        App.OrganisationBranchEditWindow.close();
    }

</script>

@(Html.X()
      .Container()
      .Padding(5)
      .Items(
             Html.X().Container().Padding(2)
                                .Items(
                                    Html.X().MultiSelect().ID("OrganisationOtherFormErrors").Hidden(true)),
          Html.X().HiddenFor(model => Model.UnitsJson),
              Html.X().HiddenFor(model => Model.BranchesJson),
         
                  Html.X()
                      .GridPanel()
                      .Padding(5)
                      .ID("AddOrganisationUnitGrid")
                      .Title("Units")
                      .Store(Html.X()
                          .Store()
                          .AutoLoad(true)
                          .RemoteSort(false)
                          .Parameters(e => e.Add(Html.X().StoreParameter().Name("unitsJsonValue").Value("App.OrganisationOtherForm.getForm().findField('UnitsJson').getValue()").Mode(ParameterMode.Raw)))
                          .Model(Html.X()
                              .Model()
                              .Fields(fields =>
                              {
                                  fields.Add(new ModelField("Name"));
                                  fields.Add(new ModelField("OrganisationUnitID"));
                                  fields.Add(new ModelField("OrganisationID"));
                              }))
                          .Proxy(proxy => proxy.Add(Html.X()
                              .AjaxProxy()
                              .Url(Url.Action("GetUnits", "OrganisationUnit", new {area = "Component"}))
                              .Reader(reader => reader.Add(Html.X().JsonReader().Root("data").IDProperty("OrganisationUnitID")))))
                          .MessageBusListeners(ml =>
                          {
                              ml.Add(new MessageBusListener {Name = "AddOrganisationUnit", Handler = "App.OrganisationUnitAddWindow.close();  App.AddOrganisationUnitGrid.getStore().load();"});
                              ml.Add(new MessageBusListener {Name = "DeleteOrganisationUnit", Handler = "App.AddOrganisationUnitGrid.getStore().load();"});
                              ml.Add(new MessageBusListener {Name = "EditOrganisationUnit", Handler = "App.OrganisationUnitEditWindow.close();  App.AddOrganisationUnitGrid.getStore().load();"});
                          }))
                      .ColumnModel(
                          Html.X().Column().Text("Name").DataIndex("Name").Width(200),
                          Html.X()
                              .CommandColumn()
                              .Text("")
                              .Commands(
                                  Html.X()
                                      .GridCommand()
                                      .CommandName("Edit")
                                      .Icon(Icon.ApplicationEdit)
                                      .ToolTip(tt => tt.Text = "Edit")
                              )
                              .DirectEvents(de =>
                              {
                                  de.Command.Method = HttpMethod.POST;
                                  de.Command.Url = Url.Action("ShowEditOrganisationUnitWindow", "OrganisationUnit", new {area = "Component"});
                                  de.Command.ExtraParams.Add(new Parameter("unitsJsonValue", "App.OrganisationOtherForm.getForm().findField('UnitsJson').getValue()", ParameterMode.Raw));
                                  de.Command.ExtraParams.Add(new Parameter("id", "record.data.OrganisationUnitID", ParameterMode.Raw));
                              })
                          ,
                          Html.X()
                              .CommandColumn()
                              .Commands(
                                  Html.X()
                                      .GridCommand()
                                      .CommandName("Delete")
                                      .Icon(Icon.ApplicationDelete)
                                      .ToolTip(tt => tt.Text = "Delete")
                              ).DirectEvents(de =>
                              {
                                  de.Command.Method = HttpMethod.GET;
                                  de.Command.Url = Url.Action("DeleteOrganisationUnit", "OrganisationUnit", new {area = "Component"});
                                  de.Command.Confirmation.ConfirmRequest = true;
                                  de.Command.Confirmation.Message = "Are you sure you want to delete this record?";
                                  de.Command.Confirmation.ConfirmRequest = true;
                                  de.Command.ExtraParams.Add(new Parameter("id", "record.data.OrganisationUnitID", ParameterMode.Raw));
                                  de.Command.ExtraParams.Add(new Parameter("unitsJsonValue", "App.UnitsJson.getValue()", ParameterMode.Raw));
                                  de.Command.Success = "App.AddOrganisationUnitGrid.getStore().load();";
                              })
                      )
                      .DockedItems(
                          Html.X().Toolbar()
                              .Dock(Dock.Top)
                              .Items(
                                  Html.X()
                                      .Button()
                                      .Text("Add Unit")
                                      .DirectEvents(de =>
                                      {
                                          de.Click.Method = HttpMethod.POST;
                                          de.Click.Url = Url.Action("ShowAddOrganisationUnitWindow", "OrganisationUnit", new {area = "Component"});
                                          de.Click.ExtraParams.Add(new Parameter("unitsJsonValue", "App.UnitsJson.getValue()", ParameterMode.Raw));
                                      })
                                  ,
                                  Html.X().ToolbarFill()))
                      .AutoDoLayout(true)
              
              ,
         
                  Html.X()
                      .GridPanel()
                      .Padding(5)
                      .ID("AddOrganisationBranchGrid")
                      .Title("Branches")
                      .Store(Html.X()
                          .Store()
                          .AutoLoad(true)
                          .RemoteSort(false)
                          .Parameters(e => e.Add(Html.X().StoreParameter().Name("branchesJsonValue").Value("App.OrganisationOtherForm.getForm().findField('BranchesJson').getValue()").Mode(ParameterMode.Raw)))
                          .Model(Html.X()
                              .Model()
                              .Fields(fields =>
                              {
                                  fields.Add(new ModelField("ContactName"));
                                  fields.Add(new ModelField("ContactID"));
                                  fields.Add(new ModelField("OrganisationID"));
                              }))
                          .Proxy(proxy => proxy.Add(Html.X()
                              .AjaxProxy()
                              .Url(Url.Action("GetBranches", "BranchOrganisation", new {area = "Component"}))
                              .Reader(reader => reader.Add(Html.X().JsonReader().Root("data").IDProperty("ContactID")))))
                          .MessageBusListeners(ml =>
                          {
                              ml.Add(new MessageBusListener {Name = "AddOrganisationBranch", Handler = "App.OrganisationBranchAddWindow.close();  App.AddOrganisationBranchGrid.getStore().load();"});
                              ml.Add(new MessageBusListener {Name = "DeleteOrganisationBranch", Handler = "App.AddOrganisationBranchGrid.getStore().load();"});
                              ml.Add(new MessageBusListener {Name = "EditOrganisationBranch", Handler = "App.OrganisationBranchEditWindow.close();  App.AddOrganisationBranchGrid.getStore().load();"});
                          }))
                      .ColumnModel(
                              Html.X().Column().Text("Name").DataIndex("ContactName").Width(200),
                          Html.X()
                              .CommandColumn()
                              .Text("")
                              .Commands(
                                  Html.X()
                                      .GridCommand()
                                      .CommandName("Edit")
                                      .Icon(Icon.ApplicationEdit)
                                      .ToolTip(tt => tt.Text = "Edit")
                              )
                              .DirectEvents(de =>
                              {
                                  de.Command.Method = HttpMethod.POST;
                                  de.Command.Url = Url.Action("ShowEditOrganisationBranchWindow", "BranchOrganisation", new { area = "Component" });
                                  de.Command.ExtraParams.Add(new Parameter("branchesJsonValue", "App.OrganisationOtherForm.getForm().findField('BranchesJson').getValue()", ParameterMode.Raw));
                                  de.Command.ExtraParams.Add(new Parameter("id", "record.data.ContactID", ParameterMode.Raw));
                              })
                          ,
                          Html.X()
                              .CommandColumn()
                              .Commands(
                                  Html.X()
                                      .GridCommand()
                                      .CommandName("Delete")
                                      .Icon(Icon.ApplicationDelete)
                                      .ToolTip(tt => tt.Text = "Delete")
                              ).DirectEvents(de =>
                              {
                                  de.Command.Method = HttpMethod.POST;
                                  de.Command.Url = Url.Action("DeleteOrganisationBranch", "BranchOrganisation", new { area = "Component" });
                                  de.Command.Confirmation.ConfirmRequest = true;
                                  de.Command.Confirmation.Message = "Are you sure you want to delete this record?";
                                  de.Command.Confirmation.ConfirmRequest = true;
                                  de.Command.ExtraParams.Add(new Parameter("id", "record.data.ContactID", ParameterMode.Raw));
                                  de.Command.ExtraParams.Add(new Parameter("branchesJsonValue", "App.BranchesJson.getValue()", ParameterMode.Raw));
                                  de.Command.Success = "App.AddOrganisationBranchGrid.getStore().load();";
                              })
                      )
                      .DockedItems(
                          Html.X().Toolbar()
                              .Dock(Dock.Top)
                              .Items(
                                  Html.X()
                                      .Button()
                                      .Text("Add Branch")
                                      .DirectEvents(de =>
                                      {
                                          de.Click.Method = HttpMethod.POST;
                                          de.Click.Url = Url.Action("ShowAddOrganisationBranchWindow", "BranchOrganisation", new { area = "Component" });
                                          de.Click.ExtraParams.Add(new Parameter("branchesJsonValue", "App.BranchesJson.getValue()", ParameterMode.Raw));
                                      })
                                  ,
                                  Html.X().ToolbarFill()))
                      .AutoDoLayout(true)
              
              
               
      )
      )