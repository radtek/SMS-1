@using Bec.TargetFramework.Web.Framework.Extensions
@using Ext.Net
@using Ext.Net.MVC
@model Bec.TargetFramework.Entities.OrganisationDTO

@(
 Html.X().Container().Padding(5)
            .Items
            (
                 Html.X().Container().Padding(2)

                            .Items(
                                    Html.X().MultiSelect().ID("DetailFormErrors").Hidden(true)),
                    Html.X().Container().Layout(LayoutType.Form).Padding(5)
                    .Items
                    (

                        Html.X().HiddenFor(model => model.Detail.OrganisationDetailID),
                        Html.X().TextFieldFor(model => model.Detail.Name)
                        .ApplyTextFieldDefaults(Razor.ApplyTextFieldDefaults)
                            .ID("OrgName")
        .Control(c =>
                                    {
                                        c.IsRemoteValidation = true;
                                        c.RemoteValidation.Url = Url.Action("DoesOrganisationNameExist", "Organisation", new { area = "Component" });
                                        c.RemoteValidation.ValidationEvent = "change, blur";
                                        c.RemoteValidation.Method = Ext.Net.HttpMethod.POST;
                                        c.RemoteValidation.ShowBusy = false;
                                        c.RemoteValidation.ErrorMessage = "The organisation name already exists";
                                    }),
                        Html.X().TextAreaFor(model => model.Detail.Description)
                        .ApplyTextAreaDefaults(Razor.ApplyTextAreaDefaults).Rows(2),
                        Html.X().ComboBoxFor(model => model.Detail.OrganisationTypeID)
                        .ApplyComboxDefaults(Razor.ApplyComboBoxClassificationDefaults)
                        .FieldLabel("Type").ID("OrganisationType")
                        .Store(Razor.CreateClassificationStore("OrganisationType", Url.Action("ReadData", "Reference", new { area = "" })))
                        .Listeners(l =>
                            {
                                l.Select.Handler = "App.templateList.clearValue(); App.templateList.getStore().load();";
                            }),
                        Html.X().ComboBoxFor(model => model.Detail.OrganisationTemplate)
                        .ApplyComboxDefaults(Razor.ApplyComboBoxClassificationDefaults)
                        .Plugins(Html.X().ClearButton())
                        .QueryMode(DataLoadMode.Local)
                        .FieldLabel("Template")
                        .ID("templateList")
                        .TypeAhead(true)
                        .DisplayField("Name")
                        .ValueField("DefaultOrganisationID")
                        .Store(Html.X().Store()
                            .AutoLoad(false)
                            .Model(Html.X()
                                .Model()
                                .IDProperty("OrganisationTemplateID")
                                .Fields(
                                    new ModelField("Name", ModelFieldType.String),
                                        new ModelField("DefaultOrganisationID")
                                ))
                                .Proxy(Html.X()
                                    .AjaxProxy()
                                        .Url(Url.Action("GetOrganisationTemplates", "Organisation", new { area = "Component" }))
                                    .Reader(new JsonReader.Builder().Root("data"))
                                    )
                                .Parameters(p =>
                                    p.Add(new StoreParameter("typeId", "App.OrganisationType.getValue()", ParameterMode.Raw))
                                    )
                                ),
                                        
                         Html.X().ComboBoxFor(model => model.Detail.OrganisationCategoryID)
                        .ApplyComboxDefaults(Razor.ApplyComboBoxClassificationDefaults)
                        .FieldLabel("Category")
                        .Store(Razor.CreateClassificationStore("OrganisationCategory", Url.Action("ReadData", "Reference", new { area = "" })))

                    )
             )
      )