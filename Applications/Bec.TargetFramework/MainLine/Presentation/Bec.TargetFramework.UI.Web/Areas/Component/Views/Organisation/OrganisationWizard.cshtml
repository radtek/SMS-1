@using Ext.Net
@using Ext.Net.MVC
@using Bec.TargetFramework.Web.Framework.Extensions

@model Bec.TargetFramework.Entities.OrganisationDTO

<script>

    function isActiveFormValid() {
        var formPanel = App.OrganisationWizardPanel.layout.activeItem;

        return formPanel.getForm().isValid();
    }

    function isActiveFormBusinessLogicValid() {

        validateActiveForm();
        var formPanel = App.OrganisationWizardPanel.layout.activeItem;

        if (formPanel.id == 'DetailForm') {
            return (App.DetailFormErrors.items.getCount() == 0);
        }
       
        else if (formPanel.id == 'OrganisationOtherForm') {
            return (App.OrganisationOtherForm.items.getCount() == 0);
        }

        else if (formPanel.id == 'OrganisationUserForm') {
            return (App.OrganisationuserForm.items.getCount() == 0);
        }
    }

    function isActiveFormTheFinalForm() {
        return (App.OrganisationWizardPanel.items.indexOf(App.OrganisationWizardPanel.layout.activeItem) == (App.OrganisationWizardPanel.items.getCount() - 1));
    }

    function movedNext() {
        App.btnNext.setDisabled(false);

        if (isActiveFormTheFinalForm()) {
            App.btnFinish.show();
            App.btnNext.hide();
        }
        else {
            App.btnFinish.hide();
            App.btnNext.show();
        }
    }

    function movedPrev() {
        App.btnNext.setDisabled(false);

        if (isActiveFormTheFinalForm()) {
            App.btnFinish.hide();
            App.btnNext.show();
           
        }
        else {
            App.btnFinish.hide();
            App.btnNext.show();
        }
    }

    function validateActiveForm() {
        var formPanel = App.OrganisationWizardPanel.layout.activeItem;

        if (formPanel.id == 'DetailForm') {
            App.btnDetailFormSubmit.fireEvent('click', null);
        }
        
        else if (formPanel.id == 'OrganisationOtherForm') {
            App.btnOrganisationOtherFormSubmit.fireEvent('click', null);
        }

        else if (formPanel.id == 'OrganisationUserForm') {
            App.btnOrganisationUserFormSubmit.fireEvent('click', null);
        }
    }
</script>

@{ ViewBag.partialTitle = "Organisation Primary Branch Contact Information";}

@(Html.X().FormPanel()
        .ID("OrganisationWizardPanel")
        .Title("Add Organisation Wizard")
        .Layout(LayoutType.Card)
        .ActiveIndex(0)
        .Items(
                    Html.X().FormPanel().Title("1. Details").ApplyFormPanelDefaults(Razor.ApplyFormPanelDefaults).ID("DetailForm").ItemsFromPartial("_OrganisationDetail", Model)
                    .Buttons(Html.X().Button().Hidden(true).ID("btnDetailFormSubmit").DirectEvents(de =>
                    {
                        de.Click.Url = Url.Action("ValidateOrganisationDetail", "Organisation", new { area = "Component" });

                    })),
                            Html.X().FormPanel().Title("2. Units and Branches").ApplyFormPanelDefaults(Razor.ApplyFormPanelDefaults).ID("OrganisationOtherForm").ItemsFromPartial("_OrganisationOtherPartial", Model, ViewData)
                        .Buttons(Html.X().Button().Hidden(true).ID("btnOrganisationOtherFormSubmit").DirectEvents(de =>
                    {
                        de.Click.Url = Url.Action("ValidateOrganisationOther", "Organisation", new { area = "Component" });
                    })),
                            Html.X().FormPanel().Title("3. Users").ApplyFormPanelDefaults(Razor.ApplyFormPanelDefaults).ID("OrganisationUserForm").ItemsFromPartial("_OrganisationUserPartial", Model, ViewData)
                        .Buttons(Html.X().Button().Hidden(true).ID("btnOrganisationUserFormSubmit").DirectEvents(de =>
                    {
                        de.Click.Url = Url.Action("ValidateOrganisationUser", "Organisation", new { area = "Component" });
                    })),
                        Html.X().FormPanel().Title("4. Finish").ApplyFormPanelDefaults(Razor.ApplyFormPanelDefaults).ID("FinalForm")
                    .Items(
                        Html.X().Label().Text("Click 'Finish' to create the Organisation")
                    )

        )
        .Buttons(
                Html.X().Button()
                .ID("btnCancel")
                .Text("Cancel")
                .Icon(Icon.Cancel)
                .DirectClickUrl(Url.Action("OrganisationManagement", "Organisation", new { area = "Component", containerId = "AdministrationCenterPanel" })),
                 Html.X().Button()
                .ID("btnPrev")
                .Text("Prev")
                .Disabled(true)
                .Icon(Icon.PreviousGreen)
                .DirectEvents(de =>
                {
                    de.Click.Url = Url.Action("Prev_Click", "Organisation", new { area = "Component" });
                    de.Click.ExtraParams.Add(new Parameter("index", "#{OrganisationWizardPanel}.items.indexOf(#{OrganisationWizardPanel}.layout.activeItem)", ParameterMode.Raw));
                    de.Click.ExtraParams.Add(new Parameter("total", "App.OrganisationWizardPanel.items.getCount()", ParameterMode.Raw));
                    de.Click.Success = "movedPrev();";

                }),

                 Html.X().Button()
                .ID("btnNext")
                .Text("Next")
                .Icon(Icon.NextGreen)
                .DirectEvents(de =>
                {
                    de.Click.Before = "return (isActiveFormValid());";
                    de.Click.Url = Url.Action("Next_Click", "Organisation", new { area = "Component" });
                    de.Click.ExtraParams.Add(new Parameter("index", "#{OrganisationWizardPanel}.items.indexOf(#{OrganisationWizardPanel}.layout.activeItem)", ParameterMode.Raw));
                    de.Click.ExtraParams.Add(new Parameter("total", "App.OrganisationWizardPanel.items.getCount()", ParameterMode.Raw));
                    de.Click.Success = "movedNext();";
                }),

                Html.X().Button()
                .ID("btnFinish")
                .Text("Finish")
                .Icon(Icon.ApplicationOsxTerminal)
                .Hidden(true)
                    .DirectEvents(de =>
                    {
                        de.Click.Before = "return (isActiveFormValid());";
                        de.Click.Url = Url.Action("OrganisationWizardFinish", "Organisation", new { area = "Component" });
                        de.Click.ExtraParams.Add(new Parameter("index", "#{OrganisationWizardPanel}.items.indexOf(#{OrganisationWizardPanel}.layout.activeItem)", ParameterMode.Raw));
                        de.Click.ExtraParams.Add(new Parameter("total", "App.OrganisationWizardPanel.items.getCount()", ParameterMode.Raw));
                        de.Click.Success = "movedNext();";
                    })



        )
)