
@using Ext.Net
@using Ext.Net.MVC
@using Bec.TargetFramework.Web.Framework.Extensions
@model Bec.TargetFramework.Entities.vOrganisationDTO


<script>

    function closeAddWindowAndUpdateUnit() {
        App.AddOrganisationUnitGrid.getStore().load();
        App.OrganisationUnitAddWindow.close();
    }

    function closeEditWindowAndUpdateUnit() {
        App.AddOrganisationUnitGrid.getStore().load();
        App.OrganisationUnitEditWindow.close();
    }

    function deleteUpdateUnit() {
        App.AddOrganisationUnitGrid.getStore().load();
    }

</script>

@(Html.X()
      .FormPanel()
      .ID("UnitsForm")
      .ApplyFormPanelDefaults(Razor.ApplyFormPanelDefaults)
      .Items(
      Html.X()
      .Container()
      .Padding(5)
      .Items(
      Html.X().AntiForgeryField(),
             Html.X().Container().Padding(2)
                                .Items(
                                    Html.X().MultiSelect().ID("OrganisationUnitPartialErrors").Hidden(true)),

                  Html.X()
                      .GridPanel()
                      .Padding(5)
                      .ID("AddOrganisationUnitGrid")
                      .Store(Html.X()
                          .Store()
                          .AutoLoad(true)
                          .RemoteSort(false)
                          .Model(Html.X()
                              .Model()
                              .Fields(fields =>
                              {
                                  fields.Add(new ModelField("Name"));
                                  fields.Add(new ModelField("OrganisationUnitID"));
                                  fields.Add(new ModelField("OrganisationID"));
                              }))
                          .Proxy(proxy => proxy.Add(Html.X()
                              .AjaxProxy()
                               .Url(Url.Action("GetUnitsforOrg", "OrganisationUnit", new { id = Model.OrganisationID, area = "Component" }))
                              .Reader(reader => reader.Add(Html.X().JsonReader().Root("data").IDProperty("OrganisationUnitID")))))
                        .MessageBusListeners(ml =>
                          {
                              ml.Add(new MessageBusListener {Name = "AddOrganisationUnit", Handler = "App.OrganisationUnitAddWindow.close();  App.AddOrganisationUnitGrid.getStore().load();"});
                              ml.Add(new MessageBusListener {Name = "DeleteOrganisationUnit", Handler = "App.AddOrganisationUnitGrid.getStore().load();"});
                              ml.Add(new MessageBusListener {Name = "EditOrganisationUnit", Handler = "App.OrganisationUnitEditWindow.close();  App.AddOrganisationUnitGrid.getStore().load();"});
                          }))
                      .ColumnModel(
                              Html.X().Column().Text("Name").DataIndex("Name").Width(200),
                              Html.X()
                                  .ImageCommandColumn()
                                  .ID("UnitEdit")
                                  .Commands(
                                      Html.X()
                                          .ImageCommand()
                                          .CommandName("Edit")
                                          .Icon(Icon.ApplicationEdit)
                                          .ToolTip(tt => tt.Text = "Edit")
                                  )
                                  .DirectEvents(de =>
                                  {
                                      de.Command.Method = HttpMethod.POST;
                                      de.Command.Url = Url.Action("ShowEditOrganisationUnitWindowWithinAdmin", "OrganisationUnit", new { area = "Component", id = Model.OrganisationID });
                                      de.Command.ExtraParams.Add(new Parameter("unitId", "record.data.OrganisationUnitID", ParameterMode.Raw));
                                      de.Command.ExtraParams.Add(new Parameter("containerId", "AdministrationCenterPanel", ParameterMode.Value));
                                      de.Command.Success = "App.AddOrganisationUnitGrid.getStore().load();";
                                  })
                                  ,
                                  Html.X()
                                      .ImageCommandColumn()
                                      .ID("UnitDelete")
                                      .Commands(
                                          Html.X()
                                              .ImageCommand()
                                              .CommandName("Delete")
                                              .Icon(Icon.ApplicationDelete)
                                              .ToolTip(tt => tt.Text = "Delete")
                                      ).DirectEvents(de =>
                                      {
                                          de.Command.Method = HttpMethod.GET;
                                          de.Command.Url = Url.Action("DeleteOrganisationUnit", "OrganisationUnit", new { area = "Component" });
                                          de.Command.Confirmation.ConfirmRequest = true;
                                          de.Command.Confirmation.Message = "Are you sure you want to delete this record?";
                                          de.Command.ExtraParams.Add(new Parameter("id", "record.data.OrganisationUnitID", ParameterMode.Raw));
                                          de.Command.Success = "App.AddOrganisationUnitGrid.getStore().load();";
                                      })
                      )
                       .BottomBar(
                       Html.X()
                           .PagingToolbar()
                           .DisplayInfo(true)
                           .DisplayMsg("Displaying units {0} - {1} of {2}")
                           .EmptyMsg("No units to display"))
                      .DockedItems(
                          Html.X().Toolbar()
                              .Dock(Dock.Top)
                              .Items(
                                  Html.X()
                                      .Button()
                                      .Text("Add Unit")
                                      .DirectEvents(de =>
                                      {
                                          de.Click.Method = HttpMethod.POST;
                                          de.Click.Url = Url.Action("ShowAddOrganisationUnitWindowWithinAdmin", "OrganisationUnit", new { area = "Component", id = Model.OrganisationID });
                                      })
                                  ,
                                      Html.X().ToolbarFill(),
                                      Html.X().Button().ApplyButtonDefaults(Razor.ApplyCancelButtonDefaults).ID("CancelUnit")
                                               .DirectClickUrl(Url.Action("OrganisationManagement", "Organisation", new { area = "Component", containerId = "AdministrationCenterPanel" }))))
                      .AutoDoLayout(true))

                      )


                      )