@using Bec.TargetFramework.Entities
@using Bec.TargetFramework.Web.Framework.Extensions
@using Ext.Net
@using Ext.Net.MVC
@model Bec.TargetFramework.Entities.AddressDTO

@{
    BuilderFactory<AddressDTO> X = Html.X();
    Layout = "~/Views/Shared/_BaseLayoutNoNotificationViewer.cshtml";
}

@section headTag
{
<script type="text/javascript">

    function changeAddressOther(obj, value) {
            var selectedValue = obj.getChecked()[0].inputValue;
            App.direct.SafeTransactionSearch.ChangeAddressOther(selectedValue, {
                success: function (result) {
                    // TBD
                }
            });

        }

        function populateHelp(editor, e, eOpts) {

        }

        function resetForm(id) {
            $('#' + id).val(function () {
                return this.defaultValue;
            });
        }

    </script>
}

@section mainBody
{

@(
 X.FormPanel().Layout(LayoutType.Form)
     .ApplyFormPanelDefaults(Razor.ApplyFormPanelDefaults)
                                                                .ID("OtherAddressForm")
                                                                .Items
                                                                (

                                                                     X.Container().Layout(LayoutType.Fit)
                                                                                    .Items
                                                                                    (
                                                                                                X.RadioGroupFor(model => model.InternationalAddress, new List<Radio.Config> { new Radio.Config { BoxLabel = "Yes", InputValue = "1", LabelAlign = LabelAlign.Left }, new Radio.Config { BoxLabel = "No", InputValue = "0", LabelAlign = LabelAlign.Left } })
                                                                                              .LabelAlign(LabelAlign.Left).MinWidth(300).LabelWidth(200).Listeners(l => l.Focus.Fn = "populateHelp")
                                                                                                      .ID("IsCurrentAddressOutsideUKGrid")
                                                                                              .ApplyRadioGroupDefaults("PersonalDetailsPanel", "AddressOutsideUK").Padding(2).Flex(1)
                                                                                              .Listeners(l => l.Change.Fn = "changeAddressOther")
                                                                                    ),

                                                                                                 X.Panel().ColumnWidth(1).Layout(LayoutType.Column).Padding(2).MinWidth(300).ID("OutsideOtherAddressContainer")
                                                                                                 .ItemsFromPartial("_AddressPartial", Model),
                                                                                                  X.Container().ID("AddressDurationContainer").ColumnWidth(1).Layout(LayoutType.HBox).LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Middle, Pack = BoxPack.Start }).Padding(2)
                                                                                                  .Items
                                                                                                  (
                                                                                                          X.Label().ApplyFieldDefaults("PersonalDetailsPanel", "HowLongYouLivedHereLabel").Flex(3),
                                                                                                                                  X.ComboBoxFor(model=>model.AddressMonths).ApplyFieldDefaults("PersonalDetailsPanel", "Years").Padding(2).Flex(1).ID("YearsLivingFor").FieldLabel("").Flex(1)
                                                                                                            .Store(Razor.CreateClassificationStore("NumberOfYears", Url.Action("ReadData", "Reference", new { area = "" }))).DisplayField("Name").ValueField("Description"),
                                                                                                                                                           //.Listeners(l => l.Change.Fn = "CalculateLivingTerm"),
                                                                                                                                              X.ComboBoxFor(model => model.AddressYear).ApplyFieldDefaults("PersonalDetailsPanel", "Months").Padding(2).Flex(1).ID("MonthsLivingFor").FieldLabel("").Flex(1)
                                                                                                                            .Store(Razor.CreateClassificationStore("NumberOfMonths", Url.Action("ReadData", "Reference", new { area = "" }))).DisplayField("Name").ValueField("Description")
                                                                                                                                                                          // .Listeners(l => l.Change.Fn = "CalculateLivingTerm")
                                                                                                  )
                                                                )
                                                                .TopBar(Html.X().Toolbar()
                                                                                                          .Items(
                                                                                                              Html.X().ToolbarFill(),
                                                                                                              Html.X()
                                                                                                                  .Button()
                                                                                                                  .ApplyButtonDefaults(Razor.ApplySaveButtonDefaults)
                                                                                                                  .DirectEvents(de =>
                                                                                                                  {
                                                                                                                      de.Click.Method = HttpMethod.POST;
                                                                                                                      de.Click.Before = "return #{OtherAddressForm}.isValid();";
                                                                                                                      de.Click.Url = Url.Action("OtherAddress", "PersonalDetails", new { area = "SafeTransactionSearch" });
                                                                                                                      de.Click.FormID = "OtherAddressForm";
                                                                                                                  }),
                                                                                                                 // Html.X().Button().ApplyButtonDefaults(Razor.ApplyResetButtonDefaults).OnClientClick("resetForm(OtherAddressForm.getForm().getId());"),
                                                                                                              Html.X().Button().ApplyButtonDefaults(Razor.ApplyCancelButtonDefaults).Text("Close")
                                                                                                                      .OnClientClick("Ext.net.Bus.publish('AddOtherAddress','');")
    )))
                                                                                                             
                                                                                                                
                                                                                                              



    }