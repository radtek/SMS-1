@using Bec.TargetFramework.Entities
@using Bec.TargetFramework.Web.Framework.Extensions
@using Ext.Net
@using Ext.Net.MVC


@{
    var X = Html.X();
    Layout = "~/Views/Shared/_BaseLayoutNoNotificationViewer.cshtml";
}


@section headTag
    {
        <style>
            .x-tree-icon { display: none; }
            .notifcation { color: red; }
        </style>
        <script type="text/javascript">
            var gridId = '';
        </script>
        <script src="~/Scripts/TargetFramework/GridCRUD.js" type="text/javascript"></script>
        <script type="text/javascript">
            var AddFirmBranch = function (obj) {

            }

            var AddBranchUser = function (obj) {

            }

            var onComboBoxSelect = function (obj) {

            }
           
            var NotificationRender = function (value) {
                if (value != null)
                    return '<span style="color:red;">' + value + '</span>';
                else
                    return '';
            }
    </script>
    }


@section mainBody
{
   @(Html.X().Store().AutoLoad(true).ID("FirmBranchGridStore")
              .Model(Html.X().Model().Fields(fields =>
                          {
                              fields.Add(new ModelField("ID"));
                              fields.Add(new ModelField("Name"));
                              fields.Add(new ModelField("Notification"));
                              //fields.Add(new ModelField("BranchType"));
                              fields.Add(new ModelField("BranchAdminName"));
                              //fields.Add(new ModelField("FinancialOfficer"));
                              //fields.Add(new ModelField("TotalRegulatedPractitioner"));
                              //fields.Add(new ModelField("TotalStaff"));
                          })
              .Proxy(p => p.Add(Html.X().AjaxProxy().Url(Url.Action("GetFirmBranches", "FirmBranchesUsers", new { area = "SafeTransactionSearch" })).Reader(new JsonReader.Builder().Root("data")))))
                       .MessageBusListeners(ml =>
                       {
                           ml.Add(new MessageBusListener { Name = "AddEditBranch", Handler = "alert('Addbranchtest');App.AddEditBranchWindow.close();App.FirmBranchGridStore.load();" });
                       })
              )

        @(Html.X().Store().AutoLoad(true).ID("BranchUserGridStore")
               .Model(Html.X().Model().Fields(fields =>
                          {
                              fields.Add(new ModelField("StatusTypeValueID"));
                              fields.Add(new ModelField("Name"));
                          })
                                                  .Proxy(p => p.Add(Html.X().AjaxProxy().Url(Url.Action("GetFirmUsers", "FirmBranchesUsers", new { area = "SafeTransactionSearch" })).Reader(new JsonReader.Builder().Root("data")))))
                                                          .MessageBusListeners(ml =>
                                                            {
                                                                ml.Add(new MessageBusListener { Name = "AddEditUser", Handler = "alert('AddUsertest');App.AddEditUserWindow.close();App.BranchUserGridStore.load();" });
                                                            })
                                                                               
                                                  )

    @(Html.X().Viewport().Layout(LayoutType.Border).ID("BranchesUsersViewPort").AutoDoLayout(true)
              .Items(
                  X.Panel().Region(Region.North).ItemsFromPage(this, "~/Views/Portal/_TopBar.cshtml"),
                  X.Panel().Region(Region.West).ID("WorkflowTree").Height(750).Width(250).AutoScroll(false).ItemsFromPartial("_LeftPanel"),      
                  X.Panel().ID("BranchUserManagementForm").Region(Region.Center).Layout(LayoutType.Column)//.AutoScroll(true)
                      .Padding(2)
                      .Items(
                              X.Container().ColumnWidth(1).Layout(LayoutType.HBox).LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Middle, Pack = BoxPack.End }).Height(100).Items(
                                                      X.Button().ApplyButtonDefaults(Razor.ApplyNextButtonDefaults)
                                                          .DirectEvents(de =>
                                                          {
                                                              //de.Click.Before = "return #{BranchUserManagementForm}.isValid();";
                                                              de.Click.Url = Url.Action("Next", "FirmBranchesUsers", new { area = "SafeTransactionSearch" });
                                                              //de.Click.FormID = "BranchUserManagementForm";
                                                              de.Click.EventMask.ShowMask = true;
                                                              //de.Click.Method = HttpMethod.POST;
                                                              de.Click.EventMask.Msg = "Please wait ...";
                                                          })
                                                      )
                                                      ,
                          X.Container().ColumnWidth(1).Items(
                                                X.Label().ApplyFieldDefaults("BranchesUsersSetUp", "BranchesSetUpText")
                                                            ,
                                                                X.GridPanel().ID("FirmBranchGrid").Flex(1).MinWidth(400).MinHeight(350).Padding(2)
                                                                    .StoreID("FirmBranchGridStore")
                                                                    .DirectEvents(de =>
                                                                                       {
                                                                                           de.ItemDblClick.Method = HttpMethod.POST;
                                                                                           de.ItemDblClick.Action = "ShowEditBranchWindow";
                                                                                           de.ItemDblClick.ExtraParams.Add(new Parameter("id", "record.data.ID", ParameterMode.Raw));
                                                                                       })
                                                                            .ColumnModel(
                                                                                        X.Column().Text("ID").DataIndex("ID").Hidden(true),
                                                                                            X.Column().Text("Branch Name").DataIndex("Name"),
                                                                                            X.Column().Text("Notifications").DataIndex("Notification").Renderer("NotificationRender"),
                                                                                            //X.Column().Text("BranchType").DataIndex("BranchType"),
                                                                                            X.Column().Text("Branch Administrator").DataIndex("BranchAdminName")//,
                                                                                            // X.Column().Text("Financial Officer").DataIndex("FinancialOfficer"),
                                                                                             //X.Column().Text("Total Regulated Practitioner").DataIndex("TotalRegulatedPractitioner"),
                                                                                            // X.Column().Text("Total Staff").DataIndex("TotalStaff")

                                                                                         ).EnableColumnHide(false)//.EnableColumnMove(false).EnableColumnResize(false)
                                                                         .BottomBar(
                                                                                Html.X().PagingToolbar()
                                                                                    .Items(
                                                                                        Html.X().Label("Page size:"),
                                                                                        Html.X().ToolbarSpacer(10),
                                                                                        Html.X().ComboBox()
                                                                                            .Width(80)
                                                                                            .Items("1", "2", "10", "20")
                                                                                            .SelectedItems("10")
                                                                                            .Listeners(l =>
                                                                                            {
                                                                                                l.Select.Fn = "onComboBoxSelect";
                                                                                            }),//.Plugins(Html.X().ProgressBarPager()),
                                                                                    X.ToolbarFill(),
                                                                                            X.Button().Icon(Icon.Add).Text("Add New Branch").DirectClickAction("ShowAddBranchWindow", "FirmBranchesUsers")
                                                                                    )
                                                                                    )
                                    ),
                                            X.Panel().ApplyPanelDefaults("UserManagement").ColumnWidth(1).Items(
                                                        X.Label().ApplyFieldDefaults("BranchesUsersSetUp", "UserSetUpText")
                                                                ,
                                                                X.GridPanel().ID("BranchUserGrid").Flex(1).MinWidth(400).MinHeight(350).Padding(2)
                                                                // .StoreID("BranchUserGridStore")
                                                                //.MessageBusListeners(ml => { ml.Add(new MessageBusListener { Name = "AddUserGridLoad", Handler = "App.BranchUserGrid.getStore().load();" }); })
                                                                         .ColumnModel(
                                                                                        X.Column().Text("ID").DataIndex("ID").Hidden(true),
                                                                                        X.Column().Text("Title").DataIndex("BranchName"),
                                                                                        X.Column().Text("First Name").DataIndex("Notifications"),
                                                                                            X.Column().Text("Last Name").DataIndex("BranchType"),
                                                                                        X.Column().Text("Notifications").DataIndex("Notifications"),
                                                                                        X.Column().Text("Email Address").DataIndex("ID"),
                                                                                        X.Column().Text("User Type").DataIndex("ID"),
                                                                                              X.Column().Text("Branch").DataIndex("BranchType"),
                                                                                        X.Column().Text("Regulator").DataIndex("ID"),
                                                                                            X.Column().Text("Regulator Number").DataIndex("ID")

                                                                             ).BottomBar(
                                                                            Html.X().PagingToolbar()
                                                                                .Items(
                                                                                    Html.X().Label("Page size:"),
                                                                                    Html.X().ToolbarSpacer(10),
                                                                                    Html.X().ComboBox()
                                                                                        .Width(80)
                                                                                        .Items("1", "2", "10", "20")
                                                                                        .SelectedItems("10")
                                                                                        .Listeners(l =>
                                                                                        {
                                                                                            l.Select.Fn = "onComboBoxSelect";
                                                                                        }),//.Plugins(Html.X().ProgressBarPager()),
                                                                                X.ToolbarFill(),
                                                                                        X.Button().Icon(Icon.Add).Text("Add New User").DirectClickAction("ShowAddUserWindow", "FirmBranchesUsers")
                                                                                )
                                                                                )
                                    )

                      )
         )
      )
    }