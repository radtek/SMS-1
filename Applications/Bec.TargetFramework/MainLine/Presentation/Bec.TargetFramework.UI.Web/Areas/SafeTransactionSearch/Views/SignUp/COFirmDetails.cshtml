@using Bec.TargetFramework.Web.Framework.Extensions
@using Ext.Net
@using Ext.Net.MVC

@model Bec.TargetFramework.Entities.FirmDetailsDTO

@{
    var X = Html.X();
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
}


@section headTag
{
<style>
   
   .my-header .x-panel-header-text
    {
       color:black;
      
    }

     .my-header .x-panel-header {
        background-color: white;
        
        
    }
</style>

<script type="text/javascript">



    var insertRecord = function () {
        var grid = App.gridClientAccount;
        //alert('test');

       //var gridstore =  Ext.getCmp("gridTradingNames").getStore();

        grid.store.insert(0, {});
        grid.getView().focusRow(0);
        grid.editingPlugin.startEdit(grid.store.getAt(0), grid.columns[0]);



         }

    //$(document).ready(function () {
    //    //insertRecord();
    //});




</script>

}

@section mainBody
{
    @(Html.X().Viewport().ID("FirmViewPort").OverflowX(Overflow.Auto).OverflowY(Overflow.Auto)
        .Items(
                                Html.X().Panel().ItemsFromPage(this, "~/Views/Portal/_TopBar.cshtml"),
                                X.FormPanel().ID("FirmDetailsForm").ApplyFormPanelDefaults(Razor.ApplyFormPanelDefaults)
                         .Items(
                                 X.Container().ID("FD").Layout(LayoutType.Column)
                                  .Items(

                                        X.Container().ColumnWidth(0.5)
                                        .Items(
                                                                X.Panel().ApplyPanelDefaults("FirmContact").Border(true).Items(
                                                        X.TextFieldFor(model => model.FirmName).ApplyFieldDefaults("FirmContact", "FirmName").PaddingSpec("0 50 0 0"),
                                                        
                                                        X.Button().Text("Add")
                                      .DirectEvents(de =>
                                      {
                                          de.Click.Method = HttpMethod.POST;
                                          de.Click.Url = Url.Action("AddTradingNameWindow", "SignUp", new { area = "SafeTransactionSearch"});
                                      })
                                                ,

                                                        X.TextFieldFor(model => model.TradingName).ApplyFieldDefaults("FirmContact", "TradingName").PaddingSpec("0 50 0 0"),

                                                        X.TextFieldFor(model => model.Website).ApplyFieldDefaults("FirmContact", "Website")

                                              ),

                                                                X.Panel().ApplyPanelDefaults("FirmRegulator").Border(true).Items(
                                                X.ComboBoxFor(model => model.Regulator).ID("Regulator").ApplyFieldDefaults("FirmRegulator", "Regulator")
                                                                    .Store(Razor.CreateClassificationStore("RegulatorID", Url.Action("ReadData", "Reference", new { area = "" })))
                                                  
                                                  

                                              ),

                                                              X.Panel().ApplyPanelDefaults("FirmProfessionalIndemnityInsurance").Border(true).Items(
                                                        X.TextFieldFor(model => model.PIIProvider).ApplyFieldDefaults("FirmProfessionalIndemnityInsurance", "PIIProvider").PaddingSpec("0 50 0 0"),
                                                                X.TextFieldFor(model => model.PolicyNumber).ApplyFieldDefaults("FirmProfessionalIndemnityInsurance", "PolicyNumber").PaddingSpec("0 50 0 0"),
                                                X.TextFieldFor(model => model.RenewalDate).ApplyFieldDefaults("FirmProfessionalIndemnityInsurance", "RenewalDate")
                                              ),

                                                X.Panel().ApplyPanelDefaults("FirmRegistration").Border(true).Items(
                                            X.RadioGroupFor(model => model.IsCompaniesHouseRegistered, new List<Radio.Config> { new Radio.Config { BoxLabel = "Yes", InputValue = "1" }, new Radio.Config { BoxLabel = "No", InputValue = "0" } })
                                                                            .ColSpan(2).Padding(5).Width(415).LabelWidth(200).ApplyRadioGroupDefaults("FirmRegistration", "FirmCompaniesHouseRegistered"),
                                                
                                                        X.TextFieldFor(model => model.RegisteredCompanyNumber).ApplyFieldDefaults("FirmRegistration", "RegisteredCompanyNumber")
                                                      ),

                                                                              X.Panel().ApplyPanelDefaults("FirmVATDetails").Border(true).Items(
                                                 
                                                                   X.RadioGroupFor(model => model.IsVATRegistered, new List<Radio.Config> { new Radio.Config { BoxLabel = "Yes", InputValue = "1" }, new Radio.Config { BoxLabel = "No", InputValue = "0" } })
                                                                                                                  .LabelWidth(200).LabelPad(1).Padding(5).Width(415).ApplyRadioGroupDefaults("FirmVATDetails", "FirmVATRegistered"),
                                                  X.TextFieldFor(model => model.VATNumber).ApplyFieldDefaults("FirmVATDetails", "VATNumber")

                                    )
                               ),

                               X.Container().ColumnWidth(0.5)
                               .Items(
                                                       X.Panel().ApplyPanelDefaults("FirmOtherDetails").Items(
                                                            X.TextFieldFor(model => model.DirectorsCount).ApplyFieldDefaults("FirmOtherDetails", "NoOfRegulatedPartners").LabelAlign(LabelAlign.Left).LabelWidth(400),
                                                                    X.TextFieldFor(model => model.RPCount).ApplyFieldDefaults("FirmOtherDetails", "NoOfRegulatedPractitioners").LabelAlign(LabelAlign.Left).LabelWidth(400),
                                                                    X.TextFieldFor(model => model.StaffCount).ApplyFieldDefaults("FirmOtherDetails", "NoOfStaff").LabelAlign(LabelAlign.Left).LabelWidth(400),
                                                                    X.TextFieldFor(model => model.CompletionsCount).ApplyFieldDefaults("FirmOtherDetails", "NoOfCompletionsPerMonth").LabelAlign(LabelAlign.Left).LabelWidth(400)

                                       ),

                                                               X.Panel().ApplyPanelDefaults("ContactDetails").Border(true).Items(
                                                    X.TextFieldFor(model => model.OfficePhoneNumber).ApplyFieldDefaults("ContactDetails", "OfficePhoneNumber").PaddingSpec("0 20 0 0"),
                                                    X.TextFieldFor(model => model.DirectDialNumber).ApplyFieldDefaults("ContactDetails", "DirectDialPhoneNumber")
                                       ),
                                       
                                       X.Panel().ApplyPanelDefaults("FirmClientAccountDetails").Border(true).Items(
                                                X.GridPanel().ID("gridClientAccount").Title("Client Account Details")
                                                    .Store(X.StoreFor<Bec.TargetFramework.Entities.FirmDetailsDTO>())
                                                    
                                                    .ColumnModel(
                                                        X.Column().Text("Account Name").DataIndex("AccountName")
                                                        .MenuDisabled(true).Sortable(false)
                                                                .Editor(X.TextFieldFor(model => model.AccountName).ApplyFieldDefaults("FirmClientAccountDetails","AccountName")),
                                                                
                                                                X.Column().Text("Sort Code").DataIndex("SortCode")
                                                                    .Editor(X.TextFieldFor(model => model.SortCode).ApplyFieldDefaults("FirmClientAccountDetails","SortCode")),
                                                                
                                                                X.Column().Text("Account Number").DataIndex("AccountNumber")
                                                                    .Editor(X.TextFieldFor(model=>model.AccountNumber).ApplyFieldDefaults("FirmClientAccountDetails","AccountNumber"))
                                                    )
                                                    
                                                     .Plugins(
                                                                    X.CellEditing().ClicksToEdit(1))
                                                                    
                                                                .Buttons(
                                                                X.Button()
                                                                    .Text("Insert Record")
                                                                    .Icon(Icon.Add)
                                                                    .Handler("insertRecord")

                                                                    )
                                           )
                                       
                                     
                                                               
                                                                
                                                                )
                                                              )
                                                         
                               
                     )
    
                   



              )

      )
    
    
}
