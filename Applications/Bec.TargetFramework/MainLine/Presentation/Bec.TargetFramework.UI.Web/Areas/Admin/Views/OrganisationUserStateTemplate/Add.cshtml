@using Bec.TargetFramework.Web.Framework.Extensions
@model Bec.TargetFramework.Entities.OrganisationUserStateTemplateDTO

@(Html.X()
          .FormPanel()
              .ID("AddOrganisationUserStateTemplateForm")
              .Title("Add Visibility State Template")
          .ApplyFormPanelDefaults(Razor.ApplyFormPanelDefaults)
          .Items(
              Html.X().AntiForgeryField(),
                   Html.X().Container().Layout(LayoutType.Column)
              .Items
              (
                  Html.X().Container().Layout(LayoutType.Form).ColumnWidth(0.5).Padding(5)
                      .Items
                      (
                          Html.X()
                                  .TextFieldFor(model => model.OrganisationUserStateTemplateName)
                                  
                              .AllowBlank(false)
                              .ApplyTextFieldDefaults(Razor.ApplyTextFieldDefaults)
                                    .Control(c =>
                                        {
                                            c.IsRemoteValidation = true;
                                            c.RemoteValidation.Url = Url.Action("DoesOrganisationUserStateTemplateNameExist", "OrganisationUserStateTemplate", new { area = "Admin" });
                                            c.RemoteValidation.ValidationEvent = "change, blur";
                                            c.RemoteValidation.Method = Ext.Net.HttpMethod.POST;
                                            c.RemoteValidation.ShowBusy = false;
                                            c.RemoteValidation.ErrorMessage = "The organisation user state template name already exists";
                                        }),
                                  Html.X().TextAreaFor(model => model.OrganisationUserStateTemplateDescription)
                              .AllowBlank(false)
                              
                              .ApplyTextAreaDefaults(Razor.ApplyTextAreaDefaults),
                              Html.X().CheckboxFor(model=>model.IsPrimaryState)
                              
                              
                       )
                       ),
                          Html.X().Container().Layout(LayoutType.Form).ColumnWidth(0.5).Padding(5)
                      .Items
                      (
                          Html.X().ComboBoxFor(model => model.OrganisationTypeId)
                              .ApplyComboxDefaults(Razor.ApplyComboBoxClassificationDefaults)
                                  .FieldLabel("Organisation Type")
                                  .Store(
                                  
                                  Razor.CreateClassificationStore("OrganisationType", Url.Action("ReadData", "Reference", new { area = "" }))
                                  
                                  ),
                                  Html.X().ComboBoxFor(model => model.VisibilityStateTemplateId)
                                    .AutoDataBind(true)                                  
                                    .LabelAlign(LabelAlign.Top)
                                    .DisplayField("Name")
                                    .ValueField("VisibilityStateTemplateId")
                                    .QueryMode(DataLoadMode.Local)
                                    .TriggerAction(TriggerAction.All)
                                    .MsgTarget(MessageTarget.Under)
                                    .TypeAhead(true)
                                    .ForceSelection(true)
                                    .FieldLabel("Visibility State Template")
                                          .Store(
                                          Html.X().Store()
            .AutoLoad(true)
            .Model(Html.X().Model()
                    .IDProperty("VisibilityStateTemplateId")
                .Fields(
                                    new ModelField("VisibilityStateTemplateId", ModelFieldType.Auto) { Mapping = "VisibilityStateTemplateId" },
                    new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                )
            )
            .Proxy(Html.X().AjaxProxy()
                        .Url(Url.Action("GetAllVisibilityStateTemplates", "VisibilityStateTemplate"))
                .Reader(Html.X().JsonReader().Root("data"))
            )),
            Html.X().ComboBoxFor(model => model.UserTypeId)
                                  .ApplyComboxDefaults(Razor.ApplyComboBoxClassificationDefaults)
                                      .FieldLabel("User Type")
                                          .Store(Razor.CreateClassificationStore("UserType", Url.Action("ReadData", "Reference", new { area = "" })))
                                      
                                  
                      ))
                       
                       
                    
          .TopBar(Html.X().Toolbar()
            .Items(
                Html.X().ToolbarFill(),
                    Html.X()
                           .Button()
                           .ApplyButtonDefaults(Razor.ApplySaveButtonDefaults)
                           .DirectEvents(de =>
                           {
                               de.Click.Before = "return #{AddOrganisationUserStateTemplateForm}.isValid();";
                               de.Click.Url = Url.Action("Add", "OrganisationUserStateTemplate", new { area = "Admin", containerId = "AdministrationCenterPanel" });
                               de.Click.FormID = "AddOrganisationUserStateTemplateForm";
                               
                           }),

                                       Html.X().Button().ApplyButtonDefaults(Razor.ApplyResetButtonDefaults).OnClientClick("App.AddOrganisationUserStateTemplateForm.getForm().reset();"),
                           Html.X().Button().ApplyButtonDefaults(Razor.ApplyCancelButtonDefaults)
                        .DirectEvents(de =>
                        {
                            de.Click.Url = Url.Action("OrganisationUserStateTemplateManagement", "OrganisationUserStateTemplate", new { area = "Admin", containerId = "AdministrationCenterPanel" });
                        })
            ))                  
      )