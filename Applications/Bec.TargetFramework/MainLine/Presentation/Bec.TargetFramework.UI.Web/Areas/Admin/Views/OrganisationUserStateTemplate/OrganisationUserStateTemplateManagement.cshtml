@model Bec.TargetFramework.Entities.OrganisationUserStateTemplateDTO

@{MvcResourceManager.RegisterGlobalScript(Url.Content("~/Scripts/TargetFramework/Grid.js"));}

@(Html.X().GridPanel()
              .ID("OrganisationUserStateTemplateGrid")
              .Title("Visibility State Templates")
             .Flex(1)
              .Store(Html.X()
                         .StoreForModel()
                             .ID("OrganisationUserStateTemplateStore")
                         .RemoteFilter(true)
                         .RemoteSort(true)
                         .PageSize(35)
                             .SorterFor(Model, m => m.OrganisationUserStateTemplateName, Ext.Net.SortDirection.ASC)
                         .Proxy(Html.X()
                                    .AjaxProxy()
                                        .Url(Url.Action("GetOrganisationUserStateTemplates", "OrganisationUserStateTemplate", new { area = "Admin" }))
                                    .FilterParam("query")
                                    .Reader(
                                         Html.X().JsonReader().Root("data"))
                                    .CustomConfig(config =>
                                    {
                                        config.Add(new { encodeFilters = JRawValue.From("function (filters) { return filters[0].value; }") });
                                    })))
              .ColumnModel(
                        Html.X().ColumnFor(model => model.OrganisationUserStateTemplateName)
                        .ToBuilder<Column.Builder>()
                        .Text("Name")
                        .Width(150),
                        Html.X().ColumnFor(model => model.OrganisationUserStateTemplateDescription)
                        .ToBuilder<Column.Builder>()
                        .Text("Description")
                        .Width(300),
                  
                   Html.X()
                       .CommandColumn()
                       .Commands(
                            Html.X()
                                .GridCommand()
                                .CommandName("Edit")
                                .Icon(Icon.ApplicationEdit)
                                .ToolTip(tt => tt.Text = "Edit")
                               ).DirectEvents(de =>
                               {
                                   de.Command.Method = HttpMethod.GET;
                                   de.Command.Url = Url.Action("Edit", "OrganisationUserStateTemplate", new { area = "Admin" });
                                   de.Command.ExtraParams.Add(new Parameter("id", "record.data.OrganisationUserStateTemplateId", ParameterMode.Raw));
                                   de.Command.ExtraParams.Add(new Parameter("containerId", "AdministrationCenterPanel", ParameterMode.Value));
                               }
                       ),
                           Html.X()
                           .CommandColumn()
                           .Commands(
                                Html.X()
                                    .GridCommand()
                                    .CommandName("Delete")
                                    .Icon(Icon.ApplicationDelete)
                                    .ToolTip(tt => tt.Text = "Delete")
                                   
                                   ).DirectEvents(de =>
                                   {
                                       de.Command.Method = HttpMethod.POST;
                                       de.Command.Action = "Delete";
                                       de.Command.Confirmation.ConfirmRequest = true;
                                       de.Command.Confirmation.Message = "Are you sure, you want to delete this?";
                                       de.Command.Confirmation.ConfirmRequest = true;                              
                                       de.Command.ExtraParams.Add(new Parameter("id", "record.data.OrganisationUserStateTemplateId", ParameterMode.Raw));
                                       de.Command.ExtraParams.Add(new Parameter("containerId", "AdministrationCenterPanel", ParameterMode.Value));
                                   }
                           ).Flex(1))
                           .BottomBar(
                   Html.X()
                       .PagingToolbar()
                       .DisplayInfo(true)
                               .DisplayMsg("Displaying Organisation User State Template {0} - {1} of {2}")
                               .EmptyMsg("No Organisation User State Template to display"))
                       

              .View(Html.X().GridView().TrackOver(false))
              .SelectionModel(Html.X().RowSelectionModel().PruneRemoved(false).Mode(SelectionMode.Single))
                  .DockedItems(Html.X()
                                   .Toolbar()
                                   .Dock(Dock.Top)
                                   .Items(
                                            Html.X()
                                                .Button()
                                                .ID("New")
                                                    .Text("Add Organisation User State Template")
                                                .Icon(Icon.ApplicationAdd)
                                                        .DirectEvents(de => de.Click.Url = Url.Action("Add", "OrganisationUserStateTemplate", new { area = "Admin", containerId = "AdministrationCenterPanel" }))
                                              ,
                                        Html.X().ToolbarSeparator(),
                                            Html.X()
                                                .TriggerField()
                                                .FieldLabel("Search")
                                                .LabelWidth(50)
                                                .Triggers(
                                                     Html.X().FieldTrigger().Icon(TriggerIcon.Clear).HideTrigger(true),
                                                     Html.X().FieldTrigger().Icon(TriggerIcon.Search))
                                                      .Listeners(ls =>
                                        {
                                           
                                            ls.TriggerClick.Fn = "searchFieldTriggerClick";
                                        }),
                                        Html.X().ToolbarFill()))
            )

