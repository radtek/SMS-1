@using Bec.TargetFramework.Web.Framework.Extensions
@model Bec.TargetFramework.Entities.AddressDTO


<script>

    var populateAddressX = function(field, newValue, oldValue, eOpts) {
        var selectedItems = App.X_PostCodeResults.getSelected();
        var address = selectedItems[0];
        this.hide();
        if (address) {
            var form = this.up('form').getForm();
            popAddressX(address, form);
        }
    };

    var popAddressX = function(option, form) {
        var address = option;
        if (address) {
            if (address.data.Company)
                form.findField('X_Line1').setValue(address.data.Company + ', ' + address.data.Line1);
            else
                form.findField('X_Line1').setValue(address.data.Line1);
            form.findField('X_Line2').setValue(address.data.Line2);
            form.findField('X_City').setValue(address.data.PostTown);
            form.findField('X_County').setValue(address.data.County);
            if (address.data.BuildingName)
                form.findField('X_BuildingName').setValue(address.data.BuildingName);
        }
    };


    var processPostCodeX = function(formName) {
        var postCode = App.X_AddressPostCode.getValue();

        var multiSelect = App.X_PostCodeResults;
        var form = multiSelect.up('form').getForm();
        multiSelect.getStore().load();

        multiSelect.getStore().on('load', function(store, records, successful, eOpts) {
            if (store.getCount() > 0) {
                if (store.getCount() > 1) {
                    multiSelect.show();
                } else {
                    popAddressX(store.data.items[0], form);
                }

            } else {
                multiSelect.hide();
                Ext.MessageBox.show({ title: 'Post Code', msg: 'No addresses exists for postCode ' + postCode, buttons: Ext.MessageBox.OK, width: 300 });
            }
        });

    };


</script>

@(Html.X().Container().ID("X_UKAddress").Hidden(false).Layout(LayoutType.Column).ColumnWidth(1).Flex(1).Items(
            Html.X().HiddenFor(h => h.ID),
          Html.X().Container().ColumnWidth(0.5).Padding(5).Layout(LayoutType.Fit).Items(
              Html.X().TextFieldFor(model => model.PostalCode).ID("X_AddressPostCode").ApplyFieldDefaults("Address", "Postcode")
                              .Listeners(l => l.Change.Handler = "#{X_AddressFindPostcode}.setDisabled(!#{X_AddressPostCode}.isValid()); App.X_AddressPostCode.setValue(this.value.toUpperCase());").Flex(1),
                  Html.X().TextFieldFor(model => model.BuildingName).ID("X_BuildingName").ApplyFieldDefaults("Address", "HouseNumber/Name").Flex(1),
                  Html.X().Button().Text("Find Address").Disabled(true).ID("X_AddressFindPostcode").StyleSpec("text-transform:uppercase;")
                  .Listeners(l => l.Click.Handler = "processPostCodeX();").Padding(2)
              )
          ,
          Html.X().Container().ColumnWidth(0.5).Layout(LayoutType.Fit).Padding(5).Items(
                      Html.X().TextFieldFor(model => model.Line1).ID("X_Line1").ApplyFieldDefaults("Address", "AddressLine1").Flex(1),
                      Html.X().TextFieldFor(model => model.Line2).ID("X_Line2").ApplyFieldDefaults("Address", "AddressLine2").Flex(1),
                      Html.X().TextFieldFor(model => model.City).ID("X_City").ApplyFieldDefaults("Address", "Town/City").Flex(1),
                      Html.X().TextFieldFor(model => model.County).ID("X_County").ApplyFieldDefaults("Address", "County").Flex(1),
                      Html.X().TextFieldFor(model => model.Name).ID("X_Name").ApplyFieldDefaults("Address", "AdditionalAddressInformation").Flex(1)
              )
          ,
          Html.X().Container().ColumnWidth(1).Items(
                  Html.X().MultiSelect().ID("X_PostCodeResults")
                  .ValueField("FullAddress")
                  .DisplayField("FullAddress")
                  .FieldLabel("Postcode Results")
                  .Height(70)
                  .LabelAlign(LabelAlign.Top)
                  .Flex(1)
                  .Hidden(true)
                  .Listeners(l => l.Change.Fn = "populateAddressX")
                  .MultiSelect(true).Store(Html.X()
                      .Store()
                      .AutoLoad(false)
                      .Parameters(p =>
                      {
                          p.Add(Html.X().StoreParameter().Name("postCode").Value("Ext.getCmp('X_AddressPostCode').getValue()").Mode(ParameterMode.Value));
                          p.Add(Html.X().StoreParameter().Name("building").Value("Ext.getCmp('X_BuildingName').getValue()").Mode(ParameterMode.Value));
                      }
                      )
                      .Model(Html.X()
                          .Model().Name("PostCodeModel")
                          .Fields(fields =>
                          {
                              fields.Add(new ModelField("FullAddress"));
                              fields.Add(new ModelField("Company"));
                              fields.Add(new ModelField("County"));
                              fields.Add(new ModelField("Department"));
                              fields.Add(new ModelField("BuildingName"));
                              fields.Add(new ModelField("Line1"));
                              fields.Add(new ModelField("Line2"));
                              fields.Add(new ModelField("Line3"));
                              fields.Add(new ModelField("PostCode"));
                              fields.Add(new ModelField("PostTown"));
                              fields.Add(new ModelField("PrimaryStreet"));
                          })
                          .Proxy(proxy => proxy.Add(Html.X()
                              .AjaxProxy()
                              .Url(Url.Action("GetPostCodeAddresses", "Address", new { area = "Component" }))
                              .Reader(reader => reader.Add(Html.X().JsonReader().Root("data")))))))
              )



)
)






