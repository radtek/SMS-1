@using Ext.Net;
@using Ext.Net.MVC;
@using Bec.TargetFramework.Web.Framework.Extensions
<script>
        @*@(Html.X().XScript()
              .ScriptBlock(@"
                var beforeTabOpen = function(param) {
                    var tab = #{mainTabPanel}.getComponent(param);
                    if (tab) {
                        #{mainTabPanel}.setActiveTab(tab);
                        return false;
                    }
                }
            ")
              )*@
</script>

<style>
    .horizontal-menu .x-menu-item-link {
        line-height: 20px;
    }

    .horizontal-menu .x-menu-item-arrow {
        display: none;
    }

    .mytoolbar {
        color: black !important;
        background: #157fcc;
        background-color: whitesmoke;
        font-family: Arial;
        font-size: 8pt;
        text-decoration: none;
    }

        .mytoolbar a:visited {
            color: black !important;
            background: #157fcc;
            background-color: whitesmoke;
            font-family: Arial;
            font-size: 8pt;
            text-decoration: none;
        }

        .mytoolbar a:link {
            color: black !important;
            background: #157fcc;
            background-color: whitesmoke;
            font-family: Arial;
            font-size: 8pt;
            text-decoration: none;
        }

        .mytoolbar a:active {
            color: black !important;
            background: #157fcc;
            background-color: whitesmoke;
            font-family: Arial;
            font-size: 8pt;
            text-decoration: none;
        }

            .my-tabpanel .x-tab-inner {
                background :  #666666;
        height: 25px !important;
        font-size: 8pt !important;
        font-weight: bold !important;
        font-family: Arial !important;

    }
    .my-toppanel .x-panel-body-default{
         background :  #666666 !important;
        height: 30px !important;
        font-size: 10pt !important;
        font-weight: bold !important;
        font-family: Arial !important;
        color : white;
    }

    .x-tab-bar-top .x-tab-bar-strip {
        top: 20px !important;
        background-color: whitesmoke;
    }

    .x-border-box .x-tab-bar-top .x-tab-bar-body {
        height: 20px !important;
        background-color: #666666;
    }

    .x-border-box .x-tab-default-top {
        height: 20px !important;
        background-color: whitesmoke;
    }

    .x-tab-default-top button, .x-tab-default-top .x-tab-inner {
        height: 20px;
        line-height: 10px;
        background-color: whitesmoke;
    }


    .x-tab .x-tab-inner {
        color: darkgray;
    }

    .x-tab-active .x-tab-inner {
        color: black;
    }

    .x-panel-default-outer-border-trbl {
        border-color: #666666 !important;
    }
    .x-form-text   {
        border-color: #666666 !important;
    }

     /*.x-form-trigger-wrap{
        border-color: #666666 !important;
    }*/

    /* selected link */
</style>

@(Html.X().Panel()
                    .Region(Region.North)
                    .ItemID("north")
                 
                    .Header(true)
                    .Border(false)
                        .TopBar(Html.X().Toolbar().ID("topRightMenuItems")
                        .Cls("mytoolbar")
                   
                        .Padding(1)
                            .ItemID("topRightMenuItems")
                            .Border(true)

                            //    .Loader(Html.X().ComponentLoader()
                            //    .Mode(LoadMode.Component)
                            //        .DirectMethod("#{DirectMethods}.TopRightMenuItems")
                            //        .Params(new { id = "topRightMenuItems" })
                            //    .AutoLoad(true))
                                )
                            //.Layout(LayoutType.Card)
                    
                    .Items(
                        Html.X().Container()
                            .Layout(LayoutType.HBox)
                            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top })
                            .Items(items =>
                            {
                                //items.Add(
                                //    Html.X().Panel().ItemsFromPartial("_DefaultLogo", Model, ViewData));
                                items.Add(
                                Html.X().Image().ImageUrl("~/Content/resources/images/STS/rsz_SMSLogo.jpg").Height(80).Width(200));

                                items.Add(Html.X().Container().Flex(1));

                                
                                items.Add(new Container
                                {
                                    LayoutConfig = {
                                        new HBoxLayoutConfig {Align = HBoxAlign.Top, Pack = BoxPack.End}
                                    },
                                    Width = 450,
                                    Height = 50,
                                    Margins = "-1 0 0 0",
                                    AutoDataBind = true,
                                     
                                    Items =
                                    {
                                       Html.X().Menu()
                                       .ItemID("topBarMenu")
                                       .Layout(LayoutType.HBox)
                                       .Border(false)
                                       .ShowSeparator(false)
                                       
                                       .Cls("horizontal-menu")
                                       .Defaults(p =>
                                       {
                                           p.Add(new Parameter {Name = "MenuAlign", Value = "tl-bl?", Mode = ParameterMode.Value});
                                       })
                                       //.Loader(Html.X().ComponentLoader()
                                       // .Mode(LoadMode.Component)
                                       // .DirectMethod("#{DirectMethods}.TopBarMenuItems")
                                       // .Params(new { id="topBarMenu"})
                                       // .AutoLoad(true)
                                       //).Listeners(l => l.BeforeShow.Handler = "#{topBarMenu}.border = true;" )
                                       .DirectEvents(de =>
                                       {
                                            de.Click.Url = Url.Action("Index", "Home", new { area = "Admin"});
                                            de.Click.ExtraParams.Add(new { containerId = "mainTabPanel" });
                                            de.Click.EventMask.ShowMask = true;
                                            de.Click.EventMask.Msg = "Loading...";
                                            //de.Click.Before = "return beforeTabOpen(extraParams['tabId']);";
                                            de.Click.Timeout = 120000;
                                       })
                                       .Floating(false)
                                    }
                                });
                            
                                items.Add(Html.X().Container().Flex(1));
                                items.Add(new Container
                                {
                                    LayoutConfig = {
                                        new HBoxLayoutConfig {Align = HBoxAlign.Middle, Pack = BoxPack.Center}
                                    },
                                    Width = 280,
                                    Height = 50,
                                    Items = {
                                        Html.X().TextField()
                                            .ID("txtSearch")
                                            .Margins("0 10 0 0")
                                            .EmptyText("Search...")
                                            .Width(215)
                                            .Hidden(true),

                                        Html.X().Button()
                                            .Icon(Icon.Magnifier)
                                            .Margins("0 20 0 0")
                                            .Hidden(true)
                                            .OnClientClick("Ext.Msg.notify('Search', 'Term : ' + App.txtSearch.getValue());"),
                                            Html.X().LinkButton().ApplyLogOutLinkButtonDefaults(Razor.ApplyLogOutLinkButtonDefaults).ID("Help").Text("Help").Margins("0 10 0 0"),
                                            Html.X().LinkButton().ApplyLogOutLinkButtonDefaults(Razor.ApplyLogOutLinkButtonDefaults).ID("Logout").Text("Logout").DirectEvents(de =>
                                                                  {
                                                                      de.Click.Url = Url.Action("Index", "CreateLogin", new { area = "STSLogin" });
                                                                      de.Click.EventMask.ShowMask = true;
                                                                      de.Click.Method = HttpMethod.POST;
                                                                      de.Click.EventMask.Msg = "Please wait ...";
                                                                  })
                                       
                                    }
                                });
                            }),
                                Html.X().Panel()
                              .ID("mainTabPanel")
                                  .Cls("my-toppanel")
                                  .Region(Region.Center)
                                  .Header(false)
                                  .Border(false)
                                  .Layout(LayoutType.Fit)
                                  .AutoScroll(true)
                                  .MinHeight(20)
                                  .Items(
                                      Html.X().Label().ID("TopBarTitle").PaddingSpec("0 0 0 250")
                                  )
                                  .Plugins(plugins => plugins.Add(new TabCloseMenu()))

                    )
                )