//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 07/04/2015 09:00:41
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Core.Entities
{

    public static partial class BusTaskScheduleConverter
    {

        public static BusTaskScheduleDTO ToDto(this TargetFrameworkCoreModel.BusTaskSchedule source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static BusTaskScheduleDTO ToDtoWithRelated(this TargetFrameworkCoreModel.BusTaskSchedule source, int level)
        {
            if (source == null)
              return null;

            var target = new BusTaskScheduleDTO();

            // Properties
            target.BusTaskScheduleID = source.BusTaskScheduleID;
            target.BusTaskID = source.BusTaskID;
            target.IntervalInMinutes = source.IntervalInMinutes;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.BusTaskVersionNumber = source.BusTaskVersionNumber;

            // Navigation Properties
            if (level > 0) {
              target.BusTask = source.BusTask.ToDtoWithRelated(level - 1);
              target.BusTaskScheduleProcessLogs = source.BusTaskScheduleProcessLogs.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static TargetFrameworkCoreModel.BusTaskSchedule ToEntity(this BusTaskScheduleDTO source)
        {
            if (source == null)
              return null;

            var target = new TargetFrameworkCoreModel.BusTaskSchedule();

            // Properties
            target.BusTaskScheduleID = source.BusTaskScheduleID;
            target.BusTaskID = source.BusTaskID;
            target.IntervalInMinutes = source.IntervalInMinutes;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.BusTaskVersionNumber = source.BusTaskVersionNumber;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<BusTaskScheduleDTO> ToDtos(this IEnumerable<TargetFrameworkCoreModel.BusTaskSchedule> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<BusTaskScheduleDTO> ToDtosWithRelated(this IEnumerable<TargetFrameworkCoreModel.BusTaskSchedule> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<TargetFrameworkCoreModel.BusTaskSchedule> ToEntities(this IEnumerable<BusTaskScheduleDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(TargetFrameworkCoreModel.BusTaskSchedule source, BusTaskScheduleDTO target);

        static partial void OnEntityCreating(BusTaskScheduleDTO source, TargetFrameworkCoreModel.BusTaskSchedule target);

    }

}
