//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Runtime.Serialization;

namespace Bec.TargetFramework.Entities
{

    [DataContractAttribute(IsReference=true)]
    [System.Serializable]
    public partial class SmsTransactionDTO
    {
        #region Constructors
  
        public SmsTransactionDTO() {
        }

        public SmsTransactionDTO(global::System.Guid smsTransactionID, global::System.Nullable<System.Guid> addressID, global::System.Nullable<int> price, string reference, bool isActive, bool isDeleted, global::System.Nullable<int> tenureTypeID, global::System.Guid organisationID, global::System.DateTime createdOn, long rowVersion, global::System.Nullable<System.Guid> userAccountOrganisationID, AddressDTO address, OrganisationDTO organisation, List<SmsUserAccountOrganisationTransactionDTO> smsUserAccountOrganisationTransactions, UserAccountOrganisationDTO userAccountOrganisation) {

          this.SmsTransactionID = smsTransactionID;
          this.AddressID = addressID;
          this.Price = price;
          this.Reference = reference;
          this.IsActive = isActive;
          this.IsDeleted = isDeleted;
          this.TenureTypeID = tenureTypeID;
          this.OrganisationID = organisationID;
          this.CreatedOn = createdOn;
          this.RowVersion = rowVersion;
          this.UserAccountOrganisationID = userAccountOrganisationID;
          this.Address = address;
          this.Organisation = organisation;
          this.SmsUserAccountOrganisationTransactions = smsUserAccountOrganisationTransactions;
          this.UserAccountOrganisation = userAccountOrganisation;
        }

        #endregion

        #region Properties

        [DataMember]
        public global::System.Guid SmsTransactionID { get; set; }

        [DataMember]
        public global::System.Nullable<System.Guid> AddressID { get; set; }

        [DataMember]
        public global::System.Nullable<int> Price { get; set; }

        [DataMember]
        public string Reference { get; set; }

        [DataMember]
        public bool IsActive { get; set; }

        [DataMember]
        public bool IsDeleted { get; set; }

        [DataMember]
        public global::System.Nullable<int> TenureTypeID { get; set; }

        [DataMember]
        public global::System.Guid OrganisationID { get; set; }

        [DataMember]
        public global::System.DateTime CreatedOn { get; set; }

        [DataMember]
        public long RowVersion { get; set; }

        [DataMember]
        public global::System.Nullable<System.Guid> UserAccountOrganisationID { get; set; }

        #endregion

        #region Navigation Properties

        [DataMember]
        public AddressDTO Address { get; set; }

        [DataMember]
        public OrganisationDTO Organisation { get; set; }

        [DataMember]
        public List<SmsUserAccountOrganisationTransactionDTO> SmsUserAccountOrganisationTransactions { get; set; }

        [DataMember]
        public UserAccountOrganisationDTO UserAccountOrganisation { get; set; }

        #endregion
    }

}
