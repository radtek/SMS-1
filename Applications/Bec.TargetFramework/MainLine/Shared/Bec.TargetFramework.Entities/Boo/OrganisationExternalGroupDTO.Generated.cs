//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 6/10/2014 2:36:07 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Runtime.Serialization;

namespace Bec.TargetFramework.Entities.DTO
{

    [DataContractAttribute(IsReference=true)]
    public partial class OrganisationExternalGroupDTO
    {
        #region Constructors
  
        public OrganisationExternalGroupDTO() {
        }

        public OrganisationExternalGroupDTO(global::System.Guid organisationExternalGroupID, string name, global::System.Guid organisationID, global::System.Guid externalGroupTemplateID, global::System.Nullable<System.Guid> parentOrganisationExternalGroupID, global::System.Guid parentRootExternalGroupID, bool isManaged, int externalGroupTypeID, global::System.Nullable<int> externalGroupSubTypeID, global::System.Nullable<int> externalGroupCategoryID, bool isActive, bool isDeleted, List<AttachmentDetailGroupDTO> attachmentDetailGroups, List<RepositoryStructureGroupDTO> repositoryStructureGroups, List<OrganisationExternalGroupOrganisationExternalRoleDTO> organisationExternalGroupOrganisationExternalRoles) {

          this.OrganisationExternalGroupID = organisationExternalGroupID;
          this.Name = name;
          this.OrganisationID = organisationID;
          this.ExternalGroupTemplateID = externalGroupTemplateID;
          this.ParentOrganisationExternalGroupID = parentOrganisationExternalGroupID;
          this.ParentRootExternalGroupID = parentRootExternalGroupID;
          this.IsManaged = isManaged;
          this.ExternalGroupTypeID = externalGroupTypeID;
          this.ExternalGroupSubTypeID = externalGroupSubTypeID;
          this.ExternalGroupCategoryID = externalGroupCategoryID;
          this.IsActive = isActive;
          this.IsDeleted = isDeleted;
          this.AttachmentDetailGroups = attachmentDetailGroups;
          this.RepositoryStructureGroups = repositoryStructureGroups;
          this.OrganisationExternalGroupOrganisationExternalRoles = organisationExternalGroupOrganisationExternalRoles;
        }

        #endregion

        #region Properties

        [DataMember]
        public global::System.Guid OrganisationExternalGroupID { get; set; }

        [DataMember]
        public string Name { get; set; }

        [DataMember]
        public global::System.Guid OrganisationID { get; set; }

        [DataMember]
        public global::System.Guid ExternalGroupTemplateID { get; set; }

        [DataMember]
        public global::System.Nullable<System.Guid> ParentOrganisationExternalGroupID { get; set; }

        [DataMember]
        public global::System.Guid ParentRootExternalGroupID { get; set; }

        [DataMember]
        public bool IsManaged { get; set; }

        [DataMember]
        public int ExternalGroupTypeID { get; set; }

        [DataMember]
        public global::System.Nullable<int> ExternalGroupSubTypeID { get; set; }

        [DataMember]
        public global::System.Nullable<int> ExternalGroupCategoryID { get; set; }

        [DataMember]
        public bool IsActive { get; set; }

        [DataMember]
        public bool IsDeleted { get; set; }

        #endregion

        #region Navigation Properties

        [DataMember]
        public List<AttachmentDetailGroupDTO> AttachmentDetailGroups { get; set; }

        [DataMember]
        public List<RepositoryStructureGroupDTO> RepositoryStructureGroups { get; set; }

        [DataMember]
        public List<OrganisationExternalGroupOrganisationExternalRoleDTO> OrganisationExternalGroupOrganisationExternalRoles { get; set; }

        #endregion
    }

}
