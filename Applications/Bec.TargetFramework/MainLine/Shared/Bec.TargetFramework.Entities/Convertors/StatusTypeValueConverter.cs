//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 08/04/2015 17:09:58
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class StatusTypeValueConverter
    {

        public static StatusTypeValueDTO ToDto(this Bec.TargetFramework.Data.StatusTypeValue source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static StatusTypeValueDTO ToDtoWithRelated(this Bec.TargetFramework.Data.StatusTypeValue source, int level)
        {
            if (source == null)
              return null;

            var target = new StatusTypeValueDTO();

            // Properties
            target.StatusTypeValueID = source.StatusTypeValueID;
            target.StatusTypeID = source.StatusTypeID;
            target.StatusTypeVersionNumber = source.StatusTypeVersionNumber;
            target.Name = source.Name;
            target.Description = source.Description;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;

            // Navigation Properties
            if (level > 0) {
              target.DefaultOrganisationStatusTypes = source.DefaultOrganisationStatusTypes.ToDtosWithRelated(level - 1);
              target.StatusTypeStructures = source.StatusTypeStructures.ToDtosWithRelated(level - 1);
              target.UserAccountOrganisationStatus = source.UserAccountOrganisationStatus.ToDtosWithRelated(level - 1);
              target.OrganisationStatus = source.OrganisationStatus.ToDtosWithRelated(level - 1);
              target.StatusType = source.StatusType.ToDtoWithRelated(level - 1);
              target.InvoiceProcessLogs = source.InvoiceProcessLogs.ToDtosWithRelated(level - 1);
              target.TransactionOrderProcessLogs = source.TransactionOrderProcessLogs.ToDtosWithRelated(level - 1);
              target.PlanSubscriptionBillingPeriods = source.PlanSubscriptionBillingPeriods.ToDtosWithRelated(level - 1);
              target.PlanSubscriptionProcessLogs = source.PlanSubscriptionProcessLogs.ToDtosWithRelated(level - 1);
              target.OrganisationFinancialDetails = source.OrganisationFinancialDetails.ToDtosWithRelated(level - 1);
              target.OrganisationPaymentMethods = source.OrganisationPaymentMethods.ToDtosWithRelated(level - 1);
              target.OrganisationDirectDebitMandateProcessLogs = source.OrganisationDirectDebitMandateProcessLogs.ToDtosWithRelated(level - 1);
              target.StsInviteProcessLogs = source.StsInviteProcessLogs.ToDtosWithRelated(level - 1);
              target.StsSearchProcessLogs = source.StsSearchProcessLogs.ToDtosWithRelated(level - 1);
              target.StsSearchRelations = source.StsSearchRelations.ToDtosWithRelated(level - 1);
              target.ProductPurchaseProcessLogs = source.ProductPurchaseProcessLogs.ToDtosWithRelated(level - 1);
              target.ServiceInterfaceProcessLogs = source.ServiceInterfaceProcessLogs.ToDtosWithRelated(level - 1);
              target.BusTaskScheduleProcessLogs = source.BusTaskScheduleProcessLogs.ToDtosWithRelated(level - 1);
              target.ProductPurchaseBusTaskProcessLogs = source.ProductPurchaseBusTaskProcessLogs.ToDtosWithRelated(level - 1);
              target.BusMessageProcessLogs = source.BusMessageProcessLogs.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.StatusTypeValue ToEntity(this StatusTypeValueDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.StatusTypeValue();

            // Properties
            target.StatusTypeValueID = source.StatusTypeValueID;
            target.StatusTypeID = source.StatusTypeID;
            target.StatusTypeVersionNumber = source.StatusTypeVersionNumber;
            target.Name = source.Name;
            target.Description = source.Description;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<StatusTypeValueDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.StatusTypeValue> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<StatusTypeValueDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.StatusTypeValue> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.StatusTypeValue> ToEntities(this IEnumerable<StatusTypeValueDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.StatusTypeValue source, StatusTypeValueDTO target);

        static partial void OnEntityCreating(StatusTypeValueDTO source, Bec.TargetFramework.Data.StatusTypeValue target);

    }

}
