//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 13/04/2015 17:29:39
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class PlanSubscriptionBillingProcessLogConverter
    {

        public static PlanSubscriptionBillingProcessLogDTO ToDto(this Bec.TargetFramework.Data.PlanSubscriptionBillingProcessLog source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static PlanSubscriptionBillingProcessLogDTO ToDtoWithRelated(this Bec.TargetFramework.Data.PlanSubscriptionBillingProcessLog source, int level)
        {
            if (source == null)
              return null;

            var target = new PlanSubscriptionBillingProcessLogDTO();

            // Properties
            target.BillingPeriodNumber = source.BillingPeriodNumber;
            target.PlanSubscriptionID = source.PlanSubscriptionID;
            target.PlanSubscriptionVersionNumber = source.PlanSubscriptionVersionNumber;
            target.CreatedOn = source.CreatedOn;
            target.PlanSubscriptionBillingPeriodID = source.PlanSubscriptionBillingPeriodID;
            target.StartDate = source.StartDate;
            target.EndDate = source.EndDate;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.IsClosed = source.IsClosed;
            target.StatusTypeID = source.StatusTypeID;
            target.StatusTypeVersionNumber = source.StatusTypeVersionNumber;
            target.StatusTypeValueID = source.StatusTypeValueID;
            target.ClosedOn = source.ClosedOn;

            // Navigation Properties
            if (level > 0) {
              target.PlanSubscription = source.PlanSubscription.ToDtoWithRelated(level - 1);
              target.StatusType = source.StatusType.ToDtoWithRelated(level - 1);
              target.StatusTypeValue = source.StatusTypeValue.ToDtoWithRelated(level - 1);
              target.PlanSubscriptionPeriods = source.PlanSubscriptionPeriods.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.PlanSubscriptionBillingProcessLog ToEntity(this PlanSubscriptionBillingProcessLogDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.PlanSubscriptionBillingProcessLog();

            // Properties
            target.BillingPeriodNumber = source.BillingPeriodNumber;
            target.PlanSubscriptionID = source.PlanSubscriptionID;
            target.PlanSubscriptionVersionNumber = source.PlanSubscriptionVersionNumber;
            target.CreatedOn = source.CreatedOn;
            target.PlanSubscriptionBillingPeriodID = source.PlanSubscriptionBillingPeriodID;
            target.StartDate = source.StartDate;
            target.EndDate = source.EndDate;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.IsClosed = source.IsClosed;
            target.StatusTypeID = source.StatusTypeID;
            target.StatusTypeVersionNumber = source.StatusTypeVersionNumber;
            target.StatusTypeValueID = source.StatusTypeValueID;
            target.ClosedOn = source.ClosedOn;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<PlanSubscriptionBillingProcessLogDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.PlanSubscriptionBillingProcessLog> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<PlanSubscriptionBillingProcessLogDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.PlanSubscriptionBillingProcessLog> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.PlanSubscriptionBillingProcessLog> ToEntities(this IEnumerable<PlanSubscriptionBillingProcessLogDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.PlanSubscriptionBillingProcessLog source, PlanSubscriptionBillingProcessLogDTO target);

        static partial void OnEntityCreating(PlanSubscriptionBillingProcessLogDTO source, Bec.TargetFramework.Data.PlanSubscriptionBillingProcessLog target);

    }

}
