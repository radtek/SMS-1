//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 3/27/2015 9:57:20 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class DeductionTemplateConverter
    {

        public static DeductionTemplateDTO ToDto(this Bec.TargetFramework.Data.DeductionTemplate source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static DeductionTemplateDTO ToDtoWithRelated(this Bec.TargetFramework.Data.DeductionTemplate source, int level)
        {
            if (source == null)
              return null;

            var target = new DeductionTemplateDTO();

            // Properties
            target.DeductionTemplateID = source.DeductionTemplateID;
            target.DeductionTypeID = source.DeductionTypeID;
            target.DeductionSubTypeID = source.DeductionSubTypeID;
            target.DeductionCategoryID = source.DeductionCategoryID;
            target.DeductionSubCategoryID = source.DeductionSubCategoryID;
            target.Name = source.Name;
            target.Description = source.Description;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.IsPercentageBased = source.IsPercentageBased;
            target.DeductionTemplateVersionNumber = source.DeductionTemplateVersionNumber;
            target.OrganisationTypeID = source.OrganisationTypeID;
            target.UserTypeID = source.UserTypeID;
            target.IsTierDeduction = source.IsTierDeduction;
            target.IsCheckoutDeduction = source.IsCheckoutDeduction;
            target.ParentID = source.ParentID;

            // Navigation Properties
            if (level > 0) {
              target.CountryDeductionTemplates = source.CountryDeductionTemplates.ToDtosWithRelated(level - 1);
              target.ProductDeductionTemplates = source.ProductDeductionTemplates.ToDtosWithRelated(level - 1);
              target.Deductions = source.Deductions.ToDtosWithRelated(level - 1);
              target.OrganisationType = source.OrganisationType.ToDtoWithRelated(level - 1);
              target.UserType = source.UserType.ToDtoWithRelated(level - 1);
              target.ProductTemplates = source.ProductTemplates.ToDtosWithRelated(level - 1);
              target.ComponentTierTemplates = source.ComponentTierTemplates.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.DeductionTemplate ToEntity(this DeductionTemplateDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.DeductionTemplate();

            // Properties
            target.DeductionTemplateID = source.DeductionTemplateID;
            target.DeductionTypeID = source.DeductionTypeID;
            target.DeductionSubTypeID = source.DeductionSubTypeID;
            target.DeductionCategoryID = source.DeductionCategoryID;
            target.DeductionSubCategoryID = source.DeductionSubCategoryID;
            target.Name = source.Name;
            target.Description = source.Description;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.IsPercentageBased = source.IsPercentageBased;
            target.DeductionTemplateVersionNumber = source.DeductionTemplateVersionNumber;
            target.OrganisationTypeID = source.OrganisationTypeID;
            target.UserTypeID = source.UserTypeID;
            target.IsTierDeduction = source.IsTierDeduction;
            target.IsCheckoutDeduction = source.IsCheckoutDeduction;
            target.ParentID = source.ParentID;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<DeductionTemplateDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.DeductionTemplate> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<DeductionTemplateDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.DeductionTemplate> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.DeductionTemplate> ToEntities(this IEnumerable<DeductionTemplateDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.DeductionTemplate source, DeductionTemplateDTO target);

        static partial void OnEntityCreating(DeductionTemplateDTO source, Bec.TargetFramework.Data.DeductionTemplate target);

    }

}
