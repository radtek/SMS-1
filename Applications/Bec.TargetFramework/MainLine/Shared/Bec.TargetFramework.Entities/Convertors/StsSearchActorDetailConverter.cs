//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 2/12/2015 3:31:07 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class StsSearchActorDetailConverter
    {

        public static StsSearchActorDetailDTO ToDto(this Bec.TargetFramework.Data.StsSearchActorDetail source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static StsSearchActorDetailDTO ToDtoWithRelated(this Bec.TargetFramework.Data.StsSearchActorDetail source, int level)
        {
            if (source == null)
              return null;

            var target = new StsSearchActorDetailDTO();

            // Properties
            target.StsSearchActorDetailID = source.StsSearchActorDetailID;
            target.StsSearchActorID = source.StsSearchActorID;
            target.IsBuyingWithAMortage = source.IsBuyingWithAMortage;
            target.LenderID = source.LenderID;
            target.MortgageApplicationNumber = source.MortgageApplicationNumber;
            target.IsUsingAMortgageBroker = source.IsUsingAMortgageBroker;
            target.MortgageBrokerContactID = source.MortgageBrokerContactID;
            target.MortgageAmount = source.MortgageAmount;
            target.HasSeenMortgageBrokerFaceToFace = source.HasSeenMortgageBrokerFaceToFace;
            target.DateSeenMortgageBroker = source.DateSeenMortgageBroker;
            target.PlaceSeenMortgageBrokerTypeID = source.PlaceSeenMortgageBrokerTypeID;
            target.RegisteredProprietorTypeID = source.RegisteredProprietorTypeID;
            target.RegisteredProprietorContactID = source.RegisteredProprietorContactID;
            target.SellingUnderAuthorityTypeID = source.SellingUnderAuthorityTypeID;

            // Navigation Properties
            if (level > 0) {
              target.StsSearchActor = source.StsSearchActor.ToDtoWithRelated(level - 1);
              target.Contact_RegisteredProprietorContactID = source.Contact_RegisteredProprietorContactID.ToDtoWithRelated(level - 1);
              target.Contact_MortgageBrokerContactID = source.Contact_MortgageBrokerContactID.ToDtoWithRelated(level - 1);
              target.StsSearchActorDetailDeposits = source.StsSearchActorDetailDeposits.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.StsSearchActorDetail ToEntity(this StsSearchActorDetailDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.StsSearchActorDetail();

            // Properties
            target.StsSearchActorDetailID = source.StsSearchActorDetailID;
            target.StsSearchActorID = source.StsSearchActorID;
            target.IsBuyingWithAMortage = source.IsBuyingWithAMortage;
            target.LenderID = source.LenderID;
            target.MortgageApplicationNumber = source.MortgageApplicationNumber;
            target.IsUsingAMortgageBroker = source.IsUsingAMortgageBroker;
            target.MortgageBrokerContactID = source.MortgageBrokerContactID;
            target.MortgageAmount = source.MortgageAmount;
            target.HasSeenMortgageBrokerFaceToFace = source.HasSeenMortgageBrokerFaceToFace;
            target.DateSeenMortgageBroker = source.DateSeenMortgageBroker;
            target.PlaceSeenMortgageBrokerTypeID = source.PlaceSeenMortgageBrokerTypeID;
            target.RegisteredProprietorTypeID = source.RegisteredProprietorTypeID;
            target.RegisteredProprietorContactID = source.RegisteredProprietorContactID;
            target.SellingUnderAuthorityTypeID = source.SellingUnderAuthorityTypeID;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<StsSearchActorDetailDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.StsSearchActorDetail> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<StsSearchActorDetailDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.StsSearchActorDetail> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.StsSearchActorDetail> ToEntities(this IEnumerable<StsSearchActorDetailDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.StsSearchActorDetail source, StsSearchActorDetailDTO target);

        static partial void OnEntityCreating(StsSearchActorDetailDTO source, Bec.TargetFramework.Data.StsSearchActorDetail target);

    }

}
