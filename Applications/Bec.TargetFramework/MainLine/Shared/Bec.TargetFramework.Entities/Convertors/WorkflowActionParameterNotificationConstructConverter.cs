//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 13/04/2015 17:29:39
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class WorkflowActionParameterNotificationConstructConverter
    {

        public static WorkflowActionParameterNotificationConstructDTO ToDto(this Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstruct source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static WorkflowActionParameterNotificationConstructDTO ToDtoWithRelated(this Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstruct source, int level)
        {
            if (source == null)
              return null;

            var target = new WorkflowActionParameterNotificationConstructDTO();

            // Properties
            target.WorkflowActionParameterNotificationConstructID = source.WorkflowActionParameterNotificationConstructID;
            target.WorkflowActionParameterNotificationConstructTemplateID = source.WorkflowActionParameterNotificationConstructTemplateID;
            target.WorkflowActionID = source.WorkflowActionID;
            target.WorkflowParameterID = source.WorkflowParameterID;
            target.WorkflowID = source.WorkflowID;
            target.WorkflowVersionNumber = source.WorkflowVersionNumber;
            target.NotificationConstructID = source.NotificationConstructID;
            target.OrganisationTypeID = source.OrganisationTypeID;
            target.UserTypeID = source.UserTypeID;
            target.Order = source.Order;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.WorkflowActionParameterNotificationConstructVersionNumber = source.WorkflowActionParameterNotificationConstructVersionNumber;
            target.NotificationConstructVersionNumber = source.NotificationConstructVersionNumber;
            target.WorkflowActionParameterNotificationConstructTemplateVersion = source.WorkflowActionParameterNotificationConstructTemplateVersion;

            // Navigation Properties
            if (level > 0) {
              target.NotificationConstruct = source.NotificationConstruct.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstruct ToEntity(this WorkflowActionParameterNotificationConstructDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstruct();

            // Properties
            target.WorkflowActionParameterNotificationConstructID = source.WorkflowActionParameterNotificationConstructID;
            target.WorkflowActionParameterNotificationConstructTemplateID = source.WorkflowActionParameterNotificationConstructTemplateID;
            target.WorkflowActionID = source.WorkflowActionID;
            target.WorkflowParameterID = source.WorkflowParameterID;
            target.WorkflowID = source.WorkflowID;
            target.WorkflowVersionNumber = source.WorkflowVersionNumber;
            target.NotificationConstructID = source.NotificationConstructID;
            target.OrganisationTypeID = source.OrganisationTypeID;
            target.UserTypeID = source.UserTypeID;
            target.Order = source.Order;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.WorkflowActionParameterNotificationConstructVersionNumber = source.WorkflowActionParameterNotificationConstructVersionNumber;
            target.NotificationConstructVersionNumber = source.NotificationConstructVersionNumber;
            target.WorkflowActionParameterNotificationConstructTemplateVersion = source.WorkflowActionParameterNotificationConstructTemplateVersion;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<WorkflowActionParameterNotificationConstructDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstruct> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<WorkflowActionParameterNotificationConstructDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstruct> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstruct> ToEntities(this IEnumerable<WorkflowActionParameterNotificationConstructDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstruct source, WorkflowActionParameterNotificationConstructDTO target);

        static partial void OnEntityCreating(WorkflowActionParameterNotificationConstructDTO source, Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstruct target);

    }

}
