//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 13/04/2015 17:29:39
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class CountryCodeConverter
    {

        public static CountryCodeDTO ToDto(this Bec.TargetFramework.Data.CountryCode source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static CountryCodeDTO ToDtoWithRelated(this Bec.TargetFramework.Data.CountryCode source, int level)
        {
            if (source == null)
              return null;

            var target = new CountryCodeDTO();

            // Properties
            target.CountryCode1 = source.CountryCode1;
            target.CountryName = source.CountryName;
            target.CurrencyCode = source.CurrencyCode;

            // Navigation Properties
            if (level > 0) {
              target.PlanTemplates = source.PlanTemplates.ToDtosWithRelated(level - 1);
              target.InvoiceLineItems = source.InvoiceLineItems.ToDtosWithRelated(level - 1);
              target.Plans = source.Plans.ToDtosWithRelated(level - 1);
              target.Invoices = source.Invoices.ToDtosWithRelated(level - 1);
              target.PlanSubscriptions = source.PlanSubscriptions.ToDtosWithRelated(level - 1);
              target.CountryDeductions = source.CountryDeductions.ToDtosWithRelated(level - 1);
              target.CountryDeductionTemplates = source.CountryDeductionTemplates.ToDtosWithRelated(level - 1);
              target.CurrencyCode1 = source.CurrencyCode1.ToDtoWithRelated(level - 1);
              target.ContactPhones = source.ContactPhones.ToDtosWithRelated(level - 1);
              target.Addresses = source.Addresses.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.CountryCode ToEntity(this CountryCodeDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.CountryCode();

            // Properties
            target.CountryCode1 = source.CountryCode1;
            target.CountryName = source.CountryName;
            target.CurrencyCode = source.CurrencyCode;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<CountryCodeDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.CountryCode> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<CountryCodeDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.CountryCode> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.CountryCode> ToEntities(this IEnumerable<CountryCodeDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.CountryCode source, CountryCodeDTO target);

        static partial void OnEntityCreating(CountryCodeDTO source, Bec.TargetFramework.Data.CountryCode target);

    }

}
