//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 07/04/2015 09:50:53
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class WorkflowDecisionErrorTemplateConverter
    {

        public static WorkflowDecisionErrorTemplateDTO ToDto(this Bec.TargetFramework.Data.WorkflowDecisionErrorTemplate source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static WorkflowDecisionErrorTemplateDTO ToDtoWithRelated(this Bec.TargetFramework.Data.WorkflowDecisionErrorTemplate source, int level)
        {
            if (source == null)
              return null;

            var target = new WorkflowDecisionErrorTemplateDTO();

            // Properties
            target.WorkflowDecisionTemplateID = source.WorkflowDecisionTemplateID;
            target.WorkflowTemplateID = source.WorkflowTemplateID;
            target.WorkflowTemplateVersionNumber = source.WorkflowTemplateVersionNumber;
            target.NextWorkflowActionTemplateID = source.NextWorkflowActionTemplateID;
            target.NextWorkflowDecisionTemplateID = source.NextWorkflowDecisionTemplateID;
            target.WorkflowDecisionErrorTemplateID = source.WorkflowDecisionErrorTemplateID;

            // Navigation Properties
            if (level > 0) {
              target.WorkflowActionTemplate = source.WorkflowActionTemplate.ToDtoWithRelated(level - 1);
              target.WorkflowDecisionTemplate_WorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber = source.WorkflowDecisionTemplate_WorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber.ToDtoWithRelated(level - 1);
              target.WorkflowDecisionTemplate_NextWorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber = source.WorkflowDecisionTemplate_NextWorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.WorkflowDecisionErrorTemplate ToEntity(this WorkflowDecisionErrorTemplateDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.WorkflowDecisionErrorTemplate();

            // Properties
            target.WorkflowDecisionTemplateID = source.WorkflowDecisionTemplateID;
            target.WorkflowTemplateID = source.WorkflowTemplateID;
            target.WorkflowTemplateVersionNumber = source.WorkflowTemplateVersionNumber;
            target.NextWorkflowActionTemplateID = source.NextWorkflowActionTemplateID;
            target.NextWorkflowDecisionTemplateID = source.NextWorkflowDecisionTemplateID;
            target.WorkflowDecisionErrorTemplateID = source.WorkflowDecisionErrorTemplateID;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<WorkflowDecisionErrorTemplateDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.WorkflowDecisionErrorTemplate> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<WorkflowDecisionErrorTemplateDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.WorkflowDecisionErrorTemplate> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.WorkflowDecisionErrorTemplate> ToEntities(this IEnumerable<WorkflowDecisionErrorTemplateDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.WorkflowDecisionErrorTemplate source, WorkflowDecisionErrorTemplateDTO target);

        static partial void OnEntityCreating(WorkflowDecisionErrorTemplateDTO source, Bec.TargetFramework.Data.WorkflowDecisionErrorTemplate target);

    }

}
