//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 13/04/2015 17:29:39
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class ServiceDefinitionConverter
    {

        public static ServiceDefinitionDTO ToDto(this Bec.TargetFramework.Data.ServiceDefinition source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static ServiceDefinitionDTO ToDtoWithRelated(this Bec.TargetFramework.Data.ServiceDefinition source, int level)
        {
            if (source == null)
              return null;

            var target = new ServiceDefinitionDTO();

            // Properties
            target.ServiceDefinitionID = source.ServiceDefinitionID;
            target.ServiceDefinitionTypeID = source.ServiceDefinitionTypeID;
            target.ServiceDefinitionCategoryID = source.ServiceDefinitionCategoryID;
            target.Name = source.Name;
            target.Description = source.Description;
            target.ServiceInterfaceID = source.ServiceInterfaceID;
            target.IsPollingService = source.IsPollingService;
            target.NumberOfRetriesPerCall = source.NumberOfRetriesPerCall;
            target.ServiceEngineObjectName = source.ServiceEngineObjectName;
            target.ServiceDefinitionObjectName = source.ServiceDefinitionObjectName;
            target.ServiceMutatorObjectName = source.ServiceMutatorObjectName;
            target.RetryPeriodPerCallInMinutes = source.RetryPeriodPerCallInMinutes;
            target.RetryFailedCalls = source.RetryFailedCalls;

            // Navigation Properties
            if (level > 0) {
              target.ServiceDefinitionDetails = source.ServiceDefinitionDetails.ToDtosWithRelated(level - 1);
              target.ServiceInterface = source.ServiceInterface.ToDtoWithRelated(level - 1);
              target.ServiceInterfaceProcessLogs = source.ServiceInterfaceProcessLogs.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.ServiceDefinition ToEntity(this ServiceDefinitionDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.ServiceDefinition();

            // Properties
            target.ServiceDefinitionID = source.ServiceDefinitionID;
            target.ServiceDefinitionTypeID = source.ServiceDefinitionTypeID;
            target.ServiceDefinitionCategoryID = source.ServiceDefinitionCategoryID;
            target.Name = source.Name;
            target.Description = source.Description;
            target.ServiceInterfaceID = source.ServiceInterfaceID;
            target.IsPollingService = source.IsPollingService;
            target.NumberOfRetriesPerCall = source.NumberOfRetriesPerCall;
            target.ServiceEngineObjectName = source.ServiceEngineObjectName;
            target.ServiceDefinitionObjectName = source.ServiceDefinitionObjectName;
            target.ServiceMutatorObjectName = source.ServiceMutatorObjectName;
            target.RetryPeriodPerCallInMinutes = source.RetryPeriodPerCallInMinutes;
            target.RetryFailedCalls = source.RetryFailedCalls;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<ServiceDefinitionDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.ServiceDefinition> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<ServiceDefinitionDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.ServiceDefinition> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.ServiceDefinition> ToEntities(this IEnumerable<ServiceDefinitionDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.ServiceDefinition source, ServiceDefinitionDTO target);

        static partial void OnEntityCreating(ServiceDefinitionDTO source, Bec.TargetFramework.Data.ServiceDefinition target);

    }

}
