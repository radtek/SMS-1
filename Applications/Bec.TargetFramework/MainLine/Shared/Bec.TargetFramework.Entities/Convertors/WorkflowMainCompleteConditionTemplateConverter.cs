//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 18/03/2015 19:00:46
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class WorkflowMainCompleteConditionTemplateConverter
    {

        public static WorkflowMainCompleteConditionTemplateDTO ToDto(this Bec.TargetFramework.Data.WorkflowMainCompleteConditionTemplate source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static WorkflowMainCompleteConditionTemplateDTO ToDtoWithRelated(this Bec.TargetFramework.Data.WorkflowMainCompleteConditionTemplate source, int level)
        {
            if (source == null)
              return null;

            var target = new WorkflowMainCompleteConditionTemplateDTO();

            // Properties
            target.WorkflowTemplateID = source.WorkflowTemplateID;
            target.WorkflowTemplateVersionNumber = source.WorkflowTemplateVersionNumber;
            target.WorkflowConditionTemplateID = source.WorkflowConditionTemplateID;

            // Navigation Properties
            if (level > 0) {
              target.WorkflowConditionTemplate = source.WorkflowConditionTemplate.ToDtoWithRelated(level - 1);
              target.WorkflowTemplate = source.WorkflowTemplate.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.WorkflowMainCompleteConditionTemplate ToEntity(this WorkflowMainCompleteConditionTemplateDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.WorkflowMainCompleteConditionTemplate();

            // Properties
            target.WorkflowTemplateID = source.WorkflowTemplateID;
            target.WorkflowTemplateVersionNumber = source.WorkflowTemplateVersionNumber;
            target.WorkflowConditionTemplateID = source.WorkflowConditionTemplateID;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<WorkflowMainCompleteConditionTemplateDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.WorkflowMainCompleteConditionTemplate> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<WorkflowMainCompleteConditionTemplateDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.WorkflowMainCompleteConditionTemplate> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.WorkflowMainCompleteConditionTemplate> ToEntities(this IEnumerable<WorkflowMainCompleteConditionTemplateDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.WorkflowMainCompleteConditionTemplate source, WorkflowMainCompleteConditionTemplateDTO target);

        static partial void OnEntityCreating(WorkflowMainCompleteConditionTemplateDTO source, Bec.TargetFramework.Data.WorkflowMainCompleteConditionTemplate target);

    }

}
