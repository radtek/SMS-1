//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 08/04/2015 17:09:58
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class ContactNameConverter
    {

        public static ContactNameDTO ToDto(this Bec.TargetFramework.Data.ContactName source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static ContactNameDTO ToDtoWithRelated(this Bec.TargetFramework.Data.ContactName source, int level)
        {
            if (source == null)
              return null;

            var target = new ContactNameDTO();

            // Properties
            target.ContactNameID = source.ContactNameID;
            target.ContactID = source.ContactID;
            target.SalutationTypeID = source.SalutationTypeID;
            target.FirstName = source.FirstName;
            target.MiddleName = source.MiddleName;
            target.LastName = source.LastName;
            target.NickName = source.NickName;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;

            // Navigation Properties
            if (level > 0) {
              target.Contact = source.Contact.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.ContactName ToEntity(this ContactNameDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.ContactName();

            // Properties
            target.ContactNameID = source.ContactNameID;
            target.ContactID = source.ContactID;
            target.SalutationTypeID = source.SalutationTypeID;
            target.FirstName = source.FirstName;
            target.MiddleName = source.MiddleName;
            target.LastName = source.LastName;
            target.NickName = source.NickName;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<ContactNameDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.ContactName> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<ContactNameDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.ContactName> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.ContactName> ToEntities(this IEnumerable<ContactNameDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.ContactName source, ContactNameDTO target);

        static partial void OnEntityCreating(ContactNameDTO source, Bec.TargetFramework.Data.ContactName target);

    }

}
