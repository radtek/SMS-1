//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 13/04/2015 17:29:39
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class WorkflowActionParameterNotificationConstructTemplateConverter
    {

        public static WorkflowActionParameterNotificationConstructTemplateDTO ToDto(this Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstructTemplate source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static WorkflowActionParameterNotificationConstructTemplateDTO ToDtoWithRelated(this Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstructTemplate source, int level)
        {
            if (source == null)
              return null;

            var target = new WorkflowActionParameterNotificationConstructTemplateDTO();

            // Properties
            target.WorkflowActionTemplateID = source.WorkflowActionTemplateID;
            target.WorkflowParameterTemplateID = source.WorkflowParameterTemplateID;
            target.WorkflowTemplateID = source.WorkflowTemplateID;
            target.WorkflowTemplateVersionNumber = source.WorkflowTemplateVersionNumber;
            target.NotificationConstructTemplateID = source.NotificationConstructTemplateID;
            target.OrganisationTypeID = source.OrganisationTypeID;
            target.UserTypeID = source.UserTypeID;
            target.Order = source.Order;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.WorkflowActionParameterNotificationConstructTemplateID = source.WorkflowActionParameterNotificationConstructTemplateID;
            target.NotificationConstructTemplateVersionNumber = source.NotificationConstructTemplateVersionNumber;
            target.WorkflowActionParameterNotificationConstructTemplateVersion = source.WorkflowActionParameterNotificationConstructTemplateVersion;

            // Navigation Properties
            if (level > 0) {
              target.WorkflowActionParameterTemplate = source.WorkflowActionParameterTemplate.ToDtoWithRelated(level - 1);
              target.NotificationConstructTemplate = source.NotificationConstructTemplate.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstructTemplate ToEntity(this WorkflowActionParameterNotificationConstructTemplateDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstructTemplate();

            // Properties
            target.WorkflowActionTemplateID = source.WorkflowActionTemplateID;
            target.WorkflowParameterTemplateID = source.WorkflowParameterTemplateID;
            target.WorkflowTemplateID = source.WorkflowTemplateID;
            target.WorkflowTemplateVersionNumber = source.WorkflowTemplateVersionNumber;
            target.NotificationConstructTemplateID = source.NotificationConstructTemplateID;
            target.OrganisationTypeID = source.OrganisationTypeID;
            target.UserTypeID = source.UserTypeID;
            target.Order = source.Order;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.WorkflowActionParameterNotificationConstructTemplateID = source.WorkflowActionParameterNotificationConstructTemplateID;
            target.NotificationConstructTemplateVersionNumber = source.NotificationConstructTemplateVersionNumber;
            target.WorkflowActionParameterNotificationConstructTemplateVersion = source.WorkflowActionParameterNotificationConstructTemplateVersion;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<WorkflowActionParameterNotificationConstructTemplateDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstructTemplate> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<WorkflowActionParameterNotificationConstructTemplateDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstructTemplate> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstructTemplate> ToEntities(this IEnumerable<WorkflowActionParameterNotificationConstructTemplateDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstructTemplate source, WorkflowActionParameterNotificationConstructTemplateDTO target);

        static partial void OnEntityCreating(WorkflowActionParameterNotificationConstructTemplateDTO source, Bec.TargetFramework.Data.WorkflowActionParameterNotificationConstructTemplate target);

    }

}
