//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 07/04/2015 16:15:20
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class WorkflowCommandTemplate1Converter
    {

        public static WorkflowCommandTemplate1DTO ToDto(this Bec.TargetFramework.Data.WorkflowCommandTemplate1 source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static WorkflowCommandTemplate1DTO ToDtoWithRelated(this Bec.TargetFramework.Data.WorkflowCommandTemplate1 source, int level)
        {
            if (source == null)
              return null;

            var target = new WorkflowCommandTemplate1DTO();

            // Properties
            target.WorkflowCommandTemplateID = source.WorkflowCommandTemplateID;
            target.Name = source.Name;
            target.Description = source.Description;
            target.WorkflowTemplateID = source.WorkflowTemplateID;
            target.WorkflowTemplateVersionNumber = source.WorkflowTemplateVersionNumber;
            target.WorkflowObjectTypeTemplateID = source.WorkflowObjectTypeTemplateID;

            // Navigation Properties
            if (level > 0) {
              target.WorkflowObjectTypeTemplate = source.WorkflowObjectTypeTemplate.ToDtoWithRelated(level - 1);
              target.WorkflowTemplate = source.WorkflowTemplate.ToDtoWithRelated(level - 1);
              target.WorkflowActionExecuteCommandTemplates = source.WorkflowActionExecuteCommandTemplates.ToDtosWithRelated(level - 1);
              target.WorkflowActionPostCommandTemplates = source.WorkflowActionPostCommandTemplates.ToDtosWithRelated(level - 1);
              target.WorkflowActionPreCommandTemplates = source.WorkflowActionPreCommandTemplates.ToDtosWithRelated(level - 1);
              target.WorkflowCommandParameterTemplates = source.WorkflowCommandParameterTemplates.ToDtosWithRelated(level - 1);
              target.WorkflowCommandConditionTemplates = source.WorkflowCommandConditionTemplates.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.WorkflowCommandTemplate1 ToEntity(this WorkflowCommandTemplate1DTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.WorkflowCommandTemplate1();

            // Properties
            target.WorkflowCommandTemplateID = source.WorkflowCommandTemplateID;
            target.Name = source.Name;
            target.Description = source.Description;
            target.WorkflowTemplateID = source.WorkflowTemplateID;
            target.WorkflowTemplateVersionNumber = source.WorkflowTemplateVersionNumber;
            target.WorkflowObjectTypeTemplateID = source.WorkflowObjectTypeTemplateID;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<WorkflowCommandTemplate1DTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.WorkflowCommandTemplate1> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<WorkflowCommandTemplate1DTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.WorkflowCommandTemplate1> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.WorkflowCommandTemplate1> ToEntities(this IEnumerable<WorkflowCommandTemplate1DTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.WorkflowCommandTemplate1 source, WorkflowCommandTemplate1DTO target);

        static partial void OnEntityCreating(WorkflowCommandTemplate1DTO source, Bec.TargetFramework.Data.WorkflowCommandTemplate1 target);

    }

}
