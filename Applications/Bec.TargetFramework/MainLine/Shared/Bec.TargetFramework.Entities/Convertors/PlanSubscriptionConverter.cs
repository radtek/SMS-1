//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 3/27/2015 9:57:20 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class PlanSubscriptionConverter
    {

        public static PlanSubscriptionDTO ToDto(this Bec.TargetFramework.Data.PlanSubscription source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static PlanSubscriptionDTO ToDtoWithRelated(this Bec.TargetFramework.Data.PlanSubscription source, int level)
        {
            if (source == null)
              return null;

            var target = new PlanSubscriptionDTO();

            // Properties
            target.PlanSubscriptionID = source.PlanSubscriptionID;
            target.PlanSubscriptionVersionNumber = source.PlanSubscriptionVersionNumber;
            target.HasInfinitePeriods = source.HasInfinitePeriods;
            target.PlanQuantity = source.PlanQuantity;
            target.CreatedOn = source.CreatedOn;
            target.CreatedBy = source.CreatedBy;
            target.ActivatedOn = source.ActivatedOn;
            target.CancelledOn = source.CancelledOn;
            target.CancelReasonID = source.CancelReasonID;
            target.DueInvoicesCount = source.DueInvoicesCount;
            target.DueSince = source.DueSince;
            target.DueAmount = source.DueAmount;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ParentID = source.ParentID;
            target.OrganisationID = source.OrganisationID;
            target.IsRenewal = source.IsRenewal;
            target.RenewedOn = source.RenewedOn;
            target.PlanSubscriptionReference = source.PlanSubscriptionReference;
            target.CountryCode = source.CountryCode;
            target.IsFree = source.IsFree;
            target.PlanID = source.PlanID;
            target.PlanVersionNumber = source.PlanVersionNumber;
            target.ParentVersionNumber = source.ParentVersionNumber;

            // Navigation Properties
            if (level > 0) {
              target.OrganisationPlanSubscriptions = source.OrganisationPlanSubscriptions.ToDtosWithRelated(level - 1);
              target.ModuleSubscriptions = source.ModuleSubscriptions.ToDtosWithRelated(level - 1);
              target.Plan = source.Plan.ToDtoWithRelated(level - 1);
              target.CountryCode1 = source.CountryCode1.ToDtoWithRelated(level - 1);
              target.ArtefactSubscriptions = source.ArtefactSubscriptions.ToDtosWithRelated(level - 1);
              target.PlanSubscriptionBillingPeriods = source.PlanSubscriptionBillingPeriods.ToDtosWithRelated(level - 1);
              target.PlanSubscriptionPaymentPlans = source.PlanSubscriptionPaymentPlans.ToDtosWithRelated(level - 1);
              target.PlanSubscriptionProcessLogs = source.PlanSubscriptionProcessLogs.ToDtosWithRelated(level - 1);
              target.PlanSubscriptionPeriods = source.PlanSubscriptionPeriods.ToDtosWithRelated(level - 1);
              target.Organisation = source.Organisation.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.PlanSubscription ToEntity(this PlanSubscriptionDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.PlanSubscription();

            // Properties
            target.PlanSubscriptionID = source.PlanSubscriptionID;
            target.PlanSubscriptionVersionNumber = source.PlanSubscriptionVersionNumber;
            target.HasInfinitePeriods = source.HasInfinitePeriods;
            target.PlanQuantity = source.PlanQuantity;
            target.CreatedOn = source.CreatedOn;
            target.CreatedBy = source.CreatedBy;
            target.ActivatedOn = source.ActivatedOn;
            target.CancelledOn = source.CancelledOn;
            target.CancelReasonID = source.CancelReasonID;
            target.DueInvoicesCount = source.DueInvoicesCount;
            target.DueSince = source.DueSince;
            target.DueAmount = source.DueAmount;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ParentID = source.ParentID;
            target.OrganisationID = source.OrganisationID;
            target.IsRenewal = source.IsRenewal;
            target.RenewedOn = source.RenewedOn;
            target.PlanSubscriptionReference = source.PlanSubscriptionReference;
            target.CountryCode = source.CountryCode;
            target.IsFree = source.IsFree;
            target.PlanID = source.PlanID;
            target.PlanVersionNumber = source.PlanVersionNumber;
            target.ParentVersionNumber = source.ParentVersionNumber;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<PlanSubscriptionDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.PlanSubscription> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<PlanSubscriptionDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.PlanSubscription> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.PlanSubscription> ToEntities(this IEnumerable<PlanSubscriptionDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.PlanSubscription source, PlanSubscriptionDTO target);

        static partial void OnEntityCreating(PlanSubscriptionDTO source, Bec.TargetFramework.Data.PlanSubscription target);

    }

}
