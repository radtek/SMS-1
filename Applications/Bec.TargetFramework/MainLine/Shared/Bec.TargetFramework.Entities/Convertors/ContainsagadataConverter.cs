//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 07/04/2015 16:15:20
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class ContainsagadataConverter
    {

        public static ContainsagadataDTO ToDto(this Bec.TargetFramework.Data.Containsagadata source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static ContainsagadataDTO ToDtoWithRelated(this Bec.TargetFramework.Data.Containsagadata source, int level)
        {
            if (source == null)
              return null;

            var target = new ContainsagadataDTO();

            // Properties
            target.Id = source.Id;
            target.Originator = source.Originator;
            target.Originalmessageid = source.Originalmessageid;

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.Containsagadata ToEntity(this ContainsagadataDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.Containsagadata();

            // Properties
            target.Id = source.Id;
            target.Originator = source.Originator;
            target.Originalmessageid = source.Originalmessageid;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<ContainsagadataDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.Containsagadata> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<ContainsagadataDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.Containsagadata> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.Containsagadata> ToEntities(this IEnumerable<ContainsagadataDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.Containsagadata source, ContainsagadataDTO target);

        static partial void OnEntityCreating(ContainsagadataDTO source, Bec.TargetFramework.Data.Containsagadata target);

    }

}
