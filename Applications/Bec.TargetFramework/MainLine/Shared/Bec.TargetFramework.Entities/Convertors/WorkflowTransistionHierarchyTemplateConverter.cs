//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 18/03/2015 19:00:46
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class WorkflowTransistionHierarchyTemplateConverter
    {

        public static WorkflowTransistionHierarchyTemplateDTO ToDto(this Bec.TargetFramework.Data.WorkflowTransistionHierarchyTemplate source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static WorkflowTransistionHierarchyTemplateDTO ToDtoWithRelated(this Bec.TargetFramework.Data.WorkflowTransistionHierarchyTemplate source, int level)
        {
            if (source == null)
              return null;

            var target = new WorkflowTransistionHierarchyTemplateDTO();

            // Properties
            target.WorkflowTransistionHierarchyTemplateID = source.WorkflowTransistionHierarchyTemplateID;
            target.WorkflowTemplateID = source.WorkflowTemplateID;
            target.WorkflowTemplateVersionNumber = source.WorkflowTemplateVersionNumber;
            target.ChildComponentID = source.ChildComponentID;
            target.ParentComponentID = source.ParentComponentID;
            target.IsWorkflowStart = source.IsWorkflowStart;
            target.IsWorkflowEnd = source.IsWorkflowEnd;

            // Navigation Properties
            if (level > 0) {
              target.WorkflowTransistionTemplate_ParentComponentID_WorkflowTemplateID_WorkflowTemplateVersionNumber = source.WorkflowTransistionTemplate_ParentComponentID_WorkflowTemplateID_WorkflowTemplateVersionNumber.ToDtoWithRelated(level - 1);
              target.WorkflowTransistionTemplate_ChildComponentID_WorkflowTemplateID_WorkflowTemplateVersionNumber = source.WorkflowTransistionTemplate_ChildComponentID_WorkflowTemplateID_WorkflowTemplateVersionNumber.ToDtoWithRelated(level - 1);
              target.WorkflowTemplate = source.WorkflowTemplate.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.WorkflowTransistionHierarchyTemplate ToEntity(this WorkflowTransistionHierarchyTemplateDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.WorkflowTransistionHierarchyTemplate();

            // Properties
            target.WorkflowTransistionHierarchyTemplateID = source.WorkflowTransistionHierarchyTemplateID;
            target.WorkflowTemplateID = source.WorkflowTemplateID;
            target.WorkflowTemplateVersionNumber = source.WorkflowTemplateVersionNumber;
            target.ChildComponentID = source.ChildComponentID;
            target.ParentComponentID = source.ParentComponentID;
            target.IsWorkflowStart = source.IsWorkflowStart;
            target.IsWorkflowEnd = source.IsWorkflowEnd;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<WorkflowTransistionHierarchyTemplateDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.WorkflowTransistionHierarchyTemplate> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<WorkflowTransistionHierarchyTemplateDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.WorkflowTransistionHierarchyTemplate> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.WorkflowTransistionHierarchyTemplate> ToEntities(this IEnumerable<WorkflowTransistionHierarchyTemplateDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.WorkflowTransistionHierarchyTemplate source, WorkflowTransistionHierarchyTemplateDTO target);

        static partial void OnEntityCreating(WorkflowTransistionHierarchyTemplateDTO source, Bec.TargetFramework.Data.WorkflowTransistionHierarchyTemplate target);

    }

}
