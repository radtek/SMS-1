//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 07/04/2015 16:15:20
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class VProductSpecificationOptionConverter
    {

        public static VProductSpecificationOptionDTO ToDto(this Bec.TargetFramework.Data.VProductSpecificationOption source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static VProductSpecificationOptionDTO ToDtoWithRelated(this Bec.TargetFramework.Data.VProductSpecificationOption source, int level)
        {
            if (source == null)
              return null;

            var target = new VProductSpecificationOptionDTO();

            // Properties
            target.ProductID = source.ProductID;
            target.ProductVersionID = source.ProductVersionID;
            target.ProductSpecificationAttributeID = source.ProductSpecificationAttributeID;
            target.IsMandatory = source.IsMandatory;
            target.IsMultiSelect = source.IsMultiSelect;
            target.IsPreSelected = source.IsPreSelected;
            target.MinimumSelectionLimit = source.MinimumSelectionLimit;
            target.MaximumSelectionLimit = source.MaximumSelectionLimit;
            target.IsUserDefined = source.IsUserDefined;
            target.IsPriceDriven = source.IsPriceDriven;
            target.SpecificationAttributeID = source.SpecificationAttributeID;
            target.ProductSpecificationAttributeOptionID = source.ProductSpecificationAttributeOptionID;
            target.PriceAdjustment = source.PriceAdjustment;
            target.WeightAdjustment = source.WeightAdjustment;
            target.Cost = source.Cost;
            target.DefaultValue = source.DefaultValue;
            target.DefaultQuantity = source.DefaultQuantity;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.DisplayOrder = source.DisplayOrder;
            target.OptionName = source.OptionName;
            target.OptionDescription = source.OptionDescription;

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.VProductSpecificationOption ToEntity(this VProductSpecificationOptionDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.VProductSpecificationOption();

            // Properties
            target.ProductID = source.ProductID;
            target.ProductVersionID = source.ProductVersionID;
            target.ProductSpecificationAttributeID = source.ProductSpecificationAttributeID;
            target.IsMandatory = source.IsMandatory;
            target.IsMultiSelect = source.IsMultiSelect;
            target.IsPreSelected = source.IsPreSelected;
            target.MinimumSelectionLimit = source.MinimumSelectionLimit;
            target.MaximumSelectionLimit = source.MaximumSelectionLimit;
            target.IsUserDefined = source.IsUserDefined;
            target.IsPriceDriven = source.IsPriceDriven;
            target.SpecificationAttributeID = source.SpecificationAttributeID;
            target.ProductSpecificationAttributeOptionID = source.ProductSpecificationAttributeOptionID;
            target.PriceAdjustment = source.PriceAdjustment;
            target.WeightAdjustment = source.WeightAdjustment;
            target.Cost = source.Cost;
            target.DefaultValue = source.DefaultValue;
            target.DefaultQuantity = source.DefaultQuantity;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.DisplayOrder = source.DisplayOrder;
            target.OptionName = source.OptionName;
            target.OptionDescription = source.OptionDescription;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<VProductSpecificationOptionDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.VProductSpecificationOption> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<VProductSpecificationOptionDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.VProductSpecificationOption> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.VProductSpecificationOption> ToEntities(this IEnumerable<VProductSpecificationOptionDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.VProductSpecificationOption source, VProductSpecificationOptionDTO target);

        static partial void OnEntityCreating(VProductSpecificationOptionDTO source, Bec.TargetFramework.Data.VProductSpecificationOption target);

    }

}
