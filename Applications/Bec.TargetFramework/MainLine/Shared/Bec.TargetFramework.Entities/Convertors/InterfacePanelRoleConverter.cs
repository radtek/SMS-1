//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 13/04/2015 17:29:39
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class InterfacePanelRoleConverter
    {

        public static InterfacePanelRoleDTO ToDto(this Bec.TargetFramework.Data.InterfacePanelRole source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static InterfacePanelRoleDTO ToDtoWithRelated(this Bec.TargetFramework.Data.InterfacePanelRole source, int level)
        {
            if (source == null)
              return null;

            var target = new InterfacePanelRoleDTO();

            // Properties
            target.InterfacePanelRoleID = source.InterfacePanelRoleID;
            target.RoleName = source.RoleName;
            target.RoleDescription = source.RoleDescription;
            target.RoleTypeID = source.RoleTypeID;
            target.RoleSubTypeID = source.RoleSubTypeID;
            target.RoleCategoryID = source.RoleCategoryID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.InterfacePanelID = source.InterfacePanelID;
            target.InterfacePanelVersionNumber = source.InterfacePanelVersionNumber;
            target.RoleSubCategoryID = source.RoleSubCategoryID;

            // Navigation Properties
            if (level > 0) {
              target.InterfacePanelClaims = source.InterfacePanelClaims.ToDtosWithRelated(level - 1);
              target.InterfacePanel = source.InterfacePanel.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.InterfacePanelRole ToEntity(this InterfacePanelRoleDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.InterfacePanelRole();

            // Properties
            target.InterfacePanelRoleID = source.InterfacePanelRoleID;
            target.RoleName = source.RoleName;
            target.RoleDescription = source.RoleDescription;
            target.RoleTypeID = source.RoleTypeID;
            target.RoleSubTypeID = source.RoleSubTypeID;
            target.RoleCategoryID = source.RoleCategoryID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.InterfacePanelID = source.InterfacePanelID;
            target.InterfacePanelVersionNumber = source.InterfacePanelVersionNumber;
            target.RoleSubCategoryID = source.RoleSubCategoryID;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<InterfacePanelRoleDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.InterfacePanelRole> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<InterfacePanelRoleDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.InterfacePanelRole> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.InterfacePanelRole> ToEntities(this IEnumerable<InterfacePanelRoleDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.InterfacePanelRole source, InterfacePanelRoleDTO target);

        static partial void OnEntityCreating(InterfacePanelRoleDTO source, Bec.TargetFramework.Data.InterfacePanelRole target);

    }

}
