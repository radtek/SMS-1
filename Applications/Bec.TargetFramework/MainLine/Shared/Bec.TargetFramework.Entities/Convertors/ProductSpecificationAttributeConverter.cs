//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 08/04/2015 17:09:58
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class ProductSpecificationAttributeConverter
    {

        public static ProductSpecificationAttributeDTO ToDto(this Bec.TargetFramework.Data.ProductSpecificationAttribute source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static ProductSpecificationAttributeDTO ToDtoWithRelated(this Bec.TargetFramework.Data.ProductSpecificationAttribute source, int level)
        {
            if (source == null)
              return null;

            var target = new ProductSpecificationAttributeDTO();

            // Properties
            target.ProductSpecificationAttributeID = source.ProductSpecificationAttributeID;
            target.ProductID = source.ProductID;
            target.IsMultiSelect = source.IsMultiSelect;
            target.DisplayOrder = source.DisplayOrder;
            target.IsPreSelected = source.IsPreSelected;
            target.MinimumSelectionLimit = source.MinimumSelectionLimit;
            target.MaximumSelectionLimit = source.MaximumSelectionLimit;
            target.IsUserDefined = source.IsUserDefined;
            target.IsPriceDriven = source.IsPriceDriven;
            target.SpecificationAttributeID = source.SpecificationAttributeID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ProductVersionID = source.ProductVersionID;
            target.IsMandatory = source.IsMandatory;

            // Navigation Properties
            if (level > 0) {
              target.PackageProductSpecificationBlueprints = source.PackageProductSpecificationBlueprints.ToDtosWithRelated(level - 1);
              target.ProductSpecificationBlueprints = source.ProductSpecificationBlueprints.ToDtosWithRelated(level - 1);
              target.SpecificationAttribute = source.SpecificationAttribute.ToDtoWithRelated(level - 1);
              target.Product = source.Product.ToDtoWithRelated(level - 1);
              target.ProductSpecificationAttributeOptions = source.ProductSpecificationAttributeOptions.ToDtosWithRelated(level - 1);
              target.ShoppingCartItemProductSpecifications = source.ShoppingCartItemProductSpecifications.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.ProductSpecificationAttribute ToEntity(this ProductSpecificationAttributeDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.ProductSpecificationAttribute();

            // Properties
            target.ProductSpecificationAttributeID = source.ProductSpecificationAttributeID;
            target.ProductID = source.ProductID;
            target.IsMultiSelect = source.IsMultiSelect;
            target.DisplayOrder = source.DisplayOrder;
            target.IsPreSelected = source.IsPreSelected;
            target.MinimumSelectionLimit = source.MinimumSelectionLimit;
            target.MaximumSelectionLimit = source.MaximumSelectionLimit;
            target.IsUserDefined = source.IsUserDefined;
            target.IsPriceDriven = source.IsPriceDriven;
            target.SpecificationAttributeID = source.SpecificationAttributeID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ProductVersionID = source.ProductVersionID;
            target.IsMandatory = source.IsMandatory;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<ProductSpecificationAttributeDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.ProductSpecificationAttribute> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<ProductSpecificationAttributeDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.ProductSpecificationAttribute> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.ProductSpecificationAttribute> ToEntities(this IEnumerable<ProductSpecificationAttributeDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.ProductSpecificationAttribute source, ProductSpecificationAttributeDTO target);

        static partial void OnEntityCreating(ProductSpecificationAttributeDTO source, Bec.TargetFramework.Data.ProductSpecificationAttribute target);

    }

}
