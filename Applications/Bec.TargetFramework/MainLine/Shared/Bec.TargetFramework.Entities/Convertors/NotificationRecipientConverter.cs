//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 17/04/2015 16:46:54
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class NotificationRecipientConverter
    {

        public static NotificationRecipientDTO ToDto(this Bec.TargetFramework.Data.NotificationRecipient source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static NotificationRecipientDTO ToDtoWithRelated(this Bec.TargetFramework.Data.NotificationRecipient source, int level)
        {
            if (source == null)
              return null;

            var target = new NotificationRecipientDTO();

            // Properties
            target.NotificationRecipientID = source.NotificationRecipientID;
            target.NotificationID = source.NotificationID;
            target.ToParentID = source.ToParentID;
            target.OrganisationID = source.OrganisationID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ParentID = source.ParentID;
            target.IsAccepted = source.IsAccepted;
            target.UserAccountOrganisationID = source.UserAccountOrganisationID;
            target.AcceptedDate = source.AcceptedDate;

            // Navigation Properties
            if (level > 0) {
              target.Notification = source.Notification.ToDtoWithRelated(level - 1);
              target.NotificationRecipientLogs = source.NotificationRecipientLogs.ToDtosWithRelated(level - 1);
              target.OrganisationDirectDebitMandateProcessLogs = source.OrganisationDirectDebitMandateProcessLogs.ToDtosWithRelated(level - 1);
              target.UserAccountOrganisation = source.UserAccountOrganisation.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.NotificationRecipient ToEntity(this NotificationRecipientDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.NotificationRecipient();

            // Properties
            target.NotificationRecipientID = source.NotificationRecipientID;
            target.NotificationID = source.NotificationID;
            target.ToParentID = source.ToParentID;
            target.OrganisationID = source.OrganisationID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ParentID = source.ParentID;
            target.IsAccepted = source.IsAccepted;
            target.UserAccountOrganisationID = source.UserAccountOrganisationID;
            target.AcceptedDate = source.AcceptedDate;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<NotificationRecipientDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.NotificationRecipient> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<NotificationRecipientDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.NotificationRecipient> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.NotificationRecipient> ToEntities(this IEnumerable<NotificationRecipientDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.NotificationRecipient source, NotificationRecipientDTO target);

        static partial void OnEntityCreating(NotificationRecipientDTO source, Bec.TargetFramework.Data.NotificationRecipient target);

    }

}
