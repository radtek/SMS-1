//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 18/03/2015 19:00:46
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class InterfacePanelTemplateConverter
    {

        public static InterfacePanelTemplateDTO ToDto(this Bec.TargetFramework.Data.InterfacePanelTemplate source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static InterfacePanelTemplateDTO ToDtoWithRelated(this Bec.TargetFramework.Data.InterfacePanelTemplate source, int level)
        {
            if (source == null)
              return null;

            var target = new InterfacePanelTemplateDTO();

            // Properties
            target.InterfacePanelTemplateID = source.InterfacePanelTemplateID;
            target.InterfacePanelTemplateVersionNumber = source.InterfacePanelTemplateVersionNumber;
            target.Name = source.Name;
            target.Description = source.Description;
            target.InterfacePanelTypeID = source.InterfacePanelTypeID;
            target.InterfacePanelSubTypeID = source.InterfacePanelSubTypeID;
            target.InterfacePanelCategoryID = source.InterfacePanelCategoryID;
            target.InterfacePanelSubCategoryID = source.InterfacePanelSubCategoryID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ParentIPTemplateID = source.ParentIPTemplateID;
            target.ParentIPTemplateVersionNumber = source.ParentIPTemplateVersionNumber;
            target.IsSecuredByClaim = source.IsSecuredByClaim;
            target.IsGridPanel = source.IsGridPanel;
            target.IsGlobal = source.IsGlobal;
            target.InterfacePanelTemplateLabel = source.InterfacePanelTemplateLabel;

            // Navigation Properties
            if (level > 0) {
              target.InterfacePanelClaimTemplates = source.InterfacePanelClaimTemplates.ToDtosWithRelated(level - 1);
              target.InterfacePanelFieldDetailOrganaisationTypeTemplates = source.InterfacePanelFieldDetailOrganaisationTypeTemplates.ToDtosWithRelated(level - 1);
              target.InterfacePanelFieldDetailTemplates = source.InterfacePanelFieldDetailTemplates.ToDtosWithRelated(level - 1);
              target.InterfacePanelOrganisationTypeUserTypeTemplates = source.InterfacePanelOrganisationTypeUserTypeTemplates.ToDtosWithRelated(level - 1);
              target.InterfacePanels = source.InterfacePanels.ToDtosWithRelated(level - 1);
              target.InterfacePanelTemplates_ParentIPTemplateID_ParentIPTemplateVersionNumber = source.InterfacePanelTemplates_ParentIPTemplateID_ParentIPTemplateVersionNumber.ToDtosWithRelated(level - 1);
              target.InterfacePanelTemplate_ParentIPTemplateID_ParentIPTemplateVersionNumber = source.InterfacePanelTemplate_ParentIPTemplateID_ParentIPTemplateVersionNumber.ToDtoWithRelated(level - 1);
              target.InterfacePanelSettingTemplates = source.InterfacePanelSettingTemplates.ToDtosWithRelated(level - 1);
              target.InterfacePanelRoleTemplates = source.InterfacePanelRoleTemplates.ToDtosWithRelated(level - 1);
              target.InterfacePanelOrganisationTypeTemplates = source.InterfacePanelOrganisationTypeTemplates.ToDtosWithRelated(level - 1);
              target.InterfacePanelFDOrganaisationTypeUserTypeTemplates = source.InterfacePanelFDOrganaisationTypeUserTypeTemplates.ToDtosWithRelated(level - 1);
              target.WorkflowTreeStructureTemplates = source.WorkflowTreeStructureTemplates.ToDtosWithRelated(level - 1);
              target.InterfacePanelValidationOrganisationTypeTemplates = source.InterfacePanelValidationOrganisationTypeTemplates.ToDtosWithRelated(level - 1);
              target.InterfacePanelValidationOrganisationTypeUserTypeTemplates = source.InterfacePanelValidationOrganisationTypeUserTypeTemplates.ToDtosWithRelated(level - 1);
              target.InterfacePanelFieldDetailValidationTemplate = source.InterfacePanelFieldDetailValidationTemplate.ToDtosWithRelated(level - 1);
              target.InterfacePanelFieldDetailValidationOrganisationTypeTemplates = source.InterfacePanelFieldDetailValidationOrganisationTypeTemplates.ToDtosWithRelated(level - 1);
              target.InterfacePanelFDValidationOrgTypeUserTypeTemplates = source.InterfacePanelFDValidationOrgTypeUserTypeTemplates.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.InterfacePanelTemplate ToEntity(this InterfacePanelTemplateDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.InterfacePanelTemplate();

            // Properties
            target.InterfacePanelTemplateID = source.InterfacePanelTemplateID;
            target.InterfacePanelTemplateVersionNumber = source.InterfacePanelTemplateVersionNumber;
            target.Name = source.Name;
            target.Description = source.Description;
            target.InterfacePanelTypeID = source.InterfacePanelTypeID;
            target.InterfacePanelSubTypeID = source.InterfacePanelSubTypeID;
            target.InterfacePanelCategoryID = source.InterfacePanelCategoryID;
            target.InterfacePanelSubCategoryID = source.InterfacePanelSubCategoryID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ParentIPTemplateID = source.ParentIPTemplateID;
            target.ParentIPTemplateVersionNumber = source.ParentIPTemplateVersionNumber;
            target.IsSecuredByClaim = source.IsSecuredByClaim;
            target.IsGridPanel = source.IsGridPanel;
            target.IsGlobal = source.IsGlobal;
            target.InterfacePanelTemplateLabel = source.InterfacePanelTemplateLabel;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<InterfacePanelTemplateDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.InterfacePanelTemplate> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<InterfacePanelTemplateDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.InterfacePanelTemplate> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.InterfacePanelTemplate> ToEntities(this IEnumerable<InterfacePanelTemplateDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.InterfacePanelTemplate source, InterfacePanelTemplateDTO target);

        static partial void OnEntityCreating(InterfacePanelTemplateDTO source, Bec.TargetFramework.Data.InterfacePanelTemplate target);

    }

}
