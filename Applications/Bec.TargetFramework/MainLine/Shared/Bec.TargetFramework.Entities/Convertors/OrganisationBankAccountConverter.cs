//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 17/04/2015 16:46:55
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class OrganisationBankAccountConverter
    {

        public static OrganisationBankAccountDTO ToDto(this Bec.TargetFramework.Data.OrganisationBankAccount source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static OrganisationBankAccountDTO ToDtoWithRelated(this Bec.TargetFramework.Data.OrganisationBankAccount source, int level)
        {
            if (source == null)
              return null;

            var target = new OrganisationBankAccountDTO();

            // Properties
            target.OrganisationBankAccountId = source.OrganisationBankAccountId;
            target.OrganisationID = source.OrganisationID;
            target.BankAccountTypeID = source.BankAccountTypeID;
            target.SortCode = source.SortCode;
            target.BankAccountNumber = source.BankAccountNumber;
            target.IBANNumber = source.IBANNumber;
            target.SwiftCode = source.SwiftCode;
            target.BankAccountDurationTypeID = source.BankAccountDurationTypeID;
            target.BankAccountOpeningYear = source.BankAccountOpeningYear;
            target.BankAccountOpeningMonth = source.BankAccountOpeningMonth;
            target.IsPrimary = source.IsPrimary;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.IsDirectDebtAccount = source.IsDirectDebtAccount;

            // Navigation Properties
            if (level > 0) {
              target.OrganisationPaymentMethods = source.OrganisationPaymentMethods.ToDtosWithRelated(level - 1);
              target.Organisation = source.Organisation.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.OrganisationBankAccount ToEntity(this OrganisationBankAccountDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.OrganisationBankAccount();

            // Properties
            target.OrganisationBankAccountId = source.OrganisationBankAccountId;
            target.OrganisationID = source.OrganisationID;
            target.BankAccountTypeID = source.BankAccountTypeID;
            target.SortCode = source.SortCode;
            target.BankAccountNumber = source.BankAccountNumber;
            target.IBANNumber = source.IBANNumber;
            target.SwiftCode = source.SwiftCode;
            target.BankAccountDurationTypeID = source.BankAccountDurationTypeID;
            target.BankAccountOpeningYear = source.BankAccountOpeningYear;
            target.BankAccountOpeningMonth = source.BankAccountOpeningMonth;
            target.IsPrimary = source.IsPrimary;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.IsDirectDebtAccount = source.IsDirectDebtAccount;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<OrganisationBankAccountDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.OrganisationBankAccount> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<OrganisationBankAccountDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.OrganisationBankAccount> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.OrganisationBankAccount> ToEntities(this IEnumerable<OrganisationBankAccountDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.OrganisationBankAccount source, OrganisationBankAccountDTO target);

        static partial void OnEntityCreating(OrganisationBankAccountDTO source, Bec.TargetFramework.Data.OrganisationBankAccount target);

    }

}
