//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 26/03/2015 16:15:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class VOrganisationPaymentMethodStatusConverter
    {

        public static VOrganisationPaymentMethodStatusDTO ToDto(this Bec.TargetFramework.Data.VOrganisationPaymentMethodStatus source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static VOrganisationPaymentMethodStatusDTO ToDtoWithRelated(this Bec.TargetFramework.Data.VOrganisationPaymentMethodStatus source, int level)
        {
            if (source == null)
              return null;

            var target = new VOrganisationPaymentMethodStatusDTO();

            // Properties
            target.OrganisationID = source.OrganisationID;
            target.GlobalPaymentMethodID = source.GlobalPaymentMethodID;
            target.OrganisationBankAccountId = source.OrganisationBankAccountId;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.IsDirectDebit = source.IsDirectDebit;
            target.IsBACS = source.IsBACS;
            target.OrganisationDirectDebitMandateID = source.OrganisationDirectDebitMandateID;
            target.IsPrimary = source.IsPrimary;
            target.StatusTypeID = source.StatusTypeID;
            target.StatusTypeVersionNumber = source.StatusTypeVersionNumber;
            target.StatusTypeValueID = source.StatusTypeValueID;
            target.PaymentMethodStatus = source.PaymentMethodStatus;
            target.OrganisationName = source.OrganisationName;

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.VOrganisationPaymentMethodStatus ToEntity(this VOrganisationPaymentMethodStatusDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.VOrganisationPaymentMethodStatus();

            // Properties
            target.OrganisationID = source.OrganisationID;
            target.GlobalPaymentMethodID = source.GlobalPaymentMethodID;
            target.OrganisationBankAccountId = source.OrganisationBankAccountId;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.IsDirectDebit = source.IsDirectDebit;
            target.IsBACS = source.IsBACS;
            target.OrganisationDirectDebitMandateID = source.OrganisationDirectDebitMandateID;
            target.IsPrimary = source.IsPrimary;
            target.StatusTypeID = source.StatusTypeID;
            target.StatusTypeVersionNumber = source.StatusTypeVersionNumber;
            target.StatusTypeValueID = source.StatusTypeValueID;
            target.PaymentMethodStatus = source.PaymentMethodStatus;
            target.OrganisationName = source.OrganisationName;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<VOrganisationPaymentMethodStatusDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.VOrganisationPaymentMethodStatus> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<VOrganisationPaymentMethodStatusDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.VOrganisationPaymentMethodStatus> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.VOrganisationPaymentMethodStatus> ToEntities(this IEnumerable<VOrganisationPaymentMethodStatusDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.VOrganisationPaymentMethodStatus source, VOrganisationPaymentMethodStatusDTO target);

        static partial void OnEntityCreating(VOrganisationPaymentMethodStatusDTO source, Bec.TargetFramework.Data.VOrganisationPaymentMethodStatus target);

    }

}
