//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 2/12/2015 3:31:07 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class StsSearchLRDocumentOrderConverter
    {

        public static StsSearchLRDocumentOrderDTO ToDto(this Bec.TargetFramework.Data.StsSearchLRDocumentOrder source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static StsSearchLRDocumentOrderDTO ToDtoWithRelated(this Bec.TargetFramework.Data.StsSearchLRDocumentOrder source, int level)
        {
            if (source == null)
              return null;

            var target = new StsSearchLRDocumentOrderDTO();

            // Properties
            target.StsSearchLRDocumentOrderID = source.StsSearchLRDocumentOrderID;
            target.TitleNumber = source.TitleNumber;
            target.HasBeenPurchased = source.HasBeenPurchased;
            target.PurchasedOn = source.PurchasedOn;
            target.InvoiceID = source.InvoiceID;
            target.SearchActorID = source.SearchActorID;

            // Navigation Properties
            if (level > 0) {
              target.StsSearchActor = source.StsSearchActor.ToDtoWithRelated(level - 1);
              target.Invoice = source.Invoice.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.StsSearchLRDocumentOrder ToEntity(this StsSearchLRDocumentOrderDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.StsSearchLRDocumentOrder();

            // Properties
            target.StsSearchLRDocumentOrderID = source.StsSearchLRDocumentOrderID;
            target.TitleNumber = source.TitleNumber;
            target.HasBeenPurchased = source.HasBeenPurchased;
            target.PurchasedOn = source.PurchasedOn;
            target.InvoiceID = source.InvoiceID;
            target.SearchActorID = source.SearchActorID;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<StsSearchLRDocumentOrderDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.StsSearchLRDocumentOrder> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<StsSearchLRDocumentOrderDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.StsSearchLRDocumentOrder> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.StsSearchLRDocumentOrder> ToEntities(this IEnumerable<StsSearchLRDocumentOrderDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.StsSearchLRDocumentOrder source, StsSearchLRDocumentOrderDTO target);

        static partial void OnEntityCreating(StsSearchLRDocumentOrderDTO source, Bec.TargetFramework.Data.StsSearchLRDocumentOrder target);

    }

}
