//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 2/12/2015 3:31:07 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class StsSearchActorConverter
    {

        public static StsSearchActorDTO ToDto(this Bec.TargetFramework.Data.StsSearchActor source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static StsSearchActorDTO ToDtoWithRelated(this Bec.TargetFramework.Data.StsSearchActor source, int level)
        {
            if (source == null)
              return null;

            var target = new StsSearchActorDTO();

            // Properties
            target.StsSearchID = source.StsSearchID;
            target.OrganisationID = source.OrganisationID;
            target.ActorID = source.ActorID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.PrimaryUserAccountOrganisationID = source.PrimaryUserAccountOrganisationID;
            target.StsSearchActorID = source.StsSearchActorID;
            target.StsInviteID = source.StsInviteID;
            target.IsInviteActive = source.IsInviteActive;
            target.IsOrganisatonPersonal = source.IsOrganisatonPersonal;
            target.TemporaryActorContactID = source.TemporaryActorContactID;
            target.HasDeclarationBeenAccepted = source.HasDeclarationBeenAccepted;

            // Navigation Properties
            if (level > 0) {
              target.StsSearchAccounts = source.StsSearchAccounts.ToDtosWithRelated(level - 1);
              target.StsSearchActorDetails = source.StsSearchActorDetails.ToDtosWithRelated(level - 1);
              target.StsSearchActorProcessLogs = source.StsSearchActorProcessLogs.ToDtosWithRelated(level - 1);
              target.StsSearchActorStructures_PrimaryStsSearchActorID = source.StsSearchActorStructures_PrimaryStsSearchActorID.ToDtosWithRelated(level - 1);
              target.StsSearchActorStructures_SecondaryStsSearchActorID = source.StsSearchActorStructures_SecondaryStsSearchActorID.ToDtosWithRelated(level - 1);
              target.StsSearch = source.StsSearch.ToDtoWithRelated(level - 1);
              target.StsInvite = source.StsInvite.ToDtoWithRelated(level - 1);
              target.Contact = source.Contact.ToDtoWithRelated(level - 1);
              target.Actor = source.Actor.ToDtoWithRelated(level - 1);
              target.Organisation = source.Organisation.ToDtoWithRelated(level - 1);
              target.UserAccountOrganisation = source.UserAccountOrganisation.ToDtoWithRelated(level - 1);
              target.StsSearchLRDocumentOrders = source.StsSearchLRDocumentOrders.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.StsSearchActor ToEntity(this StsSearchActorDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.StsSearchActor();

            // Properties
            target.StsSearchID = source.StsSearchID;
            target.OrganisationID = source.OrganisationID;
            target.ActorID = source.ActorID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.PrimaryUserAccountOrganisationID = source.PrimaryUserAccountOrganisationID;
            target.StsSearchActorID = source.StsSearchActorID;
            target.StsInviteID = source.StsInviteID;
            target.IsInviteActive = source.IsInviteActive;
            target.IsOrganisatonPersonal = source.IsOrganisatonPersonal;
            target.TemporaryActorContactID = source.TemporaryActorContactID;
            target.HasDeclarationBeenAccepted = source.HasDeclarationBeenAccepted;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<StsSearchActorDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.StsSearchActor> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<StsSearchActorDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.StsSearchActor> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.StsSearchActor> ToEntities(this IEnumerable<StsSearchActorDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.StsSearchActor source, StsSearchActorDTO target);

        static partial void OnEntityCreating(StsSearchActorDTO source, Bec.TargetFramework.Data.StsSearchActor target);

    }

}
