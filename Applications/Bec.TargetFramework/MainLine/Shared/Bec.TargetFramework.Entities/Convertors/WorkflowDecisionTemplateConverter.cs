//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 26/03/2015 16:15:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class WorkflowDecisionTemplateConverter
    {

        public static WorkflowDecisionTemplateDTO ToDto(this Bec.TargetFramework.Data.WorkflowDecisionTemplate source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static WorkflowDecisionTemplateDTO ToDtoWithRelated(this Bec.TargetFramework.Data.WorkflowDecisionTemplate source, int level)
        {
            if (source == null)
              return null;

            var target = new WorkflowDecisionTemplateDTO();

            // Properties
            target.WorkflowDecisionTemplateID = source.WorkflowDecisionTemplateID;
            target.Name = source.Name;
            target.Description = source.Description;
            target.IsTransistionStart = source.IsTransistionStart;
            target.IsTransistionEnd = source.IsTransistionEnd;
            target.WorkflowDecisionTypeTemplateID = source.WorkflowDecisionTypeTemplateID;
            target.WorkflowObjectTypeTemplateID = source.WorkflowObjectTypeTemplateID;
            target.WorkflowTemplateID = source.WorkflowTemplateID;
            target.WorkflowTemplateVersionNumber = source.WorkflowTemplateVersionNumber;

            // Navigation Properties
            if (level > 0) {
              target.WorkflowDecisionExecuteCommandTemplates = source.WorkflowDecisionExecuteCommandTemplates.ToDtosWithRelated(level - 1);
              target.WorkflowDecisionParameterTemplates = source.WorkflowDecisionParameterTemplates.ToDtosWithRelated(level - 1);
              target.WorkflowDecisionErrorTemplates_WorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber = source.WorkflowDecisionErrorTemplates_WorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber.ToDtosWithRelated(level - 1);
              target.WorkflowDecisionErrorTemplates_NextWorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber = source.WorkflowDecisionErrorTemplates_NextWorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber.ToDtosWithRelated(level - 1);
              target.WorkflowDecisionFailureTemplates_WorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber = source.WorkflowDecisionFailureTemplates_WorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber.ToDtosWithRelated(level - 1);
              target.WorkflowDecisionFailureTemplates_NextWorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber = source.WorkflowDecisionFailureTemplates_NextWorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber.ToDtosWithRelated(level - 1);
              target.WorkflowDecisionSuccessTemplates_WorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber = source.WorkflowDecisionSuccessTemplates_WorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber.ToDtosWithRelated(level - 1);
              target.WorkflowDecisionSuccessTemplates_NextWorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber = source.WorkflowDecisionSuccessTemplates_NextWorkflowDecisionTemplateID_WorkflowTemplateID_WorkflowTemplateVersionNumber.ToDtosWithRelated(level - 1);
              target.WorkflowObjectTypeTemplate = source.WorkflowObjectTypeTemplate.ToDtoWithRelated(level - 1);
              target.WorkflowTemplate = source.WorkflowTemplate.ToDtoWithRelated(level - 1);
              target.WorkflowTransistionWorkflowDecisionTemplates = source.WorkflowTransistionWorkflowDecisionTemplates.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.WorkflowDecisionTemplate ToEntity(this WorkflowDecisionTemplateDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.WorkflowDecisionTemplate();

            // Properties
            target.WorkflowDecisionTemplateID = source.WorkflowDecisionTemplateID;
            target.Name = source.Name;
            target.Description = source.Description;
            target.IsTransistionStart = source.IsTransistionStart;
            target.IsTransistionEnd = source.IsTransistionEnd;
            target.WorkflowDecisionTypeTemplateID = source.WorkflowDecisionTypeTemplateID;
            target.WorkflowObjectTypeTemplateID = source.WorkflowObjectTypeTemplateID;
            target.WorkflowTemplateID = source.WorkflowTemplateID;
            target.WorkflowTemplateVersionNumber = source.WorkflowTemplateVersionNumber;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<WorkflowDecisionTemplateDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.WorkflowDecisionTemplate> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<WorkflowDecisionTemplateDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.WorkflowDecisionTemplate> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.WorkflowDecisionTemplate> ToEntities(this IEnumerable<WorkflowDecisionTemplateDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.WorkflowDecisionTemplate source, WorkflowDecisionTemplateDTO target);

        static partial void OnEntityCreating(WorkflowDecisionTemplateDTO source, Bec.TargetFramework.Data.WorkflowDecisionTemplate target);

    }

}
