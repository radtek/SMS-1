//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 3/27/2015 9:57:20 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class InterfacePanelOrganisationTypeConverter
    {

        public static InterfacePanelOrganisationTypeDTO ToDto(this Bec.TargetFramework.Data.InterfacePanelOrganisationType source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static InterfacePanelOrganisationTypeDTO ToDtoWithRelated(this Bec.TargetFramework.Data.InterfacePanelOrganisationType source, int level)
        {
            if (source == null)
              return null;

            var target = new InterfacePanelOrganisationTypeDTO();

            // Properties
            target.InterfacePanelID = source.InterfacePanelID;
            target.InterfacePanelVersionNumber = source.InterfacePanelVersionNumber;
            target.OrganisationTypeID = source.OrganisationTypeID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.IsVisible = source.IsVisible;
            target.ParentID = source.ParentID;
            target.InterfacePanelOrganisationTypeLabel = source.InterfacePanelOrganisationTypeLabel;

            // Navigation Properties
            if (level > 0) {
              target.InterfacePanel = source.InterfacePanel.ToDtoWithRelated(level - 1);
              target.OrganisationType = source.OrganisationType.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.InterfacePanelOrganisationType ToEntity(this InterfacePanelOrganisationTypeDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.InterfacePanelOrganisationType();

            // Properties
            target.InterfacePanelID = source.InterfacePanelID;
            target.InterfacePanelVersionNumber = source.InterfacePanelVersionNumber;
            target.OrganisationTypeID = source.OrganisationTypeID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.IsVisible = source.IsVisible;
            target.ParentID = source.ParentID;
            target.InterfacePanelOrganisationTypeLabel = source.InterfacePanelOrganisationTypeLabel;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<InterfacePanelOrganisationTypeDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.InterfacePanelOrganisationType> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<InterfacePanelOrganisationTypeDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.InterfacePanelOrganisationType> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.InterfacePanelOrganisationType> ToEntities(this IEnumerable<InterfacePanelOrganisationTypeDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.InterfacePanelOrganisationType source, InterfacePanelOrganisationTypeDTO target);

        static partial void OnEntityCreating(InterfacePanelOrganisationTypeDTO source, Bec.TargetFramework.Data.InterfacePanelOrganisationType target);

    }

}
