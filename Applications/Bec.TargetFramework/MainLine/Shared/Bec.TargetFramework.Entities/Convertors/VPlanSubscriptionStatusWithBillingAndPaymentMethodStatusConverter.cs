//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 18/03/2015 19:00:46
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class VPlanSubscriptionStatusWithBillingAndPaymentMethodStatusConverter
    {

        public static VPlanSubscriptionStatusWithBillingAndPaymentMethodStatusDTO ToDto(this Bec.TargetFramework.Data.VPlanSubscriptionStatusWithBillingAndPaymentMethodStatus source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static VPlanSubscriptionStatusWithBillingAndPaymentMethodStatusDTO ToDtoWithRelated(this Bec.TargetFramework.Data.VPlanSubscriptionStatusWithBillingAndPaymentMethodStatus source, int level)
        {
            if (source == null)
              return null;

            var target = new VPlanSubscriptionStatusWithBillingAndPaymentMethodStatusDTO();

            // Properties
            target.PlanSubscriptionID = source.PlanSubscriptionID;
            target.PlanSubscriptionVersionNumber = source.PlanSubscriptionVersionNumber;
            target.HasInfinitePeriods = source.HasInfinitePeriods;
            target.PlanQuantity = source.PlanQuantity;
            target.CreatedOn = source.CreatedOn;
            target.CreatedBy = source.CreatedBy;
            target.ActivatedOn = source.ActivatedOn;
            target.CancelledOn = source.CancelledOn;
            target.CancelReasonID = source.CancelReasonID;
            target.DueInvoicesCount = source.DueInvoicesCount;
            target.DueSince = source.DueSince;
            target.DueAmount = source.DueAmount;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.IsFree = source.IsFree;
            target.OrganisationID = source.OrganisationID;
            target.IsRenewal = source.IsRenewal;
            target.RenewedOn = source.RenewedOn;
            target.PlanSubscriptionReference = source.PlanSubscriptionReference;
            target.PlanName = source.PlanName;
            target.InvoiceName = source.InvoiceName;
            target.Price = source.Price;
            target.Period = source.Period;
            target.PlanID = source.PlanID;
            target.PlanVersionNumber = source.PlanVersionNumber;
            target.TrialPeriod = source.TrialPeriod;
            target.PeriodUnitID = source.PeriodUnitID;
            target.TrialPeriodUnitID = source.TrialPeriodUnitID;
            target.FreeQuantity = source.FreeQuantity;
            target.SetupCost = source.SetupCost;
            target.DowngradePenalty = source.DowngradePenalty;
            target.CountryCode = source.CountryCode;
            target.CurrencyCode = source.CurrencyCode;
            target.CancellationPeriod = source.CancellationPeriod;
            target.CancellationPeriodUnitID = source.CancellationPeriodUnitID;
            target.PlanStatusID = source.PlanStatusID;
            target.IsTransactionBased = source.IsTransactionBased;
            target.CoolOffPeriod = source.CoolOffPeriod;
            target.CoolOffPeriodUnitID = source.CoolOffPeriodUnitID;
            target.RenewalPrice = source.RenewalPrice;
            target.RenewalPercentage = source.RenewalPercentage;
            target.RenewalIsPercentageOfOriginalPrice = source.RenewalIsPercentageOfOriginalPrice;
            target.HasForwardCycleFee = source.HasForwardCycleFee;
            target.ForwardCycleFee = source.ForwardCycleFee;
            target.ForwardCycleFreeIsSameAsPrice = source.ForwardCycleFreeIsSameAsPrice;
            target.RenewalOfferPeriod = source.RenewalOfferPeriod;
            target.RenewalOfferPeriodUnitID = source.RenewalOfferPeriodUnitID;
            target.ForwardCycleFeePeriod = source.ForwardCycleFeePeriod;
            target.ForwardCycleFeePeriodUnitID = source.ForwardCycleFeePeriodUnitID;
            target.HasRenewalOffer = source.HasRenewalOffer;
            target.PriceDailyProRata = source.PriceDailyProRata;
            target.IsAutoRenew = source.IsAutoRenew;
            target.AutoRenewDecisionPeriod = source.AutoRenewDecisionPeriod;
            target.AutoRenewDecisionUnitID = source.AutoRenewDecisionUnitID;
            target.AutoRenewPeriod = source.AutoRenewPeriod;
            target.AutoRenewPeriodUnitID = source.AutoRenewPeriodUnitID;
            target.PlanGroupID = source.PlanGroupID;
            target.PlanTypeID = source.PlanTypeID;
            target.PlanCategoryID = source.PlanCategoryID;
            target.BillingID = source.BillingID;
            target.GlobalPaymentMethodID = source.GlobalPaymentMethodID;
            target.PlanSubscriptionStatus = source.PlanSubscriptionStatus;
            target.PlanSubscriptionStatusTypeName = source.PlanSubscriptionStatusTypeName;
            target.PlanSubscriptionStatusOrder = source.PlanSubscriptionStatusOrder;
            target.PlanSubscriptionStatusTypeValueID = source.PlanSubscriptionStatusTypeValueID;
            target.PlanSubscriptionStatusTypeID = source.PlanSubscriptionStatusTypeID;
            target.PlanSubscriptionStatusTypeVersionNumber = source.PlanSubscriptionStatusTypeVersionNumber;
            target.PlanSubscriptionStatusIsStart = source.PlanSubscriptionStatusIsStart;
            target.PlanSubscriptionStatusIsEnd = source.PlanSubscriptionStatusIsEnd;
            target.IsCancelled = source.IsCancelled;
            target.IsRenewed = source.IsRenewed;
            target.PlanSubscriptionStatusCreatedOn = source.PlanSubscriptionStatusCreatedOn;
            target.PlanSubscriptionStatusDetail = source.PlanSubscriptionStatusDetail;
            target.Name = source.Name;
            target.OrganisationBankAccountId = source.OrganisationBankAccountId;
            target.IsDirectDebit = source.IsDirectDebit;
            target.IsBACS = source.IsBACS;
            target.OrganisationDirectDebitMandateID = source.OrganisationDirectDebitMandateID;
            target.IsPrimary = source.IsPrimary;
            target.DirectDebitMonthCollectionPeriodNumber = source.DirectDebitMonthCollectionPeriodNumber;
            target.BACSMonthPaymentDay = source.BACSMonthPaymentDay;
            target.DirectDebitNumberOfNotificationDaysBeforeCollection = source.DirectDebitNumberOfNotificationDaysBeforeCollection;
            target.BACSNumberOfNotificationDaysBeforeExpectationOfPayment = source.BACSNumberOfNotificationDaysBeforeExpectationOfPayment;
            target.OrganisationPaymentMethodStatus = source.OrganisationPaymentMethodStatus;
            target.OrganisationPaymentMethodStatusTypeName = source.OrganisationPaymentMethodStatusTypeName;
            target.OrganisationPaymentMethodStatusOrder = source.OrganisationPaymentMethodStatusOrder;
            target.OrganisationPaymentMethodStatusTypeValueID = source.OrganisationPaymentMethodStatusTypeValueID;
            target.OrganisationPaymentMethodStatusTypeID = source.OrganisationPaymentMethodStatusTypeID;
            target.OrganisationPaymentMethodStatusTypeVersionNumber = source.OrganisationPaymentMethodStatusTypeVersionNumber;
            target.OrganisationPaymentMethodStatusIsStart = source.OrganisationPaymentMethodStatusIsStart;
            target.OrganisationPaymentMethodStatusIsEnd = source.OrganisationPaymentMethodStatusIsEnd;
            target.BillingPeriod = source.BillingPeriod;
            target.BillingPeriodUnitID = source.BillingPeriodUnitID;
            target.BillingLagPeriod = source.BillingLagPeriod;
            target.BillingLagPeriodUnitID = source.BillingLagPeriodUnitID;
            target.BillingPeriodDayOfMonth = source.BillingPeriodDayOfMonth;
            target.DelayedBillingPeriod = source.DelayedBillingPeriod;
            target.DelayedBillingPeriodUnitID = source.DelayedBillingPeriodUnitID;
            target.HasDelayedBilling = source.HasDelayedBilling;
            target.NumberOfBillingPeriods = source.NumberOfBillingPeriods;
            target.InvoiceToProcessingDelayPeriod = source.InvoiceToProcessingDelayPeriod;
            target.InvoiceToProcessingDelayPeriodUnitID = source.InvoiceToProcessingDelayPeriodUnitID;
            target.InvoiceNotificationConstructID = source.InvoiceNotificationConstructID;
            target.InvoiceNotificationConstructVersionNumber = source.InvoiceNotificationConstructVersionNumber;
            target.EstimatedProcessingPeriod = source.EstimatedProcessingPeriod;
            target.EstimatedProcessingPeriodUnitID = source.EstimatedProcessingPeriodUnitID;

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.VPlanSubscriptionStatusWithBillingAndPaymentMethodStatus ToEntity(this VPlanSubscriptionStatusWithBillingAndPaymentMethodStatusDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.VPlanSubscriptionStatusWithBillingAndPaymentMethodStatus();

            // Properties
            target.PlanSubscriptionID = source.PlanSubscriptionID;
            target.PlanSubscriptionVersionNumber = source.PlanSubscriptionVersionNumber;
            target.HasInfinitePeriods = source.HasInfinitePeriods;
            target.PlanQuantity = source.PlanQuantity;
            target.CreatedOn = source.CreatedOn;
            target.CreatedBy = source.CreatedBy;
            target.ActivatedOn = source.ActivatedOn;
            target.CancelledOn = source.CancelledOn;
            target.CancelReasonID = source.CancelReasonID;
            target.DueInvoicesCount = source.DueInvoicesCount;
            target.DueSince = source.DueSince;
            target.DueAmount = source.DueAmount;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.IsFree = source.IsFree;
            target.OrganisationID = source.OrganisationID;
            target.IsRenewal = source.IsRenewal;
            target.RenewedOn = source.RenewedOn;
            target.PlanSubscriptionReference = source.PlanSubscriptionReference;
            target.PlanName = source.PlanName;
            target.InvoiceName = source.InvoiceName;
            target.Price = source.Price;
            target.Period = source.Period;
            target.PlanID = source.PlanID;
            target.PlanVersionNumber = source.PlanVersionNumber;
            target.TrialPeriod = source.TrialPeriod;
            target.PeriodUnitID = source.PeriodUnitID;
            target.TrialPeriodUnitID = source.TrialPeriodUnitID;
            target.FreeQuantity = source.FreeQuantity;
            target.SetupCost = source.SetupCost;
            target.DowngradePenalty = source.DowngradePenalty;
            target.CountryCode = source.CountryCode;
            target.CurrencyCode = source.CurrencyCode;
            target.CancellationPeriod = source.CancellationPeriod;
            target.CancellationPeriodUnitID = source.CancellationPeriodUnitID;
            target.PlanStatusID = source.PlanStatusID;
            target.IsTransactionBased = source.IsTransactionBased;
            target.CoolOffPeriod = source.CoolOffPeriod;
            target.CoolOffPeriodUnitID = source.CoolOffPeriodUnitID;
            target.RenewalPrice = source.RenewalPrice;
            target.RenewalPercentage = source.RenewalPercentage;
            target.RenewalIsPercentageOfOriginalPrice = source.RenewalIsPercentageOfOriginalPrice;
            target.HasForwardCycleFee = source.HasForwardCycleFee;
            target.ForwardCycleFee = source.ForwardCycleFee;
            target.ForwardCycleFreeIsSameAsPrice = source.ForwardCycleFreeIsSameAsPrice;
            target.RenewalOfferPeriod = source.RenewalOfferPeriod;
            target.RenewalOfferPeriodUnitID = source.RenewalOfferPeriodUnitID;
            target.ForwardCycleFeePeriod = source.ForwardCycleFeePeriod;
            target.ForwardCycleFeePeriodUnitID = source.ForwardCycleFeePeriodUnitID;
            target.HasRenewalOffer = source.HasRenewalOffer;
            target.PriceDailyProRata = source.PriceDailyProRata;
            target.IsAutoRenew = source.IsAutoRenew;
            target.AutoRenewDecisionPeriod = source.AutoRenewDecisionPeriod;
            target.AutoRenewDecisionUnitID = source.AutoRenewDecisionUnitID;
            target.AutoRenewPeriod = source.AutoRenewPeriod;
            target.AutoRenewPeriodUnitID = source.AutoRenewPeriodUnitID;
            target.PlanGroupID = source.PlanGroupID;
            target.PlanTypeID = source.PlanTypeID;
            target.PlanCategoryID = source.PlanCategoryID;
            target.BillingID = source.BillingID;
            target.GlobalPaymentMethodID = source.GlobalPaymentMethodID;
            target.PlanSubscriptionStatus = source.PlanSubscriptionStatus;
            target.PlanSubscriptionStatusTypeName = source.PlanSubscriptionStatusTypeName;
            target.PlanSubscriptionStatusOrder = source.PlanSubscriptionStatusOrder;
            target.PlanSubscriptionStatusTypeValueID = source.PlanSubscriptionStatusTypeValueID;
            target.PlanSubscriptionStatusTypeID = source.PlanSubscriptionStatusTypeID;
            target.PlanSubscriptionStatusTypeVersionNumber = source.PlanSubscriptionStatusTypeVersionNumber;
            target.PlanSubscriptionStatusIsStart = source.PlanSubscriptionStatusIsStart;
            target.PlanSubscriptionStatusIsEnd = source.PlanSubscriptionStatusIsEnd;
            target.IsCancelled = source.IsCancelled;
            target.IsRenewed = source.IsRenewed;
            target.PlanSubscriptionStatusCreatedOn = source.PlanSubscriptionStatusCreatedOn;
            target.PlanSubscriptionStatusDetail = source.PlanSubscriptionStatusDetail;
            target.Name = source.Name;
            target.OrganisationBankAccountId = source.OrganisationBankAccountId;
            target.IsDirectDebit = source.IsDirectDebit;
            target.IsBACS = source.IsBACS;
            target.OrganisationDirectDebitMandateID = source.OrganisationDirectDebitMandateID;
            target.IsPrimary = source.IsPrimary;
            target.DirectDebitMonthCollectionPeriodNumber = source.DirectDebitMonthCollectionPeriodNumber;
            target.BACSMonthPaymentDay = source.BACSMonthPaymentDay;
            target.DirectDebitNumberOfNotificationDaysBeforeCollection = source.DirectDebitNumberOfNotificationDaysBeforeCollection;
            target.BACSNumberOfNotificationDaysBeforeExpectationOfPayment = source.BACSNumberOfNotificationDaysBeforeExpectationOfPayment;
            target.OrganisationPaymentMethodStatus = source.OrganisationPaymentMethodStatus;
            target.OrganisationPaymentMethodStatusTypeName = source.OrganisationPaymentMethodStatusTypeName;
            target.OrganisationPaymentMethodStatusOrder = source.OrganisationPaymentMethodStatusOrder;
            target.OrganisationPaymentMethodStatusTypeValueID = source.OrganisationPaymentMethodStatusTypeValueID;
            target.OrganisationPaymentMethodStatusTypeID = source.OrganisationPaymentMethodStatusTypeID;
            target.OrganisationPaymentMethodStatusTypeVersionNumber = source.OrganisationPaymentMethodStatusTypeVersionNumber;
            target.OrganisationPaymentMethodStatusIsStart = source.OrganisationPaymentMethodStatusIsStart;
            target.OrganisationPaymentMethodStatusIsEnd = source.OrganisationPaymentMethodStatusIsEnd;
            target.BillingPeriod = source.BillingPeriod;
            target.BillingPeriodUnitID = source.BillingPeriodUnitID;
            target.BillingLagPeriod = source.BillingLagPeriod;
            target.BillingLagPeriodUnitID = source.BillingLagPeriodUnitID;
            target.BillingPeriodDayOfMonth = source.BillingPeriodDayOfMonth;
            target.DelayedBillingPeriod = source.DelayedBillingPeriod;
            target.DelayedBillingPeriodUnitID = source.DelayedBillingPeriodUnitID;
            target.HasDelayedBilling = source.HasDelayedBilling;
            target.NumberOfBillingPeriods = source.NumberOfBillingPeriods;
            target.InvoiceToProcessingDelayPeriod = source.InvoiceToProcessingDelayPeriod;
            target.InvoiceToProcessingDelayPeriodUnitID = source.InvoiceToProcessingDelayPeriodUnitID;
            target.InvoiceNotificationConstructID = source.InvoiceNotificationConstructID;
            target.InvoiceNotificationConstructVersionNumber = source.InvoiceNotificationConstructVersionNumber;
            target.EstimatedProcessingPeriod = source.EstimatedProcessingPeriod;
            target.EstimatedProcessingPeriodUnitID = source.EstimatedProcessingPeriodUnitID;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<VPlanSubscriptionStatusWithBillingAndPaymentMethodStatusDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.VPlanSubscriptionStatusWithBillingAndPaymentMethodStatus> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<VPlanSubscriptionStatusWithBillingAndPaymentMethodStatusDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.VPlanSubscriptionStatusWithBillingAndPaymentMethodStatus> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.VPlanSubscriptionStatusWithBillingAndPaymentMethodStatus> ToEntities(this IEnumerable<VPlanSubscriptionStatusWithBillingAndPaymentMethodStatusDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.VPlanSubscriptionStatusWithBillingAndPaymentMethodStatus source, VPlanSubscriptionStatusWithBillingAndPaymentMethodStatusDTO target);

        static partial void OnEntityCreating(VPlanSubscriptionStatusWithBillingAndPaymentMethodStatusDTO source, Bec.TargetFramework.Data.VPlanSubscriptionStatusWithBillingAndPaymentMethodStatus target);

    }

}
