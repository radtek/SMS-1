//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 3/27/2015 9:57:20 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class WorkflowInstanceExecutionDataItemConverter
    {

        public static WorkflowInstanceExecutionDataItemDTO ToDto(this Bec.TargetFramework.Data.WorkflowInstanceExecutionDataItem source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static WorkflowInstanceExecutionDataItemDTO ToDtoWithRelated(this Bec.TargetFramework.Data.WorkflowInstanceExecutionDataItem source, int level)
        {
            if (source == null)
              return null;

            var target = new WorkflowInstanceExecutionDataItemDTO();

            // Properties
            target.WorkflowInstanceExecutionDataItemID = source.WorkflowInstanceExecutionDataItemID;
            target.WorkflowInstanceExecutionID = source.WorkflowInstanceExecutionID;
            target.FieldName = source.FieldName;
            target.FieldTypeID = source.FieldTypeID;
            target.DataContent = source.DataContent;
            target.DataStr = source.DataStr;
            target.DataNotJsonSerialized = source.DataNotJsonSerialized;
            target.EventOrder = source.EventOrder;
            target.WorkflowInstanceExecutionStatusEventID = source.WorkflowInstanceExecutionStatusEventID;

            // Navigation Properties
            if (level > 0) {
              target.WorkflowInstanceExecutionStatusEvent = source.WorkflowInstanceExecutionStatusEvent.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.WorkflowInstanceExecutionDataItem ToEntity(this WorkflowInstanceExecutionDataItemDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.WorkflowInstanceExecutionDataItem();

            // Properties
            target.WorkflowInstanceExecutionDataItemID = source.WorkflowInstanceExecutionDataItemID;
            target.WorkflowInstanceExecutionID = source.WorkflowInstanceExecutionID;
            target.FieldName = source.FieldName;
            target.FieldTypeID = source.FieldTypeID;
            target.DataContent = source.DataContent;
            target.DataStr = source.DataStr;
            target.DataNotJsonSerialized = source.DataNotJsonSerialized;
            target.EventOrder = source.EventOrder;
            target.WorkflowInstanceExecutionStatusEventID = source.WorkflowInstanceExecutionStatusEventID;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<WorkflowInstanceExecutionDataItemDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.WorkflowInstanceExecutionDataItem> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<WorkflowInstanceExecutionDataItemDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.WorkflowInstanceExecutionDataItem> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.WorkflowInstanceExecutionDataItem> ToEntities(this IEnumerable<WorkflowInstanceExecutionDataItemDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.WorkflowInstanceExecutionDataItem source, WorkflowInstanceExecutionDataItemDTO target);

        static partial void OnEntityCreating(WorkflowInstanceExecutionDataItemDTO source, Bec.TargetFramework.Data.WorkflowInstanceExecutionDataItem target);

    }

}
