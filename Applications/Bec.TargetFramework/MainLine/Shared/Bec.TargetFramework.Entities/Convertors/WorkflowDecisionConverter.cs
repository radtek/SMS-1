//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 02/04/2015 16:41:53
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class WorkflowDecisionConverter
    {

        public static WorkflowDecisionDTO ToDto(this Bec.TargetFramework.Data.WorkflowDecision source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static WorkflowDecisionDTO ToDtoWithRelated(this Bec.TargetFramework.Data.WorkflowDecision source, int level)
        {
            if (source == null)
              return null;

            var target = new WorkflowDecisionDTO();

            // Properties
            target.WorkflowDecisionID = source.WorkflowDecisionID;
            target.Name = source.Name;
            target.Description = source.Description;
            target.IsTransistionStart = source.IsTransistionStart;
            target.IsTransistionEnd = source.IsTransistionEnd;
            target.WorkflowDecisionTypeID = source.WorkflowDecisionTypeID;
            target.WorkflowID = source.WorkflowID;
            target.WorkflowVersionNumber = source.WorkflowVersionNumber;
            target.WorkflowObjectTypeID = source.WorkflowObjectTypeID;

            // Navigation Properties
            if (level > 0) {
              target.WorkflowDecisionFailures_NextWorkflowDecisionID_WorkflowID_WorkflowVersionNumber = source.WorkflowDecisionFailures_NextWorkflowDecisionID_WorkflowID_WorkflowVersionNumber.ToDtosWithRelated(level - 1);
              target.WorkflowDecisionFailures_WorkflowDecisionID_WorkflowID_WorkflowVersionNumber = source.WorkflowDecisionFailures_WorkflowDecisionID_WorkflowID_WorkflowVersionNumber.ToDtosWithRelated(level - 1);
              target.WorkflowDecisionSuccesses_NextWorkflowDecisionID_WorkflowID_WorkflowVersionNumber = source.WorkflowDecisionSuccesses_NextWorkflowDecisionID_WorkflowID_WorkflowVersionNumber.ToDtosWithRelated(level - 1);
              target.WorkflowDecisionSuccesses_WorkflowDecisionID_WorkflowID_WorkflowVersionNumber = source.WorkflowDecisionSuccesses_WorkflowDecisionID_WorkflowID_WorkflowVersionNumber.ToDtosWithRelated(level - 1);
              target.WorkflowDecisionErrors_NextWorkflowDecisionID_WorkflowID_WorkflowVersionNumber = source.WorkflowDecisionErrors_NextWorkflowDecisionID_WorkflowID_WorkflowVersionNumber.ToDtosWithRelated(level - 1);
              target.WorkflowDecisionErrors_WorkflowDecisionID_WorkflowID_WorkflowVersionNumber = source.WorkflowDecisionErrors_WorkflowDecisionID_WorkflowID_WorkflowVersionNumber.ToDtosWithRelated(level - 1);
              target.Workflow = source.Workflow.ToDtoWithRelated(level - 1);
              target.WorkflowObjectType = source.WorkflowObjectType.ToDtoWithRelated(level - 1);
              target.WorkflowDecisionExecuteCommands = source.WorkflowDecisionExecuteCommands.ToDtosWithRelated(level - 1);
              target.WorkflowDecisionParameters = source.WorkflowDecisionParameters.ToDtosWithRelated(level - 1);
              target.WorkflowTransistionWorkflowDecisions = source.WorkflowTransistionWorkflowDecisions.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.WorkflowDecision ToEntity(this WorkflowDecisionDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.WorkflowDecision();

            // Properties
            target.WorkflowDecisionID = source.WorkflowDecisionID;
            target.Name = source.Name;
            target.Description = source.Description;
            target.IsTransistionStart = source.IsTransistionStart;
            target.IsTransistionEnd = source.IsTransistionEnd;
            target.WorkflowDecisionTypeID = source.WorkflowDecisionTypeID;
            target.WorkflowID = source.WorkflowID;
            target.WorkflowVersionNumber = source.WorkflowVersionNumber;
            target.WorkflowObjectTypeID = source.WorkflowObjectTypeID;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<WorkflowDecisionDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.WorkflowDecision> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<WorkflowDecisionDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.WorkflowDecision> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.WorkflowDecision> ToEntities(this IEnumerable<WorkflowDecisionDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.WorkflowDecision source, WorkflowDecisionDTO target);

        static partial void OnEntityCreating(WorkflowDecisionDTO source, Bec.TargetFramework.Data.WorkflowDecision target);

    }

}
