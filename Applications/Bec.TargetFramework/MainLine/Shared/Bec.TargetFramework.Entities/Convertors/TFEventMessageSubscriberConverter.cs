//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 26/03/2015 16:15:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class TFEventMessageSubscriberConverter
    {

        public static TFEventMessageSubscriberDTO ToDto(this Bec.TargetFramework.Data.TFEventMessageSubscriber source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static TFEventMessageSubscriberDTO ToDtoWithRelated(this Bec.TargetFramework.Data.TFEventMessageSubscriber source, int level)
        {
            if (source == null)
              return null;

            var target = new TFEventMessageSubscriberDTO();

            // Properties
            target.TFEventMessageSubscriberID = source.TFEventMessageSubscriberID;
            target.Name = source.Name;
            target.ObjectName = source.ObjectName;
            target.ObjectAssembly = source.ObjectAssembly;
            target.DefaultMessageSubscriberFilter = source.DefaultMessageSubscriberFilter;

            // Navigation Properties
            if (level > 0) {
              target.TFEvents = source.TFEvents.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.TFEventMessageSubscriber ToEntity(this TFEventMessageSubscriberDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.TFEventMessageSubscriber();

            // Properties
            target.TFEventMessageSubscriberID = source.TFEventMessageSubscriberID;
            target.Name = source.Name;
            target.ObjectName = source.ObjectName;
            target.ObjectAssembly = source.ObjectAssembly;
            target.DefaultMessageSubscriberFilter = source.DefaultMessageSubscriberFilter;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<TFEventMessageSubscriberDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.TFEventMessageSubscriber> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<TFEventMessageSubscriberDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.TFEventMessageSubscriber> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.TFEventMessageSubscriber> ToEntities(this IEnumerable<TFEventMessageSubscriberDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.TFEventMessageSubscriber source, TFEventMessageSubscriberDTO target);

        static partial void OnEntityCreating(TFEventMessageSubscriberDTO source, Bec.TargetFramework.Data.TFEventMessageSubscriber target);

    }

}
