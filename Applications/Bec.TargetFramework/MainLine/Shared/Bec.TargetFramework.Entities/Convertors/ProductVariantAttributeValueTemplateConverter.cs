//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 08/04/2015 17:09:58
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class ProductVariantAttributeValueTemplateConverter
    {

        public static ProductVariantAttributeValueTemplateDTO ToDto(this Bec.TargetFramework.Data.ProductVariantAttributeValueTemplate source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static ProductVariantAttributeValueTemplateDTO ToDtoWithRelated(this Bec.TargetFramework.Data.ProductVariantAttributeValueTemplate source, int level)
        {
            if (source == null)
              return null;

            var target = new ProductVariantAttributeValueTemplateDTO();

            // Properties
            target.ProductVariantAttributeValueTemplateID = source.ProductVariantAttributeValueTemplateID;
            target.ProductProductAttributeTemplateID = source.ProductProductAttributeTemplateID;
            target.AttributeValueTypeID = source.AttributeValueTypeID;
            target.Name = source.Name;
            target.PriceAdjustment = source.PriceAdjustment;
            target.WeightAdjustment = source.WeightAdjustment;
            target.Cost = source.Cost;
            target.Quantity = source.Quantity;
            target.IsPreSelected = source.IsPreSelected;
            target.DisplayOrder = source.DisplayOrder;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;

            // Navigation Properties
            if (level > 0) {
              target.ProductProductAttributeTemplate = source.ProductProductAttributeTemplate.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.ProductVariantAttributeValueTemplate ToEntity(this ProductVariantAttributeValueTemplateDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.ProductVariantAttributeValueTemplate();

            // Properties
            target.ProductVariantAttributeValueTemplateID = source.ProductVariantAttributeValueTemplateID;
            target.ProductProductAttributeTemplateID = source.ProductProductAttributeTemplateID;
            target.AttributeValueTypeID = source.AttributeValueTypeID;
            target.Name = source.Name;
            target.PriceAdjustment = source.PriceAdjustment;
            target.WeightAdjustment = source.WeightAdjustment;
            target.Cost = source.Cost;
            target.Quantity = source.Quantity;
            target.IsPreSelected = source.IsPreSelected;
            target.DisplayOrder = source.DisplayOrder;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<ProductVariantAttributeValueTemplateDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.ProductVariantAttributeValueTemplate> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<ProductVariantAttributeValueTemplateDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.ProductVariantAttributeValueTemplate> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.ProductVariantAttributeValueTemplate> ToEntities(this IEnumerable<ProductVariantAttributeValueTemplateDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.ProductVariantAttributeValueTemplate source, ProductVariantAttributeValueTemplateDTO target);

        static partial void OnEntityCreating(ProductVariantAttributeValueTemplateDTO source, Bec.TargetFramework.Data.ProductVariantAttributeValueTemplate target);

    }

}
