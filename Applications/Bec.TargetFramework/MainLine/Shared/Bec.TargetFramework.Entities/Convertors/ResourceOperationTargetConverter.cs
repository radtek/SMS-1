//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 07/04/2015 16:15:20
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class ResourceOperationTargetConverter
    {

        public static ResourceOperationTargetDTO ToDto(this Bec.TargetFramework.Data.ResourceOperationTarget source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static ResourceOperationTargetDTO ToDtoWithRelated(this Bec.TargetFramework.Data.ResourceOperationTarget source, int level)
        {
            if (source == null)
              return null;

            var target = new ResourceOperationTargetDTO();

            // Properties
            target.ResourceID = source.ResourceID;
            target.OperationID = source.OperationID;
            target.OrganisationTypeID = source.OrganisationTypeID;
            target.UserTypeID = source.UserTypeID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;

            // Navigation Properties
            if (level > 0) {
              target.Operation = source.Operation.ToDtoWithRelated(level - 1);
              target.OrganisationType = source.OrganisationType.ToDtoWithRelated(level - 1);
              target.Resource = source.Resource.ToDtoWithRelated(level - 1);
              target.UserType = source.UserType.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.ResourceOperationTarget ToEntity(this ResourceOperationTargetDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.ResourceOperationTarget();

            // Properties
            target.ResourceID = source.ResourceID;
            target.OperationID = source.OperationID;
            target.OrganisationTypeID = source.OrganisationTypeID;
            target.UserTypeID = source.UserTypeID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<ResourceOperationTargetDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.ResourceOperationTarget> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<ResourceOperationTargetDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.ResourceOperationTarget> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.ResourceOperationTarget> ToEntities(this IEnumerable<ResourceOperationTargetDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.ResourceOperationTarget source, ResourceOperationTargetDTO target);

        static partial void OnEntityCreating(ResourceOperationTargetDTO source, Bec.TargetFramework.Data.ResourceOperationTarget target);

    }

}
