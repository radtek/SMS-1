//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class WorkflowInstanceConverter
    {

        public static WorkflowInstanceDTO ToDto(this Bec.TargetFramework.Data.WorkflowInstance source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static WorkflowInstanceDTO ToDtoWithRelated(this Bec.TargetFramework.Data.WorkflowInstance source, int level)
        {
            if (source == null)
              return null;

            var target = new WorkflowInstanceDTO();

            // Properties
            target.WorkflowInstanceID = source.WorkflowInstanceID;
            target.WorkflowID = source.WorkflowID;
            target.WorkflowVersionNumber = source.WorkflowVersionNumber;
            target.ParentID = source.ParentID;
            target.WorkflowInstanceStatusID = source.WorkflowInstanceStatusID;
            target.WorkflowInstanceTypeID = source.WorkflowInstanceTypeID;
            target.WorkflowInstanceSubTypeID = source.WorkflowInstanceSubTypeID;
            target.WorkflowInstanceCategoryID = source.WorkflowInstanceCategoryID;
            target.WorkflowInstanceSubCategoryID = source.WorkflowInstanceSubCategoryID;
            target.WorkflowInstanceTempData = source.WorkflowInstanceTempData;

            // Navigation Properties
            if (level > 0) {
              target.Workflow = source.Workflow.ToDtoWithRelated(level - 1);
              target.WorkflowInstanceRestrictions = source.WorkflowInstanceRestrictions.ToDtosWithRelated(level - 1);
              target.WorkflowInstanceSessions = source.WorkflowInstanceSessions.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.WorkflowInstance ToEntity(this WorkflowInstanceDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.WorkflowInstance();

            // Properties
            target.WorkflowInstanceID = source.WorkflowInstanceID;
            target.WorkflowID = source.WorkflowID;
            target.WorkflowVersionNumber = source.WorkflowVersionNumber;
            target.ParentID = source.ParentID;
            target.WorkflowInstanceStatusID = source.WorkflowInstanceStatusID;
            target.WorkflowInstanceTypeID = source.WorkflowInstanceTypeID;
            target.WorkflowInstanceSubTypeID = source.WorkflowInstanceSubTypeID;
            target.WorkflowInstanceCategoryID = source.WorkflowInstanceCategoryID;
            target.WorkflowInstanceSubCategoryID = source.WorkflowInstanceSubCategoryID;
            target.WorkflowInstanceTempData = source.WorkflowInstanceTempData;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<WorkflowInstanceDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.WorkflowInstance> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<WorkflowInstanceDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.WorkflowInstance> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.WorkflowInstance> ToEntities(this IEnumerable<WorkflowInstanceDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.WorkflowInstance source, WorkflowInstanceDTO target);

        static partial void OnEntityCreating(WorkflowInstanceDTO source, Bec.TargetFramework.Data.WorkflowInstance target);

    }

}
