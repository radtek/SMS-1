//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 18/03/2015 19:00:46
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class PlanTransactionTemplateConverter
    {

        public static PlanTransactionTemplateDTO ToDto(this Bec.TargetFramework.Data.PlanTransactionTemplate source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static PlanTransactionTemplateDTO ToDtoWithRelated(this Bec.TargetFramework.Data.PlanTransactionTemplate source, int level)
        {
            if (source == null)
              return null;

            var target = new PlanTransactionTemplateDTO();

            // Properties
            target.PlanTransactionTemplateID = source.PlanTransactionTemplateID;
            target.PlanTemplateID = source.PlanTemplateID;
            target.PlanTemplateVersionNumber = source.PlanTemplateVersionNumber;
            target.ProductTemplateID = source.ProductTemplateID;
            target.ProductVersionID = source.ProductVersionID;
            target.IsTotalValuePricingBound = source.IsTotalValuePricingBound;
            target.IsTransactionCountPricingBound = source.IsTransactionCountPricingBound;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ParentID = source.ParentID;
            target.ApplyTransactionTierPricingPerTransaction = source.ApplyTransactionTierPricingPerTransaction;

            // Navigation Properties
            if (level > 0) {
              target.PlanProductTemplate = source.PlanProductTemplate.ToDtoWithRelated(level - 1);
              target.PlanTemplate = source.PlanTemplate.ToDtoWithRelated(level - 1);
              target.ComponentTierTemplates = source.ComponentTierTemplates.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.PlanTransactionTemplate ToEntity(this PlanTransactionTemplateDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.PlanTransactionTemplate();

            // Properties
            target.PlanTransactionTemplateID = source.PlanTransactionTemplateID;
            target.PlanTemplateID = source.PlanTemplateID;
            target.PlanTemplateVersionNumber = source.PlanTemplateVersionNumber;
            target.ProductTemplateID = source.ProductTemplateID;
            target.ProductVersionID = source.ProductVersionID;
            target.IsTotalValuePricingBound = source.IsTotalValuePricingBound;
            target.IsTransactionCountPricingBound = source.IsTransactionCountPricingBound;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ParentID = source.ParentID;
            target.ApplyTransactionTierPricingPerTransaction = source.ApplyTransactionTierPricingPerTransaction;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<PlanTransactionTemplateDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.PlanTransactionTemplate> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<PlanTransactionTemplateDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.PlanTransactionTemplate> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.PlanTransactionTemplate> ToEntities(this IEnumerable<PlanTransactionTemplateDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.PlanTransactionTemplate source, PlanTransactionTemplateDTO target);

        static partial void OnEntityCreating(PlanTransactionTemplateDTO source, Bec.TargetFramework.Data.PlanTransactionTemplate target);

    }

}
