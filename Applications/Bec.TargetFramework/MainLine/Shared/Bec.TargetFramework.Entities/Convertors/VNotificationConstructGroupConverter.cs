//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 17/04/2015 16:46:55
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class VNotificationConstructGroupConverter
    {

        public static VNotificationConstructGroupDTO ToDto(this Bec.TargetFramework.Data.VNotificationConstructGroup source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static VNotificationConstructGroupDTO ToDtoWithRelated(this Bec.TargetFramework.Data.VNotificationConstructGroup source, int level)
        {
            if (source == null)
              return null;

            var target = new VNotificationConstructGroupDTO();

            // Properties
            target.NotificationConstructGroupNotificationConstructID = source.NotificationConstructGroupNotificationConstructID;
            target.NotificationConstructGroupNotificationConstructVersion = source.NotificationConstructGroupNotificationConstructVersion;
            target.NotificationConstructGroupID = source.NotificationConstructGroupID;
            target.NotificationConstructGroupVersion = source.NotificationConstructGroupVersion;
            target.GroupName = source.GroupName;
            target.GroupDescription = source.GroupDescription;
            target.GroupIsActive = source.GroupIsActive;
            target.GroupIsDeleted = source.GroupIsDeleted;
            target.UserTypeID = source.UserTypeID;
            target.NotificationConstructID = source.NotificationConstructID;
            target.NotificationConstructVersionNumber = source.NotificationConstructVersionNumber;
            target.WorkflowID = source.WorkflowID;
            target.WorkflowVersionNumber = source.WorkflowVersionNumber;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ConditionString = source.ConditionString;
            target.OrganisationTypeID = source.OrganisationTypeID;
            target.NotificationConstructName = source.NotificationConstructName;
            target.NotificationConstructDescription = source.NotificationConstructDescription;
            target.NotificationConstructIsActive = source.NotificationConstructIsActive;
            target.NotificationConstructIsDeleted = source.NotificationConstructIsDeleted;
            target.NotificationConstructSubject = source.NotificationConstructSubject;
            target.NotificationConstructTitle = source.NotificationConstructTitle;

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.VNotificationConstructGroup ToEntity(this VNotificationConstructGroupDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.VNotificationConstructGroup();

            // Properties
            target.NotificationConstructGroupNotificationConstructID = source.NotificationConstructGroupNotificationConstructID;
            target.NotificationConstructGroupNotificationConstructVersion = source.NotificationConstructGroupNotificationConstructVersion;
            target.NotificationConstructGroupID = source.NotificationConstructGroupID;
            target.NotificationConstructGroupVersion = source.NotificationConstructGroupVersion;
            target.GroupName = source.GroupName;
            target.GroupDescription = source.GroupDescription;
            target.GroupIsActive = source.GroupIsActive;
            target.GroupIsDeleted = source.GroupIsDeleted;
            target.UserTypeID = source.UserTypeID;
            target.NotificationConstructID = source.NotificationConstructID;
            target.NotificationConstructVersionNumber = source.NotificationConstructVersionNumber;
            target.WorkflowID = source.WorkflowID;
            target.WorkflowVersionNumber = source.WorkflowVersionNumber;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ConditionString = source.ConditionString;
            target.OrganisationTypeID = source.OrganisationTypeID;
            target.NotificationConstructName = source.NotificationConstructName;
            target.NotificationConstructDescription = source.NotificationConstructDescription;
            target.NotificationConstructIsActive = source.NotificationConstructIsActive;
            target.NotificationConstructIsDeleted = source.NotificationConstructIsDeleted;
            target.NotificationConstructSubject = source.NotificationConstructSubject;
            target.NotificationConstructTitle = source.NotificationConstructTitle;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<VNotificationConstructGroupDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.VNotificationConstructGroup> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<VNotificationConstructGroupDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.VNotificationConstructGroup> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.VNotificationConstructGroup> ToEntities(this IEnumerable<VNotificationConstructGroupDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.VNotificationConstructGroup source, VNotificationConstructGroupDTO target);

        static partial void OnEntityCreating(VNotificationConstructGroupDTO source, Bec.TargetFramework.Data.VNotificationConstructGroup target);

    }

}
