//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 3/27/2015 9:57:20 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class WorkflowTreeStructureConverter
    {

        public static WorkflowTreeStructureDTO ToDto(this Bec.TargetFramework.Data.WorkflowTreeStructure source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static WorkflowTreeStructureDTO ToDtoWithRelated(this Bec.TargetFramework.Data.WorkflowTreeStructure source, int level)
        {
            if (source == null)
              return null;

            var target = new WorkflowTreeStructureDTO();

            // Properties
            target.WorkflowTreeStructureID = source.WorkflowTreeStructureID;
            target.WorkflowID = source.WorkflowID;
            target.WorkflowVersionNumber = source.WorkflowVersionNumber;
            target.Name = source.Name;
            target.Description = source.Description;
            target.ItemOrder = source.ItemOrder;
            target.IsLeafNode = source.IsLeafNode;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ParentID = source.ParentID;
            target.InterfacePanelID = source.InterfacePanelID;
            target.InterfacePanelVersionNumber = source.InterfacePanelVersionNumber;
            target.Level = source.Level;

            // Navigation Properties
            if (level > 0) {
              target.Workflow = source.Workflow.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.WorkflowTreeStructure ToEntity(this WorkflowTreeStructureDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.WorkflowTreeStructure();

            // Properties
            target.WorkflowTreeStructureID = source.WorkflowTreeStructureID;
            target.WorkflowID = source.WorkflowID;
            target.WorkflowVersionNumber = source.WorkflowVersionNumber;
            target.Name = source.Name;
            target.Description = source.Description;
            target.ItemOrder = source.ItemOrder;
            target.IsLeafNode = source.IsLeafNode;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ParentID = source.ParentID;
            target.InterfacePanelID = source.InterfacePanelID;
            target.InterfacePanelVersionNumber = source.InterfacePanelVersionNumber;
            target.Level = source.Level;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<WorkflowTreeStructureDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.WorkflowTreeStructure> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<WorkflowTreeStructureDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.WorkflowTreeStructure> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.WorkflowTreeStructure> ToEntities(this IEnumerable<WorkflowTreeStructureDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.WorkflowTreeStructure source, WorkflowTreeStructureDTO target);

        static partial void OnEntityCreating(WorkflowTreeStructureDTO source, Bec.TargetFramework.Data.WorkflowTreeStructure target);

    }

}
