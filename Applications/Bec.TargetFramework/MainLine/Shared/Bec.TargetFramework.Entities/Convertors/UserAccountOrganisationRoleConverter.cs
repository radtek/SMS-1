//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 2/12/2015 3:31:07 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class UserAccountOrganisationRoleConverter
    {

        public static UserAccountOrganisationRoleDTO ToDto(this Bec.TargetFramework.Data.UserAccountOrganisationRole source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static UserAccountOrganisationRoleDTO ToDtoWithRelated(this Bec.TargetFramework.Data.UserAccountOrganisationRole source, int level)
        {
            if (source == null)
              return null;

            var target = new UserAccountOrganisationRoleDTO();

            // Properties
            target.OrganisationRoleID = source.OrganisationRoleID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.UserAccountOrganisationID = source.UserAccountOrganisationID;

            // Navigation Properties
            if (level > 0) {
              target.OrganisationRole = source.OrganisationRole.ToDtoWithRelated(level - 1);
              target.UserAccountOrganisation = source.UserAccountOrganisation.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.UserAccountOrganisationRole ToEntity(this UserAccountOrganisationRoleDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.UserAccountOrganisationRole();

            // Properties
            target.OrganisationRoleID = source.OrganisationRoleID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.UserAccountOrganisationID = source.UserAccountOrganisationID;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<UserAccountOrganisationRoleDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.UserAccountOrganisationRole> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<UserAccountOrganisationRoleDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.UserAccountOrganisationRole> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.UserAccountOrganisationRole> ToEntities(this IEnumerable<UserAccountOrganisationRoleDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.UserAccountOrganisationRole source, UserAccountOrganisationRoleDTO target);

        static partial void OnEntityCreating(UserAccountOrganisationRoleDTO source, Bec.TargetFramework.Data.UserAccountOrganisationRole target);

    }

}
