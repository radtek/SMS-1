//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 2/12/2015 3:31:07 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class OrganisationWorkflowConverter
    {

        public static OrganisationWorkflowDTO ToDto(this Bec.TargetFramework.Data.OrganisationWorkflow source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static OrganisationWorkflowDTO ToDtoWithRelated(this Bec.TargetFramework.Data.OrganisationWorkflow source, int level)
        {
            if (source == null)
              return null;

            var target = new OrganisationWorkflowDTO();

            // Properties
            target.OrganisationWorkflowID = source.OrganisationWorkflowID;
            target.OrganisationID = source.OrganisationID;
            target.WorkflowID = source.WorkflowID;
            target.VersionNumber = source.VersionNumber;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ParentID = source.ParentID;

            // Navigation Properties
            if (level > 0) {
              target.Organisation = source.Organisation.ToDtoWithRelated(level - 1);
              target.Workflow = source.Workflow.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.OrganisationWorkflow ToEntity(this OrganisationWorkflowDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.OrganisationWorkflow();

            // Properties
            target.OrganisationWorkflowID = source.OrganisationWorkflowID;
            target.OrganisationID = source.OrganisationID;
            target.WorkflowID = source.WorkflowID;
            target.VersionNumber = source.VersionNumber;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.ParentID = source.ParentID;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<OrganisationWorkflowDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.OrganisationWorkflow> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<OrganisationWorkflowDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.OrganisationWorkflow> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.OrganisationWorkflow> ToEntities(this IEnumerable<OrganisationWorkflowDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.OrganisationWorkflow source, OrganisationWorkflowDTO target);

        static partial void OnEntityCreating(OrganisationWorkflowDTO source, Bec.TargetFramework.Data.OrganisationWorkflow target);

    }

}
