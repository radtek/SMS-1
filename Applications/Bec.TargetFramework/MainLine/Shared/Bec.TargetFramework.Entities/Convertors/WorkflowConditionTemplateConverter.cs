//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 2/12/2015 3:31:07 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.Entities
{

    public static partial class WorkflowConditionTemplateConverter
    {

        public static WorkflowConditionTemplateDTO ToDto(this Bec.TargetFramework.Data.WorkflowConditionTemplate source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static WorkflowConditionTemplateDTO ToDtoWithRelated(this Bec.TargetFramework.Data.WorkflowConditionTemplate source, int level)
        {
            if (source == null)
              return null;

            var target = new WorkflowConditionTemplateDTO();

            // Properties
            target.WorkflowConditionTemplateID = source.WorkflowConditionTemplateID;
            target.Name = source.Name;
            target.Description = source.Description;
            target.WorkflowObjectTypeTemplateID = source.WorkflowObjectTypeTemplateID;
            target.WorkflowTemplateID = source.WorkflowTemplateID;
            target.WorkflowTemplateVersionNumber = source.WorkflowTemplateVersionNumber;

            // Navigation Properties
            if (level > 0) {
              target.WorkflowCommandConditionTemplates = source.WorkflowCommandConditionTemplates.ToDtosWithRelated(level - 1);
              target.WorkflowMainCompleteConditionTemplate = source.WorkflowMainCompleteConditionTemplate.ToDtoWithRelated(level - 1);
              target.WorkflowMainStartConditionTemplate = source.WorkflowMainStartConditionTemplate.ToDtoWithRelated(level - 1);
              target.WorkflowTransistionCompleteConditionTemplates = source.WorkflowTransistionCompleteConditionTemplates.ToDtosWithRelated(level - 1);
              target.WorkflowTransistionStartConditionTemplates = source.WorkflowTransistionStartConditionTemplates.ToDtosWithRelated(level - 1);
              target.WorkflowActionCompleteConditionTemplates = source.WorkflowActionCompleteConditionTemplates.ToDtosWithRelated(level - 1);
              target.WorkflowConditionParameterTemplates = source.WorkflowConditionParameterTemplates.ToDtosWithRelated(level - 1);
              target.WorkflowActionStartConditionTemplates = source.WorkflowActionStartConditionTemplates.ToDtosWithRelated(level - 1);
              target.WorkflowObjectTypeTemplate = source.WorkflowObjectTypeTemplate.ToDtoWithRelated(level - 1);
              target.WorkflowTemplate = source.WorkflowTemplate.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.Data.WorkflowConditionTemplate ToEntity(this WorkflowConditionTemplateDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.Data.WorkflowConditionTemplate();

            // Properties
            target.WorkflowConditionTemplateID = source.WorkflowConditionTemplateID;
            target.Name = source.Name;
            target.Description = source.Description;
            target.WorkflowObjectTypeTemplateID = source.WorkflowObjectTypeTemplateID;
            target.WorkflowTemplateID = source.WorkflowTemplateID;
            target.WorkflowTemplateVersionNumber = source.WorkflowTemplateVersionNumber;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<WorkflowConditionTemplateDTO> ToDtos(this IEnumerable<Bec.TargetFramework.Data.WorkflowConditionTemplate> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<WorkflowConditionTemplateDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.Data.WorkflowConditionTemplate> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.Data.WorkflowConditionTemplate> ToEntities(this IEnumerable<WorkflowConditionTemplateDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.Data.WorkflowConditionTemplate source, WorkflowConditionTemplateDTO target);

        static partial void OnEntityCreating(WorkflowConditionTemplateDTO source, Bec.TargetFramework.Data.WorkflowConditionTemplate target);

    }

}
