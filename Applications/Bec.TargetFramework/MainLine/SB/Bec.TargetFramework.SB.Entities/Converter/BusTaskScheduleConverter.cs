//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 29/04/2015 12:05:04
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.SB.Entities
{

    public static partial class BusTaskScheduleConverter
    {

        public static BusTaskScheduleDTO ToDto(this Bec.TargetFramework.SB.Data.BusTaskSchedule source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static BusTaskScheduleDTO ToDtoWithRelated(this Bec.TargetFramework.SB.Data.BusTaskSchedule source, int level)
        {
            if (source == null)
              return null;

            var target = new BusTaskScheduleDTO();

            // Properties
            target.BusTaskScheduleID = source.BusTaskScheduleID;
            target.BusTaskID = source.BusTaskID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.RepeatForever = source.RepeatForever;
            target.IsCronDriven = source.IsCronDriven;
            target.CronScheduleString = source.CronScheduleString;
            target.IsCalendarDriven = source.IsCalendarDriven;
            target.RepeatEveryNumberOfSeconds = source.RepeatEveryNumberOfSeconds;
            target.RepeatEveryDay = source.RepeatEveryDay;
            target.RepeatMondayToFriday = source.RepeatMondayToFriday;
            target.RepeatSaturdayAndSunday = source.RepeatSaturdayAndSunday;
            target.RepeatEveryNumberOfDays = source.RepeatEveryNumberOfDays;
            target.HasSpecificDailyStartTime = source.HasSpecificDailyStartTime;
            target.SpecificDailyStartTimeHour = source.SpecificDailyStartTimeHour;
            target.ParentID = source.ParentID;

            // Navigation Properties
            if (level > 0) {
              target.BusTaskScheduleProcessLogs = source.BusTaskScheduleProcessLogs.ToDtosWithRelated(level - 1);
              target.BusTask = source.BusTask.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.SB.Data.BusTaskSchedule ToEntity(this BusTaskScheduleDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.SB.Data.BusTaskSchedule();

            // Properties
            target.BusTaskScheduleID = source.BusTaskScheduleID;
            target.BusTaskID = source.BusTaskID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.RepeatForever = source.RepeatForever;
            target.IsCronDriven = source.IsCronDriven;
            target.CronScheduleString = source.CronScheduleString;
            target.IsCalendarDriven = source.IsCalendarDriven;
            target.RepeatEveryNumberOfSeconds = source.RepeatEveryNumberOfSeconds;
            target.RepeatEveryDay = source.RepeatEveryDay;
            target.RepeatMondayToFriday = source.RepeatMondayToFriday;
            target.RepeatSaturdayAndSunday = source.RepeatSaturdayAndSunday;
            target.RepeatEveryNumberOfDays = source.RepeatEveryNumberOfDays;
            target.HasSpecificDailyStartTime = source.HasSpecificDailyStartTime;
            target.SpecificDailyStartTimeHour = source.SpecificDailyStartTimeHour;
            target.ParentID = source.ParentID;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<BusTaskScheduleDTO> ToDtos(this IEnumerable<Bec.TargetFramework.SB.Data.BusTaskSchedule> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<BusTaskScheduleDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.SB.Data.BusTaskSchedule> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.SB.Data.BusTaskSchedule> ToEntities(this IEnumerable<BusTaskScheduleDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.SB.Data.BusTaskSchedule source, BusTaskScheduleDTO target);

        static partial void OnEntityCreating(BusTaskScheduleDTO source, Bec.TargetFramework.SB.Data.BusTaskSchedule target);

    }

}
