//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 08/06/2015 16:32:47
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace Bec.TargetFramework.SB.Entities
{

    public static partial class BusEventBusEventMessageSubscriberConverter
    {

        public static BusEventBusEventMessageSubscriberDTO ToDto(this Bec.TargetFramework.SB.Data.BusEventBusEventMessageSubscriber source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static BusEventBusEventMessageSubscriberDTO ToDtoWithRelated(this Bec.TargetFramework.SB.Data.BusEventBusEventMessageSubscriber source, int level)
        {
            if (source == null)
              return null;

            var target = new BusEventBusEventMessageSubscriberDTO();

            // Properties
            target.BusEventID = source.BusEventID;
            target.BusEventMessageSubscriberID = source.BusEventMessageSubscriberID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.BusEventMessageSubscriberFilter = source.BusEventMessageSubscriberFilter;

            // Navigation Properties
            if (level > 0) {
              target.BusEvent = source.BusEvent.ToDtoWithRelated(level - 1);
              target.BusEventMessageSubscriber = source.BusEventMessageSubscriber.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Bec.TargetFramework.SB.Data.BusEventBusEventMessageSubscriber ToEntity(this BusEventBusEventMessageSubscriberDTO source)
        {
            if (source == null)
              return null;

            var target = new Bec.TargetFramework.SB.Data.BusEventBusEventMessageSubscriber();

            // Properties
            target.BusEventID = source.BusEventID;
            target.BusEventMessageSubscriberID = source.BusEventMessageSubscriberID;
            target.IsActive = source.IsActive;
            target.IsDeleted = source.IsDeleted;
            target.BusEventMessageSubscriberFilter = source.BusEventMessageSubscriberFilter;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<BusEventBusEventMessageSubscriberDTO> ToDtos(this IEnumerable<Bec.TargetFramework.SB.Data.BusEventBusEventMessageSubscriber> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<BusEventBusEventMessageSubscriberDTO> ToDtosWithRelated(this IEnumerable<Bec.TargetFramework.SB.Data.BusEventBusEventMessageSubscriber> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Bec.TargetFramework.SB.Data.BusEventBusEventMessageSubscriber> ToEntities(this IEnumerable<BusEventBusEventMessageSubscriberDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Bec.TargetFramework.SB.Data.BusEventBusEventMessageSubscriber source, BusEventBusEventMessageSubscriberDTO target);

        static partial void OnEntityCreating(BusEventBusEventMessageSubscriberDTO source, Bec.TargetFramework.SB.Data.BusEventBusEventMessageSubscriber target);

    }

}
